language: scala
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     for(i <- 2 to n) {\n            fib_array(i) = fib_array(i-1) + fib_array(i-2)\n\
    \        }\n        fib_array(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu5dxl2qr.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpu5dxl2qr.scala:9:22 ---------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu5dxl2qr.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(1) #:: fib.drop(1).drop(1).takeWhile(_\
    \ <= n).reverse\n        fib.filter(_ % _ == 0).length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpaz8pit7m.scala:6:93 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m1\e\
    [0m) #:: fib.drop(\e[31m1\e[0m).drop(\e[31m1\e[0m).takeWhile(_ <= n).reverse\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \                                    ^\e[0m\n\e[31m  |\e[0m                  \
    \                          Recursive \e[33mvalue\e[0m \e[35mfib\e[0m needs type\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009768
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 2\n        var primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        while (fib < n) {\n            primes += fib\n            fib = fib +\
    \ fib\n        }\n        primes.takeWhile(_ < n).foreach(prime += _)\n      \
    \  prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplu4rm_wn.scala:13:46 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes.takeWhile(_ < n).foreach(prime += _)\n\
    \e[31m\e[31m   |\e[0m                                        ^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                  value += is not a member of Int - did you mean\
    \ Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        while(c < n){\n\
    \            if(b == d){\n                c += 1\n                a += 1\n   \
    \             b += 1\n                d += 1\n            }\n            else{\n\
    \                c += 1\n                d = b\n                b = a + b\n  \
    \              a = d\n            }\n        }\n        return a\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpby2ughm2.scala:27)\n\tat Problem.main(tmpby2ughm2.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl8tpdxtt.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpl8tpdxtt.scala:73:8 -------------------------\e[0m\e\
    [0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009777
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366626661\n        fibs += 217551433717\n\
    \        fibs += 352457827337\n        fibs += 570288728391\n        fibs += 922746656099\n\
    \        fibs += 1493035280369\n        fibs += 2415781726074\n        fibs +=\
    \ 3908816926373\n        fibs += 6324598658319\n        fibs += 1023341549418\n\
    \        fibs += 1655801422925\n        fibs += 2679142959463\n        fibs +=\
    \ 4334944370079\n        fib\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpygakpk3u.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpygakpk3u.scala:74:8 -------------------------\e[0m\e\
    [0m\n\e[31m74 |\e[0m        fib\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009767
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657775\n        fibs += 225851433717\n\
    \        fibs += 365435296162\n        fibs += 591286729879\n        fibs += 956722026041\n\
    \        fibs += 1548008755920\n        fibs += 2504730781961\n        fibs +=\
    \ 4052739537881\n        fibs += 6346770674608\n        fibs += 1023341558735\n\
    \        fibs += 1655801418580\n        fibs += 2679142967055\n        fibs +=\
    \ 4334944370019\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplw_6deo2.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009768
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var e = 1\n    \
    \    var f = 1\n        var g = 1\n        var h = 1\n        var i = 1\n    \
    \    var j = 1\n        var k = 1\n        var l = 1\n        var m = 1\n    \
    \    var n = 2\n        var o = 1\n        var p = 1\n        var q = 1\n    \
    \    var r = 1\n        var s = 1\n        var t = 1\n        var u = 1\n    \
    \    var v = 1\n        var w = 1\n        var x = 1\n        var y = 1\n    \
    \    var z = 1\n        var a = 2\n        var b = 1\n        var c = 2\n    \
    \    var d = 1\n        var e = 1\n        var f = 1\n        var g = 1\n    \
    \    var h = 1\n        var i = 1\n        var j = 1\n        var k = 1\n    \
    \    var l = 1\n        var m = 1\n        var n = 2\n        var o = 1\n    \
    \    var p = 1\n        var q = 1\n        var r = 1\n        var s = 1\n    \
    \    var t = 1\n        var u = 1\n        var v = 1\n        var w = 1\n    \
    \    var x = 1\n        var y = 1\n        var z = 1\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var e = 1\n    \
    \    var f = 1\n        var g = 1\n        var h = 1\n        var i = 1\n    \
    \    var j = 1\n        var k = 1\n        var l = 1\n        var m = 1\n    \
    \    var n = 2\n        var o = 1\n        var p = 1\n        var q = 1\n    \
    \    var r = 1\n        var s = 1\n        var t = 1\n        var u = 1\n    \
    \    var v = 1\n        var w = 1\n        var x = 1\n        var y = 1\n    \
    \    var z = 1\n        var a = 2\n        var b = 1\n        var c = 2\n    \
    \    var d = 1\n        var e = 1\n        var f = 1\n        var g = 1\n    \
    \    var h = 1\n        var i = 1\n        var j = 1\n        var k = 1\n    \
    \    var l = 1\n        var m = 1\n        var n = 2\n        var o = 1\n    \
    \    var p = 1\n        var q = 1\n        var r = 1\n        var s = 1\n    \
    \    var t = 1\n        var u = 1\n        var v = 1\n        var w = 1\n    \
    \    var x = 1\n        var y = 1\n        var z = 1\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var e = 1\n    \
    \    var f = 1\n        var g = 1\n        var h = 1\n        var i = 1\n    \
    \    var j = 1\n        var k = 1\n        var l = 1\n        var m = 1\n    \
    \    var n = 2\n        var o = 1\n        var p = 1\n        var q = 1\n    \
    \    var r = 1\n        var s = 1\n        var t = 1\n        var u = 1\n    \
    \    var v = 1\n        var w = 1\n        var x = 1\n        var y = 1\n    \
    \    var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp36t0e_k7.scala:135:11 --------------------------\e\
    [0m\e[0m\n\e[31m135 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp36t0e_k7.scala:32:12 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp36t0e_k7.scala:33:12 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp36t0e_k7.scala:34:12 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp36t0e_k7.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp36t0e_k7.scala:36:12 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0me is alread"
  stdout: ''
  timestamp: 1660009778
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(0 +: 1 +: 0))\n        fibs(n) match {\n           \
    \ case 0 => 0\n            case 1 => 1\n            case _ => fibs(n).last\n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwkqh_zub.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m\
    \ +: \e[31m1\e[0m +: \e[31m0\e[0m))\n\e[31m\e[31m  |\e[0m                    \
    \           ^^^^^\e[0m\n\e[31m  |\e[0m                               Found:  \
    \  Long\n\e[31m  |\e[0m                               Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwkqh_zub.scala:6:50 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m +: \e[31m1\e[0m +:\
    \ \e[31m0\e[0m))\n\e[31m\e[31m  |\e[0m                                       \
    \           ^^^^^\e[0m\n\e[31m  |\e[0m                                       \
    \           Found:    Long\n\e[31m  |\e[0m                                   \
    \               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpwkqh_zub.scala:6:64 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m +: \e[31m1\e[0m +: \e[31m0\e[0m))\n\e[31m\e[31m\
    \  |\e[0m                                                                ^^^^\e\
    [0m\n\e[31m  |\e[0m                                           value +: is not\
    \ a member of Int\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwkqh_zub.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:\
    \    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- Error: /tmp/tmpwkqh_zub.scala:8:17 ------------------------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33mcase\e[0m \e[31m0\e[0m => \e[31m0\e\
    [0m\n\e[31m\e[31m  |\e[0m                 ^\e[0m\n\e[31m  |"
  stdout: ''
  timestamp: 1660009780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            fib = fib + prime\n\
    \            prime = prime + 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2fdl8ufj.scala:16)\n\tat Problem.main(tmp2fdl8ufj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = true\n\
    \        var fib = 0\n        while(fib < n) {\n            if(b == d) {\n   \
    \             prime = false\n            }\n            if(b == c) {\n       \
    \         prime = true\n            }\n            if(b == d) {\n            \
    \    prime = false\n            }\n            if(b == c) {\n                prime\
    \ = true\n            }\n            if(b == d) {\n                prime = false\n\
    \            }\n            if(b == c) {\n                prime = true\n     \
    \       }\n            if(b == d) {\n                prime = false\n         \
    \   }\n            if(b == c) {\n                prime = true\n            }\n\
    \            if(b == d) {\n                prime = false\n            }\n    \
    \        if(b == c) {\n                prime = true\n            }\n         \
    \   if(b == d) {\n                prime = false\n            }\n            if(b\
    \ == c) {\n                prime = true\n            }\n            if(b == d)\
    \ {\n                prime = false\n            }\n            if(b == c) {\n\
    \                prime = true\n            }\n            if(b == d) {\n     \
    \           prime = false\n            }\n            if(b == c) {\n         \
    \       prime = true\n            }\n            if(b == d) {\n              \
    \  prime = false\n            }\n            if(b == c) {\n                prime\
    \ = true\n            }\n            if(b == d) {\n                prime = false\n\
    \            }\n            if(b == c) {\n                prime = true\n     \
    \       }\n            if(b == d) {\n                prime = false\n         \
    \   }\n            if(b == c) {\n                prime = true\n            }\n\
    \            if(b == d) {\n                prime = false\n            }\n    \
    \        if(b == c) {\n                prime = true\n            }\n         \
    \   if(b == d) {\n                prime = false\n            }\n            if(b\
    \ == c) {\n                prime = true\n            }\n            if(b == d)\
    \ {\n                prime = false\n            }\n            if(b == c) {\n\
    \                prime = true\n            }\n            if(b == d) {\n     \
    \           prime = false\n            }\n            if(b == c) {\n         \
    \       prime = true\n            }\n            if(b == d) {\n              \
    \  prime = false\n            }\n            if(b == c) {\n                prime\
    \ = true\n            }\n            if(b == d) {\n                prime = false\n\
    \            }\n            if(b == c) {\n                prime = true\n     \
    \       }\n            if(b == d) {\n                prime = false\n         \
    \   }\n            if(b == c) {\n                prime = true\n            }\n\
    \            if(b == d) {\n                prime = false\n            }\n    \
    \        if(b == c) {\n                prime = true\n            }\n         \
    \   if(b == d) {\n                prime = false\n            }\n            if(b\
    \ == c) {\n                prime = true\n            }\n            if\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpj8ptnrvw.scala:133:14 --------------------------\e\
    [0m\e[0m\n\e[31m133 |\e[0m            \e[33mif\e[0m\n\e[31m\e[31m    |\e[0m  \
    \            ^\e[0m\n\e[31m    |\e[0m              expression expected but \e\
    [31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj8ptnrvw.scala:149:0\
    \ ---------------------------\e[0m\e[0m\n\e[31m149 |\e[0m\n\e[31m\e[31m    |\e\
    [0m^\e[0m\n\e[31m    |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpj8ptnrvw.scala:148:1 --------------------\e[0m\e\
    [0m\n\e[31m148 |\e[0m}\n\e[31m\e[31m    |\e[0m ^\e[0m\n\e[31m    |\e[0m Found:\
    \    Unit\n\e[31m    |\e[0m Required: Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[33m\e[33m--\
    \ Warning: /tmp/tmpj8ptnrvw.scala:135:4 ---------------------------------------\e\
    [0m\e[0m\n\e[33m135 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m:\
    \ \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m    |\e[0m    ^\e[0m\n\
    \e[33m    |\e[0m    Line is indented too far to the left, or a `}` is missing\n\
    1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = true\n        while (prime && fib < n) {\n            fib =\
    \ fib + fib\n            prime = fib > n\n        }\n        fib\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxqz2oxy4.scala:16)\n\tat Problem.main(tmpxqz2oxy4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:9:18\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        primes += prime\n\e[31m\e\
    [31m  |\e[0m                  ^^^^^\e[0m\n\e[31m  |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m  |\e[0m                  Required: Long\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:10:18 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:11:18 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:12:18 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:13:18 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:14:18 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1660009785
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) =\
    \ 1\n        fibs.takeWhile(_ < n).foreach(fibs => fibs(3) = fibs(2) + fibs(1))\n\
    \        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3twr_q99.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3twr_q99.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update\
    \ is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3twr_q99.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3twr_q99.scala:9:8\
    \ --------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update\
    \ is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3twr_q99.scala:10:46 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mfibs\e[0m\
    \ => fibs(\e[31m3\e[0m) = fibs(\e[31m2\e[0m) + fibs(\e[31m1\e[0m))\n\e[31m\e[31m\
    \   |\e[0m                                              ^^^^\e[0m\n\e[31m   |\e\
    [0m                                  value update is not a member of BigInt\n\e\
    [31m\e[31m-- [E050] Type Error: /tmp/tmp3twr_q99.scala:10:56 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mfibs\e[0m\
    \ => fibs(\e[31m3\e[0m) = fibs(\e[31m2\e[0m) + fibs(\e[31m1\e[0m))\n\e[31m\e[31m\
    \   |\e[0m                                                        ^^^^\e[0m\n\e\
    [31m   |\e[0m                                 \e[33mparameter\e[0m \e[35mfibs\e\
    [0m does not take"
  stdout: ''
  timestamp: 1660009781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(0) = BigInt(1)\n        fibs(1) = BigInt(1)\n\
    \        fibs(2) = BigInt(2)\n        fibs.tail.foreach(fibs => {\n          \
    \  val a = fibs(0) - fibs(1)\n            val b = fibs(1) - fibs(2)\n        \
    \    fibs(0) = fibs(1)\n            fibs(1) = fibs(2)\n            fibs(2) = a\
    \ + b\n        })\n        fibs(n)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7vphiuzd.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7vphiuzd.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue\
    \ update is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp7vphiuzd.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = BigInt(\e[31m1\e[0m)\n\e\
    [31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member\
    \ of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp7vphiuzd.scala:9:8 --------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        fibs(\e[31m2\e[0m) = BigInt(\e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m\
    \        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp7vphiuzd.scala:11:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e\
    [0m \e[36ma\e[0m = fibs(\e[31m0\e[0m) - fibs(\e[31m1\e[0m)\n\e[31m\e[31m   |\e\
    [0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    \e[33mparameter\e\
    [0m \e[35mfibs\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmp7vphiuzd.scala:12:20 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mb\e[0m = fibs(\e[31m1\e\
    [0m) - fibs(\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\
    \e[31m   |\e[0m                    \e[33mparameter\e[0m \e[35mfibs\e[0m does not\
    \ take parameters\n\e[31m   |\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660009781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](100)\n        fib_array(0) = 0\n        fib_array(1) = 1\n \
    \       fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n\
    \        fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1f7dtd5s.scala:73:8 -------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009768
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num = 0\n\
    \        var prime_num = 0\n        var prime_fib_num = 0\n        var prime_fib_num2\
    \ = 0\n        var prime_fib_num3 = 0\n        var prime_fib_num4 = 0\n      \
    \  var prime_fib_num5 = 0\n        var prime_fib_num6 = 0\n        var prime_fib_num7\
    \ = 0\n        var prime_fib_num8 = 0\n        var prime_fib_num9 = 0\n      \
    \  var prime_fib_num10 = 0\n        var prime_fib_num11 = 0\n        var prime_fib_num12\
    \ = 0\n        var prime_fib_num13 = 0\n        var prime_fib_num14 = 0\n    \
    \    var prime_fib_num15 = 0\n        var prime_fib_num16 = 0\n        var prime_fib_num17\
    \ = 0\n        var prime_fib_num18 = 0\n        var prime_fib_num19 = 0\n    \
    \    var prime_fib_num20 = 0\n        var prime_fib_num21 = 0\n        var prime_fib_num22\
    \ = 0\n        var prime_fib_num23 = 0\n        var prime_fib_num24 = 0\n    \
    \    var prime_fib_num25 = 0\n        var prime_fib_num26 = 0\n        var prime_fib_num27\
    \ = 0\n        var prime_fib_num28 = 0\n        var prime_fib_num29 = 0\n    \
    \    var prime_fib_num30 = 0\n        var prime_fib_num31 = 0\n        var prime_fib_num32\
    \ = 0\n        var prime_fib_num33 = 0\n        var prime_fib_num34 = 0\n    \
    \    var prime_fib_num35 = 0\n        var prime_fib_num36 = 0\n        var prime_fib_num37\
    \ = 0\n        var prime_fib_num38 = 0\n        var prime_fib_num39 = 0\n    \
    \    var prime_fib_num40 = 0\n        var prime_fib_num41 = 0\n        var prime_fib_num42\
    \ = 0\n        var prime_fib_num43 = 0\n        var prime_fib_num44 = 0\n    \
    \    var prime_fib_num45 = 0\n        var prime_fib_num46 = 0\n        var prime_fib_num47\
    \ = 0\n        var prime_fib_num48 = 0\n        var prime_fib_num49 = 0\n    \
    \    var prime_fib_num50 = 0\n        var prime_fib_num51 = 0\n        var prime_fib_num52\
    \ = 0\n        var prime_fib_num53 = 0\n        var prime_fib_num54 = 0\n    \
    \    var prime_fib_num55 = 0\n        var prime_fib_num\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmsubafvh.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpmsubafvh.scala:64:5 ---------------------\e[0m\e[0m\n\e[31m64 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009776
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var i = 2\n    \
    \    var prime = 0\n        while(i <= n){\n            if((i%2) == 0){\n    \
    \            prime = prime + 1\n            }\n            else{\n           \
    \     prime = prime - 1\n            }\n            if((i%3) == 0){\n        \
    \        prime = prime + 1\n            }\n            else{\n               \
    \ prime = prime - 1\n            }\n            if((i%5) == 0){\n            \
    \    prime = prime + 1\n            }\n            else{\n                prime\
    \ = prime - 1\n            }\n            if((i%7) == 0){\n                prime\
    \ = prime + 1\n            }\n            else{\n                prime = prime\
    \ - 1\n            }\n            if((i%11) == 0){\n                prime = prime\
    \ + 1\n            }\n            else{\n                prime = prime - 1\n \
    \           }\n            if((i%13) == 0){\n                prime = prime + 1\n\
    \            }\n            else{\n                prime = prime - 1\n       \
    \     }\n            if((i%17) == 0){\n                prime = prime + 1\n   \
    \         }\n            else{\n                prime = prime - 1\n          \
    \  }\n            if((i%19) == 0){\n                prime = prime + 1\n      \
    \      }\n            else{\n                prime = prime - 1\n            }\n\
    \            if((i%23) == 0){\n                prime = prime + 1\n           \
    \ }\n            else{\n                prime = prime - 1\n            }\n   \
    \         if((i%29) == 0){\n                prime = prime + 1\n            }\n\
    \            else{\n                prime = prime - 1\n            }\n       \
    \     if((i%31) == 0){\n                prime = prime + 1\n            }\n   \
    \         else{\n                prime = prime - 1\n            }\n          \
    \  if((i%37) == 0){\n                prime = prime + 1\n            }\n      \
    \      else{\n                prime = prime - 1\n            }\n            if((i%41)\
    \ == 0){\n                prime = prime + 1\n            }\n            else{\n\
    \                prime = prime - 1\n            }\n            if((i%43) == 0){\n\
    \                prime = prime + 1\n            }\n            else{\n       \
    \         prime = prime - 1\n            }\n            if((i%47) == 0){\n   \
    \             prime = prime + 1\n            }\n            else{\n          \
    \      prime = prime - 1\n            }\n            if((i%53) == 0){\n      \
    \          prime = prime + 1\n            }\n            else{\n             \
    \   prime = prime - 1\n            }\n            if((i%59) == 0){\n         \
    \       prime = prime + 1\n            }\n            \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuk3tsyue.scala:128:0 ---------------------------\e\
    [0m\e[0m\n\e[31m128 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuk3tsyue.scala:127:1\
    \ --------------------\e[0m\e[0m\n\e[31m127 |\e[0m}\n\e[31m\e[31m    |\e[0m ^\e\
    [0m\n\e[31m    |\e[0m Found:    Unit\n\e[31m    |\e[0m Required: Long\n\e[31m\
    \    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmpuk3tsyue.scala:114:4 ---------------------------------------\e\
    [0m\e[0m\n\e[33m114 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m:\
    \ \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m    |\e[0m    ^\e[0m\n\
    \e[33m    |\e[0m    Line is indented too far to the left, or a `}` is missing\n\
    1 warning found\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = mutable.ArrayBuffer(2)\n        while(fib < n) {\n     \
    \       val isPrime = scala.math.BigInt(fib).isProbablePrime\n            if(isPrime)\
    \ {\n                primes += fib\n            }\n            fib = fib + fib\n\
    \        }\n        primes.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpal2qux1q.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E134]\
    \ Type Error: /tmp/tmpal2qux1q.scala:9:26 ------------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36misPrime\e[0m = scala.math.BigInt(fib).isProbablePrime\n\
    \e[31m\e[31m  |\e[0m                          ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \ |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mapply\e\
    [0m in \e[33mobject\e[0m \e[35mBigInt\e[0m with types\n\e[31m  |\e[0m (x: java.math.BigInteger):\
    \ BigInt\n\e[31m  |\e[0m (x: String, radix: Int): BigInt\n\e[31m  |\e[0m (x: String):\
    \ BigInt\n\e[31m  |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\e[31m\
    \  |\e[0m (bitlength: Int, certainty: Int, rnd: scala.util.Random): BigInt\n\e\
    [31m  |\e[0m (signum: Int, magnitude: Array[Byte]): BigInt\n\e[31m  |\e[0m (x:\
    \ Array[Byte]): BigInt\n\e[31m  |\e[0m (l: Long): BigInt\n\e[31m  |\e[0m (i: Int):\
    \ BigInt\n\e[31m  |\e[0mmatch arguments ((fib : BigInt))\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpal2qux1q.scala:13:16 -----------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m            fib = fib + fib\n\e[31m\e[31m   |\e[0m       \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val fib\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009771
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1)\n        fibs(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj9175ear.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpj9175ear.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj9175ear.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m\
    \  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpj9175ear.scala:7:24 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e\
    [0m                        ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:\
    \    Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj9175ear.scala:8:13 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n).last\n\e[31m\e[31m  |\e[0m           \
    \  ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m   \
    \          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explan"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 2\n        var sum = 0\n  \
    \      while(n > 0){\n            sum = a + b\n            a = b\n           \
    \ b = c\n            c = d\n            d = sum\n            n -= 1\n        }\n\
    \        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjw6has5u.scala:17:14 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            fib += prime\n  \
    \          prime += 1\n        }\n        fib\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpiq9ud6b8.scala:16)\n\tat Problem.main(tmpiq9ud6b8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009792
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5uhyhuny.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009784
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](5)\n        fib_array(0) = 1\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwbchr5qj.scala:73:8 -------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009785
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while(fib < n) {\n            fib = fib + prime\n\
    \            prime = prime + 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe0tqkjlw.scala:16)\n\tat Problem.main(tmpe0tqkjlw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009792
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).foreach(fibs\
    \ => fibs(n+2) = fibs(n+1) + fibs(n))\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpu0gave_5.scala:13:46 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mfibs\e[0m\
    \ => fibs(n+\e[31m2\e[0m) = fibs(n+\e[31m1\e[0m) + fibs(n))\n\e[31m\e[31m   |\e\
    [0m                                              ^^^^\e[0m\n\e[31m   |\e[0m  \
    \                                   value update is not a member of Int\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpu0gave_5"
  stdout: ''
  timestamp: 1660009798
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibonacci =\
    \ mutable.ArrayBuffer.empty[Long]\n        fibonacci += 0\n        fibonacci +=\
    \ 1\n        fibonacci += 2\n        fibonacci += 3\n        fibonacci += 5\n\
    \        fibonacci += 8\n        fibonacci += 13\n        fibonacci += 21\n  \
    \      fibonacci += 34\n        fibonacci += 55\n        fibonacci += 89\n   \
    \     fibonacci += 144\n        fibonacci += 233\n        fibonacci += 377\n \
    \       fibonacci += 610\n        fibonacci += 987\n        fibonacci += 1597\n\
    \        fibonacci += 2584\n        fibonacci += 4181\n        fibonacci += 6765\n\
    \        fibonacci += 10946\n        fibonacci += 17711\n        fibonacci +=\
    \ 28657\n        fibonacci += 46368\n        fibonacci += 75025\n        fibonacci\
    \ += 121393\n        fibonacci += 196418\n        fibonacci += 317811\n      \
    \  fibonacci += 514229\n        fibonacci += 832040\n        fibonacci += 1346269\n\
    \        fibonacci += 2178309\n        fibonacci += 3524578\n        fibonacci\
    \ += 5702887\n        fibonacci += 9227465\n        fibonacci += 14930352\n  \
    \      fibonacci += 24157817\n        fibonacci += 39088169\n        fibonacci\
    \ += 63245986\n        fibonacci += 102334155\n        fibonacci += 165580141\n\
    \        fibonacci += 267914296\n        fibonacci += 433494437\n        fibonacci\
    \ += 701408733\n        fibonacci += 1134903170\n        fibonacci += 1836311903\n\
    \        fibonacci += 2971215073\n        fibonacci += 4807526976\n        fibonacci\
    \ += 743249863\n        fibonacci += 1264331746\n        fibonacci += 1978649227\n\
    \        fi\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5zzoh87m.scala:6:24 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5zzoh87m.scala:58:8 -------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m        fi\n\e[31m\e[31m   |\e[0m        ^^\e[0m\n\e\
    [31m   |\e[0m        Not found: fi\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009791
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ - 1)(0) ++ Vector.fill(n - 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyadrgry9.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n - \e[31m1\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n - \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpyadrgry9.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ - \e[31m1\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n - \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 2\n        var prime_found = false\n        while (fib < n)\
    \ {\n            if (prime_found) {\n                break\n            }\n  \
    \          prime_found = true\n            prime += 2\n            fib += prime\n\
    \        }\n        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62lj367q.scala:11:16 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009794
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     val prime_array = new Array[Boolean](n)\n        prime_array(0) = false\n\
    \        prime_array(1) = false\n        var i = 2\n        while (i < n) {\n\
    \            if (fib_array(i) == fib_array(i-1)) {\n                prime_array(i)\
    \ = true\n                i += 1\n            } else {\n                fib_array(i)\
    \ = fib_array(i-1) + fib_array(i-2)\n                prime_array(i) = true\n \
    \               i += 1\n            }\n        }\n        fib_array(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5w1hv3t1.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5w1hv3t1.scala:9:45 ---------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](n)\n\e[31m\e[31m  |\e[0m            \
    \                                 ^\e[0m\n\e[31m  |\e[0m                     \
    \                        Found:    (n : Long)\n\e[31m  |\e[0m                \
    \                             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5w1hv3t1.scala:23:18 --------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m        fib_array(n)\n\e[31m\e[31m   |\e[0m              \
    \    ^\e[0m\n\e[31m   |\e[0m                  Found:    (n : Long)\n\e[31m   |\e\
    [0m                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ArrayBuffer(2)\n        val primesSet\
    \ = scala.collection.mutable.Set(2)\n        val primesSet2 = scala.collection.mutable.Set(3)\n\
    \        val primesSet3 = scala.collection.mutable.Set(5)\n        val primesSet4\
    \ = scala.collection.mutable.Set(7)\n        val primesSet5 = scala.collection.mutable.Set(11)\n\
    \        val primesSet6 = scala.collection.mutable.Set(13)\n        val primesSet7\
    \ = scala.collection.mutable.Set(17)\n        val primesSet8 = scala.collection.mutable.Set(19)\n\
    \        val primesSet9 = scala.collection.mutable.Set(23)\n        val primesSet10\
    \ = scala.collection.mutable.Set(29)\n        val primesSet11 = scala.collection.mutable.Set(31)\n\
    \        val primesSet12 = scala.collection.mutable.Set(37)\n        val primesSet13\
    \ = scala.collection.mutable.Set(41)\n        val primesSet14 = scala.collection.mutable.Set(43)\n\
    \        val primesSet15 = scala.collection.mutable.Set(47)\n        val primesSet16\
    \ = scala.collection.mutable.Set(53)\n        val primesSet17 = scala.collection.mutable.Set(59)\n\
    \        val primesSet18 = scala.collection.mutable.Set(61)\n        val primesSet19\
    \ = scala.collection.mutable.Set(67)\n        val primesSet20 = scala.collection.mutable.Set(71)\n\
    \        val primesSet21 = scala.collection.mutable.Set(73)\n        val primesSet22\
    \ = scala.collection.mutable.Set(79)\n        val primesSet23 = scala.collection.mutable.Set(83)\n\
    \        val primesSet24 = scala.collection.mutable.Set(89)\n        val primesSet25\
    \ = scala.collection.mutable.Set(97)\n        val primesSet26 = scala.collection.mutable.Set(101)\n\
    \        val primesSet27 = scala.collection.mutable.Set(103)\n        val primesSet28\
    \ = scala.collection.mutable.Set(105)\n        val primesSet29 = scala.collection.mutable.Set(107)\n\
    \        val primesSet30 = scala.collection.mutable.Set(109)\n        val primesSet31\
    \ = scala.collection.mutable.Set(111)\n        val primesSet32 = scala.collection.mutable.Set(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpl1bmsmue.scala:39:55 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \e[36mprimesSet32\e[0m = scala.collection.mutable.Set(\n\
    \e[31m\e[31m   |\e[0m                                                       ^\e\
    [0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpl1bmsmue.scala:40:5 ---------------------\e[0m\e[0m\n\e[31m40\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009801
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1,\
    \ 2)\n        val primes = mutable.ListBuffer[Long]()\n        while(fibs.size\
    \ < n) {\n            fibs += fibs.head + fibs.last\n            primes += fibs.head\
    \ % 2\n        }\n        primes(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_kj2agqe.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_kj2agqe.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009791
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        var fib = 0\n        var fib2 = 0\n        var fib3 = 0\n        var\
    \ fib4 = 0\n        var fib5 = 0\n        var fib6 = 0\n        var fib7 = 0\n\
    \        var fib8 = 0\n        var fib9 = 0\n        var fib10 = 0\n        var\
    \ fib11 = 0\n        var fib12 = 0\n        var fib13 = 0\n        var fib14 =\
    \ 0\n        var fib15 = 0\n        var fib16 = 0\n        var fib17 = 0\n   \
    \     var fib18 = 0\n        var fib19 = 0\n        var fib20 = 0\n        var\
    \ fib21 = 0\n        var fib22 = 0\n        var fib23 = 0\n        var fib24 =\
    \ 0\n        var fib25 = 0\n        var fib26 = 0\n        var fib27 = 0\n   \
    \     var fib28 = 0\n        var fib29 = 0\n        var fib30 = 0\n        var\
    \ fib31 = 0\n        var fib32 = 0\n        var fib33 = 0\n        var fib34 =\
    \ 0\n        var fib35 = 0\n        var fib36 = 0\n        var fib37 = 0\n   \
    \     var fib38 = 0\n        var fib39 = 0\n        var fib40 = 0\n        var\
    \ fib41 = 0\n        var fib42 = 0\n        var fib43 = 0\n        var fib44 =\
    \ 0\n        var fib45 = 0\n        var fib46 = 0\n        var fib47 = 0\n   \
    \     var fib48 = 0\n        var fib49 = 0\n        var fib50 = 0\n        var\
    \ fib51 = 0\n        var fib52 = 0\n        var fib53 = 0\n        var fib54 =\
    \ 0\n        var fib55 = 0\n        var fib56 = 0\n        var fib57 = 0\n   \
    \     var fib58 = 0\n        var fib59 = 0\n        var fib60 = 0\n        var\
    \ fib61 = 0\n        var fib62 = 0\n        var fib63 = 0\n        var fib64 =\
    \ 0\n        var fib65 = 0\n        var fib66 = 0\n        var fib67 = 0\n   \
    \     var fib68 = 0\n        var fib69 = 0\n        var fib70 = 0\n        var\
    \ fib71 = 0\n        var fib72 = 0\n        var fib73 = 0\n        var fib74 =\
    \ 0\n        var fib75 = 0\n        var fib76 = 0\n        var fib77 = 0\n   \
    \     var fib78 = 0\n        var fib79 = 0\n        var fib80 = 0\n        var\
    \ fib81 = 0\n        var fib82 = 0\n        var fib83 = 0\n        var fib84 =\
    \ 0\n        var fib85 = 0\n        var fib86 = 0\n        var fib87 = 0\n   \
    \     var fib88 = 0\n        var fib89 = 0\n        var fib90 = 0\n        var\
    \ fib91 = 0\n        var fib92 = 0\n        var fib93 = 0\n        var fib94 =\
    \ 0\n        var fib95 = 0\n        var fib96 = 0\n        var fib97 = 0\n   \
    \     var fib98 = 0\n        var fib99\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptiy19ft4.scala:110:4 ---------------------------\e\
    [0m\e[0m\n\e[31m110 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmptiy19ft4.scala:110:5 --------------------\e[0m\e[0m\n\e[31m110 |\e[0m\
    \    }\n\e[31m\e[31m    |\e[0m     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\
    \e[31m    |\e[0m     Required: Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009798
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var i = 0\n        var prime = 0\n\
    \        while(i < n) {\n            if(b == 1) {\n                prime = 1\n\
    \                c = a\n                a = b\n                b = c\n       \
    \         i += 1\n            } else {\n                c = a + b\n          \
    \      a = b\n                b = c\n                i += 1\n            }\n \
    \       }\n        prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_agy8h4e.scala:28)\n\tat Problem.main(tmp_agy8h4e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009801
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var prime_num : Long\
    \ = 1\n        var prime_flag : Boolean = false\n        var \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp1vqxqvss.scala:74:11 ---------------------------\e\
    [0m\e[0m\n\e[31m74 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp1vqxqvss.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mvar\e[0m \e[36mprime_flag\e[0m : \e[35mBoolean\e\
    [0m = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mprime_flag is already defined as \e[33mvariable\e[0m \e[35mprime_flag\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1vqxqvss.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mvar\e[0m \e[36mprime_num\e[0m : \e[35mLong\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mprime_num is already defined as \e[33mvariable\e[0m \e[35mprime_num\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1vqxqvss.scala:11:12 ---------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mvar\e[0m \e[36mprime_flag\e[0m : \e[35mBoolean\e[0m = \e\
    [31mfalse\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_flag is already defined as \e[33mvariable\e[0m \e[35mprime_flag\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1vqxqvss.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mvar\e[0m \e[36mprime_num\e[0m : \e[35mLong\e[0m = \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mprime_num is already defined as \e[33mvariable\e[0m \e[35mprime_num\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group"
  stdout: ''
  timestamp: 1660009802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibonacci =\
    \ mutable.ArrayBuffer(1,1)\n        for(i <- 2 to n){\n            fibonacci +=\
    \ fibonacci(i-1) + fibonacci(i-2)\n        }\n        fibonacci.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcs8cf1xg.scala:6:24 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcs8cf1xg.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009800
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs\
    \ += fib\n        fibs += fib.pow(2)\n        fibs += fib.pow(3)\n        fibs\
    \ += fib.pow(5)\n        fibs += fib.pow(7)\n        fibs += fib.pow(11)\n   \
    \     fibs += fib.pow(13)\n        fibs += fib.pow(17)\n        fibs += fib.pow(19)\n\
    \        fibs += fib.pow(23)\n        fibs += fib.pow(29)\n        fibs += fib.pow(31)\n\
    \        fibs += fib.pow(37)\n        fibs += fib.pow(43)\n        fibs += fib.pow(59)\n\
    \        fibs += fib.pow(67)\n        fibs += fib.pow(73)\n        fibs += fib.pow(79)\n\
    \        fibs += fib.pow(89)\n        fibs += fib.pow(97)\n        fibs += fib.pow(101)\n\
    \        fibs += fib.pow(103)\n        fibs += fib.pow(107)\n        fibs += fib.pow(109)\n\
    \        fibs += fib.pow(111)\n        fibs += fib.pow(113)\n        fibs += fib.pow(117)\n\
    \        fibs += fib.pow(121)\n        fibs += fib.pow(123)\n        fibs += fib.pow(127)\n\
    \        fibs += fib.pow(131)\n        fibs += fib.pow(133)\n        fibs += fib.pow(137)\n\
    \        fibs += fib.pow(139)\n        fibs += fib.pow(141)\n        fibs += fib.pow(143)\n\
    \        fibs += fib.pow(147)\n        fibs += fib.pow(149)\n        fibs += fib.pow(151)\n\
    \        fibs += fib.pow(153)\n        fibs += fib.pow(157)\n        fibs += fib.pow(159)\n\
    \        fibs += fib.pow(161)\n        fibs += fib.pow(163)\n        fibs += fib.pow(167)\n\
    \        fibs += fib.pow(169)\n        fibs += fib.pow(171)\n        fibs += fib.pow(173)\n\
    \        fibs += fib.pow(175)\n        fibs += fib.pow(177)\n        fibs += fib.pow(179)\n\
    \        fibs += fib.pow(181)\n        fibs += fib.pow(183)\n        fibs += fib.pow(185)\n\
    \        fibs += fib.pow(187)\n        fibs += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpqnnela81.scala:63:15 ---------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m        fibs += \n\e[31m\e[31m   |\e[0m             \
    \  ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqnnela81.scala:8:16\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs += fib\n\e[31m\e\
    [31m  |\e[0m                ^^^\e[0m\n\e[31m  |\e[0m                Found:   \
    \ (fib : BigInt)\n\e[31m  |\e[0m                Required: Long\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqnnela81.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs += fib.pow(\e[31m2\e[0m)\n\e[31m\e[31m  |\e\
    [0m                ^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Found:    BigInt\n\
    \e[31m  |\e[0m                Required: Long\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpqnnela81.scala:10:23 --------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        fibs += fib.pow(\e[31m3\e[0m)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Found:    BigInt\n\
    \e[31m   |\e[0m                Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqnnela81.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs += fib.pow(\e[31m5\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Found:\
    \    BigInt\n\e[31m   |\e[0m                Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqnnela81.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        fibs += fib.pow(\e[31m7\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Found:\
    \    BigInt\n\e[31m"
  stdout: ''
  timestamp: 1660009810
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).foldLeft(0)((acc,\
    \ x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppd4y3h8t.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppd4y3h8t.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmppd4y3h8t.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppd4y3h8t.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmppd4y3h8t.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppd4y3h8t.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009804
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl8tpdxtt.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpl8tpdxtt.scala:73:8 -------------------------\e[0m\e\
    [0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009777
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](100)\n        fib_array(0) = 1\n        fib_array(1) = 1\n \
    \       fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n\
    \        fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2crcio_.scala:73:8 -------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009793
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwzfhgfj.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0 -> 1)\n        fibs(n / 2) += 2\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fibs(n / 2).toList\n\
    \        fibs(n / 2) += fibs(n / 2).toList\n        fibs(n / 2) += fib\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfrkoi8j_.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m -> \e[31m1\e[0m)\n\e[31m\e[31m\
    \  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m           \
    \                    Found:    Long\n\e[31m  |\e[0m                          \
    \     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfrkoi8j_.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += \e[31m2\e[0m\n\e[31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m\
    \             Found:    Long\n\e[31m  |\e[0m             Required: Int\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfrkoi8j_.scala:8:13 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m).toList\n\
    \e[31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m             Found:\
    \    Long\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfrkoi8j_.scala:8:28 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m).toList\n\
    \e[31m\e[31m  |\e[0m                            ^^^^^\e[0m\n\e[31m  |\e[0m   \
    \                         Found:    Long\n\e[31m  |\e[0m                     \
    \       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfrkoi8j_.scala:9:13\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += fibs(n / \e[31m2\e[0m).toList\n\e[31m\e[31m  |\e[0m             ^^^^^\e[0m\n\
    \e[31m  |\e[0m             Found:    Long\n\e[31m  |\e[0m             Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfrkoi8"
  stdout: ''
  timestamp: 1660009811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5uhyhuny.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009784
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs(n % 2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4izt2gy3.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp4izt2gy3.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4izt2gy3.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n % \e[31m2\e[0m)\n\
    \e[31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m             Found:\
    \    Long\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var sum = 0\n  \
    \      while(n > 0){\n            if(n%2 == 0){\n                sum = a\n   \
    \             a = b\n                b = c\n                c = d\n          \
    \      d = sum\n            }\n            n -= 1\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4hpywnxj.scala:19:14 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660009803
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        var fib = 0\n        while(fib < n) {\n            prime = prime + 1\n\
    \            fib = fib + c\n            c = a + b\n            a = b\n       \
    \     b = c\n        }\n        prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptk5xjbbf.scala:23)\n\tat Problem.main(tmptk5xjbbf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ isPrime = true\n        val isFib = true\n        val isPrimeFib = true\n  \
    \      val isPrimeFibonacci = true\n        val isPrimeFibonacciPrime = true\n\
    \        val isPrimeFibonacciPrimeFib = true\n        val isPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrime = true\n        val\
    \ isPrimeFibonacciPrimeFibonacciPrimeFib = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime = true\n\
    \        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib = true\n   \
    \     val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = true\n\
    \        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime =\
    \ true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        val is\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr2tdpu04.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpr2tdpu04.scala:29:5 ---------------------\e[0m\e[0m\n\e[31m29 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 2\n        var prime = true\n\
    \        var fib = 0\n        var fib2 = 1\n        var fib3 = 1\n        var\
    \ fib4 = 2\n        var fib5 = 2\n        var fib6 = 2\n        var fib7 = 2\n\
    \        var fib8 = 2\n        var fib9 = 2\n        var fib10 = 2\n        var\
    \ fib11 = 2\n        var fib12 = 2\n        var fib13 = 2\n        var fib14 =\
    \ 2\n        var fib15 = 2\n        var fib16 = 2\n        var fib17 = 2\n   \
    \     var fib18 = 2\n        var fib19 = 2\n        var fib20 = 2\n        var\
    \ fib21 = 2\n        var fib22 = 2\n        var fib23 = 2\n        var fib24 =\
    \ 2\n        var fib25 = 2\n        var fib26 = 2\n        var fib27 = 2\n   \
    \     var fib28 = 2\n        var fib29 = 2\n        var fib30 = 2\n        var\
    \ fib31 = 2\n        var fib32 = 2\n        var fib33 = 2\n        var fib34 =\
    \ 2\n        var fib35 = 2\n        var fib36 = 2\n        var fib37 = 2\n   \
    \     var fib38 = 2\n        var fib39 = 2\n        var fib40 = 2\n        var\
    \ fib41 = 2\n        var fib42 = 2\n        var fib43 = 2\n        var fib44 =\
    \ 2\n        var fib45 = 2\n        var fib46 = 2\n        var fib47 = 2\n   \
    \     var fib48 = 2\n        var fib49 = 2\n        var fib50 = 2\n        var\
    \ fib51 = 2\n        var fib52 = 2\n        var fib53 = 2\n        var fib54 =\
    \ 2\n        var fib55 = 2\n        var fib56 = 2\n        var fib57 = 2\n   \
    \     var fib58 = 2\n        var fib59 = 2\n        var fib60 = 2\n        var\
    \ fib61 = 2\n        var fib62 = 2\n        var fib63 = 2\n        var fib64 =\
    \ 2\n        var fib65 = 2\n        var fib66 = 2\n        var fib67 = 2\n   \
    \     var fib68 = 2\n        var fib69 = 2\n        var fib70 = 2\n        var\
    \ fib71 = 2\n        var fib72 = 2\n        var fib73 = 2\n        var fib74 =\
    \ 2\n        var fib75 = 2\n        var fib76 = 2\n        var fib77 = 2\n   \
    \     var fib78 = 2\n        var fib79 = 2\n        var fib80 = 2\n        var\
    \ fib81 = 2\n        var fib82 = 2\n        var fib83 = 2\n        var fib84 =\
    \ 2\n        var fib85 = 2\n        var fib86 = 2\n        var fib87 = 2\n   \
    \     var fib88 = 2\n        var fib89 = 2\n        var fib90 = 2\n        var\
    \ fib91 = 2\n        var fib92 = 2\n        var fib93 = 2\n        var fib94 =\
    \ 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx4g2sjhp.scala:105:5\
    \ --------------------\e[0m\e[0m\n\e[31m105 |\e[0m    }\n\e[31m\e[31m    |\e[0m\
    \     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required:\
    \ Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009809
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 134700487351\n        fibs += 2176481956707\n\
    \        fibs += 352410161514\n        fibs += 570237701954\n        fibs += 922746656099\n\
    \        fibs += 1493035645789\n        fibs += 241578174895\n        fibs +=\
    \ 390881699479\n        fibs += 632459865723\n        fibs += 10233415773\n  \
    \      fibs += 1655801422925\n        fibs += 2679142967037\n        fibs += 433494439418\n\
    \        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcb6rz9gh.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpcb6rz9gh.scala:74:8 -------------------------\e[0m\e\
    [0m\n\e[31m74 |\e[0m        fib\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = true\n\
    \        while(prime && n > 0) {\n            c += 1\n            if((n % a) ==\
    \ 0) {\n                prime = false\n            }\n            a += 1\n   \
    \         if((n % b) == 0) {\n                prime = false\n            }\n \
    \           b += 1\n            if((n % c) == 0) {\n                prime = false\n\
    \            }\n            c += 1\n            d += 1\n            if((n % d)\
    \ == 0) {\n                prime = false\n            }\n            n -= 1\n\
    \        }\n        if(prime) {\n            return n\n        } else {\n    \
    \        return -1\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1tkjgi6q.scala:29:14 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660009814
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(7) #::\
    \ scala.math.BigInt(11)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val prime = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fibs = scala.collection.mutable.ListBuffer[Long]()\n        val fib1\
    \ = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n \
    \       val fib2 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib3 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib4 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib5 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib6 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib7 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib8 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib9 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib10 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib11 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib12 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib13 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib14 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val fib15 = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmprmmz_lc1.scala:25:11 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmprmmz_lc1.scala:6:114 ------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e\
    [0m) #:: scala.math.BigInt(\e[31m7\e[0m) #:: scala.math.BigInt(\e[31m11\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                       value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprmmz_lc1.scala:8:66\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mprime\e[0m = scala.math.BigInt(\e[31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e\
    [0m) #:: scala.math.BigInt(\e[31m5\e[0m)\n\e[31m\e[31m  |\e[0m               \
    \                                                   ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                       value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprmmz_lc1.scala:10:65\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfib1\e[0m = scala.math.BigInt(\e[31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e\
    [0m) #:: scala.math.BigInt(\e[31m5\e[0m)\n\e[31m\e[31m   |\e[0m              \
    \                                                   ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprmmz_lc1.scala:11:65\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfib2\e[0m = scala.math.BigInt(\e[31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e\
    [0m) #:: scala.math.BigInt(\e[31m5\e[0m)\n\e[31m\e[31m   |\e[0m              \
    \                  "
  stdout: ''
  timestamp: 1660009821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1,\
    \ 2)\n        val primes = mutable.ArrayBuffer(2)\n        while(fibs.size < n)\
    \ {\n            val fib = fibs.last() + fibs.last()\n            fibs += fib\n\
    \            primes += fib\n        }\n        primes(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpstpuoiyy.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpstpuoiyy.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009808
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_number =\
    \ 1\n        var prime_number = 2\n        var prime_flag = true\n        var\
    \ fib_flag = true\n        var fib_numbers = scala.collection.mutable.ListBuffer[Long]()\n\
    \        while(fib_number < n) {\n            if(prime_flag) {\n             \
    \   fib_numbers += fib_number\n                fib_number += 1\n             \
    \   prime_flag = false\n            }\n            if(fib_flag) {\n          \
    \      fib_numbers += fib_number\n                fib_number += 1\n          \
    \      fib_flag = false\n            }\n            if(fib_numbers(fib_numbers\
    \ - fib_number) == prime_number) {\n                prime_number = 2\n       \
    \         fib_numbers += fib_number\n                fib_number += 1\n       \
    \         prime_flag = true\n                fib_flag = true\n            }\n\
    \            fib_number += 1\n        }\n        fib_numbers(fib_numbers - fib_number)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2t32c2n4.scala:22:39 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m(fib_numbers(fib_numbers - fib_number)\
    \ == prime_number) {\n\e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue - is not a member of scala.collection.mutable.ListBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might make progress towards fixing the\
    \ problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2t32c2n4.scala:31:32 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        fib_numbers(fib_numbers - fib_number)\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue - is\
    \ not a member of scala.collection.mutable.ListBuffer[Long], but could be made\
    \ available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the\
    \ following imports might make progress towards fixing the problem:\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl8tpdxtt.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpl8tpdxtt.scala:73:8 -------------------------\e[0m\e\
    [0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009777
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](2)\n        fib_array(0) = 1\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa5jn7ziq.scala:73:8 -------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009809
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) -= 1\n        fibs(n) += fibs(n\
    \ - 1)\n        fibs(n).sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfjjwj8hj.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfjjwj8hj.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) -= \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m\
    \             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m\
    \  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:8:13 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \       ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m\
    \             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:8:24 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                  ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:  \
    \  Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m long"
  stdout: ''
  timestamp: 1660009821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            fib = fib + prime\n\
    \            prime = prime + 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2fdl8ufj.scala:16)\n\tat Problem.main(tmp2fdl8ufj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1,\
    \ 2)\n        while (fibs.size < n) {\n            fibs += fibs.last\n       \
    \ }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpavc7q_9l.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009813
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs(n) match {\n            case\
    \ 0 | 1 => n\n            case _ => primeFib(n - 1) + primeFib(n - 2)\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5w2orxtt.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5w2orxtt.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5w2orxtt.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:\
    \    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009825
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = 0\n\
    \        var fib = 0\n        while(fib < n){\n            prime = prime + 1\n\
    \            fib = fib + c\n            c = a + b\n            a = b\n       \
    \     b = d\n            d = c\n        }\n        prime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3xnbdssn.scala:23)\n\tat Problem.main(tmp3xnbdssn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009826
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        var fib = 0\n        while(fib < n){\n            prime = prime + 1\n\
    \            fib = fib + 2\n        }\n        while(prime < n){\n           \
    \ fib = fib + 2\n            prime = prime + 1\n        }\n        while(fib <\
    \ n){\n            fib = fib + 2\n            prime = prime + 1\n        }\n \
    \       while(prime < n){\n            fib = fib + 2\n            prime = prime\
    \ + 1\n        }\n        while(fib < n){\n            fib = fib + 2\n       \
    \     prime = prime + 1\n        }\n        while(prime < n){\n            fib\
    \ = fib + 2\n            prime = prime + 1\n        }\n        while(fib < n){\n\
    \            fib = fib + 2\n            prime = prime + 1\n        }\n       \
    \ while(prime < n){\n            fib = fib + 2\n            prime = prime + 1\n\
    \        }\n        while(fib < n){\n            fib = fib + 2\n            prime\
    \ = prime + 1\n        }\n        while(prime < n){\n            fib = fib + 2\n\
    \            prime = prime + 1\n        }\n        while(fib < n){\n         \
    \   fib = fib + 2\n            prime = prime + 1\n        }\n        while(prime\
    \ < n){\n            fib = fib + 2\n            prime = prime + 1\n        }\n\
    \        while(fib < n){\n            fib = fib + 2\n            prime = prime\
    \ + 1\n        }\n        while(prime < n){\n            fib = fib + 2\n     \
    \       prime = prime + 1\n        }\n        while(fib < n){\n            fib\
    \ = fib + 2\n            prime = prime + 1\n        }\n        while(prime < n){\n\
    \            fib = fib + 2\n            prime = prime + 1\n        }\n       \
    \ while(fib < n){\n            fib = fib + 2\n            prime = prime + 1\n\
    \        }\n        while(prime < n){\n            fib = fib + 2\n           \
    \ prime = prime + 1\n        }\n        while(fib < n){\n            fib = fib\
    \ + 2\n            prime = prime + 1\n        }\n        while(prime < n){\n \
    \           fib = fib + 2\n            prime = prime + 1\n        }\n        while(fib\
    \ < n){\n            fib = fib + 2\n            prime = prime + 1\n        }\n\
    \        while(prime < n){\n            fib = fib + 2\n            prime = prime\
    \ + 1\n        }\n        while(fib < \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5xzfuka9.scala:100:19 --------------------------\e\
    [0m\e[0m\n\e[31m100 |\e[0m        \e[33mwhile\e[0m(fib < \n\e[31m\e[31m    |\e\
    [0m                   ^\e[0m\n\e[31m    |\e[0m                   expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ - 1)(BigInt(2))\n        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) =\
    \ 1\n        fibs(3) = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs(6)\
    \ = 1\n        fibs(7) = 1\n        fibs(8) = 1\n        fibs(9) = 1\n       \
    \ fibs(10) = 1\n        fibs(11) = 1\n        fibs(12) = 1\n        fibs(13) =\
    \ 1\n        fibs(14) = 1\n        fibs(15) = 1\n        fibs(16) = 1\n      \
    \  fibs(17) = 1\n        fibs(18) = 1\n        fibs(19) = 1\n        fibs(20)\
    \ = 1\n        fibs(21) = 1\n        fibs(22) = 1\n        fibs(23) = 1\n    \
    \    fibs(24) = 1\n        fibs(25) = 1\n        fibs(26) = 1\n        fibs(27)\
    \ = 1\n        fibs(28) = 1\n        fibs(29) = 1\n        fibs(30) = 1\n    \
    \    fibs(31) = 1\n        fibs(32) = 1\n        fibs(33) = 1\n        fibs(34)\
    \ = 1\n        fibs(35) = 1\n        fibs(36) = 1\n        fibs(37) = 1\n    \
    \    fibs(38) = 1\n        fibs(39) = 1\n        fibs(40) = 1\n        fibs(41)\
    \ = 1\n        fibs(42) = 1\n        fibs(43) = 1\n        fibs(44) = 1\n    \
    \    fibs(45) = 1\n        fibs(46) = 1\n        fibs(47) = 1\n        fibs(48)\
    \ = 1\n        fibs(49) = 1\n        fibs(50) = 1\n        fibs(51) = 1\n    \
    \    fibs(52) = 1\n        fibs(53) = 1\n        fibs(54) = 1\n        fibs(55)\
    \ = 1\n        fibs(56) = 1\n        fibs(57) = 1\n        fibs(58) = 1\n    \
    \    fibs(59) = 1\n        fibs(60) = 1\n        fibs(61) = 1\n        fibs(62)\
    \ = 1\n        fibs(63) = 1\n        fibs(64) = 1\n        fibs(65) = 1\n    \
    \    fibs(66) = 1\n        fibs(67) = 1\n        fibs(68) = 1\n        fibs(69)\
    \ = 1\n        fibs(70) = 1\n        fibs(71) = 1\n        fibs(72) = 1\n    \
    \    fibs(73) = 1\n        fibs(74) = 1\n        fibs(75)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57dlnzn9.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n - \e[31m1\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp57dlnzn9.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update\
    \ is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp57dlnzn9.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp57dlnzn9.scala:9:8\
    \ --------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update\
    \ is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp57dlnzn9.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp57dlnzn9.scala:11:8\
    \ -------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp57dlnzn9.scala:12:8 -------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Ve"
  stdout: ''
  timestamp: 1660009833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = true\n\
    \        var fib : Long = 0\n        var fib2 : Long = 0\n        var fib3 : Long\
    \ = 0\n        var fib4 : Long = 0\n        var fib5 : Long = 0\n        var fib6\
    \ : Long = 0\n        var fib7 : Long = 0\n        var fib8 : Long = 0\n     \
    \   var fib9 : Long = 0\n        var fib10 : Long = 0\n        var fib11 : Long\
    \ = 0\n        var fib12 : Long = 0\n        var fib13 : Long = 0\n        var\
    \ fib14 : Long = 0\n        var fib15 : Long = 0\n        var fib16 : Long = 0\n\
    \        var fib17 : Long = 0\n        var fib18 : Long = 0\n        var fib19\
    \ : Long = 0\n        var fib20 : Long = 0\n        var fib21 : Long = 0\n   \
    \     var fib22 : Long = 0\n        var fib23 : Long = 0\n        var fib24 :\
    \ Long = 0\n        var fib25 : Long = 0\n        var fib26 : Long = 0\n     \
    \   var fib27 : Long = 0\n        var fib28 : Long = 0\n        var fib29 : Long\
    \ = 0\n        var fib30 : Long = 0\n        var fib31 : Long = 0\n        var\
    \ fib32 : Long = 0\n        var fib33 : Long = 0\n        var fib34 : Long = 0\n\
    \        var fib35 : Long = 0\n        var fib36 : Long = 0\n        var fib37\
    \ : Long = 0\n        var fib38 : Long = 0\n        var fib39 : Long = 0\n   \
    \     var fib40 : Long = 0\n        var fib41 : Long = 0\n        var fib42 :\
    \ Long = 0\n        var fib43 : Long = 0\n        var fib44 : Long = 0\n     \
    \   var fib45 : Long = 0\n        var fib46 : Long = 0\n        var fib47 : Long\
    \ = 0\n        var fib48 : Long = 0\n        var fib49 : Long = 0\n        var\
    \ fib50 : Long = 0\n        var fib51 : Long = 0\n        var fib52 : Long = 0\n\
    \        var fib53 : Long = 0\n        var fib54 : Long = 0\n        var fib55\
    \ : Long = 0\n        var fib56 : Long = 0\n        var fib57 : Long = 0\n   \
    \     var fib58 : Long = 0\n        var fib59 : Long = 0\n        var fib60 :\
    \ Long = 0\n        var fib61 : Long = 0\n        var fib62 : Long = 0\n     \
    \   var fib63 : Long = 0\n        var fib64 : Long = 0\n        var fib65 : Long\
    \ = 0\n        var fib66 : Long = 0\n        var fib67 : Long = 0\n        var\
    \ fib68 : Long = 0\n        var fib69 : Long = 0\n        var fib70 : Long = 0\n\
    \        var fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps_gu2lee.scala:82:4 ----------------------------\e\
    [0m\e[0m\n\e[31m82 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps_gu2lee.scala:82:5 ---------------------\e[0m\e[0m\n\e[31m82 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) -= 1\n        fibs(n) += fibs(n\
    \ - 1)\n        fibs(n).sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfjjwj8hj.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfjjwj8hj.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) -= \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m\
    \             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m\
    \  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:8:13 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \       ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m\
    \             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:8:24 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                  ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:  \
    \  Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m long"
  stdout: ''
  timestamp: 1660009821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(0) = BigInt(1)\n        fibs(1) = BigInt(1)\n\
    \        fibs.tail.foreach(fibs => fibs(fibs.size - 1) += fibs(fibs.size - 2))\n\
    \        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphp51zoy_.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphp51zoy_.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue\
    \ update is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphp51zoy_.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = BigInt(\e[31m1\e[0m)\n\e\
    [31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member\
    \ of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmphp51zoy_.scala:9:34 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        fibs.tail.foreach(\e[36mfibs\e[0m => fibs(fibs.size - \e[31m1\e\
    [0m) += fibs(fibs.size - \e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m                \
    \                  ^^^^\e[0m\n\e[31m  |\e[0m                                 \
    \ \e[33mparameter\e[0m \e[35mfibs\e[0m does not take parameters\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmphp51zoy_.scala:9:44 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs.tail.foreach(\e[36mfibs\e[0m => fibs(fibs.size\
    \ - \e[31m1\e[0m) += fibs(fibs.size - \e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m   \
    \                                    ^^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \  value size is not a member of BigInt - did you mean fibs.sign?\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphp51zoy_.scala:10:13 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        fibs.last\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found"
  stdout: ''
  timestamp: 1660009829
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            prime = prime + 1\n\
    \            fib = fib + prime\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_gvmlfi5.scala:16)\n\tat Problem.main(tmp_gvmlfi5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009827
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(1)\n\
    \        fibs(0) = 0\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs.takeWhile(_ < n).foldLeft(0)((acc, _)\
    \ => acc + fibs(_))\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8yajuw0g.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m0\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8yajuw0g.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8yajuw0g.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8yajuw0g.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8yajuw0g.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmp8yajuw0g.scala:12:65\
    \ -----------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs.takeWhile(_\
    \ < n).foldLeft(\e[31m0\e[0m)((\e[36macc\e[0m, _) => acc + fibs(_))\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \ ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m   I could not infer the type of the parameter _$3 of expanded function:\n\
    \e[31m   |\e[0m   _$3 => acc + fibs(_$3).\n6 errors found\n"
  stdout: ''
  timestamp: 1660009829
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1) ++ Vector.fill(n)(1)\n        fibs.takeWhile(_\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplc841qi_.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m) ++ Vector.fill(n)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \                          ^^^^^\e[0m\n\e[31m  |\e[0m                        \
    \       Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplc841qi_.scala:6:56\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m) ++ Vector.fill(n)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \                                                   ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                                                        Found:    Long\n\e[31m\
    \  |\e[0m                                                        Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplc841qi_.scala:6:81\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m) ++ Vector.fill(n)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \                                                                            ^\e\
    [0m\n\e[31m  |\e[0m                                                      Found:\
    \    (n : Long)\n\e[31m  |\e[0m                                              \
    \        Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009829
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs.takeWhile(_ < n).foreach(fibs => fibs(5)\
    \ = fibs(4) + fibs(3))\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qskmqkq.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qskmqkq.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6qskmqkq.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qskmqkq.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6qskmqkq.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6qskmqkq.scala:12:46\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs.takeWhile(_\
    \ < n).foreach(\e[36mfibs\e[0m => fibs(\e[31m5\e[0m) = fibs(\e[31m4\e[0m) + fibs(\e\
    [31m3\e[0m))\n\e[31m\e[31m   |\e[0m                                          \
    \    ^^^^\e[0m\n\e[31m   |\e[0m                                     value update\
    \ is not a member of Int\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp6qskmqkq.scala:12:56\
    \ -----------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs.takeWhile(_\
    \ < n).foreach(\e[36mfibs\e[0m => fibs(\e[31m5\e[0m) = fibs(\e[31m4\e[0m) + fibs(\e\
    [31m3\e[0m))\n\e[31m\e[31m   |\e[0m                                          \
    \              ^^^^\e[0m\n\e[31m   "
  stdout: ''
  timestamp: 1660009833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1)\n        fibs(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj9175ear.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpj9175ear.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj9175ear.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m\
    \  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpj9175ear.scala:7:24 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e\
    [0m                        ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:\
    \    Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj9175ear.scala:8:13 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n).last\n\e[31m\e[31m  |\e[0m           \
    \  ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m   \
    \          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explan"
  stdout: ''
  timestamp: 1660009779
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var i = 2\n    \
    \    var prime = 0\n        var fib = 0\n        while (i < n) {\n           \
    \ fib += a\n            prime = fib\n            a += b\n            b += c\n\
    \            c += d\n            d += i\n            i += 1\n        }\n     \
    \   prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppevjw4gk.scala:25)\n\tat Problem.main(tmppevjw4gk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009831
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1)\n        fibs(n)\
    \ += fibs(n - 2)\n        fibs(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphhxlrlbk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmphhxlrlbk.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphhxlrlbk.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m\
    \  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmphhxlrlbk.scala:7:24 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e\
    [0m                        ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:\
    \    Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphhxlrlbk.scala:8:13 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n) += fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m\
    \  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009834
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        var prime_found = 0\n        var prime_found2 =\
    \ 0\n        var prime_found3 = 0\n        var prime_found4 = 0\n        var prime_found5\
    \ = 0\n        var prime_found6 = 0\n        var prime_found7 = 0\n        var\
    \ prime_found8 = 0\n        var prime_found9 = 0\n        var prime_found10 =\
    \ 0\n        var prime_found11 = 0\n        var prime_found12 = 0\n        var\
    \ prime_found13 = 0\n        var prime_found14 = 0\n        var prime_found15\
    \ = 0\n        var prime_found16 = 0\n        var prime_found17 = 0\n        var\
    \ prime_found18 = 0\n        var prime_found19 = 0\n        var prime_found20\
    \ = 0\n        var prime_found21 = 0\n        var prime_found22 = 0\n        var\
    \ prime_found23 = 0\n        var prime_found24 = 0\n        var prime_found25\
    \ = 0\n        var prime_found26 = 0\n        var prime_found27 = 0\n        var\
    \ prime_found28 = 0\n        var prime_found29 = 0\n        var prime_found30\
    \ = 0\n        var prime_found31 = 0\n        var prime_found32 = 0\n        var\
    \ prime_found33 = 0\n        var prime_found34 = 0\n        var prime_found35\
    \ = 0\n        var prime_found36 = 0\n        var prime_found37 = 0\n        var\
    \ prime_found38 = 0\n        var prime_found39 = 0\n        var prime_found40\
    \ = 0\n        var prime_found41 = 0\n        var prime_found42 = 0\n        var\
    \ prime_found43 = 0\n        var prime_found44 = 0\n        var prime_found45\
    \ = 0\n        var prime_found46 = 0\n        var prime_found47 = 0\n        var\
    \ prime_found48 = 0\n        var prime_found49 = 0\n        var prime_found50\
    \ = 0\n        var prime_found51 = 0\n        var prime_found52 = 0\n        var\
    \ prime_found53 = 0\n        var prime_found54 = 0\n        var prime_found55\
    \ = 0\n        var prime_found56 = 0\n        var prime_found57 = 0\n        var\
    \ prime_found58 = 0\n        var prime_found59 = 0\n        var prime_found60\
    \ = 0\n        var prime_found61 = 0\n        var prime_found62 = 0\n        var\
    \ prime_found63 = 0\n        var prime_found64 = 0\n        var prime_found65\
    \ = 0\n        var prime_found66 = 0\n        var prime_found67 = 0\n        var\
    \ prime_found68 = 0\n        var prime_found69 = 0\n        var prime_found70\
    \ = 0\n        var prime_found71 = 0\n        var prime_found72 = 0\n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5fuz67ho.scala:81:5\
    \ ---------------------\e[0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009832
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n\
    \        for(i <- 2 to n){\n            fibs += fibs.last\n        }\n       \
    \ fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphoa22vv3.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphoa22vv3.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(0) = 1\n        fibs(1) = 1\n        fibs.drop(1).foreach\
    \ { x =>\n            fibs(x) = fibs(x - 1) + fibs(x - 2)\n        }\n       \
    \ fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqg2aqkps.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqg2aqkps.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update\
    \ is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqg2aqkps.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqg2aqkps.scala:10:12\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m            fibs(x) = fibs(x\
    \ - \e[31m1\e[0m) + fibs(x - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[BigInt] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqg2aqkps.scala:10:27\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m            fibs(x) = fibs(x\
    \ - \e[31m1\e[0m) + fibs(x - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \               ^^^^^\e[0m\n\e[31m   |\e[0m                           Found: \
    \   BigInt\n\e[31m   |\e[0m                           Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqg2aqkps.scala:10:41 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            fibs(x) = fibs(x - \e[31m1\e[0m) + fibs(x\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                                     \
    \    ^^^^^\e[0m\n\e[31m   |\e[0m                                         Found:\
    \    Bi"
  stdout: ''
  timestamp: 1660009838
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            prime = prime + fib\n\
    \            fib = fib + fib\n        }\n        prime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpytozdwhu.scala:15)\n\tat Problem.main(tmpytozdwhu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ArrayBuffer(2)\n        val primesSet\
    \ = scala.collection.mutable.Set()\n        primes.add(2)\n        primesSet +=\
    \ 2\n        for(i <- 3 to n){\n            val newFib = (fib + fib % primes.last).toLong\n\
    \            primes += newFib\n            primesSet += newFib\n            fib\
    \ = newFib\n        }\n        primes.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1h6x2_6d.scala:9:15 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        primes.add(\e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    value add is not a member of scala.collection.mutable.ArrayBuffer[Int]\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1h6x2_6d.scala:10:21 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        primesSet += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                     ^\e[0m\n\e[31m   |\e[0m                     Found:   \
    \ (\e[31m2\e[0m : Int)\n\e[31m   |\e[0m                     Required: Nothing\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1h6x2_6d.scala:11:22\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m3\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp1h6x2_6d.scala:13:22 --------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            primes += newFib\n\e[31m\e[31m   |\e[0m                  \
    \    ^^^^^^\e[0m\n\e[31m   |\e[0m                      Found:    (newFib : Long)\n\
    \e[31m   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1h6x2_6d.scala:14:25 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            primesSet += newFib\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \  Found:    (newFib : Long)\n\e[31m   |\e[0m                         Required:\
    \ Nothing\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp1h6x2_6d.scala:15:16\
    \ -----------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            fib = newFib\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0"
  stdout: ''
  timestamp: 1660009838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += 0\n        primes += 1\n        while(fib <= n){\n            val isPrime\
    \ = scala.math.BigInt(fib.toInt).isProbablePrime\n            if(isPrime){\n \
    \               primes += fib\n            }\n            fib = fib + fib\n  \
    \      }\n        primes.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_ab2si48.scala:12:15\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33mif\e[0m(isPrime){\n\
    \e[31m\e[31m   |\e[0m               ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \   Found:    (isPrime : Int => Boolean)\n\e[31m   |\e[0m               Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_ab2si48.scala:13:26\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m                primes += fib\n\
    \e[31m\e[31m   |\e[0m                          ^^^\e[0m\n\e[31m   |\e[0m     \
    \                     Found:    (fib : BigInt)\n\e[31m   |\e[0m              \
    \            Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp_ab2si48.scala:15:16 -----------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m            fib = fib + fib\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val fib\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 137364224473\n        fibs += 216912968977\n\
    \        fibs += 31752391661\n        fibs += 5142296636\n        fibs += 83204391742\n\
    \        fibs += 134626901603\n        fibs += 217830932635\n        fibs += 352457730887\n\
    \        fibs += 570288665536\n        fibs += 92274657799\n        fibs += 149303539413\n\
    \        fibs += 24157817487\n        fibs += 390881699467\n        fibs += 632459\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3yvdm23f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009831
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var isPrime = true\n\
    \        var isFib = true\n        var isPrimeFib = true\n        var isPrimeFibonacci\
    \ = true\n        var isPrimeFibonacciPrime = true\n        var isPrimeFibonacciPrimeFib\
    \ = true\n        var isPrimeFibonacciPrimeFibonacci = true\n        var isPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFib = true\n        var\
    \ isPrimeFibonacciPrimeFibonacciPrimeFibonacci = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib = true\n\
    \        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = true\n\
    \        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime =\
    \ true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        var isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpnrs0o6lu.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpnrs0o6lu.scala:31:5 ---------------------\e[0m\e[0m\n\e[31m31 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009838
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            fib = fib + prime\n\
    \            prime = prime + 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2fdl8ufj.scala:16)\n\tat Problem.main(tmp2fdl8ufj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657775\n        fibs += 217551433725\n\
    \        fibs += 352410161512\n        fibs += 570237701936\n        fibs += 9223372036854775807L\n\
    \        fibs.drop(fibs.length - n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj_2gyafc.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](5)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        val fib_array_length = fib_array.length\n  \
    \      val fib_array_index_length = fib_array_length - 1\n        val fib_array_index_index_length\
    \ = fib_array_index_length - 1\n        val fib_array_index_index_index_length\
    \ = fib_array_index_index_length - 1\n        val fib_array_index_index_index_index_length\
    \ = fib_array_index_index_index_length - 1\n        val fib_array_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_length - 1\n        val fib_array_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_length - 1\n        val fib_array_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_length - 1\n        val fib_array_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_length - 1\n   \
    \     val fib_array_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_length - 1\n\
    \        val fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp8bwmpohu.scala:21:79 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mfib_array_index_index_index_index_index_index_index_index_length\e\
    [0m = fib_array_index_index_index_index_index_index_index_index_length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                                                   \
    \                            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m\
    \ \e[35mfib_array_index_index_index_index_index_index_index_index_length\e[0m\
    \ needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp8bwmpohu.scala:22:85\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfib_array_index_index_index_index_index_index_index_index_index_length\e\
    [0m = fib_array_index_index_index_index_index_index_index_index_index_length -\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                        \
    \                                             ^\e[0m\n\e[31m   |\e[0mRecursive\
    \ \e[33mvalue\e[0m \e[35mfib_array_index_index_index_index_index_index_index_index_index_length\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp8bwmpohu.scala:23:91\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfib_array_index_index_index_index_index_index_index_index_index_index_length\e\
    [0m = fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                      \
    \                                                     ^\e[0m\n\e[31m   |\e[0mRecursive\
    \ \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  fib_array_index_index_index_index_index_index_index_index_index_index_length\n\
    \e[31m   |\e[0m\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmp8bwmpohu.scala:24:97 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mfib_a"
  stdout: ''
  timestamp: 1660009844
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ArrayBuffer(2)\n        val prime\
    \ = scala.math.BigInt(2)\n        val isPrime = true\n        for(i <- 1 to n){\n\
    \            prime += fib\n            fib = prime - fib\n            primes +=\
    \ prime\n            if(fib % prime == 0){\n                isPrime = false\n\
    \                break\n            }\n        }\n        if(isPrime){\n     \
    \       primes(n)\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7yj5bbt4.scala:10:22\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp7yj5bbt4.scala:11:18 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m            prime += fib\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value += is not a member of BigInt - did you mean prime.!=?\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp7yj5bbt4.scala:12:16 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            fib = prime - fib\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7yj5bbt4.scala:13:22\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m            primes += prime\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^\e[0m\n\e[31m   |\e[0m       \
    \               Found:    (prime : BigInt)\n\e[31m   |\e[0m                  \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp7yj5bbt4.scala:15:24\
    \ -----------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                isPrime\
    \ = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yj5bbt4.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31"
  stdout: ''
  timestamp: 1660009849
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0 +: 1 +: 0)\n        fibs(n) match {\n            case 0 => n\n      \
    \      case 1 => n\n            case _ => primeFib(fibs(n-1) + fibs(n-2)) \n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7c9st344.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m +: \e[31m1\e[0m +: \e[31m0\e\
    [0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e\
    [0m                               Found:    Long\n\e[31m  |\e[0m             \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp7c9st344.scala:6:45 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e\
    [0m +: \e[31m1\e[0m +: \e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                          ^^^^\e[0m\n\e[31m  |\e[0m                         \
    \                  value +: is not a member of Int\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp7c9st344.scala:7:13 ---------------------\e[0m\e[0m\n\
    \e[31m7 |\e[0m        fibs(n) \e[33mmatch\e[0m {\n\e[31m\e[31m  |\e[0m       \
    \      ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m\
    \             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp7c9st344.scala:10:36 --------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m            \e[33mcase\e[0m _ => primeFib(fibs(n-\e[31m1\e[0m) + fibs(n-\e\
    [31m2\e[0m)) \n\e[31m\e[31m   |\e[0m                                    ^^^\e\
    [0m\n\e[31m   |\e[0m                                    Found:    Long\n\e[31m\
    \   |\e[0m                                    Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7c9st344.scala:10:48 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mcase\e[0m _ => primeFib(fibs(n-\e[31m1\e\
    [0m) + fibs(n-\e[31m2\e[0m)) \n\e[31m\e[31m   |\e[0m                         \
    \                       ^^^\e[0m\n\e[31m   |\e[0m                            \
    \                    Found:    Long\n\e[31m   |\e[0m                    "
  stdout: ''
  timestamp: 1660009850
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs(6) = 1\n       \
    \ fibs(7) = 1\n        fibs(8) = 1\n        fibs(9) = 1\n        fibs(10) = 1\n\
    \        fibs(11) = 1\n        fibs(12) = 1\n        fibs(13) = 1\n        fibs(14)\
    \ = 1\n        fibs(15) = 1\n        fibs(16) = 1\n        fibs(17) = 1\n    \
    \    fibs(18) = 1\n        fibs(19) = 1\n        fibs(20) = 1\n        fibs(21)\
    \ = 1\n        fibs(22) = 1\n        fibs(23) = 1\n        fibs(24) = 1\n    \
    \    fibs(25) = 1\n        fibs(26) = 1\n        fibs(27) = 1\n        fibs(28)\
    \ = 1\n        fibs(29) = 1\n        fibs(30) = 1\n        fibs(31) = 1\n    \
    \    fibs(32) = 1\n        fibs(33) = 1\n        fibs(34) = 1\n        fibs(35)\
    \ = 1\n        fibs(36) = 1\n        fibs(37) = 1\n        fibs(38) = 1\n    \
    \    fibs(39) = 1\n        fibs(40) = 1\n        fibs(41) = 1\n        fibs(42)\
    \ = 1\n        fibs(43) = 1\n        fibs(44) = 1\n        fibs(45) = 1\n    \
    \    fibs(46) = 1\n        fibs(47) = 1\n        fibs(48) = 1\n        fibs(49)\
    \ = 1\n        fibs(50) = 1\n        fibs(51) = 1\n        fibs(52) = 1\n    \
    \    fibs(53) = 1\n        fibs(54) = 1\n        fibs(55) = 1\n        fibs(56)\
    \ = 1\n        fibs(57) = 1\n        fibs(58) = 1\n        fibs(59) = 1\n    \
    \    fibs(60) = 1\n        fibs(61) = 1\n        fibs(62) = 1\n        fibs(63)\
    \ = 1\n        fibs(64) = 1\n        fibs(65) = 1\n        fibs(66) = 1\n    \
    \    fibs(67) = 1\n        fibs(68) = 1\n        fibs(69) = 1\n        fibs(70)\
    \ = 1\n        fibs(71) = 1\n        fibs(72) = 1\n        fibs(73) = 1\n    \
    \    fibs(74) = 1\n        fibs(75) = 1\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:13:8 -------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs(\e[31m6\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:14:8\
    \ -------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        fibs(\e[31m7\e[0m)\
    \ = \e[31m1\e[0m\n\e[31"
  stdout: ''
  timestamp: 1660009856
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     val prime_array = new Array[Boolean](n)\n        prime_array(0) = false\n\
    \        prime_array(1) = false\n        val prime_array_index = 0\n        val\
    \ fib_array_index = 1\n        while(fib_array_index < n) {\n            val temp\
    \ = fib_array(fib_array_index)\n            fib_array(fib_array_index) = fib_array(fib_array_index\
    \ - 1) + fib_array(fib_array_index - 2)\n            fib_array(fib_array_index\
    \ - 1) = temp\n            prime_array(fib_array_index) = prime_array(fib_array_index\
    \ - 1) + prime_array(fib_array_index - 2)\n            prime_array(fib_array_index\
    \ - 1) = prime_array(fib_array_index - 1) + prime_array(fib_array_index - 2)\n\
    \            fib_array_index += 1\n        }\n        fib_array(0) = 0\n     \
    \   fib_array(1) = 1\n        val prime_array_index = 0\n        while(prime_array_index\
    \ < n) {\n            val temp = prime_array(prime_array_index)\n            prime_array(prime_array_index)\
    \ = prime_array(prime_array_index - 1) + prime_array(prime_array_index - 2)\n\
    \            prime_array(prime_array_index - 1) = temp\n            prime_array_index\
    \ += 1\n        }\n        fib_array(0) = 0\n        fib_array(1) = 1\n      \
    \  prime_array(0) = false\n        prime_array(1) = false\n        val fib_array_index\
    \ = 1\n        while(fib_array_index < n) {\n            val temp = fib_array(fib_array_index)\n\
    \            fib_array(fib_array_index) = fib_array(fib_array_index - 1) + fib_array(fib_array_index\
    \ - 2)\n            fib_array(fib_array_index - 1) = temp\n            fib_array_index\
    \ += 1\n        }\n        fib_array(0) = 0\n        fib_array(1) = 1\n      \
    \  prime_array(0) = false\n        prime_array(1) = false\n        val fib_array_index\
    \ = 1\n        while(prime_array_index < n) {\n            val temp = prime_array(prime_array_index)\n\
    \            prime_array(prime_array_index) = prime_array(prime_array_index -\
    \ 1) + prime_array(prime_array_index - 2)\n            prime_array(prime_array_index\
    \ - 1) = temp\n            prime_array_index += 1\n        }\n        fib_array(0)\
    \ = 0\n        fib_array(1) = 1\n        prime_array(0) = false\n\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqccj6x1j.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mprime_array_index\e[0m =\
    \ \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mprime_array_index is already defined as \e[33mvalue\e[0m \e[35mprime_array_index\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqccj6x1j.scala:35:12 ---------------------------\e[0m\e[0m\n\e\
    [31m35 |\e[0m        \e[33mval\e[0m \e[36mfib_array_index\e[0m = \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfib_array_index\
    \ is already defined as \e[33mvalue\e[0m \e[35mfib_array_index\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqccj6x1j.scala:46:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfib_array_index\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfib_array_index is already defined as \e[33mvalue\e[0m \e\
    [35mfib_array_index\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqccj6x1j.scala:6:40 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m               \
    \                         ^\e[0m\n\e[31m  |\e[0m                             \
    \           Found:    (n : Long)\n\e[31m  |\e[0m                             \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqccj6x1j.scala:9:45\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](n)\n\e[31m\e[31m  |\e\
    [0m                              "
  stdout: ''
  timestamp: 1660009855
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        var fib = 0\n        while(fib < n){\n            prime = a + b\n   \
    \         fib += c\n            c += d\n            d = b\n            b = a\n\
    \            a = prime\n        }\n        prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppwizd4x9.scala:23)\n\tat Problem.main(tmppwizd4x9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009853
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpvs_coti9.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009856
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = true\n        while(prime && fib < n) {\n            prime\
    \ = fib == 0 || fib == 1 || fib.isPrime\n            fib += 1\n        }\n   \
    \     fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprjkoq9ey.scala:9:48 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            prime = fib == \e[31m0\e[0m || fib == \e[31m1\e\
    [0m || fib.isPrime\n\e[31m\e[31m  |\e[0m                                     \
    \       ^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                                     \
    \ value isPrime is not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1660009852
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        while(n > 0){\n            c += 1\n            if((n % a) == 0){\n  \
    \              prime = 1\n                break\n            }\n            if((n\
    \ % b) == 0){\n                prime = 1\n                break\n            }\n\
    \            d += 1\n            a += 1\n            b += 1\n        }\n     \
    \   if(prime == 1){\n            primeFib(n-1)\n        }\n        else{\n   \
    \         primeFib(n-1)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptdu3uh7s.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptdu3uh7s.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009847
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).foreach(fibs\
    \ => fibs(n+2) = fibs(n+1) + fibs(n+2))\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4wla2ylt.scala:13:46 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mfibs\e[0m\
    \ => fibs(n+\e[31m2\e[0m) = fibs(n+\e[31m1\e[0m) + fibs(n+\e[31m2\e[0m))\n\e[31m\e\
    [31m   |\e[0m                                              ^^^^\e[0m\n\e[31m \
    \  |\e[0m                                     value update is not a member of\
    \ Int\n\e[31m\e[31m-- [E050] Type Error: /tmp/"
  stdout: ''
  timestamp: 1660009859
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 743248671\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 5331629117\n\
    \        fibs += 8626757121\n        fibs += 13803727487\n        fibs += 21117004260\n\
    \        fibs += 3416464321\n        fibs += 5527939700\n        fibs += 8944394323\n\
    \        fibs += 14472334055\n        fibs += 24226379690\n        fibs += 39282366957\n\
    \        fibs += 6335683997\n        fibs += 10233294402\n        fibs += 16558014229\n\
    \        fibs += 26791429610\n        fibs += 43349443713\n        fibs += 70140873317\n\
    \        fibs += 11349031707\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpon7r8k1r.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009846
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs(n) match {\n            case\
    \ 0 => 1\n            case 1 => n\n            case _ => primeFib(n - 1) + primeFib(n\
    \ - 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcqjy9r.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp0hcqjy9r.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0hcqjy9r.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:\
    \    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009859
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = 0\n\
    \        while(n > 1) {\n            if((n % a) == 0) {\n                prime\
    \ = 1\n            }\n            if((n % b) == 0) {\n                prime =\
    \ 1\n            }\n            if((n % c) == 0) {\n                prime = 1\n\
    \            }\n            if((n % d) == 0) {\n                prime = 1\n  \
    \          }\n            if((n % a) == 0) {\n                prime = 1\n    \
    \        }\n            if((n % b) == 0) {\n                prime = 1\n      \
    \      }\n            if((n % c) == 0) {\n                prime = 1\n        \
    \    }\n            if((n % d) == 0) {\n                prime = 1\n          \
    \  }\n            a += 1\n            b += 1\n            c += 1\n           \
    \ d += 1\n            n -= 1\n        }\n        if(prime == 1) {\n          \
    \  return n\n        } else {\n            return -1\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc_zzp_76.scala:40:14 ------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660009857
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.find(_ < n).map(_\
    \ + 1).find(_ == n).map(_ + 1).getOrElse(-1L)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz1a7acsm.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz1a7acsm.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpz1a7acsm.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz1a7acsm.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpz1a7acsm.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz1a7acsm.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpz1a7acsm.scala:13:69 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs.find(_ < n).map(_ + \e[31m1\e[0m).find(_\
    \ == n).map(_ + \e[31m1\e[0m).getOrElse(-\e[31m1L\e[0m)\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    AnyVal\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer expla"
  stdout: ''
  timestamp: 1660009862
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num = 0\n\
    \        var prime_num = 0\n        var prime_flag = false\n        var fib_flag\
    \ = false\n        var fib_prime_flag = false\n        var fib_prime_num = -1\n\
    \        var fib_prime_flag = false\n        var fib_prime_num = -1\n        var\
    \ fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var fib_prime_num\
    \ = -1\n        var fib_prime_num = -1\n        var fib_prime_num = -1\n     \
    \   var fib_prime_num = -1\n        var fib_prime_num = -1\n        var \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpp9g5erdm.scala:71:11 ---------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpp9g5erdm.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mfib_prime_flag\e[0m = \e\
    [31mfalse\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mfib_prime_flag is already defined as \e[33mvariable\e[0m \e[35mfib_prime_flag\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpp9g5erdm.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mvar\e[0m \e[36mfib_prime_num\e[0m = -\e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfib_prime_num\
    \ is already defined as \e[33mvariable\e[0m \e[35mfib_prime_num\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9g5erdm.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mvar\e[0m \e[36mfib_prime_num\e[0m = -\e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfib_prime_num\
    \ is already defined as \e[33mvariable\e[0m \e[35mfib_prime_num\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9g5erdm.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mvar\e[0m \e[36mfib_prime_num\e[0m = -\e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfib_prime_num\
    \ is already defined as \e[33mvariable\e[0m \e[35mfib_prime_num\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E1"
  stdout: ''
  timestamp: 1660009860
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_n = 0\n\
    \        var prime_n = 0\n        var prime_fib = 0\n        var prime_fib_n =\
    \ 0\n        var prime_fib_n1 = 1\n        var prime_fib_n2 = 1\n        var prime_fib_n3\
    \ = 1\n        var prime_fib_n4 = 1\n        var prime_fib_n5 = 1\n        var\
    \ prime_fib_n6 = 1\n        var prime_fib_n7 = 1\n        var prime_fib_n8 = 1\n\
    \        var prime_fib_n9 = 1\n        var prime_fib_n10 = 1\n        var prime_fib_n11\
    \ = 1\n        var prime_fib_n12 = 1\n        var prime_fib_n13 = 1\n        var\
    \ prime_fib_n14 = 1\n        var prime_fib_n15 = 1\n        var prime_fib_n16\
    \ = 1\n        var prime_fib_n17 = 1\n        var prime_fib_n18 = 1\n        var\
    \ prime_fib_n19 = 1\n        var prime_fib_n20 = 1\n        var prime_fib_n21\
    \ = 1\n        var prime_fib_n22 = 1\n        var prime_fib_n23 = 1\n        var\
    \ prime_fib_n24 = 1\n        var prime_fib_n25 = 1\n        var prime_fib_n26\
    \ = 1\n        var prime_fib_n27 = 1\n        var prime_fib_n28 = 1\n        var\
    \ prime_fib_n29 = 1\n        var prime_fib_n30 = 1\n        var prime_fib_n31\
    \ = 1\n        var prime_fib_n32 = 1\n        var prime_fib_n33 = 1\n        var\
    \ prime_fib_n34 = 1\n        var prime_fib_n35 = 1\n        var prime_fib_n36\
    \ = 1\n        var prime_fib_n37 = 1\n        var prime_fib_n38 = 1\n        var\
    \ prime_fib_n39 = 1\n        var prime_fib_n40 = 1\n        var prime_fib_n41\
    \ = 1\n        var prime_fib_n42 = 1\n        var prime_fib_n43 = 1\n        var\
    \ prime_fib_n44 = 1\n        var prime_fib_n45 = 1\n        var prime_fib_n46\
    \ = 1\n        var prime_fib_n47 = 1\n        var prime_fib_n48 = 1\n        var\
    \ prime_fib_n49 = 1\n        var prime_fib_n50 = 1\n        var prime_fib_n51\
    \ = 1\n        var prime_fib_n52 = 1\n        var prime_fib_n53 = 1\n        var\
    \ prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplx8xr_u4.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmplx8xr_u4.scala:64:5 ---------------------\e[0m\e[0m\n\e[31m64 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009858
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(7) #::\
    \ scala.math.BigInt(11)\n        val prime = scala.math.BigInt(2) #:: scala.math.BigInt(3)\
    \ #:: scala.math.BigInt(5)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val isPrime = scala.collection.mutable.ListBuffer[Boolean]()\n      \
    \  val isFib = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]()\n        val isPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Boolean]\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg7z3uvmh.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36misPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.collection.mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvalue\e[0m \e[35misPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpg7z3uvmh.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36misPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.collection.mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvalue\e[0m \e[35misPrimeFib_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpg7z3uvmh.scala:6:114 ------------------------\e[0m\e[0m\n\
    \e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e[31m2\e\
    [0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e[0m) #::\
    \ scala.math.BigInt(\e[31m7\e[0m) #:: scala.math.BigInt(\e[31m11\e[0m)\n\e[31m\e\
    [31m  |\e[0m                                                                 \
    \                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                       value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg"
  stdout: ''
  timestamp: 1660009862
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2)\n        fibs(n / 2) += fibs(n / \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6iln6b_m.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \n\e[31m\e\
    [31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m          \
    \                     expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6iln6b_m.scala:6:31 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m                \
    \               ^^^^^\e[0m\n\e[31m  |\e[0m                               Found:\
    \    Long\n\e[31m  |\e[0m                               Required: Int\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6iln6b_m.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m\
    \             Found:    Long\n\e[31m  |\e[0m             Required: Int\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6iln6b_m.scala:7:28 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                            ^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Found:    Long\n\e[31m  |\e[0m\
    \                            Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp6iln6b_m.scala:8:13 ---------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m)\n\e\
    [31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m             Found: \
    \   Long\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mi"
  stdout: ''
  timestamp: 1660009871
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num = 0\n\
    \        var prime_num = 0\n        var prime_flag = 0\n        var fib_flag =\
    \ 0\n        for(i <- 1 to n){\n            fib_num = fib_num + i\n          \
    \  if(fib_num % 2 == 0){\n                fib_flag = 1\n            }\n      \
    \      else{\n                fib_flag = 0\n            }\n            if(fib_flag\
    \ == 1){\n                prime_num = prime_num + 1\n            }\n        }\n\
    \        prime_num\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgfe0gujf.scala:10:22\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009860
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1,\
    \ 2)\n        for(i <- 2 to n){\n            fibs += fibs(i-1) + fibs(i-2)\n \
    \       }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9gdv_fih.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9gdv_fih.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009863
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var i = 1\n    \
    \    while(i <= n){\n            if((b + c) % i == 0){\n                d = b\n\
    \                b = c\n                c = d\n            }\n            i +=\
    \ 1\n        }\n        return b\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpr_771x7y.scala:23)\n\tat Problem.main(tmpr_771x7y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n+1)\n        fib_array(0) = 0\n        fib_array(1) = 1\n \
    \       for(i <- 2 to n){\n            fib_array(i) = fib_array(i-1) + fib_array(i-2)\n\
    \        }\n        fib_array(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw63jrf88.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e\
    [31m  |\e[0m                                        ^^^\e[0m\n\e[31m  |\e[0m \
    \                                       Found:    Long\n\e[31m  |\e[0m       \
    \                                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpw63jrf88.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw63jrf88.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660009865
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += 0\n        primes += 1\n        for(i <- 2 to n){\n            val fib =\
    \ fib.plus(fib)\n            primes += fib\n        }\n        primes.last\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp08vlusaa.scala:10:22\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009870
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(0) = BigInt(1)\n        fibs(1) = BigInt(1)\n\
    \        fibs(2) = BigInt(2)\n        fibs.takeWhile(fibs(_) < fibs(_ + 1)).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj34xls8f.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj34xls8f.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue\
    \ update is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj34xls8f.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = BigInt(\e[31m1\e[0m)\n\e\
    [31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member\
    \ of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpj34xls8f.scala:9:8 --------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        fibs(\e[31m2\e[0m) = BigInt(\e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m\
    \        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj34xls8f.scala:10:28\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs.takeWhile(fibs(_)\
    \ < fibs(_ + \e[31m1\e[0m)).last\n\e[31m\e[31m   |\e[0m                      \
    \      ^\e[0m\n\e[31m   |\e[0m                            Found:    (_$1 : BigInt)\n\
    \e[31m   |\e[0m                            Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E081] Type Error: /tmp/tmpj34xls8f.scala:10:38 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        fibs.takeWhile(fibs(_) < fibs(_ + \e[31m1\e[0m)).last\n\
    \e[31m\e[31m   |\e[0m                                      ^\e[0m\n\e[31m   |\e\
    [0m   Missing parameter type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer\
    \ th"
  stdout: ''
  timestamp: 1660009876
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(0) = BigInt(1)\n        fibs(1) = BigInt(1)\n\
    \        fibs(2) = BigInt(1)\n        fibs.tail.foreach(fibs => fibs(n) += fibs(n\
    \ - 1))\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3oxa0k7m.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3oxa0k7m.scala:7:8\
    \ --------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue\
    \ update is not a member of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp3oxa0k7m.scala:8:8 --------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m) = BigInt(\e[31m1\e[0m)\n\e\
    [31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member\
    \ of Vector[BigInt] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp3oxa0k7m.scala:9:8 --------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        fibs(\e[31m2\e[0m) = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m\
    \        ^^^^\e[0m\n\e[31m  |\e[0mvalue update is not a member of Vector[BigInt]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp3oxa0k7m.scala:10:34\
    \ -----------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs.tail.foreach(\e\
    [36mfibs\e[0m => fibs(n) += fibs(n - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m   \
    \                               ^^^^\e[0m\n\e[31m   |\e[0m                   \
    \              \e[33mparameter\e[0m \e[35mfibs\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3oxa0k7m.scala:11:13\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        fibs(n)\n\e[31m\e[31m\
    \   |\e[0m             ^\e[0m\n\e[31m   |\e[0m             Found:    (n : Long)\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when c"
  stdout: ''
  timestamp: 1660009876
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).foreach(fibs(_)\
    \ = fibs(_ + 1) + fibs(_ + 2))\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj7jc4lk9.scala:13:38 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs.takeWhile(_ < n).foreach(fibs(_) = fibs(_\
    \ + \e[31m1\e[0m) + fibs(_ + \e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m           \
    \                           ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member\
    \ of Vector[Int] - did you mean fibs.updated?\n\e[31m\e[31m-- [E081] Type Error:\
    \ /tmp/tmpj7jc4lk9.scala:13:53 --------"
  stdout: ''
  timestamp: 1660009879
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:9:18\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        primes += prime\n\e[31m\e\
    [31m  |\e[0m                  ^^^^^\e[0m\n\e[31m  |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m  |\e[0m                  Required: Long\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:10:18 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:11:18 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:12:18 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:13:18 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:14:18 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1660009785
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num : Long\
    \ = 0\n        var prime_num : Long = 1\n        var prime_flag : Boolean = true\n\
    \        var i : Long = 1\n        while (prime_flag) {\n            if (n % i\
    \ == 0) {\n                fib_num = fib_num + i\n                prime_num =\
    \ prime_num + i\n                prime_flag = false\n            }\n         \
    \   i = i + 1\n        }\n        fib_num\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxafdooth.scala:21)\n\tat Problem.main(tmpxafdooth.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009875
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = 0\n\
    \        while(prime < n && prime != 1) {\n            if(b == c) {\n        \
    \        prime = 1\n            } else {\n                if(b > c) {\n      \
    \              c = b\n                } else {\n                    d = b\n  \
    \              }\n                prime = 0\n            }\n            if(b ==\
    \ d) {\n                prime = 1\n            } else {\n                if(b\
    \ > d) {\n                    d = b\n                } else {\n              \
    \      c = b\n                }\n                prime = 0\n            }\n  \
    \          a += 1\n            b += 1\n            c += 1\n            d += 1\n\
    \        }\n        a\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcfkgh4j7.scala:40)\n\tat Problem.main(tmpcfkgh4j7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009879
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #::\
    \ scala.math.BigInt(13) #:: scala.math.BigInt(21) #:: scala.math.BigInt(34) #::\
    \ scala.math.BigInt(55) #:: scala.math.BigInt(89) #:: scala.math.BigInt(144) #::\
    \ scala.math.BigInt(233) #:: scala.math.BigInt(377) #:: scala.math.BigInt(610)\
    \ #:: scala.math.BigInt(987) #:: scala.math.BigInt(1597) #:: scala.math.BigInt(2584)\
    \ #:: scala.math.BigInt(4181)\n        val primes = scala.collection.mutable.ArrayBuffer(2,\
    \ 3)\n        val isPrime = scala.collection.mutable.ArrayBuffer(false, false)\n\
    \        val isPrime2 = scala.collection.mutable.ArrayBuffer(false, false)\n \
    \       val isPrime3 = scala.collection.mutable.ArrayBuffer(false, false)\n  \
    \      val isPrime4 = scala.collection.mutable.ArrayBuffer(false, false)\n   \
    \     val isPrime5 = scala.collection.mutable.ArrayBuffer(false, false)\n    \
    \    val isPrime6 = scala.collection.mutable.ArrayBuffer(false, false)\n     \
    \   val isPrime7 = scala.collection.mutable.ArrayBuffer(false, false)\n      \
    \  val isPrime8 = scala.collection.mutable.ArrayBuffer(false, false)\n       \
    \ val isPrime9 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime10 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime11 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime12 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime13 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime14 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime15 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime16 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime17 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime18 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime19 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime20 = scala.collection.mutable.ArrayBuffer(false, false)\n        val\
    \ isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjeis6ncr.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjeis6ncr.scala:6:435\
    \ ------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfib\e[0m = scala.math.BigInt(\e[31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e\
    [0m) #:: scala.math.BigInt(\e[31m5\e[0m) #:: scala.math.BigInt(\e[31m8\e[0m) #::\
    \ scala.math.BigInt(\e[31m13\e[0m) #:: scala.math.BigInt(\e[31m21\e[0m) #:: scala.math.BigInt(\e\
    [31m34\e[0m) #:: scala.math.BigInt(\e[31m55\e[0m) #:: scala.math.BigInt(\e[31m89\e\
    [0m) #:: scala.math.BigInt(\e[31m144\e[0m) #:: scala.math.BigInt(\e[31m233\e[0m)\
    \ #:: scala.math.BigInt(\e[31m377\e[0m) #:: scala.math.BigInt(\e[31m610\e[0m)\
    \ #:: scala.math.BigInt(\e[31m987\e[0m) #:: scala.math.BigInt(\e[31m1597\e[0m)\
    \ #:: scala.math.BigInt(\e[31m2584\e[0m) #:: scala.math.BigInt(\e[31m4181\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                       value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjeis6ncr.scala:29:5\
    \ ---------------------\e[0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009879
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var i = 1\n    \
    \    var prime = 0\n        while(i < n) {\n            if((b + c) % 2 == 0) {\n\
    \                prime = 1\n            }\n            else {\n              \
    \  prime = 0\n            }\n            if((b + c) % 2 == 0) {\n            \
    \    a = b\n            }\n            else {\n                a = c\n       \
    \     }\n            if((b + c) % 2 == 0) {\n                b = c\n         \
    \   }\n            else {\n                b = d\n            }\n            if((b\
    \ + c) % 2 == 0) {\n                c = d\n            }\n            else {\n\
    \                c = a\n            }\n            if((b + c) % 2 == 0) {\n  \
    \              d = a\n            }\n            else {\n                d = b\n\
    \            }\n            i += 1\n        }\n        if(prime == 1) {\n    \
    \        return a\n        }\n        else {\n            return b\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpftu9f8bp.scala:53)\n\tat Problem.main(tmpftu9f8bp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009881
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        var prime_found = 0\n        var prime_found2 =\
    \ 0\n        var prime_found3 = 0\n        var prime_found4 = 0\n        var prime_found5\
    \ = 0\n        var prime_found6 = 0\n        var prime_found7 = 0\n        var\
    \ prime_found8 = 0\n        var prime_found9 = 0\n        var prime_found10 =\
    \ 0\n        var prime_found11 = 0\n        var prime_found12 = 0\n        var\
    \ prime_found13 = 0\n        var prime_found14 = 0\n        var prime_found15\
    \ = 0\n        var prime_found16 = 0\n        var prime_found17 = 0\n        var\
    \ prime_found18 = 0\n        var prime_found19 = 0\n        var prime_found20\
    \ = 0\n        var prime_found21 = 0\n        var prime_found22 = 0\n        var\
    \ prime_found23 = 0\n        var prime_found24 = 0\n        var prime_found25\
    \ = 0\n        var prime_found26 = 0\n        var prime_found27 = 0\n        var\
    \ prime_found28 = 0\n        var prime_found29 = 0\n        var prime_found30\
    \ = 0\n        var prime_found31 = 0\n        var prime_found32 = 0\n        var\
    \ prime_found33 = 0\n        var prime_found34 = 0\n        var prime_found35\
    \ = 0\n        var prime_found36 = 0\n        var prime_found37 = 0\n        var\
    \ prime_found38 = 0\n        var prime_found39 = 0\n        var prime_found40\
    \ = 0\n        var prime_found41 = 0\n        var prime_found42 = 0\n        var\
    \ prime_found43 = 0\n        var prime_found44 = 0\n        var prime_found45\
    \ = 0\n        var prime_found46 = 0\n        var prime_found47 = 0\n        var\
    \ prime_found48 = 0\n        var prime_found49 = 0\n        var prime_found50\
    \ = 0\n        var prime_found51 = 0\n        var prime_found52 = 0\n        var\
    \ prime_found53 = 0\n        var prime_found54 = 0\n        var prime_found55\
    \ = 0\n        var prime_found56 = 0\n        var prime_found57 = 0\n        var\
    \ prime_found58 = 0\n        var prime_found59 = 0\n        var prime_found60\
    \ = 0\n        var prime_found61 = 0\n        var prime_found62 = 0\n        var\
    \ prime_found63 = 0\n        var prime_found64 = 0\n        var prime_found65\
    \ = 0\n        var prime_found66 = 0\n        var prime_found67 = 0\n        var\
    \ prime_found68 = 0\n        var prime_found69 = 0\n        var prime_found70\
    \ = 0\n        var prime_found71 = 0\n        var prime_found72 = 0\n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5fuz67ho.scala:81:5\
    \ ---------------------\e[0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009832
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) -= 1\n        fibs(n) -= 1\n  \
    \      fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n   \
    \     fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n) -= 1\n        fibs(n)\
    \ -= 1\n        fibs(n) -= 1\n        fib\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyh09jlzz.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpyh09jlzz.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpyh09jlzz.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) -= \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m\
    \             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m\
    \  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpyh09jlzz.scala:8:13 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) -= \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m             ^\e\
    [0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m         \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyh09jlzz.scala:9:13\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        fibs(n) -= \e[31m1\e\
    [0m\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:\
    \    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-expl"
  stdout: ''
  timestamp: 1660009890
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        for(i <- 1 to n) {\n            c +=\
    \ 1\n            if((b * c) % a == 0) {\n                a = b\n             \
    \   b = c\n            }\n        }\n        return b\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpujmloo58.scala:9:22\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009880
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) -= 1\n        fibs(n) += fibs(n\
    \ - 1)\n        fibs(n).sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfjjwj8hj.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfjjwj8hj.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) -= \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m\
    \             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m\
    \  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:8:13 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \       ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\e[31m  |\e[0m\
    \             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfjjwj8hj.scala:8:24 ---------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                  ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:  \
    \  Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m long"
  stdout: ''
  timestamp: 1660009821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        val fib = 0\n        while (fib\
    \ < n) {\n            fibs += fib\n            fib += 1\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp70037h4s.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp70037h4s.scala:12:16 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m            fib += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean fib.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660009881
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = true\n\
    \        var fib = 0\n        while (prime && fib < n) {\n            prime =\
    \ false\n            fib += c\n            c += d\n            d += a\n      \
    \      a += b\n            b += c\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv7qgmdla.scala:24)\n\tat Problem.main(tmpv7qgmdla.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009883
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        val i = 2\n        while (fibs.size\
    \ < n) {\n            fibs += fibs(i - 1) + fibs(i - 2)\n            i += 1\n\
    \        }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe9682ut7.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpe9682ut7.scala:12:14 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean i.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660009882
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibonacci =\
    \ mutable.ListBuffer[Long]()\n        fibonacci += 0\n        fibonacci += 1\n\
    \        fibonacci += 2\n        fibonacci.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmple_ins4h.scala:6:24 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009873
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibonacci =\
    \ mutable.ArrayBuffer(1,1)\n        fibonacci.update(0, 2)\n        fibonacci.update(1,\
    \ 1)\n        fibonacci.update(n-1, fibonacci(n-2) + fibonacci(n-1))\n       \
    \ fibonacci.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9btorn24.scala:6:24 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1660009876
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](5)\n        fib_array(0) = 1\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwbchr5qj.scala:73:8 -------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009785
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ - 1)(Vector.fill(n - 2)(0 +: 1 +: 0))\n        fibs(n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpth1lvzc9.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n - \e[31m1\e[0m)(Vector.fill(n - \e[31m2\e[0m)(\e[31m0\e[0m\
    \ +: \e[31m1\e[0m +: \e[31m0\e[0m))\n\e[31m\e[31m  |\e[0m                    \
    \           ^^^^^\e[0m\n\e[31m  |\e[0m                               Found:  \
    \  Long\n\e[31m  |\e[0m                               Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpth1lvzc9.scala:6:50 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ - \e[31m1\e[0m)(Vector.fill(n - \e[31m2\e[0m)(\e[31m0\e[0m +: \e[31m1\e[0m +:\
    \ \e[31m0\e[0m))\n\e[31m\e[31m  |\e[0m                                       \
    \           ^^^^^\e[0m\n\e[31m  |\e[0m                                       \
    \           Found:    Long\n\e[31m  |\e[0m                                   \
    \               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpth1lvzc9.scala:6:64 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n - \e[31m1\e[0m)(Vector.fill(n\
    \ - \e[31m2\e[0m)(\e[31m0\e[0m +: \e[31m1\e[0m +: \e[31m0\e[0m))\n\e[31m\e[31m\
    \  |\e[0m                                                                ^^^^\e\
    [0m\n\e[31m  |\e[0m                                           value +: is not\
    \ a member of Int\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpth1lvzc9.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n).last\n\e[31m\e\
    [31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009886
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1,\
    \ 2)\n        while (fibs.size < n) {\n            fibs += fibs.head + fibs.last\n\
    \        }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpstm1cus9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009878
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = true\n        while (prime && fib < n) {\n            prime\
    \ = fib == 0 || fib == 1 || fib == n\n            fib = fib + fib\n        }\n\
    \        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2dhcaeax.scala:16)\n\tat Problem.main(tmp2dhcaeax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009887
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](5)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        val fib_array_size = fib_array.length\n    \
    \    var fib_array_index = 0\n        var fib_array_value = fib_array(fib_array_index)\n\
    \        var fib_array_index_temp = 0\n        var fib_array_value_temp = fib_array(fib_array_index)\n\
    \        while (fib_array_index < fib_array_size) {\n            fib_array_index_temp\
    \ = fib_array_index\n            fib_array_value_temp = fib_array(fib_array_index)\n\
    \            fib_array_index = fib_array_index_temp + 1\n            fib_array(fib_array_index_temp)\
    \ = fib_array_value_temp + fib_array_value_temp\n        }\n        if (fib_array_index\
    \ == fib_array_size) {\n            fib_array_index = fib_array_index + 1\n  \
    \      }\n        if (fib_array_index == fib_array_size) {\n            fib_array_index\
    \ = fib_array_index + 1\n        }\n        if (fib_array_index == fib_array_size)\
    \ {\n            fib_array_index = fib_array_index + 1\n        }\n        if\
    \ (fib_array_index == fib_array_size) {\n            fib_array_index = fib_array_index\
    \ + 1\n        }\n        if (fib_array_index == fib_array_size) {\n         \
    \   fib_array_index = fib_array_index + 1\n        }\n        if (fib_array_index\
    \ == fib_array_size) {\n            fib_array_index = fib_array_index + 1\n  \
    \      }\n        if (fib_array_index == fib_array_size) {\n            fib_array_index\
    \ = fib_array_index + 1\n        }\n        if (fib_array_index == fib_array_size)\
    \ {\n            fib_array_index = fib_array_index + 1\n        }\n        if\
    \ (fib_array_index == fib_array_size) {\n            fib_array_index = fib_array_index\
    \ + 1\n        }\n        if (fib_array_index == fib_array_size) {\n         \
    \   fib_array_index = fib_array_index + 1\n        }\n        if (fib_array_index\
    \ == fib_array_size) {\n            fib_array_index = fib_array_index + 1\n  \
    \      }\n        if (fib_array_index == fib_array_size) {\n            fib_array_index\
    \ = fib_array_index + 1\n        }\n        if (fib_array_index == fib_array_size)\
    \ {\n            fib_array_index = fib_array_index + 1\n        }\n        if\
    \ (fib_array_index == fib_array_size) {\n            fib_array_index = fib_array_index\
    \ + 1\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprs17sz93.scala:81:0 ----------------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprs17sz93.scala:80:1\
    \ ---------------------\e[0m\e[0m\n\e[31m80 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: Long\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmprs17sz93.scala:67:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m67 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n2 errors found\n"
  stdout: ''
  timestamp: 1660009887
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += 0\n        primes += 1\n        val i = 2\n        while (i < n) {\n    \
    \        val fib = fib.plus(fib)\n            val prime = fib.mod(scala.math.BigInt(n))\n\
    \            primes += prime\n            i += 1\n        }\n        primes.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpqw340pgo.scala:12:22 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mfib\e[0m = fib.plus(fib)\n\
    \e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m           \
    \           Recursive \e[33mvalue\e[0m \e[35mfib\e[0m needs type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqw340pgo.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660009887
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        val primes = Vector.fill(n / 2)(2)\
    \ ++ Vector.fill(n / 2)(3)\n        val fib = fibs(n-1)\n        val prime = primes(n-1)\n\
    \        if (fib == 0 || fib == 1) prime\n        else if (fib > prime) fib else\
    \ prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb4hsja_n.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpb4hsja_n.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb4hsja_n.scala:7:33\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m3\e[0m)\n\e[31m\e[31m  |\e[0m                                 ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                 Found:    Long\n\e[31m  |\e\
    [0m                                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpb4hsja_n.scala:7:58 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m2\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m3\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \ ^^^^^\e[0m\n\e[31m  |\e[0m                                                 \
    \         Found:    Long\n\e[31m  |\e[0m                                     \
    \                     Required: Int\n\e[31m  |"
  stdout: ''
  timestamp: 1660009891
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8zzbb8m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009884
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = true\n\
    \        var fib = 0\n        var fib2 = 1\n        var fib3 = 1\n        var\
    \ fib4 = 2\n        var fib5 = 2\n        var fib6 = 2\n        var fib7 = 2\n\
    \        var fib8 = 2\n        var fib9 = 2\n        var fib10 = 2\n        var\
    \ fib11 = 2\n        var fib12 = 2\n        var fib13 = 2\n        var fib14 =\
    \ 2\n        var fib15 = 2\n        var fib16 = 2\n        var fib17 = 2\n   \
    \     var fib18 = 2\n        var fib19 = 2\n        var fib20 = 2\n        var\
    \ fib21 = 2\n        var fib22 = 2\n        var fib23 = 2\n        var fib24 =\
    \ 2\n        var fib25 = 2\n        var fib26 = 2\n        var fib27 = 2\n   \
    \     var fib28 = 2\n        var fib29 = 2\n        var fib30 = 2\n        var\
    \ fib31 = 2\n        var fib32 = 2\n        var fib33 = 2\n        var fib34 =\
    \ 2\n        var fib35 = 2\n        var fib36 = 2\n        var fib37 = 2\n   \
    \     var fib38 = 2\n        var fib39 = 2\n        var fib40 = 2\n        var\
    \ fib41 = 2\n        var fib42 = 2\n        var fib43 = 2\n        var fib44 =\
    \ 2\n        var fib45 = 2\n        var fib46 = 2\n        var fib47 = 2\n   \
    \     var fib48 = 2\n        var fib49 = 2\n        var fib50 = 2\n        var\
    \ fib51 = 2\n        var fib52 = 2\n        var fib53 = 2\n        var fib54 =\
    \ 2\n        var fib55 = 2\n        var fib56 = 2\n        var fib57 = 2\n   \
    \     var fib58 = 2\n        var fib59 = 2\n        var fib60 = 2\n        var\
    \ fib61 = 2\n        var fib62 = 2\n        var fib63 = 2\n        var fib64 =\
    \ 2\n        var fib65 = 2\n        var fib66 = 2\n        var fib67 = 2\n   \
    \     var fib68 = 2\n        var fib69 = 2\n        var fib70 = 2\n        var\
    \ fib71 = 2\n        var fib72 = 2\n        var fib73 = 2\n        var fib74 =\
    \ 2\n        var fib75 = 2\n        var fib76 = 2\n        var fib77 = 2\n   \
    \     var fib78 = 2\n        var fib79 = 2\n        var fib80 = 2\n        var\
    \ fib81 = 2\n        var fib82 = 2\n        var fib83 = 2\n        var fib84 =\
    \ 2\n        var fib85 = 2\n        var fib86 = 2\n        var fib87 = 2\n   \
    \     var fib88 = 2\n        var fib89 = 2\n        var fib90 = 2\n        var\
    \ fib91 = 2\n        var fib92 = 2\n        var fib93 = 2\n        var fib94 =\
    \ 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprukymgb6.scala:105:5\
    \ --------------------\e[0m\e[0m\n\e[31m105 |\e[0m    }\n\e[31m\e[31m    |\e[0m\
    \     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required:\
    \ Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009892
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        while(c < n){\n            if(b == 1){\n                prime = 1\n \
    \           }\n            else{\n                prime = 0\n            }\n \
    \           if((b * c) % d == 0){\n                prime = 1\n            }\n\
    \            else{\n                prime = 0\n            }\n            c +=\
    \ 1\n            a += 1\n            b += 1\n            d += 1\n        }\n \
    \       a\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxny9pqes.scala:32)\n\tat Problem.main(tmpxny9pqes.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009896
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:9:18\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        primes += prime\n\e[31m\e\
    [31m  |\e[0m                  ^^^^^\e[0m\n\e[31m  |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m  |\e[0m                  Required: Long\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:10:18 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:11:18 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:12:18 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:13:18 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:14:18 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1660009785
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num : Long\
    \ = 0\n        var prime_num : Long = 1\n        var i : Long = 2\n        while\
    \ (i <= n) {\n            fib_num = fib_num + prime_num\n            prime_num\
    \ = prime_num + 2\n            i = i + 1\n        }\n        return fib_num\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpaef2gpkp.scala:17)\n\tat Problem.main(tmpaef2gpkp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009896
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ isPrime = true\n        for(i <- 1 to n){\n            val isPrime = fib % i\
    \ ==0\n            if(isPrime){\n                primes += i\n            }\n\
    \            fib = fib + i\n        }\n        primes.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm5m6oblp.scala:9:22\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpm5m6oblp.scala:14:16\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            fib = fib\
    \ + i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \          Reassignment to val fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009897
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #::\
    \ scala.math.BigInt(13) #:: scala.math.BigInt(21) #:: scala.math.BigInt(55) #::\
    \ scala.math.BigInt(89) #:: scala.math.BigInt(144)\n        val prime = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #::\
    \ scala.math.BigInt(13) #:: scala.math.BigInt(21) #:: scala.math.BigInt(55) #::\
    \ scala.math.BigInt(89) #:: scala.math.BigInt(144)\n        val primes = scala.collection.mutable.ArrayBuffer(prime)\n\
    \        val fibs = scala.collection.mutable.ArrayBuffer(fib)\n        val fibPrimes\
    \ = scala.collection.mutable.ArrayBuffer(prime)\n        val fibPrime = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #::\
    \ scala.math.BigInt(13) #:: scala.math.BigInt(21) #:: scala.math.BigInt(55) #::\
    \ scala.math.BigInt(89) #:: scala.math.BigInt(144)\n        val fibPrimes = scala.collection.mutable.ArrayBuffer(fibPrime)\n\
    \        val fibPrime = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\
    \ #:: scala.math.BigInt(8) #:: scala.math.BigInt(13) #:: scala.math.BigInt(21)\
    \ #:: scala.math.BigInt(55) #:: scala.math.BigInt(89) #:: scala.math.BigInt(144)\n\
    \        val fibPrimes = scala.collection.mutable.ArrayBuffer(fibPrime)\n    \
    \    val fibPrime = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scala.math.BigInt(5)\
    \ #:: scala.math.BigInt(8) #:: scala.math.BigInt(13) #:: scala.math.BigInt(21)\
    \ #:: scala.math.BigInt(55) #:: scala.math.BigInt(89) #:: scala.math.BigInt(144)\n\
    \        val fibPrimes = scala.collection.mutable.ArrayBuffer(fibPrime)\n    \
    \    val fibPrime = scala.math.BigInt(2) #:: scala.math.BigInt(3) #:: scal\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppxbt0y24.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibPrimes\e[0m = scala.collection.mutable.ArrayBuffer(fibPrime)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibPrimes is already defined as \e[33mvalue\e[0m \e[35mfibPrimes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppxbt0y24.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36mfibPrime\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e\
    [0m) #:: scala.math.BigInt(\e[31m8\e[0m) #:: scala.math.BigInt(\e[31m13\e[0m)\
    \ #:: scala.math.BigInt(\e[31m21\e[0m) #:: scala.math.BigInt(\e[31m55\e[0m) #::\
    \ scala.math.BigInt(\e[31m89\e[0m) #:: scala.math.BigInt(\e[31m144\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibPrime is already defined as \e[33mvalue\e[0m \e[35mfibPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppxbt0y24.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mfibPrimes\e[0m = scala.collection.mutable.ArrayBuffer(fibPrime)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibPrimes is already defined as \e[33mvalue\e[0m \e[35mfibPrimes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppxbt0y24.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36m"
  stdout: ''
  timestamp: 1660009902
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpvs_coti9.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvs_coti9.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009856
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1,\
    \ 2)\n        while (fibs.size < n) {\n            fibs += fibs.last\n       \
    \ }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9afyaagp.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        while (prime == 0) {\n            if (n % a == 0) {\n               \
    \ prime = 1\n            }\n            else if (n % b == 0) {\n             \
    \   prime = 1\n            }\n            else if (n % c == 0) {\n           \
    \     prime = 1\n            }\n            else if (n % d == 0) {\n         \
    \       prime = 1\n            }\n            else {\n                a = a +\
    \ b\n                b = b + c\n                c = c + d\n                d =\
    \ d + a\n            }\n        }\n        return a\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcl7xuyxk.scala:35)\n\tat Problem.main(tmpcl7xuyxk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009899
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657775\n        fibs += 225851433717\n\
    \        fibs += 365435296162\n        fibs += 591286729879\n        fibs += 956722026041\n\
    \        fibs += 1548008755920\n        fibs += 2504730781961\n        fibs +=\
    \ 4052739537881\n        fibs += 6557470319842\n        fibs += 10610209857723\n\
    \        fibs += 17167680177565\n        fibs += 26966537677493\n        fibs\
    \ += 43336908854683\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpch8dwn7f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009893
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ isPrime = true\n        for(i <- 1 to n){\n            val isPrime = fib % i\
    \ == 0\n            if(isPrime){\n                primes += i\n            }\n\
    \            fib = fib + i\n        }\n        primes.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpubbxst1_.scala:9:22\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpubbxst1_.scala:14:16\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            fib = fib\
    \ + i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \          Reassignment to val fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009901
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #::\
    \ scala.math.BigInt(13) #:: scala.math.BigInt(21) #:: scala.math.BigInt(34) #::\
    \ scala.math.BigInt(55) #:: scala.math.BigInt(89) #:: scala.math.BigInt(144) #::\
    \ scala.math.BigInt(233) #:: scala.math.BigInt(377) #:: scala.math.BigInt(610)\
    \ #:: scala.math.BigInt(987) #:: scala.math.BigInt(1597) #:: scala.math.BigInt(2584)\
    \ #:: scala.math.BigInt(4181)\n        val prime = scala.math.BigInt(2) #:: scala.math.BigInt(3)\
    \ #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #:: scala.math.BigInt(13)\
    \ #:: scala.math.BigInt(21) #:: scala.math.BigInt(34) #:: scala.math.BigInt(55)\
    \ #:: scala.math.BigInt(89) #:: scala.math.BigInt(144) #:: scala.math.BigInt(233)\
    \ #:: scala.math.BigInt(377) #:: scala.math.BigInt(610) #:: scala.math.BigInt(987)\
    \ #:: scala.math.BigInt(1597) #:: scala.math.BigInt(2584) #:: scala.math.BigInt(4181)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fib_prime = fib #:: prime\n        val fib_primes = fib_prime #:: primes\n \
    \       val fib_primes_size = fib_primes.size\n        val fib_primes_size_2 =\
    \ fib_primes_size // 2\n        val fib_primes_size_3 = fib_primes_size_2 // 3\n\
    \        val fib_primes_size_4 = fib_primes_size_3 // 4\n        val fib_primes_size_5\
    \ = fib_primes_size_4 // 5\n        val fib_primes_size_6 = fib_primes_size_5\
    \ // 6\n        val fib_primes_size_7 = fib_primes_size_6 // 7\n        val fib_primes_size_8\
    \ = fib_primes_size_7 // 8\n        val fib_primes_size_9 = fib_primes_size_8\
    \ // 9\n        val fib_primes_size_10 = fib_primes_size_9 // 10\n        val\
    \ fib_primes_size_11 = fib_primes_size_10 // 11\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsizlnfh4.scala:6:435 ------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e\
    [0m) #:: scala.math.BigInt(\e[31m8\e[0m) #:: scala.math.BigInt(\e[31m13\e[0m)\
    \ #:: scala.math.BigInt(\e[31m21\e[0m) #:: scala.math.BigInt(\e[31m34\e[0m) #::\
    \ scala.math.BigInt(\e[31m55\e[0m) #:: scala.math.BigInt(\e[31m89\e[0m) #:: scala.math.BigInt(\e\
    [31m144\e[0m) #:: scala.math.BigInt(\e[31m233\e[0m) #:: scala.math.BigInt(\e[31m377\e\
    [0m) #:: scala.math.BigInt(\e[31m610\e[0m) #:: scala.math.BigInt(\e[31m987\e[0m)\
    \ #:: scala.math.BigInt(\e[31m1597\e[0m) #:: scala.math.BigInt(\e[31m2584\e[0m)\
    \ #:: scala.math.BigInt(\e[31m4181\e[0m)\n\e[31m\e[31m  |\e[0m               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                                       value #:: is not a member of\
    \ BigInt\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsizlnfh4.scala:7:437\
    \ ------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mprime\e[0m = scala.math.BigInt(\e[31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e\
    [0m) #:: scala.math.BigInt(\e[31m5\e[0m) #:: scala.math.BigInt(\e[31m8\e[0m) #::\
    \ scala.math.BigInt(\e[31m13\e[0m) #:: scala.math.BigInt(\e[31m21\e[0m) #:: scala.math.BigInt(\e\
    [31m34\e[0m) #:: scala.math.BigInt(\e[31m55\e[0m) #:: scala.math.BigInt(\e[31m89\e\
    [0m) #:: scala.math.BigInt(\e[31m144\e[0m) #:: scala.math.BigInt(\e[31m233\e[0m)\
    \ #:: scala.math.BigInt(\e[31m377\e[0m) #:: scala.math.BigInt(\e[31m610\e[0m)\
    \ #:: scala.math.BigInt(\e[31m987\e[0m) #:: scala.math.BigInt(\e[31m1597\e[0m)\
    \ #:: scala.math.BigInt(\e[31m2584\e[0m) #:: scala.math.BigInt("
  stdout: ''
  timestamp: 1660009905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 2)\n        fibs(n)\
    \ += fibs(n - 1)\n        fibs(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjxle4ymr.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpjxle4ymr.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpjxle4ymr.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m\
    \  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpjxle4ymr.scala:7:24 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e\
    [0m                        ^^^^^\e[0m\n\e[31m  |\e[0m                        Found:\
    \    Long\n\e[31m  |\e[0m                        Required: Int\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjxle4ymr.scala:8:13 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m\
    \  |\e[0m             ^\e[0m\n\e[31m  |\e[0m             Found:    (n : Long)\n\
    \e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs\
    \ += fib\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpx69272n0.scala:101:17 --------------------------\e\
    [0m\e[0m\n\e[31m101 |\e[0m        primes += \n\e[31m\e[31m    |\e[0m         \
    \        ^\e[0m\n\e[31m    |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx69272n0.scala:10:16\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs += fib\n\e[31m\e\
    [31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m                Found: \
    \   (fib : BigInt)\n\e[31m   |\e[0m                Required: Long\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx69272n0.scala:11:18 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpx69272n0.scala:12:18 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpx69272n0.scala:13:18 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpx69272n0.scala:14:18 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prim"
  stdout: ''
  timestamp: 1660009912
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0 -> 1)\n        fibs(n / 2) match {\n            case 0 => fibs(n / 2)\n\
    \            case 1 => n\n            case _ => fibs(n / 2) match {\n        \
    \        case 0 => fibs(n / 2) + 1\n                case 1 => n\n            \
    \    case _ => fibs(n / 2) match {\n                    case 0 => fibs(n / 2)\
    \ + 1\n                    case 1 => n\n                    case _ => fibs(n /\
    \ 2) match {\n                        case 0 => fibs(n / 2) + 1\n            \
    \            case 1 => n\n                        case _ => fibs(n / 2) match\
    \ {\n                            case 0 => fibs(n / 2) + 1\n                 \
    \           case 1 => n\n                            case _ => fibs(n / 2) match\
    \ {\n                                case 0 => fibs(n / 2) + 1\n             \
    \                   case 1 => n\n                                case _ => fibs(n\
    \ / 2) match {\n                                    case 0 => fibs(n / 2) + 1\n\
    \                                    case 1 => n\n                           \
    \         case _ => fibs(n / 2) match {\n                                    \
    \    case 0 => fibs(n / 2) + 1\n                                        case 1\
    \ => n\n                                        case _ => fibs(n / 2) match {\n\
    \                                            case 0 => fibs(n / 2) + 1\n     \
    \                                       case 1 => n\n                        \
    \                    case _ => fibs(n / 2) match {\n                         \
    \                       case 0 => fibs(n / 2) + 1\n                          \
    \                      case 1 => n\n                                         \
    \       case _ => fibs(n / 2) match {\n                                      \
    \              case 0 => fibs(n / 2) + 1\n                                   \
    \                 case 1 => n\n                                              \
    \      case _ => fibs(n / 2) match {\n                                       \
    \                 case 0 => fibs(n / 2) + 1\n                                \
    \                        case 1 => n\n                                       \
    \                 case _ => fibs(n / 2) match {\n                            \
    \                                case 0 => fibs(n / 2) + 1\n                 \
    \                                           case 1 => n\n                    \
    \                                        case _ => fibs(n / 2) match {\n     \
    \                                                           case 0 => fibs(n /\
    \ 2) + 1\n                                                                case\
    \ 1 => n\n                                                                case\
    \ _ => fibs(n / 2) match {\n                                                 \
    \                   case 0 => fibs(n / 2) + 1\n                              \
    \                                      case 1 => n\n                         \
    \                                           case _ => fibs(n / 2) match {\n  \
    \                                                                      case 0\
    \ => fibs(n / 2) + 1\n                                                       \
    \                 case 1 => n\n                                              \
    \                          case _ => fibs(n / 2) match {\n                   \
    \                                                         case 0 => fibs(n / 2)\
    \ + 1\n                                                                      \
    \      case 1 => n\n                                                         \
    \                   case _ => fibs(n / 2) match {\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo5a5e373.scala:59:4 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    'case' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo5a5e373.scala:74:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m74 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpo5a5e373.scala:6:31 ---------------------\e[0m\e[0m\n\
    \e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m0\e[0m -> \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                     \
    \          ^^^^^\e[0m\n\e[31m  |\e[0m                               Found:   \
    \ Long\n\e[31m  |\e[0m                               Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo5a5e373.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n / \e[31m2\e[0m) \e[33mmatch\e[0m {\n\e\
    [31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m             Found: \
    \   Long\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ Error: /tmp/tmpo5a5e373.scala:8:17 ------------------------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33mcase\e[0m \e[31m0\e[0m => fibs(n / \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                 ^\e[0m\n\e[31m  |\e[0m     \
    \  Values of types Int and (Int, Int) cannot be compared with == or !=\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpo5a5e373.scala:8:27 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33mcase\e[0m \e[31m0\e[0m => fibs(n / \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                           ^^^^^\e[0m\n\e[31m\
    \  |\e[0m                           Found:    Long\n\e[31m  |\e[0m           \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpo5a5e373.scala:9:17\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m9 |\e[0m       \
    \     \e[33mcase\e[0"
  stdout: ''
  timestamp: 1660009912
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:9:18\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        primes += prime\n\e[31m\e\
    [31m  |\e[0m                  ^^^^^\e[0m\n\e[31m  |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m  |\e[0m                  Required: Long\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:10:18 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:11:18 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:12:18 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:13:18 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:14:18 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1660009785
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     for(i <- 2 to n) {\n            fib_array(i) = fib_array(i-1) + fib_array(i-2)\n\
    \        }\n        fib_array(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu5dxl2qr.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpu5dxl2qr.scala:9:22 ---------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu5dxl2qr.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1,\
    \ 2)\n        for(i <- 2 to n){\n            fibs += fibs.last\n        }\n  \
    \      fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnzrud3ds.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpnzrud3ds.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(0)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3)\
    \ = 1\n        fibs(4) = 1\n        fibs(5) = 1\n        fibs(6) = 1\n       \
    \ fibs(7) = 1\n        fibs(8) = 1\n        fibs(9) = 1\n        fibs(10) = 1\n\
    \        fibs(11) = 1\n        fibs(12) = 1\n        fibs(13) = 1\n        fibs(14)\
    \ = 1\n        fibs(15) = 1\n        fibs(16) = 1\n        fibs(17) = 1\n    \
    \    fibs(18) = 1\n        fibs(19) = 1\n        fibs(20) = 1\n        fibs(21)\
    \ = 1\n        fibs(22) = 1\n        fibs(23) = 1\n        fibs(24) = 1\n    \
    \    fibs(25) = 1\n        fibs(26) = 1\n        fibs(27) = 1\n        fibs(28)\
    \ = 1\n        fibs(29) = 1\n        fibs(30) = 1\n        fibs(31) = 1\n    \
    \    fibs(32) = 1\n        fibs(33) = 1\n        fibs(34) = 1\n        fibs(35)\
    \ = 1\n        fibs(36) = 1\n        fibs(37) = 1\n        fibs(38) = 1\n    \
    \    fibs(39) = 1\n        fibs(40) = 1\n        fibs(41) = 1\n        fibs(42)\
    \ = 1\n        fibs(43) = 1\n        fibs(44) = 1\n        fibs(45) = 1\n    \
    \    fibs(46) = 1\n        fibs(47) = 1\n        fibs(48) = 1\n        fibs(49)\
    \ = 1\n        fibs(50) = 1\n        fibs(51) = 1\n        fibs(52) = 1\n    \
    \    fibs(53) = 1\n        fibs(54) = 1\n        fibs(55) = 1\n        fibs(56)\
    \ = 1\n        fibs(57) = 1\n        fibs(58) = 1\n        fibs(59) = 1\n    \
    \    fibs(60) = 1\n        fibs(61) = 1\n        fibs(62) = 1\n        fibs(63)\
    \ = 1\n        fibs(64) = 1\n        fibs(65) = 1\n        fibs(66) = 1\n    \
    \    fibs(67) = 1\n        fibs(68) = 1\n        fibs(69) = 1\n        fibs(70)\
    \ = 1\n        fibs(71) = 1\n        fibs(72) = 1\n        fibs(73) = 1\n    \
    \    fibs(74) = 1\n        fibs(75) = 1\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:8:8\
    \ --------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \  |\e[0m        ^^^^\e[0m\n\e[31m  |\e[0m  value update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:10:8\
    \ -------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:11:8 -------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:12:8\
    \ -------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:13:8 -------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs(\e[31m6\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ajftth.scala:14:8\
    \ -------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        fibs(\e[31m7\e[0m)\
    \ = \e[31m1\e[0m\n\e[31"
  stdout: ''
  timestamp: 1660009856
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n\
    \        while(fibs.size < n){\n            fibs += fibs.last\n        }\n   \
    \     fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wa6foe8.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009897
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        var prime_found = 0\n        var prime_found2 =\
    \ 0\n        var prime_found3 = 0\n        var prime_found4 = 0\n        var prime_found5\
    \ = 0\n        var prime_found6 = 0\n        var prime_found7 = 0\n        var\
    \ prime_found8 = 0\n        var prime_found9 = 0\n        var prime_found10 =\
    \ 0\n        var prime_found11 = 0\n        var prime_found12 = 0\n        var\
    \ prime_found13 = 0\n        var prime_found14 = 0\n        var prime_found15\
    \ = 0\n        var prime_found16 = 0\n        var prime_found17 = 0\n        var\
    \ prime_found18 = 0\n        var prime_found19 = 0\n        var prime_found20\
    \ = 0\n        var prime_found21 = 0\n        var prime_found22 = 0\n        var\
    \ prime_found23 = 0\n        var prime_found24 = 0\n        var prime_found25\
    \ = 0\n        var prime_found26 = 0\n        var prime_found27 = 0\n        var\
    \ prime_found28 = 0\n        var prime_found29 = 0\n        var prime_found30\
    \ = 0\n        var prime_found31 = 0\n        var prime_found32 = 0\n        var\
    \ prime_found33 = 0\n        var prime_found34 = 0\n        var prime_found35\
    \ = 0\n        var prime_found36 = 0\n        var prime_found37 = 0\n        var\
    \ prime_found38 = 0\n        var prime_found39 = 0\n        var prime_found40\
    \ = 0\n        var prime_found41 = 0\n        var prime_found42 = 0\n        var\
    \ prime_found43 = 0\n        var prime_found44 = 0\n        var prime_found45\
    \ = 0\n        var prime_found46 = 0\n        var prime_found47 = 0\n        var\
    \ prime_found48 = 0\n        var prime_found49 = 0\n        var prime_found50\
    \ = 0\n        var prime_found51 = 0\n        var prime_found52 = 0\n        var\
    \ prime_found53 = 0\n        var prime_found54 = 0\n        var prime_found55\
    \ = 0\n        var prime_found56 = 0\n        var prime_found57 = 0\n        var\
    \ prime_found58 = 0\n        var prime_found59 = 0\n        var prime_found60\
    \ = 0\n        var prime_found61 = 0\n        var prime_found62 = 0\n        var\
    \ prime_found63 = 0\n        var prime_found64 = 0\n        var prime_found65\
    \ = 0\n        var prime_found66 = 0\n        var prime_found67 = 0\n        var\
    \ prime_found68 = 0\n        var prime_found69 = 0\n        var prime_found70\
    \ = 0\n        var prime_found71 = 0\n        var prime_found72 = 0\n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5fuz67ho.scala:81:5\
    \ ---------------------\e[0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009832
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var prime = true\n\
    \        while(prime && n > 0) {\n            if(n%a == 0 || n%b == 0 || n%c ==\
    \ 0 || n%d==0) {\n                prime = false\n            }\n            else\
    \ {\n                a = b\n                b = c\n                c = d\n   \
    \             d = n\n            }\n            n -= 1\n        }\n        if(prime)\
    \ {\n            return n\n        }\n        else {\n            return -1\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8huab4kc.scala:19:20\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                d = n\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Found:\
    \    (n : Long)\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8huab4kc.scala:21:14 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660009907
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 0\n        var n1 = n\n   \
    \     var n2 = n\n        var n3 = n\n        var n4 = n\n        var n5 = n\n\
    \        var n6 = n\n        var n7 = n\n        var n8 = n\n        var n9 =\
    \ n\n        var n10 = n\n        var n11 = n\n        var n12 = n\n        var\
    \ n13 = n\n        var n14 = n\n        var n15 = n\n        var n16 = n\n   \
    \     var n17 = n\n        var n18 = n\n        var n19 = n\n        var n20 =\
    \ n\n        var n21 = n\n        var n22 = n\n        var n23 = n\n        var\
    \ n24 = n\n        var n25 = n\n        var n26 = n\n        var n27 = n\n   \
    \     var n28 = n\n        var n29 = n\n        var n30 = n\n        var n31 =\
    \ n\n        var n32 = n\n        var n33 = n\n        var n34 = n\n        var\
    \ n35 = n\n        var n36 = n\n        var n37 = n\n        var n38 = n\n   \
    \     var n39 = n\n        var n40 = n\n        var n41 = n\n        var n42 =\
    \ n\n        var n43 = n\n        var n44 = n\n        var n45 = n\n        var\
    \ n46 = n\n        var n47 = n\n        var n48 = n\n        var n49 = n\n   \
    \     var n50 = n\n        var n51 = n\n        var n52 = n\n        var n53 =\
    \ n\n        var n54 = n\n        var n55 = n\n        var n56 = n\n        var\
    \ n57 = n\n        var n58 = n\n        var n59 = n\n        var n60 = n\n   \
    \     var n61 = n\n        var n62 = n\n        var n63 = n\n        var n64 =\
    \ n\n        var n65 = n\n        var n66 = n\n        var n67 = n\n        var\
    \ n68 = n\n        var n69 = n\n        var n70 = n\n        var n71 = n\n   \
    \     var n72 = n\n        var n73 = n\n        var n74 = n\n        var n75 =\
    \ n\n        var n76 = n\n        var n77 = n\n        var n78 = n\n        var\
    \ n79 = n\n        var n80 = n\n        var n81 = n\n        var n82 = n\n   \
    \     var n83 = n\n        var n84 = n\n        var n85 = n\n        var n86 =\
    \ n\n        var n87 = n\n        var n88 = n\n        var n89 = n\n        var\
    \ n90 = n\n        var n91 = n\n        var n92 = n\n        var n93 = n\n   \
    \     var n94 = n\n        var n95\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7f2d5k4p.scala:105:4 ---------------------------\e\
    [0m\e[0m\n\e[31m105 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp7f2d5k4p.scala:105:5 --------------------\e[0m\e[0m\n\e[31m105 |\e[0m\
    \    }\n\e[31m\e[31m    |\e[0m     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\
    \e[31m    |\e[0m     Required: Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_n = 0\n\
    \        var prime_n = 0\n        var prime_fib_n = 0\n        var prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_n = 0\n        var prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_n = 0\n        var prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_n = 0\n        var\
    \ prime_fib_prime_fib_prime_fib_prime_fib_prime_n = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n =\
    \ 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fi\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp435tno2x.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp435tno2x.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mprime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp435tno2x.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mvar\e[0m \e[36mprime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp435tno2x.scala:28:5 ---------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009908
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8zzbb8m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009884
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(BigInt(2))\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2)\
    \ += fibs(n / 2 - 2)\n        fibs(n / 2) += fibs(n / 2 - 3)\n        fibs(n /\
    \ 2) += fibs(n / 2 - 4)\n        fibs(n / 2) += fibs(n / 2 - 5)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 6)\n        fibs(n / 2) += fibs(n / 2 - 7)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 8)\n        fibs(n / 2) += fibs(n / 2 - 9)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 10)\n        fibs(n / 2) += fibs(n / 2 - 11)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 12)\n        fibs(n / 2) += fibs(n / 2 - 13)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 14)\n        fibs(n / 2) += fibs(n / 2 - 15)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 16)\n        fibs(n / 2) += fibs(n / 2 - 17)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 18)\n        fibs(n / 2) += fibs(n / 2 - 19)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 20)\n        fibs(n / 2) += fibs(n / 2 - 21)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 22)\n        fibs(n / 2) += fibs(n / 2 - 23)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 24)\n        fibs(n / 2) += fibs(n / 2 - 25)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 26)\n        fibs(n / 2) += fibs(n / 2 - 27)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 28)\n        fibs(n / 2) += fibs(n / 2 - 29)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 30)\n        fibs(n / 2) += fibs(n / 2 - 31)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 32)\n        fibs(n / 2) += fibs(n / 2 - 33)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 34)\n        fibs(n / 2) += fibs(n / 2 - \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpspvbkydv.scala:41:35 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e\
    [0m - \n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m\
    \   |\e[0m                                   expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpspvbkydv.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(BigInt(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \            Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpspvbkydv.scala:7:13\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += fibs(n / \e[31m2\e[0m - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m             ^^^^^\e\
    [0m\n\e[31m  |\e[0m             Found:    Long\n\e[31m  |\e[0m             Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpspvbkydv.scala:7:28\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += fibs(n / \e[31m2\e[0m - \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m             \
    \               ^^^^^^^^^\e[0m\n\e[31m  |\e[0m                            Found:\
    \    Long\n\e[31m  |\e[0m                            Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpspvbkydv.scala:8:13 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^^^^^\e[0m\n\e[31m  |\e[0m\
    \             Found:    Long\n\e[31m  |\e[0m             Required: Int\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-ex"
  stdout: ''
  timestamp: 1660009917
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_num = 0\n\
    \        var prime_num = 0\n        var prime_flag = false\n        var fib_flag\
    \ = false\n        var fib_num2 = 0\n        var prime_num2 = 0\n        var prime_flag2\
    \ = false\n        var fib_flag2 = false\n        var fib_num3 = 0\n        var\
    \ prime_num3 = 0\n        var prime_flag3 = false\n        var fib_flag3 = false\n\
    \        var fib_num4 = 0\n        var prime_num4 = 0\n        var prime_flag4\
    \ = false\n        var fib_flag4 = false\n        var fib_num5 = 0\n        var\
    \ prime_num5 = 0\n        var prime_flag5 = false\n        var fib_flag5 = false\n\
    \        var fib_num6 = 0\n        var prime_num6 = 0\n        var prime_flag6\
    \ = false\n        var fib_flag6 = false\n        var fib_num7 = 0\n        var\
    \ prime_num7 = 0\n        var prime_flag7 = false\n        var fib_flag7 = false\n\
    \        var fib_num8 = 0\n        var prime_num8 = 0\n        var prime_flag8\
    \ = false\n        var fib_flag8 = false\n        var fib_num9 = 0\n        var\
    \ prime_num9 = 0\n        var prime_flag9 = false\n        var fib_flag9 = false\n\
    \        var fib_num10 = 0\n        var prime_num10 = 0\n        var prime_flag10\
    \ = false\n        var fib_flag10 = false\n        var fib_num11 = 0\n       \
    \ var prime_num11 = 0\n        var prime_flag11 = false\n        var fib_flag11\
    \ = false\n        var fib_num12 = 0\n        var prime_num12 = 0\n        var\
    \ prime_flag12 = false\n        var fib_flag12 = false\n        var fib_num13\
    \ = 0\n        var prime_num13 = 0\n        var prime_flag13 = false\n       \
    \ var fib_flag13 = false\n        var fib_num14 = 0\n        var prime_num14 =\
    \ 0\n        var prime_flag14 = false\n        var fib_flag14 = false\n      \
    \  var fib_num15 = 0\n        var prime_num15 = 0\n        var prime_flag15 =\
    \ false\n        var fib_flag15 = false\n        var fib_num16 = 0\n        var\
    \ prime_num16 = 0\n        var prime_flag16 = false\n        var fib_flag16 =\
    \ false\n        var fib_num17 = 0\n        var prime_num17 = 0\n        var prime_flag17\
    \ = false\n        var fib_flag17 = false\n        var fib_num18 = 0\n       \
    \ var prime_num18 = 0\n        var prime_flag18 = false\n        var fib_flag18\
    \ = false\n        var fib_num19 = 0\n        var prime_num19 = 0\n        var\
    \ prime_flag19 = false\n        var fib_flag19 = false\n        var fib_\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3eb8ctcq.scala:83:4 ----------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp3eb8ctcq.scala:83:5 ---------------------\e[0m\e[0m\n\e[31m83 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009909
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](100)\n        fib_array(0) = 0\n        fib_array(1) = 1\n \
    \       fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n\
    \        fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1f7dtd5s.scala:73:8 -------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009768
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibonacci =\
    \ mutable.ListBuffer[Long]()\n        fibonacci += 0\n        fibonacci += 1\n\
    \        fibonacci += 2\n        fibonacci += 3\n        fibonacci += 5\n    \
    \    fibonacci += 8\n        fibonacci += 13\n        fibonacci += 21\n      \
    \  fibonacci += 34\n        fibonacci += 55\n        fibonacci += 89\n       \
    \ fibonacci += 144\n        fibonacci += 233\n        fibonacci += 377\n     \
    \   fibonacci += 610\n        fibonacci += 987\n        fibonacci += 1597\n  \
    \      fibonacci += 2584\n        fibonacci += 4181\n        fibonacci += 6765\n\
    \        fibonacci += 10946\n        fibonacci += 17711\n        fibonacci +=\
    \ 28657\n        fibonacci += 46368\n        fibonacci += 75025\n        fibonacci\
    \ += 121393\n        fibonacci += 196418\n        fibonacci += 317811\n      \
    \  fibonacci += 514229\n        fibonacci += 832040\n        fibonacci += 1346269\n\
    \        fibonacci += 2178309\n        fibonacci += 3524578\n        fibonacci\
    \ += 5702887\n        fibonacci += 9227465\n        fibonacci += 14930352\n  \
    \      fibonacci += 24157817\n        fibonacci += 39088169\n        fibonacci\
    \ += 63245986\n        fibonacci += 102334155\n        fibonacci += 165580141\n\
    \        fibonacci += 267914296\n        fibonacci += 433494437\n        fibonacci\
    \ += 701408733\n        fibonacci += 1134903170\n        fibonacci += 1836311903\n\
    \        fibonacci += 2971215073\n        fibonacci += 4807526976\n        fibonacci\
    \ += 7432498689\n        fibonacci += 1264331746\n        fibonacci += 1966241692\n\
    \        fi\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprye1buil.scala:6:24 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmprye1buil.scala:58:8 -------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m        fi\n\e[31m\e[31m   |\e[0m        ^^\e[0m\n\e\
    [31m   |\e[0m        Not found: fi\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009902
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 134700487351\n        fibs += 2178303758090\n\
    \        fibs += 3524577240261\n        fibs += 5702887089733\n        fibs +=\
    \ 922746574786\n        fibs += 14930351038551\n        fibs += 241578162071741\n\
    \        fibs += 3908816994114461\n        fibs += 63245977516853951\n       \
    \ fibs += 102334154901217025\n        fibs += 1655801429009132481\n        fibs\
    \ += 267914296026\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpba8s39up.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_n = 0\n\
    \        var prime_n = 0\n        var prime_fib_n = 0\n        var prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_n = 0\n        var prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_n = 0\n        var prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_n = 0\n        var\
    \ prime_fib_prime_fib_prime_fib_prime_fib_prime_n = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n =\
    \ 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 0\n        var prime_fib_prime_fib_prime_fib_prime_fi\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx_0kec90.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpx_0kec90.scala:28:5 ---------------------\e[0m\e[0m\n\e[31m28 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009912
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:9:18\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        primes += prime\n\e[31m\e\
    [31m  |\e[0m                  ^^^^^\e[0m\n\e[31m  |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m  |\e[0m                  Required: Long\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:10:18 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:11:18 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:12:18 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:13:18 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5yxofxy8.scala:14:18 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1660009785
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib_n = 2\n\
    \        var prime_n = 2\n        var prime_fib_n = 2\n        var prime_fib_prime_n\
    \ = 2\n        var prime_fib_prime_fib_n = 2\n        var prime_fib_prime_fib_prime_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_n = 2\n        var prime_fib_prime_fib_prime_fib_prime_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_n = 2\n        var\
    \ prime_fib_prime_fib_prime_fib_prime_fib_prime_n = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n =\
    \ 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_n\
    \ = 2\n        var prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime_fib_prime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpahbtvapg.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpahbtvapg.scala:27:5 ---------------------\e[0m\e[0m\n\e[31m27 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009913
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl8tpdxtt.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpl8tpdxtt.scala:73:8 -------------------------\e[0m\e\
    [0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009777
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1,\
    \ 2)\n        while(fibs.length < n) {\n            fibs += fibs(0) + fibs(1)\n\
    \        }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ntke435.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ - 1)(1).zip(Vector.fill(n - 2)(2))\n        fibs.find(_._1 == _._2).map(_._2).head\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdyz1rc43.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n - \e[31m1\e[0m)(\e[31m1\e[0m).zip(Vector.fill(n - \e[31m2\e\
    [0m)(\e[31m2\e[0m))\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpdyz1rc43.scala:6:57 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ - \e[31m1\e[0m)(\e[31m1\e[0m).zip(Vector.fill(n - \e[31m2\e[0m)(\e[31m2\e[0m))\n\
    \e[31m\e[31m  |\e[0m                                                         ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                         Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdyz1rc43.scala:7:20\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs.find(_._1 ==\
    \ _._2).map(_._2).head\n\e[31m\e[31m  |\e[0m                  ^^^^\e[0m\n\e[31m\
    \  |\e[0m                  value _1 is not a member of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1660009916
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var i = 1\n    \
    \    while(i <= n) {\n            if((a % 2) == 0) {\n                c = a +\
    \ b\n                a = b\n                b = c\n            } else {\n    \
    \            d = a + b\n                a = b\n                b = d\n       \
    \     }\n            i = i + 1\n        }\n        return d\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfzm3fayi.scala:26)\n\tat Problem.main(tmpfzm3fayi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009916
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = 1\n        while (fib < n) {\n            fib = fib + prime\n\
    \            prime = prime + 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2fdl8ufj.scala:16)\n\tat Problem.main(tmp2fdl8ufj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009778
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1,\
    \ 2)\n        for(i <- 2 to n){\n            fibs += fibs(i-1) + fibs(i-2)\n \
    \       }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9gdv_fih.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9gdv_fih.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009863
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(0) ++ Vector.fill(n / 2)(1)\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e\
    [0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                               ^^^^^\e\
    [0m\n\e[31m  |\e[0m                               Found:    Long\n\e[31m  |\e\
    [0m                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmbqqygmk.scala:6:56 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                        ^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                        Found:\
    \    Long\n\e[31m  |\e[0m                                                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009779
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 2\n        var d = 1\n        var p = 0\n    \
    \    var q = n\n        var r = n\n        while(p < q) {\n            val temp\
    \ = a\n            a = b\n            b = temp + c\n            c = d\n      \
    \      d = b\n            p += 1\n        }\n        r\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp196lp8v1.scala:24)\n\tat Problem.main(tmp196lp8v1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009916
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var a = 2\n    \
    \    var b = 1\n        var c = 0\n        var d = 1\n        var prime = 0\n\
    \        var fib = 0\n        var fib2 = 0\n        var fib3 = 0\n        var\
    \ fib4 = 0\n        var fib5 = 0\n        var fib6 = 0\n        var fib7 = 0\n\
    \        var fib8 = 0\n        var fib9 = 0\n        var fib10 = 0\n        var\
    \ fib11 = 0\n        var fib12 = 0\n        var fib13 = 0\n        var fib14 =\
    \ 0\n        var fib15 = 0\n        var fib16 = 0\n        var fib17 = 0\n   \
    \     var fib18 = 0\n        var fib19 = 0\n        var fib20 = 0\n        var\
    \ fib21 = 0\n        var fib22 = 0\n        var fib23 = 0\n        var fib24 =\
    \ 0\n        var fib25 = 0\n        var fib26 = 0\n        var fib27 = 0\n   \
    \     var fib28 = 0\n        var fib29 = 0\n        var fib30 = 0\n        var\
    \ fib31 = 0\n        var fib32 = 0\n        var fib33 = 0\n        var fib34 =\
    \ 0\n        var fib35 = 0\n        var fib36 = 0\n        var fib37 = 0\n   \
    \     var fib38 = 0\n        var fib39 = 0\n        var fib40 = 0\n        var\
    \ fib41 = 0\n        var fib42 = 0\n        var fib43 = 0\n        var fib44 =\
    \ 0\n        var fib45 = 0\n        var fib46 = 0\n        var fib47 = 0\n   \
    \     var fib48 = 0\n        var fib49 = 0\n        var fib50 = 0\n        var\
    \ fib51 = 0\n        var fib52 = 0\n        var fib53 = 0\n        var fib54 =\
    \ 0\n        var fib55 = 0\n        var fib56 = 0\n        var fib57 = 0\n   \
    \     var fib58 = 0\n        var fib59 = 0\n        var fib60 = 0\n        var\
    \ fib61 = 0\n        var fib62 = 0\n        var fib63 = 0\n        var fib64 =\
    \ 0\n        var fib65 = 0\n        var fib66 = 0\n        var fib67 = 0\n   \
    \     var fib68 = 0\n        var fib69 = 0\n        var fib70 = 0\n        var\
    \ fib71 = 0\n        var fib72 = 0\n        var fib73 = 0\n        var fib74 =\
    \ 0\n        var fib75 = 0\n        var fib76 = 0\n        var fib77 = 0\n   \
    \     var fib78 = 0\n        var fib79 = 0\n        var fib80 = 0\n        var\
    \ fib81 = 0\n        var fib82 = 0\n        var fib83 = 0\n        var fib84 =\
    \ 0\n        var fib85 = 0\n        var fib86 = 0\n        var fib87 = 0\n   \
    \     var fib88 = 0\n        var fib89 = 0\n        var fib90 = 0\n        var\
    \ fib91 = 0\n        var fib92 = 0\n        var fib93 = 0\n        var fib94 =\
    \ 0\n        var fib95 = 0\n        var fib96 = 0\n        var fib97 = 0\n   \
    \     var fib98 = 0\n        var fib99\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptiy19ft4.scala:110:4 ---------------------------\e\
    [0m\e[0m\n\e[31m110 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmptiy19ft4.scala:110:5 --------------------\e[0m\e[0m\n\e[31m110 |\e[0m\
    \    }\n\e[31m\e[31m    |\e[0m     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\
    \e[31m    |\e[0m     Required: Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009798
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1,\
    \ 2)\n        for(i <- 3 to n){\n            fibs += fibs.head + fibs.last\n \
    \       }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2au15dpg.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2au15dpg.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m3\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009916
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.BigInt(2)\
    \ #:: scala.math.BigInt(3) #:: scala.math.BigInt(5) #:: scala.math.BigInt(8) #::\
    \ scala.math.BigInt(13) #:: scala.math.BigInt(21) #:: scala.math.BigInt(55) #::\
    \ scala.math.BigInt(89) #:: scala.math.BigInt(144) #:: scala.math.BigInt(233)\
    \ #:: scala.math.BigInt(377) #:: scala.math.BigInt(610) #:: scala.math.BigInt(987)\
    \ #:: scala.math.BigInt(1597) #:: scala.math.BigInt(2584) #:: scala.math.BigInt(4181)\n\
    \        val primes = scala.collection.mutable.ArrayBuffer(2, 3, 5, 7)\n     \
    \   val prime = scala.collection.mutable.ArrayBuffer(2, 3)\n        val result\
    \ = scala.collection.mutable.ArrayBuffer(n)\n        val isPrime = scala.collection.mutable.ArrayBuffer(true)\n\
    \        val isFib = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib\
    \ = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib2 = scala.collection.mutable.ArrayBuffer(true)\n\
    \        val isPrimeFib3 = scala.collection.mutable.ArrayBuffer(true)\n      \
    \  val isPrimeFib4 = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib5\
    \ = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib6 = scala.collection.mutable.ArrayBuffer(true)\n\
    \        val isPrimeFib7 = scala.collection.mutable.ArrayBuffer(true)\n      \
    \  val isPrimeFib8 = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib9\
    \ = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib10 = scala.collection.mutable.ArrayBuffer(true)\n\
    \        val isPrimeFib11 = scala.collection.mutable.ArrayBuffer(true)\n     \
    \   val isPrimeFib12 = scala.collection.mutable.ArrayBuffer(true)\n        val\
    \ isPrimeFib13 = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib14\
    \ = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib15 = scala.collection.mutable.ArrayBuffer(true)\n\
    \        val isPrimeFib16 = scala.collection.mutable.ArrayBuffer(true)\n     \
    \   val isPrimeFib17 = scala.collection.mutable.ArrayBuffer(true)\n        val\
    \ isPrimeFib18 = scala.collection.mutable.ArrayBuffer(true)\n        val isPrimeFib19\
    \ = scala.collection.\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmppzk8v0mi.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmppzk8v0mi.scala:6:409 ------------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e[31m2\e[0m)\
    \ #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e[0m) #::\
    \ scala.math.BigInt(\e[31m8\e[0m) #:: scala.math.BigInt(\e[31m13\e[0m) #:: scala.math.BigInt(\e\
    [31m21\e[0m) #:: scala.math.BigInt(\e[31m55\e[0m) #:: scala.math.BigInt(\e[31m89\e\
    [0m) #:: scala.math.BigInt(\e[31m144\e[0m) #:: scala.math.BigInt(\e[31m233\e[0m)\
    \ #:: scala.math.BigInt(\e[31m377\e[0m) #:: scala.math.BigInt(\e[31m610\e[0m)\
    \ #:: scala.math.BigInt(\e[31m987\e[0m) #:: scala.math.BigInt(\e[31m1597\e[0m)\
    \ #:: scala.math.BigInt(\e[31m2584\e[0m) #:: scala.math.BigInt(\e[31m4181\e[0m)\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                       value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppzk8v0mi.scala:31:5\
    \ ---------------------\e[0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009917
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fib_array =\
    \ new Array[Long](n)\n        fib_array(0) = 0\n        fib_array(1) = 1\n   \
    \     fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4) = 1\n \
    \       fib_array(5) = 1\n        fib_array(6) = 1\n        fib_array(7) = 1\n\
    \        fib_array(8) = 1\n        fib_array(9) = 1\n        fib_array(10) = 1\n\
    \        fib_array(11) = 1\n        fib_array(12) = 1\n        fib_array(13) =\
    \ 1\n        fib_array(14) = 1\n        fib_array(15) = 1\n        fib_array(16)\
    \ = 1\n        fib_array(17) = 1\n        fib_array(18) = 1\n        fib_array(19)\
    \ = 1\n        fib_array(20) = 1\n        fib_array(21) = 1\n        fib_array(22)\
    \ = 1\n        fib_array(23) = 1\n        fib_array(24) = 1\n        fib_array(25)\
    \ = 1\n        fib_array(26) = 1\n        fib_array(27) = 1\n        fib_array(28)\
    \ = 1\n        fib_array(29) = 1\n        fib_array(30) = 1\n        fib_array(31)\
    \ = 1\n        fib_array(32) = 1\n        fib_array(33) = 1\n        fib_array(34)\
    \ = 1\n        fib_array(35) = 1\n        fib_array(36) = 1\n        fib_array(37)\
    \ = 1\n        fib_array(38) = 1\n        fib_array(39) = 1\n        fib_array(40)\
    \ = 1\n        fib_array(41) = 1\n        fib_array(42) = 1\n        fib_array(43)\
    \ = 1\n        fib_array(44) = 1\n        fib_array(45) = 1\n        fib_array(46)\
    \ = 1\n        fib_array(47) = 1\n        fib_array(48) = 1\n        fib_array(49)\
    \ = 1\n        fib_array(50) = 1\n        fib_array(51) = 1\n        fib_array(52)\
    \ = 1\n        fib_array(53) = 1\n        fib_array(54) = 1\n        fib_array(55)\
    \ = 1\n        fib_array(56) = 1\n        fib_array(57) = 1\n        fib_array(58)\
    \ = 1\n        fib_array(59) = 1\n        fib_array(60) = 1\n        fib_array(61)\
    \ = 1\n        fib_array(62) = 1\n        fib_array(63) = 1\n        fib_array(64)\
    \ = 1\n        fib_array(65) = 1\n        fib_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl8tpdxtt.scala:6:40\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m  |\e[0m\
    \                                        ^\e[0m\n\e[31m  |\e[0m              \
    \                          Found:    (n : Long)\n\e[31m  |\e[0m              \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpl8tpdxtt.scala:73:8 -------------------------\e[0m\e\
    [0m\n\e[31m73 |\e[0m        fib_\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m\
    \   |\e[0m        Not found: fib_\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009777
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        var fib = 2\n  \
    \      var prime = true\n        while (prime && fib < n) {\n            prime\
    \ = fib == 0 || fib == 1 || fib.isPrime\n            fib = fib + fib\n       \
    \ }\n        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1cgjlrby.scala:9:48 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            prime = fib == \e[31m0\e[0m || fib == \e[31m1\e\
    [0m || fib.isPrime\n\e[31m\e[31m  |\e[0m                                     \
    \       ^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                                     \
    \ value isPrime is not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1660009917
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    def primeFib(n : Long) : Long = {\n        val fibs = Vector.fill(n\
    \ / 2)(Vector.fill(n / 2)(1))\n        fibs(n) += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:6:31\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n / \e[31m2\e[0m)(\e[31m1\e[0m))\n\
    \e[31m\e[31m  |\e[0m                               ^^^^^\e[0m\n\e[31m  |\e[0m\
    \                               Found:    Long\n\e[31m  |\e[0m               \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpncf41v7h.scala:6:50 ---------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m1\e[0m))\n\e[31m\e[31m  |\e[0m                       \
    \                           ^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \                           Found:    Long\n\e[31m  |\e[0m                   \
    \                               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:13 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m             ^\e[0m\n\e[31m  |\e[0m         \
    \    Found:    (n : Long)\n\e[31m  |\e[0m             Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:24 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e[31m1\e[0m) + fibs(n - \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                        ^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Found:    Long\n\e[31m  |\e[0m                    \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpncf41v7h.scala:7:38\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        fibs(n) += fibs(n - \e\
    [31m1\e[0m) + fibs(n - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                   ^^^^^\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1660009867

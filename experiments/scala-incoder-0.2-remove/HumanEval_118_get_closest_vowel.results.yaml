language: scala
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrev = vowelsSetIteratorNextPrevNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevNext = vowelsSetIteratorNextPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextNextPrevPrevNext = vowelsSetIteratorNextPrevNextPrevNext.prev\n\
    \        val vowelsSetIteratorNextNextPrevNextPrevPrev = vowelsSetIteratorNextNextPrevNextPrev.prev\n\
    \        val vowelsSetIteratorNextNextPrevNextPrevNext = vowelsSetIteratorNextNextPrevNextPrevNext.next\n\
    \        val vowelsSetIteratorNextNextPrevNextNextNextPrevPrev = vowelsSetIteratorNextNextPrevNextNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextNextPrevNextNextNextPrevNext = vowelsSetIteratorNextNextPrevNextNextNextPrevNext.next\n\
    \        val vowelsSetIteratorNextNextPrevNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3wlpql4n.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3wlpql4n.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3wlpql4n.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp3wlpql4n.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3wlpql4n.scala:24:48 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevNextPrevPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.prev\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3wlpql4n.scala:25:48\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevNextPrevNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m          "
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n       \
    \ val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextPre\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi6fpfn_d.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi6fpfn_d.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi6fpfn_d.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextNextPrev.previous\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextPrev is already defined as \e\
    [33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextPrev\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi6fpfn_d.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextPrev.previous\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNex"
  stdout: ''
  timestamp: 1660009632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(c => vowels.contains(c)).size\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c)).size\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCoun\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvsu0l444.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvsu0l444.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvsu0l444.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvsu0l444.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvsu0l444.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009630
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmptr95hhzh.scala:34:11 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmptr95hhzh.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptr95hhzh.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmptr95hhzh.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptr"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = 0\n        var vowelCount2\
    \ = 0\n        var vowelIndex3 = 0\n        var vowelCount3 = 0\n        var vowelIndex4\
    \ = 0\n        var vowelCount4 = 0\n        var vowelIndex5 = 0\n        var vowelCount5\
    \ = 0\n        var vowelIndex6 = 0\n        var vowelCount6 = 0\n        var vowelIndex7\
    \ = 0\n        var vowelCount7 = 0\n        var vowelIndex8 = 0\n        var vowelCount8\
    \ = 0\n        var vowelIndex9 = 0\n        var vowelCount9 = 0\n        var vowelIndex10\
    \ = 0\n        var vowelCount10 = 0\n        var vowelIndex11 = 0\n        var\
    \ vowelCount11 = 0\n        var vowelIndex12 = 0\n        var vowelCount12 = 0\n\
    \        var vowelIndex13 = 0\n        var vowelCount13 = 0\n        var vowelIndex14\
    \ = 0\n        var vowelCount14 = 0\n        var vowelIndex15 = 0\n        var\
    \ vowelCount15 = 0\n        var vowelIndex16 = 0\n        var vowelCount16 = 0\n\
    \        var vowelIndex17 = 0\n        var vowelCount17 = 0\n        var vowelIndex18\
    \ = 0\n        var vowelCount18 = 0\n        var vowelIndex19 = 0\n        var\
    \ vowelCount19 = 0\n        var vowelIndex20 = 0\n        var vowelCount20 = 0\n\
    \        var vowelIndex21 = 0\n        var vowelCount21 = 0\n        var vowelIndex22\
    \ = 0\n        var vowelCount22 = 0\n        var vowelIndex23 = 0\n        var\
    \ vowelCount23 = 0\n        var vowelIndex24 = 0\n        var vowelCount24 = 0\n\
    \        var vowelIndex25 = 0\n        var vowelCount25 = 0\n        var vowelIndex26\
    \ = 0\n        var vowelCount26 = 0\n        var vowelIndex27 = 0\n        var\
    \ vowelCount27 = 0\n        var vowelIndex28 = 0\n        var vowelCount28 = 0\n\
    \        var vowelIndex29 = 0\n        var vowelCount29 = 0\n        var vowelIndex30\
    \ = 0\n        var vowelCount30 = 0\n        var vowelIndex31 = 0\n        var\
    \ vowelCount31 = 0\n        var vowelIndex32 = 0\n        var vowelCount32 = 0\n\
    \        var vowelIndex33 = 0\n        var vowelCount33 = 0\n        var vowelIndex34\
    \ = 0\n        var vowelCount34 = 0\n        var vowelIndex35 = 0\n        var\
    \ vowelCount35 = 0\n        var vowelIndex36 = 0\n        var vowelCount36 = 0\n\
    \        var vowelIndex37 = 0\n        var vowelCount37 = 0\n        var vowelIndex38\
    \ = 0\n        var vowelCount38 = 0\n        var vowelIndex39 = 0\n        var\
    \ vowelCount39 = 0\n        var vowelIndex40 = 0\n        var vowelCount40 = 0\n\
    \        var vowelIndex41 = 0\n        var vowelCount41 = 0\n        var vowelIndex42\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp30kb2_2y.scala:96:5\
    \ ---------------------\e[0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n       \
    \ val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvvf2pczy.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvvf2pczy.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvvf2pczy.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpvvf2pczy.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpvvf2pczy.scala:27:60 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvvf2pczy.scala:31:126\
    \ -----------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIter"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = word.filter(x\
    \ => !vowels.contains(x))\n        val consonantsCount = consonants.length\n \
    \       val vowelsCount = consonantsCount - vowelsCount\n        val vowelsIndex\
    \ = word.lastIndexWhere(x => vowels.contains(x))\n        val consonantsIndex\
    \ = word.lastIndexWhere(x => !vowels.contains(x))\n        val vowelsIndex = consonantsIndex\
    \ - vowelsCount\n        val vowel = word.substring(vowelsIndex, vowelsIndex +\
    \ vowelsCount)\n        vowel\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwuytc2_f.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = consonantsCount\
    \ - vowelsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwuytc2_f.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = consonantsIndex -\
    \ vowelsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpwuytc2_f.scala:12:59 --------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m              \
    \                                             ^\e[0m\n\e[31m   |\e[0m        \
    \                                            Found:    (x : Char)\n\e[31m   |\e\
    [0m                                                    Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwuytc2_f.scala:13:59 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mconsonants\e[0m = word.filter(\e\
    [36mx\e[0m => !vowels.contains(x))\n\e[31m\e[31m   |\e[0m                    \
    \                                       ^\e[0m\n\e[31m   |\e[0m              \
    \                                      Found:    (x : Char)\n\e[31m   |\e[0m \
    \                                                   Required: String\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mism"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length - 1\n        var vowelIndex3 = word.length\n\
    \        var vowelIndex4 = word.length\n        var vowelIndex5 = word.length\n\
    \        var vowelIndex6 = word.length\n        var vowelIndex7 = word.length\n\
    \        var vowelIndex8 = word.length\n        var vowelIndex9 = word.length\n\
    \        var vowelIndex10 = word.length\n        var vowelIndex11 = word.length\n\
    \        var vowelIndex12 = word.length\n        var vowelIndex13 = word.length\n\
    \        var vowelIndex14 = word.length\n        var vowelIndex15 = word.length\n\
    \        var vowelIndex16 = word.length\n        var vowelIndex17 = word.length\n\
    \        var vowelIndex18 = word.length\n        var vowelIndex19 = word.length\n\
    \        var vowelIndex20 = word.length\n        var vowelIndex21 = word.length\n\
    \        var vowelIndex22 = word.length\n        var vowelIndex23 = word.length\n\
    \        var vowelIndex24 = word.length\n        var vowelIndex25 = word.length\n\
    \        var vowelIndex26 = word.length\n        var vowelIndex27 = word.length\n\
    \        var vowelIndex28 = word.length\n        var vowelIndex29 = word.length\n\
    \        var vowelIndex30 = word.length\n        var vowelIndex31 = word.length\n\
    \        var vowelIndex32 = word.length\n        var vowelIndex33 = word.length\n\
    \        var vowelIndex34 = word.length\n        var vowelIndex35 = word.length\n\
    \        var vowelIndex36 = word.length\n        var vowelIndex37 = word.length\n\
    \        var vowelIndex38 = word.length\n        var vowelIndex39 = word.length\n\
    \        var vowelIndex40 = word.length\n        var vowelIndex41 = word.length\n\
    \        var vowelIndex42 = word.length\n        var vowelIndex43 = word.length\n\
    \        var vowelIndex44 = word.length\n        var vowelIndex45 = word.length\n\
    \        var vowelIndex46 = word.length\n        var vowelIndex47 = word.length\n\
    \        var vowelIndex48 = word.length\n        var vowelIndex49 = word.length\n\
    \        var vowelIndex50 = word.length\n        var vowelIndex51 = word.length\n\
    \        var vowelIndex52 = word.length\n        var vowelIndex53 = word.length\n\
    \        var vowelIndex54 = word.length\n        var vowelIndex55 = word.length\n\
    \        var vowelIndex56 = word.length\n        var vowelIndex57 = word.length\n\
    \        var vowelIndex58 = word.length\n        var vowelIndex59 = word.length\n\
    \        var vowelIndex60 = word.length\n        var vowelIndex61 = word.length\n\
    \        var vowelIndex62 = word.length\n        var vowelIndex63 = word.length\n\
    \        var vowelIndex64 = \n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpcppjpp7u.scala:75:26 ---------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m        \e[33mvar\e[0m \e[36mvowelIndex64\e[0m = \n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcppjpp7u.scala:76:5 ---------------------\e\
    [0m\e[0m\n\e[31m76 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(c => vowels.contains(c)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c)).length\n        val\
    \ vowelsCount = word.filter(c => vowels.contains(c)).length\n        val consonantsCount\
    \ = word.filter(c => consonants.contains(c)).length\n        val vowelsCount =\
    \ word.filter(c => vowels.contains(c)).length\n        val consonantsCount = word.filter(c\
    \ => consonants.contains(c)).length\n        val vowelsCount = word.filter(c =>\
    \ vowels.contains(c)).length\n        val consonantsCount = word.filter(c => consonants.contains(c)).length\n\
    \        val vowelsCount = word.filter(c => vowels.contains(c)).length\n     \
    \   val consonantsCount = word.filter(c => consonants.contains(c)).length\n  \
    \      val vowelsCount = word.filter(c => vowels.contains(c)).length\n       \
    \ val consonantsCount = word.filter(c => consonants.contains(c)).length\n    \
    \    val vowelsCount = word.filter(c => vowels.contains(c)).length\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c)).length\n        val\
    \ vowelsCount = word.filter(c => vowels.contains(c)).length\n        val consonantsCount\
    \ = word.filter(c => consonants.contains(c)).length\n        val vowelsCount =\
    \ word.filter(c => vowels.contains(c)).length\n        val consonantsCount = word.filter(c\
    \ => consonants.contains(c)).length\n        val vowelsCount = word.filter(c =>\
    \ vowels.contains(c)).length\n        val consonantsCount = word.filter(c => consonants.contains(c)).length\n\
    \        val vowelsCount = word.filter(c => vowels.contains(c)).length\n     \
    \   val consonantsCount = word.filter(c => consonants.contains(c)).length\n  \
    \      val vowelsCount = word.filter(c => vowels.contains(c)).length\n       \
    \ val consonantsCount = word.filter(c => consonants.contains(c)).length\n    \
    \    val vowelsCount = word.filter(c => vowels.contains(c)).length\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptjhz23zf.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mc\e[0m => vowels.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptjhz23zf.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mc\e[0m => consonants.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmptjhz23zf.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mc\e[0m => vowels.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptjhz23zf.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mc\e[0m => consonants.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel defi"
  stdout: ''
  timestamp: 1660009632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorIterator = vowelsSetIterator.iterator\n        val\
    \ vowelsSetIteratorIteratorSize = vowelsSetIteratorIterator.size\n        val\
    \ vowelsSetIteratorIteratorIterator = vowelsSetIteratorIterator.iterator\n   \
    \     val vowelsSetIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n     \
    \   val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n \
    \       val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n \
    \       val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvjs9xb0p.scala:32:112 -----------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\e\
    [0m = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvjs9xb0p.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\"\
    ).length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n        val\
    \ vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"\
    [^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n\
    \        val vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount\
    \ = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\"\
    ).length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n        val\
    \ vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"\
    [^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n\
    \        val vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount\
    \ = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\"\
    ).length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n        val\
    \ vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"\
    [^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n\
    \        val vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount\
    \ = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\"\
    ).length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n        val\
    \ vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"\
    [^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n\
    \        val vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount\
    \ = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\"\
    ).length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n        val\
    \ vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount = word.split(\"\
    [^aeiou]\").length\n        val vowelsCount = word.split(\"[^aeiou]\").length\n\
    \        val vowelsCount = word.split(\"[^aeiou]\").length\n        val vowelsCount\
    \ = word.\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmped29dv4p.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmped29dv4p.scala:13:12 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.split(\e[31m\"[^aeiou]\"\
    \e[0m).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmped29dv4p.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.split(\e[31m\"\
    [^aeiou]\"\e[0m).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmped29dv4p.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.split(\e[31m\"\
    [^aeiou]\"\e[0m).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmped29dv4p.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.split(\e[31m\"\
    [^aeiou]\"\e[0m).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ d"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsIndex = word.lastIndexWhere(x => vowels.contains(x))\n        val consonantsIndex\
    \ = word.lastIndexWhere(x => consonants.contains(x))\n        val vowelsCount\
    \ = vowelsIndex - vowelsIndex % 2\n        val consonantsCount = consonantsIndex\
    \ - consonantsIndex % 2\n        if(vowelsCount < consonantsCount) {\n       \
    \     \"\"\n        } else {\n            word.substring(vowelsIndex + 1, consonantsIndex\
    \ + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbj4p7vwv.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsIndex\
    \ - vowelsIndex % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbj4p7vwv.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = consonantsIndex\
    \ - consonantsIndex % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbj4p7vwv.scala:12:59 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m              \
    \                                             ^\e[0m\n\e[31m   |\e[0m        \
    \                                            Found:    (x : Char)\n\e[31m   |\e\
    [0m                                                    Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbj4p7vwv.scala:14:67 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m          \
    \                                                         ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanati"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevNextPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNextNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevNextPrev = vowelsSetIteratorPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrev\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7vhx3u2a.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7vhx3u2a.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextPrevPrevPrev\e[0m = vowelsSetIteratorNextPrevPrev.prev\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrev is already defined as \e\
    [33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrev\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7vhx3u2a.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextPrevPrevNext\e[0m = vowelsSetIteratorNextPrevPrev.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevNext is already defined as \e\
    [33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevNext\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7vhx3u2a.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7vhx3u2a.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIt"
  stdout: ''
  timestamp: 1660009630
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList\n        val vowelsAfter = vowels.toList.reverse\n\
    \        val vowelsBetween = vowelsBefore.zip(vowelsAfter)\n        val vowelsBetween\
    \ = vowelsBetween.filter(_._1 != _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1\
    \ == _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1 == _._1)\n \
    \       val vowelsBetween = vowelsBetween.filter(_._1 != _._1)\n        val vowelsBetween\
    \ = vowelsBetween.filter(_._1 != _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1\
    \ == _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1 == _._1)\n \
    \       val vowelsBetween = vowelsBetween.filter(_._1 != _._1)\n        val vowelsBetween\
    \ = vowelsBetween.filter(_._1 != _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1\
    \ == _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1 == _._1)\n \
    \       val vowelsBetween = vowelsBetween.filter(_._1 != _._1)\n        val vowelsBetween\
    \ = vowelsBetween.filter(_._1 != _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1\
    \ == _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1 == _._1)\n \
    \       val vowelsBetween = vowelsBetween.filter(_._1 != _._1)\n        val vowelsBetween\
    \ = vowelsBetween.filter(_._1 != _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1\
    \ == _._2)\n        val vowelsBetween = vowelsBetween.filter(_._1 == _._1)\n \
    \       val vowelsBetween = vowelsBetween.filter(_._1 != _._1)\n        val vowelsBetween\
    \ = vowelsBetween.filter(_._1 != _._2)\n        val vowelsBetween = vowelsBetween.filter(_._\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1t1sd8nk.scala:37:51 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBetween.filter(_._\n\
    \e[31m\e[31m   |\e[0m                                                   ^\e[0m\n\
    \e[31m   |\e[0m                                   an identifier expected, but\
    \ '_' found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1t1sd8nk.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsBetween\e[0m = vowelsBetween.filter(_._1 != _._2)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsBetween is already defined as \e[33mvalue\e[0m \e[35mvowelsBetween\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1t1sd8nk.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBetween.filter(_._1\
    \ == _._2)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetween is already defined as \e[33mvalue\e[0m \e[35mvowelsBetween\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1t1sd8nk.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBetween.filter(_._1\
    \ == _._1)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetween is already defined as \e[33mvalue\e[0m \e[35mvowelsBetween\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1t1sd8nk.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBet"
  stdout: ''
  timestamp: 1660009630
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants = Set(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = word.count(vowels)\n        val consonantsCount = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmppx49p0uj.scala:52:29 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = \n\
    \e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m    \
    \                         expression expected but \e[31m'}'\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppx49p0uj.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppx49p0uj.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.count(consonants)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e[35mconsonantsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppx49p0uj.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppx49p0uj.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.count(consonants)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsCount is already defined as"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val vowelsCount2 = word.count(vowels.toList)\n\
    \        val vowelsCount3 = word.count(vowels.toSet)\n        val vowelsCount4\
    \ = word.count(vowels.toSeq)\n        val vowelsCount5 = word.count(vowels.toIterator)\n\
    \        val vowelsCount6 = word.count(vowels.toStream)\n        val vowelsCount7\
    \ = word.count(vowels.toList)\n        val vowelsCount8 = word.count(vowels.toSet)\n\
    \        val vowelsCount9 = word.count(vowels.toSeq)\n        val vowelsCount10\
    \ = word.count(vowels.toIterator)\n        val vowelsCount11 = word.count(vowels.toStream)\n\
    \        val vowelsCount12 = word.count(vowels.toList)\n        val vowelsCount13\
    \ = word.count(vowels.toSet)\n        val vowelsCount14 = word.count(vowels.toSeq)\n\
    \        val vowelsCount15 = word.count(vowels.toIterator)\n        val vowelsCount16\
    \ = word.count(vowels.toStream)\n        val vowelsCount17 = word.count(vowels.toList)\n\
    \        val vowelsCount18 = word.count(vowels.toSet)\n        val vowelsCount19\
    \ = word.count(vowels.toSeq)\n        val vowelsCount20 = word.count(vowels.toIterator)\n\
    \        val vowelsCount21 = word.count(vowels.toStream)\n        val vowelsCount22\
    \ = word.count(vowels.toList)\n        val vowelsCount23 = word.count(vowels.toSet)\n\
    \        val vowelsCount24 = word.count(vowels.toSeq)\n        val vowelsCount25\
    \ = word.count(vowels.toIterator)\n        val vowelsCount26 = word.count(vowels.toStream)\n\
    \        val vowelsCount27 = word.count(vowels.toList)\n        val vowelsCount28\
    \ = word.count(vowels.toSet)\n        val vowelsCount29 = word.count(vowels.toSeq)\n\
    \        val vowelsCount30 = word.count(vowels.toIterator)\n        val vowelsCount31\
    \ = word.count(vowels.toStream)\n        val vowelsCount32 = word.count(vowels.toList)\n\
    \        val vowelsCount33 = word.count(vowels.toSet)\n        val vowelsCount34\
    \ = word.count(vowels.toSeq)\n        val vowelsCount35 = word.count(\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_a4umyy.scala:46:39 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount35\e[0m = word.count(\n\
    \e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:12:37\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:13:45 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.count(vowels.toList)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                      Found:    List[String]\n\e\
    [31m   |\e[0m                                      Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:15:45\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount4\e\
    [0m = word.count(vowels.toSeq)\n\e[31m\e[31m   |\e[0m                        \
    \              ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \          Found:    Seq[String]\n\e[31m   |\e[0m                            \
    \          Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpq_a4umyy.scala:16:45 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount5\e[0m = word.count(vowels"
  stdout: ''
  timestamp: 1660009633
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpd7fzeyzy.scala:33:11 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpd7fzeyzy.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd7fzeyzy.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd7fzeyzy.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpd7fzeyzy.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0aqsr0wd.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        var vowelsCount\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount2 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount3 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount4 = word.filter(x => vowels.contains(x)).size\n      \
    \  var vowelsCount5 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount6\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount7 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount8 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount9 = word.filter(x => vowels.contains(x)).size\n      \
    \  var vowelsCount10 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount11 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount12\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount13 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount14 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount15 = word.filter(x => vowels.contains(x)).size\n     \
    \   var vowelsCount16 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount17 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount18\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount19 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount20 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount21 = word.filter(x => vowels.contains(x)).size\n     \
    \   var vowelsCount22 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount23 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount24\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount25 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount26 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount27 = word.filter(x => vowels.contains(x)).size\n     \
    \   var vowelsCount28 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount29 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount30\
    \ = word.filter(x => vowels.contains(x)).size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpndhk0g7v.scala:12:59\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                           ^\e[0m\n\e[31m \
    \  |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpndhk0g7v.scala:13:60\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount2\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpndhk0g7v.scala:14:60\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount3\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpndhk0g7v.scala:15:60\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount4\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m               "
  stdout: ''
  timestamp: 1660009634
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).length\n        val\
    \ consonantsCount = word.filter(consonants.contains).length\n        val vowelsIndex\
    \ = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvaiuosna.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpvaiuosna.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvaiuosna.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvaiuosna.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvaiuosna.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e"
  stdout: ''
  timestamp: 1660009633
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = -1\n        var vowelCount2\
    \ = 0\n        var vowelIndex3 = -1\n        var vowelCount3 = 0\n        var\
    \ vowelIndex4 = -1\n        var vowelCount4 = 0\n        var vowelIndex5 = -1\n\
    \        var vowelCount5 = 0\n        var vowelIndex6 = -1\n        var vowelCount6\
    \ = 0\n        var vowelIndex7 = -1\n        var vowelCount7 = 0\n        var\
    \ vowelIndex8 = -1\n        var vowelCount8 = 0\n        var vowelIndex9 = -1\n\
    \        var vowelCount9 = 0\n        var vowelIndex10 = -1\n        var vowelCount10\
    \ = 0\n        var vowelIndex11 = -1\n        var vowelCount11 = 0\n        var\
    \ vowelIndex12 = -1\n        var vowelCount12 = 0\n        var vowelIndex13 =\
    \ -1\n        var vowelCount13 = 0\n        var vowelIndex14 = -1;\n        var\
    \ vowelCount14 = 0\n        var vowelIndex15 = -1;\n        var vowelCount15 =\
    \ 0\n        var vowelIndex16 = -1;\n        var vowelCount16 = 0\n        var\
    \ vowelIndex17 = -1;\n        var vowelCount17 = 0\n        var vowelIndex18 =\
    \ -1;\n        var vowelCount18 = 0\n        var vowelIndex19 = -1;\n        var\
    \ vowelCount19 = 0\n        var vowelIndex20 = -1;\n        var vowelCount20 =\
    \ 0\n        var vowelIndex21 = -1;\n        var vowelCount21 = 0\n        var\
    \ vowelIndex22 = -1;\n        var vowelCount22 = 0\n        var vowelIndex23 =\
    \ -1;\n        var vowelCount23 = 0\n        var vowelIndex24 = -1;\n        var\
    \ vowelCount24 = 0\n        var vowelIndex25 = -1;\n        var vowelCount25 =\
    \ 0\n        var vowelIndex26 = -1;\n        var vowelCount26 = 0\n        var\
    \ vowelIndex27 = -1;\n        var vowelCount27 = 0\n        var vowelIndex28 =\
    \ -1;\n        var vowelCount28 = 0\n        var vowelIndex29 = -1;\n        var\
    \ vowelCount29 = 0\n        var vowelIndex30 = -1;\n        var vowelCount30 =\
    \ 0\n        var vowelIndex31 = -1;\n        var vowelCount31 = 0\n        var\
    \ vowelIndex32 = -1;\n        var vowelCount32 = 0\n        var vowelIndex33 =\
    \ -1;\n        var vowelCount33 = 0\n        var vowelIndex34 = -1;\n        var\
    \ vowelCount34 = 0\n        var vowelIndex35 = -1;\n        var vowelCount35 =\
    \ 0\n        var vowelIndex36 = -1;\n        var vowelCount36 = 0\n        var\
    \ vowelIndex37 = -1;\n        var vowelCount37 = 0\n        var vowelIndex38 =\
    \ -1;\n        var vowelCount38 = 0\n        var vowelIndex39 = -1;\n        var\
    \ vowelCount39 = 0\n        var vowelIndex\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxqfsyaf7.scala:91:4 ----------------------------\e\
    [0m\e[0m\n\e[31m91 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpxqfsyaf7.scala:91:5 ---------------------\e[0m\e[0m\n\e[31m91 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe4atlkux.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpe4atlkux.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpe4atlkux.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4atlkux.scala:33:72 ------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\e[31m\e[31m   |\e[0m  \
    \                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m               Not found: vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe4atlkux.scala:34:5\
    \ ---------------------\e[0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660009632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.dropRight(word.length)\n        val\
    \ vowelsAfter = vowels.toList.dropLeft(word.length)\n        val consonantsBefore\
    \ = consonants.toList.dropRight(word.length)\n        val consonantsAfter = consonants.toList.dropLeft(word.length)\n\
    \        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1.toLowerCase\
    \ < _._2.toLowerCase)\n        val consonantsBetween = consonantsBefore.zip(consonantsAfter).filter(_._1.toLowerCase\
    \ < _._2.toLowerCase)\n        val vowelsBetweenLength = vowelsBetween.length\n\
    \        val consonantsBetweenLength = consonantsBetween.length\n        val vowelsBetweenLength\
    \ = vowelsBetweenLength.min\n        val consonantsBetweenLength = consonantsBetweenLength.min\n\
    \        val vowelsBetweenLength = vowelsBetweenLength.max\n        val consonantsBetweenLength\
    \ = consonantsBetweenLength.max\n        val vowelsBetweenLength = vowelsBetweenLength.min\n\
    \        val consonantsBetweenLength = consonantsBetweenLength.min\n        val\
    \ vowelsBetweenLength = vowelsBetweenLength.max\n        val consonantsBetweenLength\
    \ = consonantsBetweenLength.max\n        val vowelsBetweenLength = vowelsBetweenLength.min\n\
    \        val consonantsBetweenLength = consonantsBetweenLength.min\n        val\
    \ vowelsBetweenLength = vowelsBetweenLength.max\n        val consonantsBetweenLength\
    \ = consonantsBetweenLength.max\n        val vowelsBetweenLength = vowelsBetweenLength.min\n\
    \        val consonantsBetweenLength = consonantsBetweenLength.min\n        val\
    \ vowelsBetweenLength = vowelsBetweenLength.max\n        val consonantsBetweenLength\
    \ = consonantsBetweenLength.max\n        val vowelsBetweenLength = vowelsBetweenLength.min\n\
    \        val consonantsBetweenLength = consonantsBetweenLength.min\n        val\
    \ vowelsBetweenLength = vowelsBetweenLength.max\n        val consonantsBetweenLength\
    \ = consonantsBetweenLength.max\n        val vowelsBetweenLength = vowelsBetweenLength\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_khoqxv3.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetweenLength\e[0m\
    \ = vowelsBetweenLength.min\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetweenLength is already defined as \e[33mvalue\e[0m\
    \ \e[35mvowelsBetweenLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp_khoqxv3.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetweenLength\e\
    [0m = consonantsBetweenLength.min\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsBetweenLength is already defined as \e[33mvalue\e\
    [0m \e[35mconsonantsBetweenLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_khoqxv3.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetweenLength\e[0m\
    \ = vowelsBetweenLength.max\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetweenLength is already defined as \e[33mvalue\e[0m\
    \ \e[35mvowelsBetweenLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp_khoqxv3.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetweenLength\e\
    [0m = consonantsBetweenLength.max\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsBetweenLength is already defined as \e[33mvalue\e\
    [0m \e[35mconsonantsBetweenLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_khoqxv3.scala:25:"
  stdout: ''
  timestamp: 1660009632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetIterator = vowelsSet.iterator\n        val consonantsSetIterator\
    \ = consonantsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val consonantsSetIteratorSize = consonantsSetIterator.size\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val consonantsSetIteratorNext\
    \ = consonantsSetIterator.next\n        val vowelsSetIteratorNextSize = vowelsSetIteratorNext.size\n\
    \        val consonantsSetIteratorNextSize = consonantsSetIteratorNext.size\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ consonantsSetIteratorNextNext = consonantsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n        val\
    \ consonantsSetIteratorNextNextSize = consonantsSetIteratorNextNext.size\n   \
    \     val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n   \
    \     val consonantsSetIteratorNextNextNext = consonantsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val consonantsSetIteratorNextNextNextSize = consonantsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val consonantsSetIteratorNextNextNextNext = consonantsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val consonantsSetIteratorNextNextNextNextSize = consonantsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val consonantsSetIteratorNextNextNextNextNext = \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmph9n2curc.scala:38:55 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSetIteratorNextNextNextNextNext\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \       ^\e[0m\n\e[31m   |\e[0m                                       expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmph9n2curc.scala:25:62 ------------------------\e[0m\e[0m\n\e[31m25 |\e\
    [0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e[0m = vowelsSetIteratorNext.next\n\
    \e[31m\e[31m   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue next is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmph9n2curc.scala:26:70 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSetIteratorNextNext\e\
    [0m = consonantsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                  \
    \                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ next is not a member of String - did you mean consonantsSetIteratorNext.indent?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph9n2curc.scala:39:5 ---------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660009641
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNextPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrev = vowelsSetIteratorNextPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevNext = vowelsSetIteratorNextPrevNextPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextNextPrev = vowelsSetIteratorNextPrevNextNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextNextNext = vowelsSetIteratorNextPrevNextNextNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextNextNextPrev = vowelsSetIteratorNextPrevNextNextNextNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextNextNextNext = vowelsSetIteratorNextPrevNextNextNextNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextNextNextNextPrev = vowelsSetIteratorNextPrevNextNextNextNextNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextNextNextNextNextPrev = vowelsSetIteratorNextPrevNextNextNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpca2lrujn.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpca2lrujn.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpca2lrujn.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpca2lrujn.scala:24:48 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevNextPrevPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.prev\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpca2lrujn.scala:25:48\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevNextPrevNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longe"
  stdout: ''
  timestamp: 1660009641
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrev = vowelsSetIteratorNextPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextPrevPrevPrev = vowelsSetIteratorNextPrevPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowel\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyznk85sr.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpyznk85sr.scala:25:48 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevNextPrevPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.prev\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyznk85sr.scala:26:48\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevNextPrevNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m          "
  stdout: ''
  timestamp: 1660009641
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).length\n        val\
    \ consonantsCount = word.filter(consonants.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val consonantsCount = word.filter(consonants.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonantsCount = word.filter(consonants.contains).length\n     \
    \   val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonantsCount = word.filter(consonants.contains).length\n     \
    \   val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonantsCount = word.filter(consonants.contains).length\n     \
    \   val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonantsCount = word.filter(consonants.contains).length\n     \
    \   val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonantsCount = word.filter(consonants.contains).length\n     \
    \   val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonantsCount = word.filter(consonants.contains).length\n     \
    \   val vowelsCount = word.filter(vowels.contains).length\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val consonants\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpng7ct_3c.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpng7ct_3c.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpng7ct_3c.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpng7ct_3c.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpng7ct_3c.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmptr95hhzh.scala:34:11 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmptr95hhzh.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptr95hhzh.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmptr95hhzh.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptr"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsList\
    \ = vowelsAndConsonants.toList\n        val vowelsAndConsonantsListLength = vowelsAndConsonantsList.length\n\
    \        val vowelsAndConsonantsListIterator = vowelsAndConsonantsList.iterator\n\
    \        val vowelsAndConsonantsListIteratorNext = vowelsAndConsonantsListIterator.next\n\
    \        val vowelsAndConsonantsListIteratorPrev = vowelsAndConsonantsListIterator.prev\n\
    \        val vowelsAndConsonantsListIteratorNextPrev = vowelsAndConsonantsListIterator.next\n\
    \        val vowelsAndConsonantsListIteratorNextNext = vowelsAndConsonantsListIterator.nextNext\n\
    \        val vowelsAndConsonantsListIteratorNextNextPrev = vowelsAndConsonantsListIterator.nextNextPrev\n\
    \        val vowelsAndConsonantsListIteratorNextNextNext = vowelsAndConsonantsListIterator.nextNextNext\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextPrev = vowelsAndConsonantsListIterator.nextNextNextPrev\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextNext = vowelsAndConsonantsListIterator.nextNextNextNext\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextNextPrev = vowelsAndConsonantsListIterator.nextNextNextNextPrev\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextNextNextPrev = vowelsAndConsonantsListIterator.nextNextNextNextNextPrev\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextNextNextNextPrev = vowelsAndConsonantsListIterator.nextNextNextNextNextNextPrev\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextNextNextNextNextPrev =\
    \ vowelsAndConsonantsListIterator.nextNextNextNextNextNextNextPrev\n        val\
    \ vowelsAndConsonantsListIteratorNextNextNextNextNextNextNextNextPrev = vowelsAndConsonantsListIterator.nextNextNextNextNextNextNextNextNextPrev\n\
    \        val vowelsAndConsonantsListIteratorNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsListIterator.next\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqr6sjfs4.scala:18:82 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListIteratorPrev\e\
    [0m = vowelsAndConsonantsListIterator.prev\n\e[31m\e[31m   |\e[0m            \
    \                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsAndConsonantsListIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpqr6sjfs4.scala:20:86 ------------------------\e[0m\e[0m\n\e[31m20 |\e\
    [0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListIteratorNextNext\e[0m =\
    \ vowelsAndConsonantsListIterator.nextNext\n\e[31m\e[31m   |\e[0m            \
    \                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      value nextNext is not a member of Iterator[String]\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqr6sjfs4.scala:21:90 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListIteratorNextNextPrev\e\
    [0m = vowelsAndConsonantsListIterator.nextNextPrev\n\e[31m\e[31m   |\e[0m    \
    \                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  value nextNextPrev is not a member of Iterator[String]\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqr6sjfs4.scala:22:90 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListIteratorNextNextNext\e\
    [0m = vowelsAndConsonantsListIterator.nextNextNext\n\e[31m\e[31m   |\e[0m    \
    \                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  value nextNextNext is not a member of Iterator[String]\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqr6sjfs4.scala:23:94 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListIteratorNextNextNextPrev\e\
    [0m = vowelsAndConsonantsListIterator.nextNextNextPrev\n\e[31m\e[31m   |\e[0m\
    \                                  "
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(vowels.contains).toSet.size\n        val consonants = Set(\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(consonants.contains).toSet.size\n        val vowelsCount\
    \ = vowelsCount + consonantsCount\n        val vowelsCount = vowelsCount + 1\n\
    \        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz0q8x4pw.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpz0q8x4pw.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpz0q8x4pw.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpz0q8x4pw.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpz0q8x4pw.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val vowelsCount2 = word.count(vowels.toList)\n\
    \        val vowelsCount3 = word.count(vowels.toSet)\n        val vowelsCount4\
    \ = word.count(vowels.toSeq)\n        val vowelsCount5 = word.count(vowels.toSeq.toList)\n\
    \        val vowelsCount6 = word.count(vowels.toSeq.toSet)\n        val vowelsCount7\
    \ = word.count(vowels.toSeq.toSeq)\n        val vowelsCount8 = word.count(vowels.toSeq.toSeq.toList)\n\
    \        val vowelsCount9 = word.count(vowels.toSeq.toSeq.toSet)\n        val\
    \ vowelsCount10 = word.count(vowels.toSeq.toSeq.toSeq)\n        val vowelsCount11\
    \ = word.count(vowels.toSeq.toSeq.toSeq.toList)\n        val vowelsCount12 = word.count(vowels.toSeq.toSeq.toSeq.toSet)\n\
    \        val vowelsCount13 = word.count(vowels.toSeq.toSeq.toSeq.toSeq)\n    \
    \    val vowelsCount14 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toList)\n \
    \       val vowelsCount15 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSet)\n\
    \        val vowelsCount16 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq)\n\
    \        val vowelsCount17 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq.toList)\n\
    \        val vowelsCount18 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSet)\n\
    \        val vowelsCount19 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq.toSeq)\n\
    \        val vowelsCount20 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq.toList)\n\
    \        val vowelsCount21 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSet)\n\
    \        val vowelsCount22 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq.toSeq)\n\
    \        val vowelsCount23 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq.toList)\n\
    \        val vowelsCount24 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSet)\n\
    \        val vowelsCount25 = word.count(vowels.toSeq.toSeq.toSeq.toSeq.toSeq.toSeq)\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5_l4r3k7.scala:12:37\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5_l4r3k7.scala:13:45 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.count(vowels.toList)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                      Found:    List[String]\n\e\
    [31m   |\e[0m                                      Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5_l4r3k7.scala:15:45\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount4\e\
    [0m = word.count(vowels.toSeq)\n\e[31m\e[31m   |\e[0m                        \
    \              ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \          Found:    Seq[String]\n\e[31m   |\e[0m                            \
    \          Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5_l4r3k7.scala:16:51 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount5\e[0m = word.count(vowels.toSeq.toList)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                      Found:    List[String]\n\
    \e[31m   |\e[0m                                      Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5_l4r3k7.scala:18:51\
    \ ------------"
  stdout: ''
  timestamp: 1660009647
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants = Set(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCountMinusConsonantsCount = vowelsCount - consonantsCount\n\
    \        val vowelsCountMinusConsonantsCountMinusVowelsCount = vowelsCountMinusConsonantsCount\
    \ - vowels\n        val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCount - vowelsCountMinusVowels\n\
    \        val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCount - vowelsCountMinusVowelsCountMinusVowels\n\
    \        val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ - vowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowels\n \
    \       val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ - vowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowels\n\
    \        val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowels\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx2bq7xh5.scala:22:4 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpx2bq7xh5.scala:12:37 --------------------\e[0m\e[0m\n\e[31m12 |\e[0m\
    \        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels)\n\e[31m\e\
    [31m   |\e[0m                                     ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \               Found:    (vowels : scala.collection.mutable.Set[String])\n\e\
    [31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpx2bq7xh5.scala:14:41 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.count(consonants)\n\
    \e[31m\e[31m   |\e[0m                                         ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m           Found:    (consonants : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m           Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E134] Type Error: /tmp/tmpx2bq7xh5.scala:16:94 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountMinusConsonantsCountMinusVowelsCount\e\
    [0m = vowelsCountMinusConsonantsCount - vowels\n\e[31m\e[31m   |\e[0m        \
    \                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m None of the overloaded alternatives of \e[33mmethod\e[0m\
    \ \e[35m-\e[0m in \e[33mclass\e[0m \e[35mInt\e[0m with types\n\e[31m   |\e[0m\
    \  (x: Double): Double\n\e[31m   |\e[0m  (x: Float): Float\n\e[31m   |\e[0m  (x:\
    \ Long): Long\n\e[31m   |\e[0m  (x: Int): Int\n\e[31m   |\e[0m  (x: Char): Int\n\
    \e[31m   |\e[0m  (x: Short): Int\n\e[31m   |\e[0m  (x: Byte): Int\n\e[31m   |\e\
    [0m match arguments ((vowels : scala.collection.mutable.Set[String]))\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpx2bq7xh5.scala:22:5 ---------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = word.length - 1\n\
    \        var vowelCount2 = 0\n        var closestVowel = \"\"\n        var closestVowel2\
    \ = \"\"\n        var closestVowel3 = \"\"\n        var closestVowel4 = \"\"\n\
    \        var closestVowel5 = \"\"\n        var closestVowel6 = \"\"\n        var\
    \ closestVowel7 = \"\"\n        var closestVowel8 = \"\"\n        var closestVowel9\
    \ = \"\"\n        var closestVowel10 = \"\"\n        var closestVowel11 = \"\"\
    \n        var closestVowel12 = \"\"\n        var closestVowel13 = \"\"\n     \
    \   var closestVowel14 = \"\"\n        var closestVowel15 = \"\"\n        var\
    \ closestVowel16 = \"\"\n        var closestVowel17 = \"\"\n        var closestVowel18\
    \ = \"\"\n        var closestVowel19 = \"\"\n        var closestVowel20 = \"\"\
    \n        var closestVowel21 = \"\"\n        var closestVowel22 = \"\"\n     \
    \   var closestVowel23 = \"\"\n        var closestVowel24 = \"\"\n        var\
    \ closestVowel25 = \"\"\n        var closestVowel26 = \"\"\n        var closestVowel27\
    \ = \"\"\n        var closestVowel28 = \"\"\n        var closestVowel29 = \"\"\
    \n        var closestVowel30 = \"\"\n        var closestVowel31 = \"\"\n     \
    \   var closestVowel32 = \"\"\n        var closestVowel33 = \"\"\n        var\
    \ closestVowel34 = \"\"\n        var closestVowel35 = \"\"\n        var closestVowel36\
    \ = \"\"\n        var closestVowel37 = \"\"\n        var closestVowel38 = \"\"\
    \n        var closestVowel39 = \"\"\n        var closestVowel40 = \"\"\n     \
    \   var closestVowel41 = \"\"\n        var closestVowel42 = \"\"\n        var\
    \ closestVowel43 = \"\"\n        var closestVowel44 = \"\"\n        var closestVowel45\
    \ = \"\"\n        var closestVowel46 = \"\"\n        var closestVowel47 = \"\"\
    \n        var closestVowel48 = \"\"\n        var closestVowel49 = \"\"\n     \
    \   var closestVowel50 = \"\"\n        var closestVowel51 = \"\"\n        var\
    \ closestVowel52 = \"\"\n        var closestVowel53 = \"\"\n        var closestVowel54\
    \ = \"\"\n        var closestVowel55 = \"\"\n        var closestVowel56 = \"\"\
    \n        var closestVowel57 = \"\"\n        var closestVowel58 = \"\"\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3bg7vw8x.scala:74:5\
    \ ---------------------\e[0m\e[0m\n\e[31m74 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIterator\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_j6ll100.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:29:64 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:31:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n\
    \        val vowelsSet2 = vowels.toSet.reverse\n        val consonantsSet2 = consonants.toSet.reverse\n\
    \        val vowelsSet3 = vowels.toSet.reverse.tail\n        val consonantsSet3\
    \ = consonants.toSet.reverse.tail\n        val vowelsSet4 = vowels.toSet.reverse.tail.tail\n\
    \        val consonantsSet4 = consonants.toSet.reverse.tail.tail\n        val\
    \ vowelsSet5 = vowels.toSet.reverse.tail.tail.tail\n        val consonantsSet5\
    \ = consonants.toSet.reverse.tail.tail.tail\n        val vowelsSet6 = vowels.toSet.reverse.tail.tail.tail.tail\n\
    \        val consonantsSet6 = consonants.toSet.reverse.tail.tail.tail.tail\n \
    \       val vowelsSet7 = vowels.toSet.reverse.tail.tail.tail.tail.tail\n     \
    \   val consonantsSet7 = consonants.toSet.reverse.tail.tail.tail.tail.tail\n \
    \       val vowelsSet8 = vowels.toSet.reverse.tail.tail.tail.tail.tail.tail\n\
    \        val consonantsSet8 = consonants.toSet.reverse.tail.tail.tail.tail.tail.tail\n\
    \        val vowelsSet9 = vowels.toSet.reverse.tail.tail.tail.tail.tail.tail.tail\n\
    \        val consonantsSet9 = consonants.toSet.reverse.tail.tail.tail.tail.tail.tail.tail\n\
    \        val vowelsSet10 = vowels.toSet.reverse.tail.tail.tail.tail.tail.tail.tail.tail\n\
    \        val consonantsSet10 = consonants.toSet.reverse.tail.tail.tail.tail.tail.tail.tail.tail\n\
    \        val vowelsSet11 = vowels.toSet.reverse.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail\n\
    \        val consonantsSet11 = conson\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp968m25kh.scala:15:38 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet2\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp968m25kh.scala:16:46 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSet2\e[0m = consonants.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp968m25kh.scala:17:38 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet3\e[0m = vowels.toSet.reverse.tail\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp968m25kh.scala:18:46 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSet3\e[0m = consonants.toSet.reverse.tail\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp968m25kh.scala:19:38 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet4\e[0m = vowels.toSet.reverse.tail.tail\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp968m25kh.scala:20:46 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSet4\e[0m = consonants.toSet.reverse.tail.tail\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue reverse is n"
  stdout: ''
  timestamp: 1660009647
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.previous\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.previous\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.previous\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevPrev.previous\n\
    \        val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrev = vowelsSetIteratorPrevPrevNext.previous\n\
    \        val vowelsSetIteratorPrevPrevPrevNext = vowelsSetIteratorPrevPrevNext.next\n\
    \        val vowelsSetIteratorPrevPrevNextPrev = vowelsSetIteratorPrevNextPrev.previous\n\
    \        val vowelsSetIteratorPrevPrevNextNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrevPrev.previous\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrevNext.next\n\
    \        val vowelsSetIteratorPrevNextNextPrevPrev = vowelsSetIteratorPrevNextNextPrevPrev.previous\n\
    \        val vowelsSetIteratorPrevNextNextPrevNext = vowelsSetIteratorPrevNextNextPrevNext.next\n\
    \        val vowelsSetIteratorPrevNextNextNextPrevPrev = vowelsSetIteratorPrevNextNextNextPrevPrev.previous\n\
    \        val vowelsSetIteratorPrevNextNextNextPrevNext = vowelsSetIteratorPrevNextNextNextPrevNext.next\n\
    \        val vowelsSetIteratorPrevNextNextNextNextPrevPrev = vowelsSetIteratorPrevNextNextNextNextPrevPrev.previous\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7bp6pyaj.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp7bp6pyaj.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                            value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp7bp6pyaj.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp7bp6pyaj.scala:28:48 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevPrevNextPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.previous\n\e[31m\e[31m   |\e[0m          \
    \                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7bp6pyaj.scala:29:48\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevPrevNextNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longe"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpa4wixrdj.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpa4wixrdj.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpa4wixrdj.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa4wixrdj.scala:16:62\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextPrev\e[0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m\
    \   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa4wixrdj.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmptr95hhzh.scala:34:11 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmptr95hhzh.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptr95hhzh.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmptr95hhzh.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptr"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.tail\n        val vowelsAfter = vowels.toList\n\
    \        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase)\n        val vowelsBetweenList = vowelsBetween.map(x\
    \ => x._1.toString.toLowerCase + x._2.toString.toLowerCase)\n        val vowelsBetweenSet\
    \ = vowelsBetweenList.map(x => vowelsBetweenList.indexOf(x) + 1)\n        val\
    \ vowelsBetweenSetList = vowelsBetweenSet.map(x => vowelsBetweenSet.indexOf(x)\
    \ + 1)\n        val vowelsBetweenSetSet = vowelsBetweenSetList.map(x => vowelsBetweenSetList.indexOf(x)\
    \ + 1)\n        val vowelsBetweenSetSetList = vowelsBetweenSetSet.map(x => vowelsBetweenSetList.indexOf(x)\
    \ + 1)\n        val vowelsBetweenSetSetSet = vowelsBetweenSetSetList.map(x =>\
    \ vowelsBetweenSetSetList.indexOf(x) + 1)\n        val vowelsBetweenSetSetSetList\
    \ = vowelsBetweenSetSetSet.map(x => vowelsBetweenSetSetList.indexOf(x) + 1)\n\
    \        val vowelsBetweenSetSetSetSet = vowelsBetweenSetSetSetList.map(x => vowelsBetweenSetSetSetList.indexOf(x)\
    \ + 1)\n        val vowelsBetweenSetSetSetSetList = vowelsBetweenSetSetSetSet.map(x\
    \ => vowelsBetweenSetSetSetList.indexOf(x) + 1)\n        val vowelsBetweenSetSetSetSetSet\
    \ = vowelsBetweenSetSetSetSetList.map(x => vowelsBetweenSetSetSetList.indexOf(x)\
    \ + 1)\n        val vowelsBetweenSetSetSetSetSet = vowelsBetweenSetSetSetSetList.map(x\
    \ => vowelsBetweenSetSetSetSetList.indexOf(x) + 1)\n        val vowelsBetweenSetSetSetSetSetList\
    \ = vowelsBetweenSetSetSetSetSet.map(x => vowelsBetweenSetSetSetSetList.indexOf(x)\
    \ + 1)\n        val vowelsBetweenSetSetSetSetSetSet = vowelsBetweenSetSetSetSetSetList.map(x\
    \ => vowelsBetweenSetSetSetSetSetList.indexOf(x) + 1)\n        val vowel\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi0p4hdw9.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi0p4hdw9.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsBetweenSetSetSetSetSet\e[0m = vowelsBetweenSetSetSetSetList.map(\e\
    [36mx\e[0m => vowelsBetweenSetSetSetSetList.indexOf(x) + \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetweenSetSetSetSetSet is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsBetweenSetSetSetSetSet\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi0p4hdw9.scala:15:67 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBefore.zip(vowelsAfter).filter(_._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase)\n\e[31m\e[31m   |\e[0m                       \
    \                                          ^^^^\e[0m\n\e[31m   |\e[0m        \
    \                              value _1 is not a member of String\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpi0p4hdw9.scala:30:5 ---------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660009646
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx1ezu9kl.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx1ezu9kl.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx1ezu9kl.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpx1ezu9kl.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpx1ezu9kl.scala:27:60 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx1ezu9kl.scala:29:64\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e[0m = vowelsSetIterator"
  stdout: ''
  timestamp: 1660009646
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsList\
    \ = vowelsAndConsonants.toList\n        val vowelsAndConsonantsListReversed =\
    \ vowelsAndConsonantsList.reverse\n        val vowelsAndConsonantsListReversedList\
    \ = vowelsAndConsonantsListReversed.toList\n        val vowelsAndConsonantsListReversedListLength\
    \ = vowelsAndConsonantsListReversed.length\n        val vowelsAndConsonantsListReversedListLength2\
    \ = vowelsAndConsonantsListReversed.length * 2\n        val vowelsAndConsonantsListReversedListLength3\
    \ = vowelsAndConsonantsListReversed.length * 3\n        val vowelsAndConsonantsListReversedListLength4\
    \ = vowelsAndConsonantsListReversed.length * 4\n        val vowelsAndConsonantsListReversedListLength5\
    \ = vowelsAndConsonantsListReversed.length * 5\n        val vowelsAndConsonantsListReversedListLength6\
    \ = vowelsAndConsonantsListReversed.length * 6\n        val vowelsAndConsonantsListReversedListLength7\
    \ = vowelsAndConsonantsListReversed.length * 7\n        val vowelsAndConsonantsListReversedListLength8\
    \ = vowelsAndConsonantsListReversed.length * 8\n        val vowelsAndConsonantsListReversedListLength9\
    \ = vowelsAndConsonantsListReversed.length * 9\n        val vowelsAndConsonantsListReversedListLength10\
    \ = vowelsAndConsonantsListReversed.length * 10\n        val vowelsAndConsonantsListReversedListLength11\
    \ = vowelsAndConsonantsListReversed.length * 11\n        val vowelsAndConsonantsListReversedListLength12\
    \ = vowelsAndConsonantsListReversed.length * 12\n        val vowelsAndConsonantsListReversedListLength13\
    \ = vowelsAndConsonantsListReversed.length * 13\n        val vowelsAndConsonantsListReversedListLength14\
    \ = vowelsAndConsonantsListReversed.length * 14\n        val vowelsAndConsonantsListReversedListLength15\
    \ = vowelsAndConsonantsListReversed.length * 15\n        val vowelsAndConsonants\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk_il569y.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpk_il569y.scala:33:5 ---------------------\e[0m\e[0m\n\e[31m33 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.filter(word => word.startsWith(\"\
    a\"))\n        val vowelsAfter = vowels.toList.filter(word => word.endsWith(\"\
    a\"))\n        val vowelsBetween = vowelsAfter.filter(word => word.startsWith(\"\
    a\")).filter(word => word.endsWith(\"a\"))\n        val vowelsBetween2 = vowelsAfter.filter(word\
    \ => word.startsWith(\"a\")).filter(word => word.endsWith(\"a\")).filter(word\
    \ => word.startsWith(\"a\")).filter(word => word.endsWith(\"a\"))\n        val\
    \ vowelsBetween3 = vowelsAfter.filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\"))\n        val vowelsBetween4 = vowelsAfter.filter(word\
    \ => word.startsWith(\"a\")).filter(word => word.endsWith(\"a\")).filter(word\
    \ => word.startsWith(\"a\")).filter(word => word.endsWith(\"a\")).filter(word\
    \ => word.startsWith(\"a\")).filter(word => word.endsWith(\"a\")).filter(word\
    \ => word.startsWith(\"a\")).filter(word => word.endsWith(\"a\"))\n        val\
    \ vowelsBetween5 = vowelsAfter.filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => word.startsWith(\"a\")).filter(word\
    \ => word.endsWith(\"a\")).filter(word => \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmphkl6cjbo.scala:19:631 --------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween5\e[0m = vowelsAfter.filter(\e\
    [36mword\e[0m => word.startsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m =>\
    \ word.endsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.startsWith(\e\
    [31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.endsWith(\e[31m\"a\"\e[0m)).filter(\e\
    [36mword\e[0m => word.startsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m =>\
    \ word.endsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.startsWith(\e\
    [31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.endsWith(\e[31m\"a\"\e[0m)).filter(\e\
    [36mword\e[0m => word.startsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m =>\
    \ word.endsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.startsWith(\e\
    [31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.endsWith(\e[31m\"a\"\e[0m)).filter(\e\
    [36mword\e[0m => word.startsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m =>\
    \ word.endsWith(\e[31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.startsWith(\e\
    [31m\"a\"\e[0m)).filter(\e[36mword\e[0m => word.endsWith(\e[31m\"a\"\e[0m)).filter(\e\
    [36mword\e[0m => \n\e[31m\e[31m   |\e[0m                                     \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                              ^\e[0m\n\e[31m\
    \   |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphkl6cjbo.scala:20:5\
    \ ---------------------\e[0m\e[0m\n\e[31m20 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[3"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.tail\n        val vowelsAfter = vowels.toList\n\
    \        val vowelsBetween = vowelsBefore.zip(vowelsAfter)\n        val vowelsBetweenWithConsonants\
    \ = vowelsBetween.map(x => x._1 + \"-\" + x._2)\n        val consonantsBefore\
    \ = consonants.toList.tail\n        val consonantsAfter = consonants.toList\n\
    \        val consonantsBetween = consonantsBefore.zip(consonantsAfter)\n     \
    \   val consonantsBetweenWithVowels = consonantsBetween.map(x => x._1 + \"-\"\
    \ + x._2)\n        val vowelsBetweenWithConsonants = vowelsBetweenWithConsonants.map(x\
    \ => x.replaceAll(\"\\\\-\", \"-\"))\n        val vowelsBetweenWithVowels = vowelsBetweenWithVowels.map(x\
    \ => x.replaceAll(\"\\\\-\", \"-\"))\n        val consonantsBetweenWithVowels\
    \ = consonantsBetweenWithVowels.map(x => x.replaceAll(\"\\\\-\", \"-\"))\n   \
    \     val vowelsBetweenWithConsonants = vowelsBetweenWithConsonants.map(x => x.replaceAll(\"\
    \\\\-\", \"-\"))\n        val vowelsBetweenWithConsonants = vowelsBetweenWithConsonants.map(x\
    \ => x.replaceAll(\"\\\\-\", \"-\"))\n        val vowelsBetweenWithConsonants\
    \ = vowelsBetweenWithConsonants.map(x => x.replaceAll(\"\\\\-\", \"-\"))\n   \
    \     val vowelsBetweenWithConsonants = vowelsBetweenWithConsonants.map(x => x.replaceAll(\"\
    \\\\-\", \"-\"))\n        val vowelsBetweenWithConsonants = vowelsBetweenWithConsonants.map(x\
    \ => x.replaceAll(\"\\\\-\", \"-\"))\n        val vowelsBetweenWithConsonants\
    \ = vowelsBetweenWithConsonants.map(x => x.replaceAll(\"\\\\-\", \"-\"))\n   \
    \     val vowelsBetweenWithConsonants = vowelsBetweenWithConsonants.map(x => x.replaceAll(\"\
    \\\\-\", \"-\"))\n        val vowelsBetweenWith\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphw2v911j.scala:32:4 ----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphw2v911j.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsBetweenWithConsonants\e[0m = vowelsBetweenWithConsonants.map(\e\
    [36mx\e[0m => x.replaceAll(\e[31m\"\\\\-\"\e[0m, \e[31m\"-\"\e[0m))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetweenWithConsonants is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsBetweenWithConsonants\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmphw2v911j.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetweenWithVowels\e\
    [0m = consonantsBetweenWithVowels.map(\e[36mx\e[0m => x.replaceAll(\e[31m\"\\\\\
    -\"\e[0m, \e[31m\"-\"\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsBetweenWithVowels is already defined as \e[33mvalue\e\
    [0m \e[35mconsonantsBetweenWithVowels\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmphw2v911j.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetweenWithConsonants\e\
    [0m = vowelsBetweenWithConsonants.map(\e[36mx\e[0m => x.replaceAll(\e[31m\"\\\\\
    -\"\e[0m, \e[31m\"-\"\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetweenWithConsonants is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsBetweenWithConsonants\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel def"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.filter(_ != \"a\")\n      \
    \  val vowelsSet3 = vowelsSet.filter(_ != \"e\")\n        val vowelsSet4 = vowelsSet.filter(_\
    \ != \"i\")\n        val vowelsSet5 = vowelsSet.filter(_ != \"o\")\n        val\
    \ vowelsSet6 = vowelsSet.filter(_ != \"u\")\n        val vowelsSet7 = vowelsSet.filter(_\
    \ != \"A\")\n        val vowelsSet8 = vowelsSet.filter(_ != \"E\")\n        val\
    \ vowelsSet9 = vowelsSet.filter(_ != \"I\")\n        val vowelsSet10 = vowelsSet.filter(_\
    \ != \"O\")\n        val vowelsSet11 = vowelsSet.filter(_ != \"U\")\n        val\
    \ vowelsSet12 = vowelsSet.filter(_ != \"a\")\n        val vowelsSet13 = vowelsSet.filter(_\
    \ != \"e\")\n        val vowelsSet14 = vowelsSet.filter(_ != \"i\")\n        val\
    \ vowelsSet15 = vowelsSet.filter(_ != \"o\")\n        val vowelsSet16 = vowelsSet.filter(_\
    \ != \"u\")\n        val vowelsSet17 = vowelsSet.filter(_ != \"A\")\n        val\
    \ vowelsSet18 = vowelsSet.filter(_ != \"E\")\n        val vowelsSet19 = vowelsSet.filter(_\
    \ != \"I\")\n        val vowelsSet20 = vowelsSet.filter(_ != \"O\")\n        val\
    \ vowelsSet21 = vowelsSet.filter(_ != \"U\")\n        val vowelsSet22 = vowelsSet.filter(_\
    \ != \"a\")\n        val vowelsSet23 = vowelsSet.filter(_ != \"e\")\n        val\
    \ vowelsSet24 = vowelsSet.filter(_ != \"i\")\n        val vowelsSet25 = vowelsSet.filter(_\
    \ != \"o\")\n        val vowelsSet26 = vowelsSet.filter(_ != \"u\")\n        val\
    \ vowelsSet27 = vowelsSet.filter(_ != \"A\")\n        val vowelsSet28 = vowelsSet.filter(_\
    \ != \"E\")\n        val vowelsSet29 = vowelsSet.filter(_ != \"I\")\n        val\
    \ vowelsSet30 = vowelsSet.filter(_ != \"O\")\n        val vowelsSet31 = vowelsSet.filter(_\
    \ != \"U\")\n        val vowelsSet32 = vowelsSet.filter(_ != \"a\")\n        val\
    \ vowels\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6_8ph03j.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp6_8ph03j.scala:45:5 ---------------------\e[0m\e[0m\n\e[31m45 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet3 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet4\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet5 = vowelsSet.filter(_\
    \ != vowels.first)\n        val vowelsSet6 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet7 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet8\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet9 = vowelsSet.filter(_\
    \ != vowels.first)\n        val vowelsSet10 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet11 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet12\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet13 = vowelsSet.filter(_\
    \ != vowels.first)\n        val vowelsSet14 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet15 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet16\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet17 = vowelsSet.filter(_\
    \ != vowels.first)\n        val vowelsSet18 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet19 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet20\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet21 = vowelsSet.filter(_\
    \ != vowels.first)\n        val vowelsSet22 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet23 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet24\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet25 = vowelsSet.filter(_\
    \ != vowels.first)\n        val vowelsSet26 = vowelsSet.filter(_ != vowels.last)\n\
    \        val vowelsSet27 = vowelsSet.filter(_ != vowels.first)\n        val vowelsSet28\
    \ = vowelsSet.filter(_ != vowels.last)\n        val vowelsSet29 = vowelsSet.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplj2ewals.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmplj2ewals.scala:14:54 ------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsSet3\e[0m = vowelsSet.filter(_ != vowels.first)\n\
    \e[31m\e[31m   |\e[0m                                               ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue first is not a member of scala.collection.mutable.Set[String]\
    \ - did you mean vowels.find?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplj2ewals.scala:16:54\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSet5\e[0m = vowelsSet.filter(_ != vowels.first)\n\e[31m\e[31m   |\e\
    [0m                                               ^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mvalue first is not a member of scala.collection.mutable.Set[String] -\
    \ did you mean vowels.find?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplj2ewals.scala:18:54\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSet7\e[0m = vowelsSet.filter(_ != vowels.first)\n\e[31m\e[31m   |\e\
    [0m                                               ^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mvalue first is not a member of scala.collection.mutable.Set[String] -\
    \ did you mean vowels.find?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplj2ewals.scala:20:54\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSet9\e[0m = vowelsSet.filter(_ != vowels.first)\n\e[31m\e[31m   |\e\
    [0m                                               ^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mvalue first is not a member of scala.collection.mutable.Set[String] -\
    \ did you mean vowels.find?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplj2ewals.scala:22:55\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSet11\e[0m = vowelsSet.filter(_ != vowels.first)\n\e[31m\e[31m   |\e\
    [0m                                                ^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvalue first is not a member of "
  stdout: ''
  timestamp: 1660009647
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwwo4ot66.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwwo4ot66.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwwo4ot66.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwwo4ot66.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009647
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(c => vowels.contains(c)).size\n        val consonants = word.filter(c\
    \ => !vowels.contains(c))\n        val consonantsCount = consonants.size\n   \
    \     val vowelsIndex = consonants.indexOfLast(c => vowels.contains(c))\n    \
    \    val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n \
    \       val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast(c => vowels.contains(c))\n\
    \        val vowelsCount = consonants.lastIndexOfLast\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5nf0fqp8.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = consonants.lastIndexOfLast(\e\
    [36mc\e[0m => vowels.contains(c))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5nf0fqp8.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = consonants.lastIndexOfLast(\e\
    [36mc\e[0m => vowels.contains(c))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5nf0fqp8.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = consonants.lastIndexOfLast(\e\
    [36mc\e[0m => vowels.contains(c))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5nf0fqp8.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = consonants.lastIndexOfLast(\e\
    [36mc\e[0m => vowels.contains(c))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group "
  stdout: ''
  timestamp: 1660009648
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsSet\
    \ = vowelsAndConsonants.toSet\n        val vowelsAndConsonantsSetIterator = vowelsAndConsonantsSet.iterator\n\
    \        val vowelsAndConsonantsSetIteratorNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorPrev = vowelsAndConsonantsSetIterator.prev\n\
    \        val vowelsAndConsonantsSetIteratorNextPrev = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextPrev = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextPrev = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextPrev = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextPrev = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextPrev = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextPrev =\
    \ vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSet\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpf2vm4i3h.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf2vm4i3h.scala:17:80\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsAndConsonantsSetIteratorPrev\e[0m = vowelsAndConsonantsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsAndConsonantsSetIterator.drop?\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpf2vm4i3h.scala:33:5 ---------------------\e[0m\e[0m\n\e[31m33 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelsCount\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount2 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount3 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount4 = word.filter(x => vowels.contains(x)).size\n      \
    \  var vowelsCount5 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount6\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount7 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount8 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount9 = word.filter(x => vowels.contains(x)).size\n      \
    \  var vowelsCount10 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount11 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount12\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount13 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount14 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount15 = word.filter(x => vowels.contains(x)).size\n     \
    \   var vowelsCount16 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount17 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount18\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount19 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount20 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount21 = word.filter(x => vowels.contains(x)).size\n     \
    \   var vowelsCount22 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount23 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount24\
    \ = word.filter(x => vowels.contains(x)).size\n        var vowelsCount25 = word.filter(x\
    \ => vowels.contains(x)).size\n        var vowelsCount26 = word.filter(x => vowels.contains(x)).size\n\
    \        var vowelsCount27 = word.filter(x => vowels.contains(x)).size\n     \
    \   var vowelsCount28 = word.filter(x => vowels.contains(x)).size\n        var\
    \ vowelsCount29 = word.filter(x => vowels.contains(x)).size\n        var vowelsCount30\
    \ = word.filter(x => vowels.contains(x)).size\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4i53gvyp.scala:12:59\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                           ^\e[0m\n\e[31m \
    \  |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4i53gvyp.scala:13:60\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount2\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4i53gvyp.scala:14:60\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount3\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4i53gvyp.scala:15:60\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount4\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m               "
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = conson\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptqq7cq5b.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetSize\e[0m = vowelsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvowelsSetSize is already defined as \e[33mvalue\e[0m \e[35mvowelsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSetSize\e[0m = consonantsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsSetSize is already defined as \e[33mvalue\e[0m \e[35mconsonantsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetSize\e[0m = vowelsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvowelsSetSize is already defined as \e[33mvalue\e[0m \e[35mvowelsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSetSize\e[0m = consonantsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsSetSize is already defined as \e[33mvalue\e[0m \e[35mconsonantsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetSize\e[0m = vowelsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        val vowelsSet\
    \ = vowels.toSet;\n        val vowelsSetIterator = vowelsSet.iterator;\n     \
    \   val vowelsSetIteratorNext = vowelsSetIterator.next;\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next;\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8gg4zcg.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu8gg4zcg.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu8gg4zcg.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNex"
  stdout: ''
  timestamp: 1660009656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowels.toSet.reverse\n        val vowelsSet3\
    \ = vowels.toSet\n        val vowelsSet4 = vowels.toSet.reverse\n        val vowelsSet5\
    \ = vowels.toSet\n        val vowelsSet6 = vowels.toSet.reverse\n        val vowelsSet7\
    \ = vowels.toSet\n        val vowelsSet8 = vowels.toSet.reverse\n        val vowelsSet9\
    \ = vowels.toSet\n        val vowelsSet10 = vowels.toSet.reverse\n        val\
    \ vowelsSet11 = vowels.toSet\n        val vowelsSet12 = vowels.toSet.reverse\n\
    \        val vowelsSet13 = vowels.toSet\n        val vowelsSet14 = vowels.toSet.reverse\n\
    \        val vowelsSet15 = vowels.toSet\n        val vowelsSet16 = vowels.toSet.reverse\n\
    \        val vowelsSet17 = vowels.toSet\n        val vowelsSet18 = vowels.toSet.reverse\n\
    \        val vowelsSet19 = vowels.toSet\n        val vowelsSet20 = vowels.toSet.reverse\n\
    \        val vowelsSet21 = vowels.toSet\n        val vowelsSet22 = vowels.toSet.reverse\n\
    \        val vowelsSet23 = vowels.toSet\n        val vowelsSet24 = vowels.toSet.reverse\n\
    \        val vowelsSet25 = vowels.toSet\n        val vowelsSet26 = vowels.toSet.reverse\n\
    \        val vowelsSet27 = vowels.toSet\n        val vowelsSet28 = vowels.toSet.reverse\n\
    \        val vowelsSet29 = vowels.toSet\n        val vowelsSet30 = vowels.toSet.reverse\n\
    \        val vowelsSet31 = vowels.toSet\n        val vowelsSet32 = vowels.toSet.reverse\n\
    \        val vowelsSet33 = vowels.toSet\n        val vowelsSet34 = vowels.toSet.reverse\n\
    \        val vowelsSet35 = vowels.toSet\n        val vowelsSet36 = vowels.toSet.reverse\n\
    \        val vowelsSet37 = vowels.toSet\n        val vowelsSet38 = vowels.toSet.reverse\n\
    \        val vowelsSet39 = vowels.toSet\n        val vowelsSet40 = vowels.toSet.reverse\n\
    \        val vowelsSet41 = vowel\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkk5y60ad.scala:13:38 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet2\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkk5y60ad.scala:15:38 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet4\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkk5y60ad.scala:17:38 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet6\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkk5y60ad.scala:19:38 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet8\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkk5y60ad.scala:21:39 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet10\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkk5y60ad.scala:23:39 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet12\e[0m = vowels.toSet.reverse\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue reverse is not a member of Set[String] - did you mean Set[String].reversed?\n\
    \e[31m\e[31m"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(c => vowels.contains(c)).size\n        val consonantsCount = word.filter(c\
    \ => !vowels.contains(c)).size\n        val vowelsCount = vowelsCount.toDouble\n\
    \        val consonantsCount = consonantsCount.toDouble\n        val vowelsCountInWord\
    \ = vowelsCount.toDouble\n        val consonantsCountInWord = consonantsCount.toDouble\n\
    \        val vowelsCountInWordInWord = vowelsCountInWord.toDouble\n        val\
    \ consonantsCountInWordInWord = consonantsCountInWord.toDouble\n        val vowelsCountInWordInWordInWord\
    \ = vowelsCountInWordInWord.toDouble\n        val consonantsCountInWordInWordInWord\
    \ = consonantsCountInWordInWord.toDouble\n        val vowelsCountInWordInWordInWordInWord\
    \ = vowelsCountInWordInWordInWord.toDouble\n        val consonantsCountInWordInWordInWordInWord\
    \ = consonantsCountInWordInWordInWord.toDouble\n        val vowelsCountInWordInWordInWordInWordInWord\
    \ = vowelsCountInWordInWordInWordInWord.toDouble\n        val consonantsCountInWordInWordInWordInWordInWord\
    \ = consonantsCountInWordInWordInWordInWord.toDouble\n        val vowelsCountInWordInWordInWordInWordInWordInWord\
    \ = vowelsCountInWordInWordInWordInWordInWord.toDouble\n        val consonantsCountInWordInWordInWordInWordInWordInWord\
    \ = consonantsCountInWordInWordInWordInWordInWord.toDouble\n        val vowelsCountInWordInWordInWordInWordInWordInWordInWord\
    \ = vowelsCountInWordInWordInWordInWordInWordInWord.toDouble\n        val consonantsCountInWordInWordInWordInWordInWordInWordInWord\
    \ = consonantsCountInWordInWordInWordInWordInWordInWordInWord.toDouble\n     \
    \   val vowelsCountInWordInWordInWordInWordInWordInWordInWordInWord = vowelsCountInWordInWordInWordInWordInWordInWordInWordInWord.toDouble\n\
    \        val consonantsCountInWordInWord\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbs9gaq43.scala:32:4 ----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbs9gaq43.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = vowelsCount.toDouble\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelsCount is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsCount\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbs9gaq43.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mconsonantsCount\e[0m = consonantsCount.toDouble\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mconsonantsCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mconsonantsCount\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpbs9gaq43.scala:12:59 --------------------\e[0m\e[0m\n\e[31m12 |\e[0m\
    \        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \   ^\e[0m\n\e[31m   |\e[0m                                                  \
    \  Found:    (c : Char)\n\e[31m   |\e[0m                                     \
    \               Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpbs9gaq43.scala:13:64 --------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e[36mc\e\
    [0m => !vowels.contains(c)).size\n\e[31m\e[31m   |\e[0m                      \
    \                                          ^\e[0m\n\e[31m   |\e[0m           \
    \                                         Found:    (c : Char)\n\e[31m  "
  stdout: ''
  timestamp: 1660009657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val consonants = Set(\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiupp7h9i.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpiupp7h9i.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiupp7h9i.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpiupp7h9i.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiupp7h9i.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIterator\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_j6ll100.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:29:64 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:31:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.prev\n        val vowelsSetIteratorNextNextPrev\
    \ = vowelsSetIteratorNextNext.prev\n        val vowelsSetIteratorNextNextNext\
    \ = vowelsSetIteratorNextNext.next\n        val vowelsSetIteratorNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNext.prev\n        val vowelsSetIteratorNextNextNextNext\
    \ = vowelsSetIteratorNextNextNext.next\n        val vowelsSetIteratorNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNext.prev\n        val vowelsSetIteratorNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNext.next\n        val vowelsSetIteratorNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNext.prev\n        val vowelsSetIteratorNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNext.next\n        val vowelsSetIteratorNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNext.prev\n        val vowelsSetIteratorNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNext.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n        val vowelsSetIteratorNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpeb8lhfeq.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNextPrev.prev\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeb8lhfeq.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpeb8lhfeq.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpeb8lhfeq.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpeb8lhfeq.scala:28:60 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNex"
  stdout: ''
  timestamp: 1660009658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = vowels.count(_ == word(0))\n        val consonantsCount\
    \ = consonants.count(_ == word(word.length - 1))\n        if (vowelsCount > 0\
    \ && consonantsCount > 0) {\n            val vowelsIndex = vowels.indexOf(word(0))\n\
    \            val consonantsIndex = consonants.indexOf(word(word.length - 1))\n\
    \            if (vowelsIndex < consonantsIndex) {\n                word\n    \
    \        } else {\n                word.substring(vowelsIndex + 1, word.length)\n\
    \            }\n        } else {\n            \"\"\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmppbg49_5i.scala:13:39 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowels.count(_\
    \ == word(\e[31m0\e[0m))\n\e[31m\e[31m   |\e[0m                              \
    \         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types String and\
    \ Char cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmppbg49_5i.scala:14:47\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m14 |\e[0m       \
    \ \e[33mval\e[0m \e[36mconsonantsCount\e[0m = consonants.count(_ == word(word.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                                    \
    \           ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of\
    \ types String and Char cannot be compared with == or !=\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmppbg49_5i.scala:16:37 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowels.indexOf(word(\e\
    [31m0\e[0m))\n\e[31m\e[31m   |\e[0m                              ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m   value indexOf is not a member of scala.collection.mutable.Set[String]\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppbg49_5i.scala:17:45 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mval\e[0m \e[36mconsonantsIndex\e[0m\
    \ = consonants.indexOf(word(word.length - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m\
    \                                  ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \ value indexOf is not a member of scala.collection.mutable.Set[String]\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(vowels.contains).size\n        val consonantsCount = word.filter(c\
    \ => !vowels.contains(c)).size\n        val vowelsCount = vowelsCount + consonantsCount\n\
    \        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0909wsk7.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0909wsk7.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0909wsk7.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0909wsk7.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0909wsk7.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu_5yb26f.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu_5yb26f.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu_5yb26f.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpu_5yb26f.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpu_5yb26f.scala:29:68 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\e[31m\e[31m   |\e\
    [0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Not found: vowelsSetIteratorNextNextNextNextNextNextNextNext\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu_5yb26f.scala:30:72\
    \ ------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNe"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNext\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4r4i9mbz.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4r4i9mbz.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4r4i9mbz.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4r4i9mbz.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp4r4i9mbz.scala:29:68 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\e[31m\e[31m   |\e\
    [0m                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Not found: vowelsSetIteratorNextNextNextNextNextNextNextNext\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4r4i9mbz.scala:30:72\
    \ ------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNe"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmyx5rrau.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmyx5rrau.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmyx5rrau.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmyx5rrau.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg99z763s.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpg99z763s.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpg99z763s.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpg99z763s.scala:27:60 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg99z763s.scala:28:68\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp31na__q7.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = vowels.toList.map(_.length).sum\n        val consonantsCount\
    \ = consonants.toList.map(_.length).sum\n        val vowelsIndex = word.indexOf(\"\
    a\")\n        val consonantsIndex = word.lastIndexOf(\"z\")\n        val vowelsCount\
    \ = vowels.toList.map(_.length).sum\n        val consonantsCount = consonants.toList.map(_.length).sum\n\
    \        val vowelsIndex = word.indexOf(\"a\")\n        val consonantsIndex =\
    \ word.lastIndexOf(\"z\")\n        val vowelsCount = vowels.toList.map(_.length).sum\n\
    \        val consonantsCount = consonants.toList.map(_.length).sum\n        val\
    \ vowelsIndex = word.indexOf(\"a\")\n        val consonantsIndex = word.lastIndexOf(\"\
    z\")\n        val vowelsCount = vowels.toList.map(_.length).sum\n        val consonantsCount\
    \ = consonants.toList.map(_.length).sum\n        val vowelsIndex = word.indexOf(\"\
    a\")\n        val consonantsIndex = word.lastIndexOf(\"z\")\n        val vowelsCount\
    \ = vowels.toList.map(_.length).sum\n        val consonantsCount = consonants.toList.map(_.length).sum\n\
    \        val vowelsIndex = word.indexOf(\"a\")\n        val consonantsIndex =\
    \ word.lastIndexOf(\"z\")\n        val vowelsCount = vowels.toList.map(_.length).sum\n\
    \        val consonantsCount = consonants.toList.map(_.length).sum\n        val\
    \ vowelsIndex = word.indexOf(\"a\")\n        val consonantsIndex = word.lastIndexOf(\"\
    z\")\n        val vowelsCount = vowels.toList.map(_.length).sum\n        val consonantsCount\
    \ = consonants.toList.map(_.length).sum\n        val vowelsIndex = word.indexOf(\"\
    a\")\n        val consonantsIndex = word.lastIndexOf(\"z\")\n        val vowelsCount\
    \ = vowels.toList.map(_.length).sum\n        val consonantsCount = consonants.toList.map(_.length).sum\n\
    \        val vowelsIndex = word.indexOf(\"a\")\n        val consonantsIndex =\
    \ word.lastIndexOf(\"z\")\n        val vowelsCount = \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp1bh9dmis.scala:45:25 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = \n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp1bh9dmis.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowels.toList.map(_.length).sum\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1bh9dmis.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = consonants.toList.map(_.length).sum\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp1bh9dmis.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.indexOf(\e\
    [31m\"a\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1bh9dmis.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexOf(\e\
    [31m\"z\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        var vowelIndex\
    \ = 0;\n        var vowelIndex2 = word.length() - 1;\n        var vowelIndex3\
    \ = word.length() - 2;\n        var vowelIndex4 = word.length() - 3;\n       \
    \ var vowelIndex5 = word.length() - 4;\n        var vowelIndex6 = word.length()\
    \ - 5;\n        var vowelIndex7 = word.length() - 6;\n        var vowelIndex8\
    \ = word.length() - 7;\n        var vowelIndex9 = word.length() - 8;\n       \
    \ var vowelIndex10 = word.length() - 9;\n        var vowelIndex11 = word.length()\
    \ - 10;\n        var vowelIndex12 = word.length() - 11;\n        var vowelIndex13\
    \ = word.length() - 12;\n        var vowelIndex14 = word.length() - 13;\n    \
    \    var vowelIndex15 = word.length() - 14;\n        var vowelIndex16 = word.length()\
    \ - 15;\n        var vowelIndex17 = word.length() - 16;\n        var vowelIndex18\
    \ = word.length() - 17;\n        var vowelIndex19 = word.length() - 18;\n    \
    \    var vowelIndex20 = word.length() - 19;\n        var vowelIndex21 = word.length()\
    \ - 20;\n        var vowelIndex22 = word.length() - 21;\n        var vowelIndex23\
    \ = word.length() - 22;\n        var vowelIndex24 = word.length() - 23;\n    \
    \    var vowelIndex25 = word.length() - 24;\n        var vowelIndex26 = word.length()\
    \ - 25;\n        var vowelIndex27 = word.length() - 26;\n        var vowelIndex28\
    \ = word.length() - 27;\n        var vowelIndex29 = word.length() - 28;\n    \
    \    var vowelIndex30 = word.length() - 29;\n        var vowelIndex31 = word.length()\
    \ - 30;\n        var vowelIndex32 = word.length() - 31;\n        var vowelIndex33\
    \ = word.length() - 32;\n        var vowelIndex34 = word.length() - 33;\n    \
    \    var vowelIndex35 = word.length() - 34;\n        var vowelIndex36 = word.length()\
    \ - 35;\n        var vowelIndex37 = word.length() - 36;\n        var vowelIndex38\
    \ = word.length() - 37;\n        var vowelIndex39 = word.length() - 38;\n    \
    \    var vowelIndex40 = word.length() - 39;\n        var vowelIndex41 = word.length()\
    \ - 40;\n        var vowelIndex42 = word.length() - 41;\n        var vowelIndex43\
    \ = word.length() - 42;\n        var vowelIndex44 = word.length() - 43;\n    \
    \    var vowelIndex45 = word.length() - 44;\n        var vowelIndex46 = word.length()\
    \ - 45;\n        var vowelIndex47 = word.length() - 46;\n        var vowelIndex48\
    \ = word.length() - 47;\n        var vowelIndex\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpoexgqtpl.scala:61:4 ----------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpoexgqtpl.scala:61:5 ---------------------\e[0m\e[0m\n\e[31m61 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n       \
    \ val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp852ehmtu.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp852ehmtu.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp852ehmtu.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp852ehmtu.scala:33:72 ------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\e[31m\e[31m   |\e[0m  \
    \                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m               Not found: vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp852ehmtu.scala:34:5\
    \ ---------------------\e[0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660009660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        var vowelsCount\
    \ = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_\
    \ == 'o') || word.count(_ == 'u') || word.count(_ == 'y');\n        var vowelsCount2\
    \ = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_\
    \ == 'o') || word.count(_ == 'u');\n        var vowelsCount3 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount4 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(_ == 'o');\n        var vowelsCount5 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount6 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(_ == 'o');\n        var vowelsCount7 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount8 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(_ == 'o');\n        var vowelsCount9 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount10 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(_ == 'o');\n        var vowelsCount11 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount12 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(_ == 'o');\n        var vowelsCount13 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount14 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(_ == 'o');\n        var vowelsCount15 = word.count(_ ==\
    \ 'a') || word.count(_ == 'e') || word.count(_ == 'i') || word.count(_ == 'o');\n\
    \        var vowelsCount16 = word.count(_ == 'a') || word.count(_ == 'e') || word.count(_\
    \ == 'i') || word.count(\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpaynvuenq.scala:27:111 --------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount16\e[0m = word.count(_\
    \ == \e[31m'a'\e[0m) || word.count(_ == \e[31m'e'\e[0m) || word.count(_ == \e\
    [31m'i'\e[0m) || word.count(\n\e[31m\e[31m   |\e[0m                          \
    \                                                                            \
    \         ^\e[0m\n\e[31m   |\e[0m                                       expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpaynvuenq.scala:12:47 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mvar\e[0m \e[36mvowelsCount\e[0m = word.count(_ == \e[31m'a'\e\
    [0m) || word.count(_ == \e[31m'e'\e[0m) || word.count(_ == \e[31m'i'\e[0m) ||\
    \ word.count(_ == \e[31m'o'\e[0m) || word.count(_ == \e[31m'u'\e[0m) || word.count(_\
    \ == \e[31m'y'\e[0m);\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value || is not a member of Int\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaynvuenq.scala:13:48 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount2\e[0m = word.count(_\
    \ == \e[31m'a'\e[0m) || word.count(_ == \e[31m'e'\e[0m) || word.count(_ == \e\
    [31m'i'\e[0m) || word.count(_ == \e[31m'o'\e[0m) || word.count(_ == \e[31m'u'\e\
    [0m);\n\e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                           value || is not a member of Int\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaynvuenq.scala:14:48 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount3\e[0m = word.count(_\
    \ == \e[31m'a'\e[0m) || word.count(_ == \e[31m'e'\e[0m) || word.count(_ == \e\
    [31m'i'\e[0m) || word.count(_ == \e[31m'o'\e[0m);\n\e[31m\e[31m   |\e[0m     \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                  value || is not a member of Int\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpaynvuenq.scala:15:48 ---"
  stdout: ''
  timestamp: 1660009663
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0aqsr0wd.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_6yocwpo.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_6yocwpo.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextPrev\e[0m = vowelsSetIteratorNextPrev.previous\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_6yocwpo.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_6yocwpo.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_6yocwpo.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                            value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Fou"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsReverse\
    \ = vowelsAndConsonants.reverse\n        val vowelsAndConsonantsReverseReverse\
    \ = vowelsAndConsonantsReverse.reverse\n        val vowelsAndConsonantsReverseReverseReverse\
    \ = vowelsAndConsonantsReverseReverse.reverse\n        val vowelsAndConsonantsReverseReverseReverseReverse\
    \ = vowelsAndConsonantsReverseReverseReverse.reverse.reverse\n        val vowelsAndConsonantsReverseReverseReverseReverseReverse\
    \ = vowelsAndConsonantsReverseReverseReverseReverseReverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_ll2a_b_.scala:14:61 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsReverse\e\
    [0m = vowelsAndConsonants.reverse\n\e[31m\e[31m   |\e[0m                     \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue reverse\
    \ is not a member of scala.collection.mutable.Set[String] - did you mean vowelsAndConsonants.reversed?\n\
    Exception in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1521)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1529)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1529)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1529)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc"
  stdout: 'java.lang.StackOverflowError while compiling /tmp/tmp_ll2a_b_.scala

    '
  timestamp: 1660009660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length - 1\n        var vowelIndex3 = word.length\
    \ - 1\n        var vowelIndex4 = word.length - 1\n        var vowelIndex5 = word.length\
    \ - 1\n        var vowelIndex6 = word.length - 1\n        var vowelIndex7 = word.length\
    \ - 1\n        var vowelIndex8 = word.length - 1\n        var vowelIndex9 = word.length\
    \ - 1\n        var vowelIndex10 = word.length - 1\n        var vowelIndex11 =\
    \ word.length - 1\n        var vowelIndex12 = word.length - 1\n        var vowelIndex13\
    \ = word.length - 1\n        var vowelIndex14 = word.length - 1\n        var vowelIndex15\
    \ = word.length - 1\n        var vowelIndex16 = word.length - 1\n        var vowelIndex17\
    \ = word.length - 1\n        var vowelIndex18 = word.length - 1\n        var vowelIndex19\
    \ = word.length - 1\n        var vowelIndex20 = word.length - 1\n        var vowelIndex21\
    \ = word.length - 1\n        var vowelIndex22 = word.length - 1\n        var vowelIndex23\
    \ = word.length - 1\n        var vowelIndex24 = word.length - 1\n        var vowelIndex25\
    \ = word.length - 1\n        var vowelIndex26 = word.length - 1\n        var vowelIndex27\
    \ = word.length - 1\n        var vowelIndex28 = word.length - 1\n        var vowelIndex29\
    \ = word.length - 1\n        var vowelIndex30 = word.length - 1\n        var vowelIndex31\
    \ = word.length - 1\n        var vowelIndex32 = word.length - 1\n        var vowelIndex33\
    \ = word.length - 1\n        var vowelIndex34 = word.length - 1\n        var vowelIndex35\
    \ = word.length - 1\n        var vowelIndex36 = word.length - 1\n        var vowelIndex37\
    \ = word.length - 1\n        var vowelIndex38 = word.length - 1\n        var vowelIndex39\
    \ = word.length - 1\n        var vowelIndex40 = word.length - 1\n        var vowelIndex41\
    \ = word.length - 1\n        var vowelIndex42 = word.length - 1\n        var vowelIndex43\
    \ = word.length - 1\n        var vowelIndex44 = word.length - 1\n        var vowelIndex45\
    \ = word.length - 1\n        var vowelIndex46 = word.length - 1\n        var vowelIndex47\
    \ = word.length - 1\n        var vowelIndex48 = word.length - 1\n        var vowelIndex49\
    \ = word.length - 1\n        var vowelIndex50 = word.length - 1\n        var vowelIndex51\
    \ = word.length - 1\n        var vowelIndex52 = word.length - 1\n        var vowelIndex53\
    \ = word.length - 1\n        var vowelIndex54 = word.length - 1\n        var vowelIndex55\
    \ = word.length - 1\n        var vowelIndex56 = word.length - 1\n        var vowelIndex57\
    \ = word.length\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdsf5jgpo.scala:69:5\
    \ ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIterator\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_j6ll100.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:29:64 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:31:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var currentVowel = \"\"\n        var\
    \ currentVowelIndex = 0\n        var currentVowelCount = 0\n        var currentVowelIndex2\
    \ = -1\n        var currentVowelCount2 = -1\n        var currentVowelIndex3 =\
    \ -1\n        var currentVowelCount3 = -1\n        var currentVowelIndex4 = -1\n\
    \        var currentVowelCount4 = -1\n        var currentVowelIndex5 = -1\n  \
    \      var currentVowelCount5 = -1\n        var currentVowelIndex6 = -1\n    \
    \    var currentVowelCount6 = -1\n        var currentVowelIndex7 = -1\n      \
    \  var currentVowelCount7 = -1\n        var currentVowelIndex8 = -1\n        var\
    \ currentVowelCount8 = -1\n        var currentVowelIndex9 = -1\n        var currentVowelCount9\
    \ = -1\n        var currentVowelIndex10 = -1\n        var currentVowelCount10\
    \ = -1\n        var currentVowelIndex11 = -1\n        var currentVowelCount11\
    \ = -1\n        var currentVowelIndex12 = -1\n        var currentVowelCount12\
    \ = -1\n        var currentVowelIndex13 = -1\n        var currentVowelCount13\
    \ = -1\n        var currentVowelIndex14 = -1\n        var currentVowelCount14\
    \ = -1\n        var currentVowelIndex15 = -1\n        var currentVowelCount15\
    \ = -1\n        var currentVowelIndex16 = -1\n        var currentVowelCount16\
    \ = -1\n        var currentVowelIndex17 = -1\n        var currentVowelCount17\
    \ = -1\n        var currentVowelIndex18 = -1\n        var currentVowelCount18\
    \ = -1\n        var currentVowelIndex19 = -1\n        var currentVowelCount19\
    \ = -1\n        var currentVowelIndex20 = -1\n        var currentVowelCount20\
    \ = -1\n        var currentVowelIndex21 = -1\n        var currentVowelCount21\
    \ = -1\n        var currentVowelIndex22 = -1\n        var currentVowelCount22\
    \ = -1\n        var currentVowelIndex23 = -1\n        var currentVowelCount23\
    \ = -1\n        var currentVowelIndex24 = -1\n        var currentVowelCount24\
    \ = -1\n        var currentVowelIndex25 = -1\n        var currentVowelCount25\
    \ = -1\n        var currentVowelIndex26 = -1\n        var currentVowelCount26\
    \ = -1\n        var currentVowelIndex27 = -1\n        var current\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfuypwte7.scala:69:4 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpfuypwte7.scala:69:5 ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsCount\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsCount2 = vowelsAndConsonants.toSet.size\n\
    \        val vowelsAndConsonantsCount3 = vowelsAndConsonants.toList.size\n   \
    \     val vowelsAndConsonantsCount4 = vowelsAndConsonants.toSeq.size \n      \
    \  val vowelsAndConsonantsCount5 = vowelsAndConsonants.toArray.size \n       \
    \ val vowelsAndConsonantsCount6 = vowelsAndConsonants.toIterable.size \n     \
    \   val vowelsAndConsonantsCount7 = vowelsAndConsonants.toMap.size \n        val\
    \ vowelsAndConsonantsCount8 = vowelsAndConsonants.toSet.size \n        val vowelsAndConsonantsCount9\
    \ = vowelsAndConsonants.toList.size \n        val vowelsAndConsonantsCount10 =\
    \ vowelsAndConsonants.toSeq.size \n        val vowelsAndConsonantsCount11 = vowelsAndConsonants.toArray.size\
    \ \n        val vowelsAndConsonantsCount12 = vowelsAndConsonants.toIterable.size\
    \ \n        val vowelsAndConsonantsCount13 = vowelsAndConsonants.toMap.size \n\
    \        val vowelsAndConsonantsCount14 = vowelsAndConsonants.toSet.size \n  \
    \      val vowelsAndConsonantsCount15 = vowelsAndConsonants.toList.size \n   \
    \     val vowelsAndConsonantsCount16 = vowelsAndConsonants.toSeq.size \n     \
    \   val vowelsAndConsonantsCount17 = vowelsAndConsonants.toArray.size \n     \
    \   val vowelsAndConsonantsCount18 = vowelsAndConsonants.toIterable.size \n  \
    \      val vowelsAndConsonantsCount19 = vowelsAndConsonants.toMap.size \n    \
    \    val vowelsAndConsonantsCount20 = vowelsAndConsonants.toSet.size \n      \
    \  val vowelsAndConsonantsCount21 = vowelsAndConsonants.toList.size \n       \
    \ val vowelsAndConsonantsCount22 = vowelsAndConsonants.toSeq.size \n        val\
    \ vowelsAndConsonants\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_w620zmw.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- Error: /tmp/tmp_w620zmw.scala:20:65\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m20 |\e[0m       \
    \ \e[33mval\e[0m \e[36mvowelsAndConsonantsCount7\e[0m = vowelsAndConsonants.toMap.size\
    \ \n\e[31m\e[31m   |\e[0m                                                    \
    \             ^\e[0m\n\e[31m   |\e[0m                                     Cannot\
    \ prove that String <:< (K, V)\n\e[31m   |\e[0m\n\e[31m   |\e[0m             \
    \                        where:    K is a type variable\n\e[31m   |\e[0m     \
    \                                          V is a type variable\n\e[31m   |\e\
    [0m                                     .\n\e[31m\e[31m-- Error: /tmp/tmp_w620zmw.scala:26:66\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m26 |\e[0m       \
    \ \e[33mval\e[0m \e[36mvowelsAndConsonantsCount13\e[0m = vowelsAndConsonants.toMap.size\
    \ \n\e[31m\e[31m   |\e[0m                                                    \
    \              ^\e[0m\n\e[31m   |\e[0m                                     Cannot\
    \ prove that String <:< (K, V)\n\e[31m   |\e[0m\n\e[31m   |\e[0m             \
    \                        where:    K is a type variable\n\e[31m   |\e[0m     \
    \                                          V is a type variable\n\e[31m   |\e\
    [0m                                     .\n\e[31m\e[31m-- Error: /tmp/tmp_w620zmw.scala:32:66\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m32 |\e[0m       \
    \ \e[33mval\e[0m \e[36mvowelsAndConsonantsCount19\e[0m = vowelsAndConsonants.toMap.size\
    \ \n\e[31m\e[31m   |\e[0m                                                    \
    \              ^\e[0m\n\e[31m   |\e[0m                                     Cannot\
    \ prove that String <:< (K, V)\n\e[31m   |\e[0m\n\e[31m   |\e[0m             \
    \                        where:    K is a type variable\n\e[31m   |\e[0m     \
    \                                          V is a type variable\n\e[31m   |\e\
    [0m                                     .\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Erro"
  stdout: ''
  timestamp: 1660009668
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants = Set(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = vowelsCount + consonantsCount\n        val vowelsIndex\
    \ = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n\
    \        val vowelsIndex = vowelsIndex + vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex + consonantsCount\n        val vowelsIndex = vowelsIndex -\
    \ vowelsCount\n        val consonantsIndex = consonantsIndex - consonantsCount\n\
    \        val vowelsIndex = vowelsIndex - vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex - consonantsCount\n        val vowelsIndex = vowelsIndex -\
    \ vowelsCount\n        val consonantsIndex = consonantsIndex - consonantsCount\n\
    \        val vowelsIndex = vowelsIndex - vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex - consonantsCount\n        val vowelsIndex = vowelsIndex -\
    \ vowelsCount\n        val consonantsIndex = consonantsIndex - consonantsCount\n\
    \        val vowelsIndex = vowelsIndex - vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex - consonantsCount\n        val vowelsIndex = vowelsIndex -\
    \ vowelsCount\n        val consonantsIndex = consonantsIndex - consonantsCount\n\
    \        val vowelsIndex = vowelsIndex - vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex - consonantsCount\n        val vowelsIndex = vowelsIndex -\
    \ vowelsCount\n        val consonantsIndex = consonantsIndex - consonantsCount\n\
    \        val vowelsIndex = vowelsIndex - vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex - consonantsCount\n        val vowelsIndex = vowelsIndex -\
    \ vowelsCount\n        val consonantsIndex = consonantsIndex - consonantsCount\n\
    \        val vowelsIndex = vowelsIndex - vowelsCount\n        val consonantsIndex\
    \ = consonantsIndex - consonantsCount\n        val vowelsIndex = vowelsIndex\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmposphnv2_.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmposphnv2_.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowelsIndex + vowelsCount\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmposphnv2_.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = consonantsIndex\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmposphnv2_.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowelsIndex\
    \ - vowelsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmposphnv2_.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = consonantsIndex\
    \ - co"
  stdout: ''
  timestamp: 1660009669
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(vowelsSet2)\n      \
    \  val vowelsSet4 = vowelsSet.diff(vowelsSet3)\n        val vowelsSet5 = vowelsSet.diff(vowelsSet4)\n\
    \        val vowelsSet6 = vowelsSet.diff(vowelsSet5)\n        val vowelsSet7 =\
    \ vowelsSet.diff(vowelsSet6)\n        val vowelsSet8 = vowelsSet.diff(vowelsSet7)\n\
    \        val vowelsSet9 = vowelsSet.diff(vowelsSet8)\n        val vowelsSet10\
    \ = vowelsSet.diff(vowelsSet9)\n        val vowelsSet11 = vowelsSet.diff(vowelsSet10)\n\
    \        val vowelsSet12 = vowelsSet.diff(vowelsSet11)\n        val vowelsSet13\
    \ = vowelsSet.diff(vowelsSet12)\n        val vowelsSet14 = vowelsSet.diff(vowelsSet13)\n\
    \        val vowelsSet15 = vowelsSet.diff(vowelsSet14)\n        val vowelsSet16\
    \ = vowelsSet.diff(vowelsSet15)\n        val vowelsSet17 = vowelsSet.diff(vowelsSet16)\n\
    \        val vowelsSet18 = vowelsSet.diff(vowelsSet17)\n        val vowelsSet19\
    \ = vowelsSet.diff(vowelsSet18)\n        val vowelsSet20 = vowelsSet.diff(vowelsSet19)\n\
    \        val vowelsSet21 = vowelsSet.diff(vowelsSet20)\n        val vowelsSet22\
    \ = vowelsSet.diff(vowelsSet21)\n        val vowelsSet23 = vowelsSet.diff(vowelsSet22)\n\
    \        val vowelsSet24 = vowelsSet.diff(vowelsSet23)\n        val vowelsSet25\
    \ = vowelsSet.diff(vowelsSet24)\n        val vowelsSet26 = vowelsSet.diff(vowelsSet25)\n\
    \        val vowelsSet27 = vowelsSet.diff(vowelsSet26)\n        val vowelsSet28\
    \ = vowelsSet.diff(vowelsSet27)\n        val vowelsSet29 = vowelsSet.diff(vowelsSet28)\n\
    \        val vowelsSet30 = vowelsSet.diff(vowelsSet29)\n        val vowelsSet31\
    \ = vowelsSet.diff(vowelsSet30)\n        val vowel\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_mkf3yvk.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp_mkf3yvk.scala:44:5 ---------------------\e[0m\e[0m\n\e[31m44 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009669
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelsCount\
    \ = word.filter(_.isLetter).map(_.toLowerCase ).toSet\n        var vowelsCount2\
    \ = vowelsCount.filter(_ == \"a\")\n        var vowelsCount3 = vowelsCount.filter(_\
    \ == \"e\")\n        var vowelsCount4 = vowelsCount.filter(_ == \"i\")\n     \
    \   var vowelsCount5 = vowelsCount.filter(_ == \"o\")\n        var vowelsCount6\
    \ = vowelsCount.filter(_ == \"u\")\n        var vowelsCount7 = vowelsCount.filter(_\
    \ == \"A\")\n        var vowelsCount8 = vowelsCount.filter(_ == \"E\")\n     \
    \   var vowelsCount9 = vowelsCount.filter(_ == \"I\")\n        var vowelsCount10\
    \ = vowelsCount.filter(_ == \"O\")\n        var vowelsCount11 = vowelsCount.filter(_\
    \ == \"U\")\n        var vowelsCount12 = vowelsCount.filter(_ == \"a\")\n    \
    \    var vowelsCount13 = vowelsCount.filter(_ == \"e\")\n        var vowelsCount14\
    \ = vowelsCount.filter(_ == \"i\")\n        var vowelsCount15 = vowelsCount.filter(_\
    \ == \"o\")\n        var vowelsCount16 = vowelsCount.filter(_ == \"u\")\n    \
    \    var vowelsCount17 = vowelsCount.filter(_ == \"A\")\n        var vowelsCount18\
    \ = vowelsCount.filter(_ == \"E\")\n        var vowelsCount19 = vowelsCount.filter(_\
    \ == \"I\")\n        var vowelsCount20 = vowelsCount.filter(_ == \"O\")\n    \
    \    var vowelsCount21 = vowelsCount.filter(_ == \"U\")\n        var vowelsCount22\
    \ = vowelsCount.filter(_ == \"a\")\n        var vowelsCount23 = vowelsCount.filter(_\
    \ == \"e\")\n        var vowelsCount24 = vowelsCount.filter(_ == \"i\")\n    \
    \    var vowelsCount25 = vowelsCount.filter(_ == \"o\")\n        var vowelsCount26\
    \ = vowelsCount.filter(_ == \"u\")\n        var vowelsCount27 = vowelsCount.filter(_\
    \ == \"A\")\n        var vowelsCount28 = vowelsCount.filter(_ == \"E\")\n    \
    \    var vowelsCount29 = vowelsCount.filter(_ == \"I\")\n        var vowelsCount30\
    \ = vowelsCount.filter(_ == \"O\")\n        var vowelsCount31 = vowelsCount.filter(_\
    \ == \"U\")\n        var vowelsCount32 = vowelsCount.filter(_ == \"\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpxn25xl8j.scala:43:52 -----------------------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount32\e[0m = vowelsCount.filter(_\
    \ == \"\n\e[31m\e[31m   |\e[0m                                               \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \ unclosed string literal\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxn25xl8j.scala:12:56\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e\
    [36mvowelsCount\e[0m = word.filter(_.isLetter).map(_.toLowerCase ).toSet\n\e[31m\e\
    [31m   |\e[0m                                                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toLowerCase is not a\
    \ member of Char\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxn25xl8j.scala:44:5\
    \ ---------------------\e[0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009669
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsList\
    \ = vowelsAndConsonants.toList\n        val vowelsAndConsonantsListLength = vowelsAndConsonantsList.length\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8luo4vr_.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsAndConsonantsListLength\e[0m = vowelsAndConsonantsListLength - \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsLi"
  stdout: ''
  timestamp: 1660009670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.toSet\n        val vowelsSet3\
    \ = vowelsSet2.toSet\n        val vowelsSet4 = vowelsSet3.toSet\n        val vowelsSet5\
    \ = vowelsSet4.toSet\n        val vowelsSet6 = vowelsSet5.toSet\n        val vowelsSet7\
    \ = vowelsSet6.toSet\n        val vowelsSet8 = vowelsSet7.toSet\n        val vowelsSet9\
    \ = vowelsSet8.toSet\n        val vowelsSet10 = vowelsSet9.toSet\n        val\
    \ vowelsSet11 = vowelsSet10.toSet\n        val vowelsSet12 = vowelsSet11.toSet\n\
    \        val vowelsSet13 = vowelsSet12.toSet\n        val vowelsSet14 = vowelsSet13.toSet\n\
    \        val vowelsSet15 = vowelsSet14.toSet\n        val vowelsSet16 = vowelsSet15.toSet\n\
    \        val vowelsSet17 = vowelsSet16.toSet\n        val vowelsSet18 = vowelsSet17.toSet\n\
    \        val vowelsSet19 = vowelsSet18.toSet\n        val vowelsSet20 = vowelsSet19.toSet\n\
    \        val vowelsSet21 = vowelsSet20.toSet\n        val vowelsSet22 = vowelsSet21.toSet\n\
    \        val vowelsSet23 = vowelsSet22.toSet\n        val vowelsSet24 = vowelsSet23.toSet\n\
    \        val vowelsSet25 = vowelsSet24.toSet\n        val vowelsSet26 = vowelsSet25.toSet\n\
    \        val vowelsSet27 = vowelsSet26.toSet\n        val vowelsSet28 = vowelsSet27.toSet\n\
    \        val vowelsSet29 = vowelsSet28.toSet\n        val vowelsSet30 = vowelsSet29.toSet\n\
    \        val vowelsSet31 = vowelsSet30.toSet\n        val vowelsSet32 = vowelsSet31.toSet\n\
    \        val vowelsSet33 = vowelsSet32.toSet\n        val vowelsSet34 = vowelsSet33.toSet\n\
    \        val vowelsSet35 = vowelsSet34.toSet\n        val vowelsSet36 = vowelsSet35.toSet\n\
    \        val vowelsSet37 = \n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6ibfl2gp.scala:48:25 ---------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet37\e[0m = \n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ibfl2gp.scala:49:5 ---------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009671
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowels\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuq18z7ep.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpuq18z7ep.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpuq18z7ep.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpuq18z7ep.scala:29:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1660009670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = vowels.size\n        val consonantsCount = consonants.size\n\
    \        val vowelsCount2 = vowelsCount * 2\n        val consonantsCount2 = consonantsCount\
    \ * 2\n        val vowelsCount3 = vowelsCount * 3\n        val consonantsCount3\
    \ = consonantsCount * 3\n        val vowelsCount4 = vowelsCount * 4\n        val\
    \ consonantsCount4 = consonantsCount * 4\n        val vowelsCount5 = vowelsCount\
    \ * 5\n        val consonantsCount5 = consonantsCount * 5\n        val vowelsCount6\
    \ = vowelsCount * 6\n        val consonantsCount6 = consonantsCount * 6\n    \
    \    val vowelsCount7 = vowelsCount * 7\n        val consonantsCount7 = consonantsCount\
    \ * 7\n        val vowelsCount8 = vowelsCount * 8\n        val consonantsCount8\
    \ = consonantsCount * 8\n        val vowelsCount9 = vowelsCount * 9\n        val\
    \ consonantsCount9 = consonantsCount * 9\n        val vowelsCount10 = vowelsCount\
    \ * 10\n        val consonantsCount10 = consonantsCount * 10\n        val vowelsCount11\
    \ = vowelsCount * 11\n        val consonantsCount11 = consonantsCount * 11\n \
    \       val vowelsCount12 = vowelsCount * 12\n        val consonantsCount12 =\
    \ consonantsCount * 12\n        val vowelsCount13 = vowelsCount * 13\n       \
    \ val consonantsCount13 = consonantsCount * 13\n        val vowelsCount14 = vowelsCount\
    \ * 14\n        val consonantsCount14 = consonantsCount * 14\n        val vowelsCount15\
    \ = vowelsCount * 15\n        val consonantsCount15 = consonantsCount * 15\n \
    \       val vowelsCount16 = vowelsCount * 16\n        val consonantsCount16 =\
    \ consonantsCount * 16\n        val vowelsCount17 = vowelsCount * 17\n       \
    \ val consonantsCount17 = consonantsCount * 17\n        val vowelsCount18 = vowel\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkjcg51x0.scala:47:28 ------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount18\e[0m = vowel\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^\e[0m\n\e[31m   |\e[0m \
    \                           Not found: vowel\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpkjcg51x0.scala:48:5 ---------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextNextPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextNextPrevPrevNext = vowelsSetIteratorNextPrevPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextPrevPrev = vowelsSetIteratorNextNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNextPrevNext = vowelsSetIteratorNextNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextNextPrevPrevPrev = vowelsSetIteratorNextNextPrevNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNextNextPrevPrevNext = vowelsSetIteratorNextNextPrevNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextNextPrevPrevPrevNext = vowelsSetIteratorNextNextPrevNextPrevPrevNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNextNextPrevPrevPrevNextNext = vowelsSetIteratorNextNextPrevNextPrevNextPrevPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextNextPrevPrevPrevNextNextNext = vowelsSetIteratorNextNextPrevNextPrevNextPrevNextNextPrevNextPrev.next\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmq6adwbg.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpmq6adwbg.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpmq6adwbg.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmq6adwbg.scala:24:48 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevNextPrevPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.prev\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmq6adwbg.scala:25:48\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevNextPrevNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longe"
  stdout: ''
  timestamp: 1660009671
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(vowelsSet2)\n      \
    \  val vowelsSet4 = vowelsSet.diff(vowelsSet3)\n        val vowelsSet5 = vowelsSet.diff(vowelsSet4)\n\
    \        val vowelsSet6 = vowelsSet.diff(vowelsSet5)\n        val vowelsSet7 =\
    \ vowelsSet.diff(vowelsSet6)\n        val vowelsSet8 = vowelsSet.diff(vowelsSet7)\n\
    \        val vowelsSet9 = vowelsSet.diff(vowelsSet8)\n        val vowelsSet10\
    \ = vowelsSet.diff(vowelsSet9)\n        val vowelsSet11 = vowelsSet.diff(vowelsSet10)\n\
    \        val vowelsSet12 = vowelsSet.diff(vowelsSet11)\n        val vowelsSet13\
    \ = vowelsSet.diff(vowelsSet12)\n        val vowelsSet14 = vowelsSet.diff(vowelsSet13)\n\
    \        val vowelsSet15 = vowelsSet.diff(vowelsSet14)\n        val vowelsSet16\
    \ = vowelsSet.diff(vowelsSet15)\n        val vowelsSet17 = vowelsSet.diff(vowelsSet16)\n\
    \        val vowelsSet18 = vowelsSet.diff(vowelsSet17)\n        val vowelsSet19\
    \ = vowelsSet.diff(vowelsSet18)\n        val vowelsSet20 = vowelsSet.diff(vowelsSet19)\n\
    \        val vowelsSet21 = vowelsSet.diff(vowelsSet20)\n        val vowelsSet22\
    \ = vowelsSet.diff(vowelsSet21)\n        val vowelsSet23 = vowelsSet.diff(vowelsSet22)\n\
    \        val vowelsSet24 = vowelsSet.diff(vowelsSet23)\n        val vowelsSet25\
    \ = vowelsSet.diff(vowelsSet24)\n        val vowelsSet26 = vowelsSet.diff(vowelsSet25)\n\
    \        val vowelsSet27 = vowelsSet.diff(vowelsSet26)\n        val vowelsSet28\
    \ = vowelsSet.diff(vowelsSet27)\n        val vowelsSet29 = vowelsSet.diff(vowelsSet28)\n\
    \        val vowelsSet30 = vowelsSet.diff(vowelsSet29)\n        val vowelsSet31\
    \ = vowelsSet.diff(vowelsSet30)\n        val vowel\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_mkf3yvk.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp_mkf3yvk.scala:44:5 ---------------------\e[0m\e[0m\n\e[31m44 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009669
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = 0\n        var vowelCount2\
    \ = 0\n        var vowelIndex3 = 0\n        var vowelCount3 = 0\n        var vowelIndex4\
    \ = 0\n        var vowelCount4 = 0\n        var vowelIndex5 = 0\n        var vowelCount5\
    \ = 0\n        var vowelIndex6 = 0\n        var vowelCount6 = 0\n        var vowelIndex7\
    \ = 0\n        var vowelCount7 = 0\n        var vowelIndex8 = 0\n        var vowelCount8\
    \ = 0\n        var vowelIndex9 = 0\n        var vowelCount9 = 0\n        var vowelIndex10\
    \ = 0\n        var vowelCount10 = 0\n        var vowelIndex11 = 0\n        var\
    \ vowelCount11 = 0\n        var vowelIndex12 = 0\n        var vowelCount12 = 0\n\
    \        var vowelIndex13 = 0\n        var vowelCount13 = 0\n        var vowelIndex14\
    \ = 0\n        var vowelCount14 = 0\n        var vowelIndex15 = 0\n        var\
    \ vowelCount15 = 0\n        var vowelIndex16 = 0\n        var vowelCount16 = 0\n\
    \        var vowelIndex17 = 0\n        var vowelCount17 = 0\n        var vowelIndex18\
    \ = 0\n        var vowelCount18 = 0\n        var vowelIndex19 = 0\n        var\
    \ vowelCount19 = 0\n        var vowelIndex20 = 0\n        var vowelCount20 = 0\n\
    \        var vowelIndex21 = 0\n        var vowelCount21 = 0\n        var vowelIndex22\
    \ = 0\n        var vowelCount22 = 0\n        var vowelIndex23 = 0\n        var\
    \ vowelCount23 = 0\n        var vowelIndex24 = 0\n        var vowelCount24 = 0\n\
    \        var vowelIndex25 = 0\n        var vowelCount25 = 0\n        var vowelIndex26\
    \ = 0\n        var vowelCount26 = 0\n        var vowelIndex27 = 0\n        var\
    \ vowelCount27 = 0\n        var vowelIndex28 = 0\n        var vowelCount28 = 0\n\
    \        var vowelIndex29 = 0\n        var vowelCount29 = 0\n        var vowelIndex30\
    \ = 0\n        var vowelCount30 = 0\n        var vowelIndex31 = 0\n        var\
    \ vowelCount31 = 0\n        var vowelIndex32 = 0\n        var vowelCount32 = 0\n\
    \        var vowelIndex33 = 0\n        var vowelCount33 = 0\n        var vowelIndex34\
    \ = 0\n        var vowelCount34 = 0\n        var vowelIndex35 = 0\n        var\
    \ vowelCount35 = 0\n        var vowelIndex36 = 0\n        var vowelCount36 = 0\n\
    \        var vowelIndex37 = 0\n        var vowelCount37 = 0\n        var vowelIndex38\
    \ = 0\n        var vowelCount38 = 0\n        var vowelIndex39 = 0\n        var\
    \ vowelCount39 = 0\n        var vowelIndex40 = 0\n        var vowelCount40 = 0\n\
    \        var vowelIndex41 = 0\n        var vowelCount41 = 0\n        var vowelIndex42\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp30kb2_2y.scala:96:5\
    \ ---------------------\e[0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.filter(_ != word.charAt(word.length-1))\n\
    \        val vowelsSet3 = vowelsSet.filter(_ != word.charAt(word.length-2))\n\
    \        val vowelsSet4 = vowelsSet.filter(_ != word.charAt(word.length-3))\n\
    \        val vowelsSet5 = vowelsSet.filter(_ != word.charAt(word.length-4))\n\
    \        val vowelsSet6 = vowelsSet.filter(_ != word.charAt(word.length-5))\n\
    \        val vowelsSet7 = vowelsSet.filter(_ != word.charAt(word.length-6))\n\
    \        val vowelsSet8 = vowelsSet.filter(_ != word.charAt(word.length-7))\n\
    \        val vowelsSet9 = vowelsSet.filter(_ != word.charAt(word.length-8))\n\
    \        val vowelsSet10 = vowelsSet.filter(_ != word.charAt(word.length-9))\n\
    \        val vowelsSet11 = vowelsSet.filter(_ != word.charAt(word.length-10))\n\
    \        val vowelsSet12 = vowelsSet.filter(_ != word.charAt(word.length-11))\n\
    \        val vowelsSet13 = vowelsSet.filter(_ != word.charAt(word.length-12))\n\
    \        val vowelsSet14 = vowelsSet.filter(_ != word.charAt(word.length-13))\n\
    \        val vowelsSet15 = vowelsSet.filter(_ != word.charAt(word.length-14))\n\
    \        val vowelsSet16 = vowelsSet.filter(_ != word.charAt(word.length-15))\n\
    \        val vowelsSet17 = vowelsSet.filter(_ != word.charAt(word.length-16))\n\
    \        val vowelsSet18 = vowelsSet.filter(_ != word.charAt(word.length-17))\n\
    \        val vowelsSet19 = vowelsSet.filter(_ != word.charAt(word.length-18))\n\
    \        val vowelsSet20 = vowelsSet.filter(_ != word.charAt(word.length-19))\n\
    \        val vowelsSet21 = vowelsSet.filter(_ != word.charAt(word.length-20))\n\
    \        val vowelsSet22 = vowelsSet.filter(_ != word.charAt(word.length-21))\n\
    \        val vowelsSet23 = vowelsSet.filter(_ != word.charAt(word.length-22))\n\
    \        val vowelsSet24 = vowelsSet.filter(_ != word.charAt(word.length-23))\n\
    \        val vowelsSet25 = vowelsSet.filter(_ != word.charAt(word.length-24))\n\
    \        val vowelsSet26 = vowelsSet.filter(_ != word.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw2djz1qc.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- Error: /tmp/tmpw2djz1qc.scala:13:42\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m13 |\e[0m       \
    \ \e[33mval\e[0m \e[36mvowelsSet2\e[0m = vowelsSet.filter(_ != word.charAt(word.length-\e\
    [31m1\e[0m))\n\e[31m\e[31m   |\e[0m                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpw2djz1qc.scala:14:42 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet3\e[0m = vowelsSet.filter(_\
    \ != word.charAt(word.length-\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m           \
    \                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m        Values of types String and Char cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmpw2djz1qc.scala:15:42 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet4\e[0m = vowelsSet.filter(_\
    \ != word.charAt(word.length-\e[31m3\e[0m))\n\e[31m\e[31m   |\e[0m           \
    \                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m        Values of types String and Char cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmpw2djz1qc.scala:16:42 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet5\e[0m = vowelsSet.filter(_\
    \ != word.charAt(word.length-\e[31m4\e[0m))\n\e[31m\e[31m   |\e[0m           \
    \                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m        Values of types String and Char cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmpw2djz1qc.scala:17:42 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet6\e[0m = vowelsSet.filter(_\
    \ != word.charAt(word.length-\e[31m5\e[0m))\n\e[31m\e[31m   |\e[0m           \
    \                    "
  stdout: ''
  timestamp: 1660009675
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmptr95hhzh.scala:34:11 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmptr95hhzh.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptr95hhzh.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmptr95hhzh.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptr"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        val vowelsCount\
    \ = vowels.toList.map(x => word.count(_ == x)).sum\n        val vowelsCount2 =\
    \ vowels.toList.map(x => word.count(_ == x)).sum\n        val vowelsCount3 = vowels.toList.map(x\
    \ => word.count(_ == x)).sum\n        val vowelsCount4 = vowels.toList.map(x =>\
    \ word.count(_ == x)).sum\n        val vowelsCount5 = vowels.toList.map(x => word.count(_\
    \ == x)).sum\n        val vowelsCount6 = vowels.toList.map(x => word.count(_ ==\
    \ x)).sum\n        val vowelsCount7 = vowels.toList.map(x => word.count(_ == x)).sum\n\
    \        val vowelsCount8 = vowels.toList.map(x => word.count(_ == x)).sum\n \
    \       val vowelsCount9 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount10 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount11 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount12 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount13 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount14 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount15 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount16 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount17 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount18 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount19 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount20 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount21 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount22 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val vowelsCount23 = vowels.toList.map(x => word.count(_ == x)).sum\n  \
    \      val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpdd4hsr4i.scala:35:11 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- Error: /tmp/tmpdd4hsr4i.scala:12:60 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowels.toList.map(\e\
    [36mx\e[0m => word.count(_ == x)).sum\n\e[31m\e[31m   |\e[0m                 \
    \                                           ^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \   Values of types Char and String cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpdd4hsr4i.scala:13:61 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = vowels.toList.map(\e\
    [36mx\e[0m => word.count(_ == x)).sum\n\e[31m\e[31m   |\e[0m                 \
    \                                            ^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Values of types Char and String cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpdd4hsr4i.scala:14:61 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount3\e[0m = vowels.toList.map(\e\
    [36mx\e[0m => word.count(_ == x)).sum\n\e[31m\e[31m   |\e[0m                 \
    \                                            ^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Values of types Char and String cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpdd4hsr4i.scala:15:61 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount4\e[0m = vowels.toList.map(\e\
    [36mx\e[0m => word.count(_ == x)).sum\n\e[31m\e[31m   |\e[0m                 \
    \                                            ^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Values of types Char and String cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpdd4hsr4i.scala:16:61 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount5\e[0m = vowels.toList.map(\e\
    [36mx\e[0m => word.co"
  stdout: ''
  timestamp: 1660009675
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).size\n        val consonants = word.filter(x\
    \ => !vowels.contains(x))\n        val consonantsCount = consonants.size\n   \
    \     val vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7gzwrzh6.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7gzwrzh6.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7gzwrzh6.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7gzwrzh6.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7gzwrzh6.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009672
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).length\n        val\
    \ consonantsCount = word.filter(consonants.contains).length\n        val vowelsCountInWord\
    \ = vowelsCount + consonantsCount\n        val vowelsCountInWordInWord = vowelsCountInWord\
    \ + word.filter(vowels.contains).filter(consonants.contains).length\n        val\
    \ vowelsCountInWordInWordInWord = vowelsCountInWordInWord + word.filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWord = vowelsCountInWordInWordInWord\
    \ + word.filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWord = vowelsCountInWordInWordInWordInWord\
    \ + word.filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWordInWord = vowelsCountInWordInWordInWordInWordInWord\
    \ + word.filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWordInWordInWord = vowelsCountInWordInWordInWordInWordInWordInWord\
    \ + word.filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(consonants.contains).filter(vowels.contains).filter(con\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpp0ell2pw.scala:22:4 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpp0ell2pw.scala:13:38 --------------------\e[0m\e[0m\n\e[31m13 |\e[0m\
    \        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m                                      ^\e[0m\n\e[31m   |\e\
    [0m                                      Found:    (elem : Char)\n\e[31m   |\e\
    [0m                                      Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp0ell2pw.scala:14:42 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                                          Found:    (elem : Char)\n\e\
    [31m   |\e[0m                                          Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp0ell2pw.scala:16:70 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountInWordInWord\e\
    [0m = vowelsCountInWord + word.filter(vowels.contains).filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \              ^\e[0m\n\e[31m   |\e[0m                                       \
    \          Found:    (elem : Char)\n\e[31m   |\e[0m                          \
    \                       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpp0ell2pw.scala:16:94 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountInWordInWord\e[0m\
    \ = vowelsCountInWord + word.filter(vowels.contains).filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e["
  stdout: ''
  timestamp: 1660009677
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(c => vowels.contains(c)).size\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c)).size\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsIndex = word.lastIndexWhere(c\
    \ => vowels.contains(c))\n        val consonantsIndex = word.lastIndexWhere(c\
    \ => consonants.contains(c))\n        val vowelsIndex = vowelsIndex + vowelsCount\n\
    \        val consonantsIndex = consonantsIndex + consonantsCount\n        val\
    \ vowelsIndex = vowelsIndex - consonantsIndex\n        val consonantsIndex = consonantsIndex\
    \ - consonantsCount\n        val vowelsIndex = vowelsIndex - consonantsIndex\n\
    \        val consonantsIndex = consonantsIndex - consonantsCount\n        val\
    \ vowelsIndex = vowelsIndex - consonantsIndex\n        val consonantsIndex = consonantsIndex\
    \ - consonantsCount\n        val vowelsIndex = vowelsIndex - consonantsIndex\n\
    \        val consonantsIndex = consonantsIndex - consonantsCount\n        val\
    \ vowelsIndex = vowelsIndex - consonantsIndex\n        val consonantsIndex = consonantsIndex\
    \ - consonantsCount\n        val vowelsIndex = vowelsIndex - consonantsIndex\n\
    \        val consonantsIndex = consonantsIndex - consonantsCount\n        val\
    \ vowelsIndex = vowelsIndex - consonantsIndex\n        val consonantsIndex = consonantsIndex\
    \ - consonantsCount\n        val vowelsIndex = vowelsIndex - consonantsIndex\n\
    \        val consonantsIndex = consonantsIndex - consonantsCount\n        val\
    \ vowelsIndex = vowelsIndex - consonantsIndex\n        val consonantsIndex = consonantsIndex\
    \ - consonantsCount\n        val vowelsIndex = vowelsIndex - consonantsIndex\n\
    \        val consonantsIndex = consonantsIndex - consonantsCount\n        val\
    \ vowelsIndex = vowelsIndex - consonantsIndex\n        val consonantsIndex = consonantsIndex\
    \ - consonantsCount\n        val vowelsIndex = vowelsIndex\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3cl4le0g.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3cl4le0g.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowelsIndex + vowelsCount\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3cl4le0g.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = consonantsIndex\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp3cl4le0g.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowelsIndex\
    \ - consonantsIndex\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3cl4le0g.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = consonantsIn"
  stdout: ''
  timestamp: 1660009674
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length - 1\n        var vowelIndex3 = word.length\
    \ - 1\n        var vowelIndex4 = word.length - 1\n        var vowelIndex5 = word.length\
    \ - 1\n        var vowelIndex6 = word.length - 1\n        var vowelIndex7 = word.length\
    \ - 1\n        var vowelIndex8 = word.length - 1\n        var vowelIndex9 = word.length\
    \ - 1\n        var vowelIndex10 = word.length - 1\n        var vowelIndex11 =\
    \ word.length - 1\n        var vowelIndex12 = word.length - 1\n        var vowelIndex13\
    \ = word.length - 1\n        var vowelIndex14 = word.length - 1\n        var vowelIndex15\
    \ = word.length - 1\n        var vowelIndex16 = word.length - 1\n        var vowelIndex17\
    \ = word.length - 1\n        var vowelIndex18 = word.length - 1\n        var vowelIndex19\
    \ = word.length - 1\n        var vowelIndex20 = word.length - 1\n        var vowelIndex21\
    \ = word.length - 1\n        var vowelIndex22 = word.length - 1\n        var vowelIndex23\
    \ = word.length - 1\n        var vowelIndex24 = word.length - 1\n        var vowelIndex25\
    \ = word.length - 1\n        var vowelIndex26 = word.length - 1\n        var vowelIndex27\
    \ = word.length - 1\n        var vowelIndex28 = word.length - 1\n        var vowelIndex29\
    \ = word.length - 1\n        var vowelIndex30 = word.length - 1\n        var vowelIndex31\
    \ = word.length - 1\n        var vowelIndex32 = word.length - 1\n        var vowelIndex33\
    \ = word.length - 1\n        var vowelIndex34 = word.length - 1\n        var vowelIndex35\
    \ = word.length - 1\n        var vowelIndex36 = word.length - 1\n        var vowelIndex37\
    \ = word.length - 1\n        var vowelIndex38 = word.length - 1\n        var vowelIndex39\
    \ = word.length - 1\n        var vowelIndex40 = word.length - 1\n        var vowelIndex41\
    \ = word.length - 1\n        var vowelIndex42 = word.length - 1\n        var vowelIndex43\
    \ = word.length - 1\n        var vowelIndex44 = word.length - 1\n        var vowelIndex45\
    \ = word.length - 1\n        var vowelIndex46 = word.length - 1\n        var vowelIndex47\
    \ = word.length - 1\n        var vowelIndex48 = word.length - 1\n        var vowelIndex49\
    \ = word.length - 1\n        var vowelIndex50 = word.length - 1\n        var vowelIndex51\
    \ = word.length - 1\n        var vowelIndex52 = word.length - 1\n        var vowelIndex53\
    \ = word.length - 1\n        var vowelIndex54 = word.length - 1\n        var vowelIndex55\
    \ = word.length - 1\n        var vowelIndex56 = word.length - 1\n        var vowelIndex57\
    \ = word.length\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdsf5jgpo.scala:69:5\
    \ ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length - 1\n        var vowelIndex3 = word.length\n\
    \        var vowelIndex4 = word.length\n        var vowelIndex5 = word.length\n\
    \        var vowelIndex6 = word.length\n        var vowelIndex7 = word.length\n\
    \        var vowelIndex8 = word.length\n        var vowelIndex9 = word.length\n\
    \        var vowelIndex10 = word.length\n        var vowelIndex11 = word.length\n\
    \        var vowelIndex12 = word.length\n        var vowelIndex13 = word.length\n\
    \        var vowelIndex14 = word.length\n        var vowelIndex15 = word.length\n\
    \        var vowelIndex16 = word.length\n        var vowelIndex17 = word.length\n\
    \        var vowelIndex18 = word.length\n        var vowelIndex19 = word.length\n\
    \        var vowelIndex20 = word.length\n        var vowelIndex21 = word.length\n\
    \        var vowelIndex22 = word.length\n        var vowelIndex23 = word.length\n\
    \        var vowelIndex24 = word.length\n        var vowelIndex25 = word.length\n\
    \        var vowelIndex26 = word.length\n        var vowelIndex27 = word.length\n\
    \        var vowelIndex28 = word.length\n        var vowelIndex29 = word.length\n\
    \        var vowelIndex30 = word.length\n        var vowelIndex31 = word.length\n\
    \        var vowelIndex32 = word.length\n        var vowelIndex33 = word.length\n\
    \        var vowelIndex34 = word.length\n        var vowelIndex35 = word.length\n\
    \        var vowelIndex36 = word.length\n        var vowelIndex37 = word.length\n\
    \        var vowelIndex38 = word.length\n        var vowelIndex39 = word.length\n\
    \        var vowelIndex40 = word.length\n        var vowelIndex41 = word.length\n\
    \        var vowelIndex42 = word.length\n        var vowelIndex43 = word.length\n\
    \        var vowelIndex44 = word.length\n        var vowelIndex45 = word.length\n\
    \        var vowelIndex46 = word.length\n        var vowelIndex47 = word.length\n\
    \        var vowelIndex48 = word.length\n        var vowelIndex49 = word.length\n\
    \        var vowelIndex50 = word.length\n        var vowelIndex51 = word.length\n\
    \        var vowelIndex52 = word.length\n        var vowelIndex53 = word.length\n\
    \        var vowelIndex54 = word.length\n        var vowelIndex55 = word.length\n\
    \        var vowelIndex56 = word.length\n        var vowelIndex57 = word.length\n\
    \        var vowelIndex58 = word.length\n        var vowelIndex59 = word.length\n\
    \        var vowelIndex60 = word.length\n        var vowelIndex61 = word.length\n\
    \        var vowelIndex62 = word.length\n        var vowelIndex63 = word.length\n\
    \        var vowelIndex64 = \n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpcppjpp7u.scala:75:26 ---------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m        \e[33mvar\e[0m \e[36mvowelIndex64\e[0m = \n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcppjpp7u.scala:76:5 ---------------------\e\
    [0m\e[0m\n\e[31m76 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmptr95hhzh.scala:34:11 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmptr95hhzh.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptr95hhzh.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmptr95hhzh.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptr"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.dropRight(word.length)\n        val\
    \ vowelsAfter = vowels.toList.takeRight(word.length)\n        val consonantsBefore\
    \ = consonants.toList.dropRight(word.length)\n        val consonantsAfter = consonants.toList.takeRight(word.length)\n\
    \        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n        val\
    \ consonantsBetween = consonantsBefore.zip(consonantsAfter).filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n        val\
    \ vowelsBetweenWithConsonants = vowelsBetween.zip(consonantsBetween).filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n        val\
    \ vowelsBetweenWithConsonantsWithConsonants = vowelsBetweenWithConsonants.filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n        val\
    \ vowelsBetweenWithConsonantsWithConsonantsWithConsonants = vowelsBetweenWithConsonantsWithConsonants.filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n        val\
    \ vowelsBetweenWithConsonantsWithConsonantsWithConsonantsWithConsonants = vowelsBetweenWithConsonantsWithConsonantsWithConsonants.filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n        val\
    \ vowelsBetweenWithConsonantsWithConsonantsWithConsonantsWithConsonantsWithConsonants\
    \ = vowelsBetweenWithConsonantsWithConsonantsWithConsonantsWithConsonants.filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp00wrut6i.scala:24:4 ----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00wrut6i.scala:17:67\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsBetween\e[0m = vowelsBefore.zip(vowelsAfter).filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \ ^^^^\e[0m\n\e[31m   |\e[0m                                      value _1 is\
    \ not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00wrut6i.scala:17:112\
    \ -----------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsBetween\e[0m = vowelsBefore.zip(vowelsAfter).filter(_._1.toLowerCase\
    \ == _._1.toLowerCase).filter(_._2.toLowerCase == _._2.toLowerCase)\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                                              ^^^^\e[0m\n\e[31m   |\e[0m    \
    \                                  value _2 is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp00wrut6i.scala:18:79 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetween\e[0m =\
    \ consonantsBefore.zip(consonantsAfter).filter(_._1.toLowerCase == _._1.toLowerCase).filter(_._2.toLowerCase\
    \ == _._2.toLowerCase)\n\e[31m\e[31m   |\e[0m                                \
    \                                             ^^^^\e[0m\n\e[31m   |\e[0m     \
    \                                 value _1 is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp00wrut6i.scala:18:124 -----------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetween\e[0m =\
    \ consonantsBefore.zip(consonantsAfter).filter(_._1.toLowerCase == _._1.toLowerCase).filter(_._2.toLowerCase\
    \ == _._2.toLowerCase)\n\e[31m\e[31m   |\e[0m                                \
    \                                                                            \
    \    "
  stdout: ''
  timestamp: 1660009674
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(c => vowels.contains(c)).size\n        val consonants = word.filter(c\
    \ => !vowels.contains(c))\n        val consonantsCount = consonants.size\n   \
    \     val vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsIndex = word.lastIndexWhere(c => vowels.contains(c))\n\
    \        val vowelsIndex = vowelsIndex + 1\n        val consonantsIndex = word.lastIndexWhere(c\
    \ => !vowels.contains(c))\n        val consonantsIndex = consonantsIndex + 1\n\
    \        val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex\
    \ - 1\n        val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex\
    \ = consonantsIndex - 1\n        val vowelsIndex = vowelsIndex - 1\n        val\
    \ consonantsIndex = consonantsIndex - 1\n        val vowelsIndex = vowelsIndex\
    \ - 1\n        val consonantsIndex = consonantsIndex - 1\n        val vowelsIndex\
    \ = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex - 1\n     \
    \   val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex\
    \ - 1\n        val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex\
    \ = consonantsIndex - 1\n        val vowelsIndex = vowelsIndex - 1\n        val\
    \ consonantsIndex = consonantsIndex - 1\n        val vowelsIndex = vowelsIndex\
    \ - 1\n        val consonantsIndex = consonantsIndex - 1\n        val vowelsIndex\
    \ = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex - 1\n     \
    \   val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex\
    \ - 1\n        val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex\
    \ = consonantsIndex - 1\n        val vowelsIndex = vowelsIndex - 1\n        val\
    \ consonantsIndex = consonantsIndex - 1\n        val vowelsIndex = vowelsIndex\
    \ - 1\n        val consonantsIndex = consonantsIndex - 1\n        val vowelsIndex\
    \ = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex - 1\n     \
    \   val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex = consonantsIndex\
    \ - 1\n        val vowelsIndex = vowelsIndex - 1\n        val consonantsIndex\
    \ = con\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx4yc6dki.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx4yc6dki.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx4yc6dki.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowelsIndex + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx4yc6dki.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = consonantsIndex\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpx4yc6dki.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = vowelsIndex\
    \ - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009675
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(vowelsSet2)\n      \
    \  val vowelsSet4 = vowelsSet.diff(vowelsSet3)\n        val vowelsSet5 = vowelsSet.diff(vowelsSet4)\n\
    \        val vowelsSet6 = vowelsSet.diff(vowelsSet5)\n        val vowelsSet7 =\
    \ vowelsSet.diff(vowelsSet6)\n        val vowelsSet8 = vowelsSet.diff(vowelsSet7)\n\
    \        val vowelsSet9 = vowelsSet.diff(vowelsSet8)\n        val vowelsSet10\
    \ = vowelsSet.diff(vowelsSet9)\n        val vowelsSet11 = vowelsSet.diff(vowelsSet10)\n\
    \        val vowelsSet12 = vowelsSet.diff(vowelsSet11)\n        val vowelsSet13\
    \ = vowelsSet.diff(vowelsSet12)\n        val vowelsSet14 = vowelsSet.diff(vowelsSet13)\n\
    \        val vowelsSet15 = vowelsSet.diff(vowelsSet14)\n        val vowelsSet16\
    \ = vowelsSet.diff(vowelsSet15)\n        val vowelsSet17 = vowelsSet.diff(vowelsSet16)\n\
    \        val vowelsSet18 = vowelsSet.diff(vowelsSet17)\n        val vowelsSet19\
    \ = vowelsSet.diff(vowelsSet18)\n        val vowelsSet20 = vowelsSet.diff(vowelsSet19)\n\
    \        val vowelsSet21 = vowelsSet.diff(vowelsSet20)\n        val vowelsSet22\
    \ = vowelsSet.diff(vowelsSet21)\n        val vowelsSet23 = vowelsSet.diff(vowelsSet22)\n\
    \        val vowelsSet24 = vowelsSet.diff(vowelsSet23)\n        val vowelsSet25\
    \ = vowelsSet.diff(vowelsSet24)\n        val vowelsSet26 = vowelsSet.diff(vowelsSet25)\n\
    \        val vowelsSet27 = vowelsSet.diff(vowelsSet26)\n        val vowelsSet28\
    \ = vowelsSet.diff(vowelsSet27)\n        val vowelsSet29 = vowelsSet.diff(vowelsSet28)\n\
    \        val vowelsSet30 = vowelsSet.diff(vowelsSet29)\n        val vowelsSet31\
    \ = vowelsSet.diff(vowelsSet30)\n        val vowel\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_mkf3yvk.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp_mkf3yvk.scala:44:5 ---------------------\e[0m\e[0m\n\e[31m44 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009669
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp31na__q7.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowel = \"\"\n        var index = word.length - 1\n       \
    \ while (index >= 0) {\n            if (vowels.contains(word.charAt(index))) {\n\
    \                vowel = word.charAt(index)\n                vowelIndex = index\n\
    \            }\n            index--\n        }\n        if (vowelIndex == 0) {\n\
    \            return \"\"\n        }\n        var vowelIndex1 = vowelIndex + 1\n\
    \        var vowelIndex2 = vowelIndex - 1\n        var vowelIndex3 = vowelIndex\
    \ - 1\n        var vowelIndex4 = vowelIndex + 1\n        var vowelIndex5 = vowelIndex\
    \ + 1\n        var vowelIndex6 = vowelIndex + 1\n        var vowelIndex7 = vowelIndex\
    \ + 1\n        var vowelIndex8 = vowelIndex + 1\n        var vowelIndex9 = vowelIndex\
    \ + 1\n        var vowelIndex10 = vowelIndex + 1\n        var vowelIndex11 = vowelIndex\
    \ + 1\n        var vowelIndex12 = vowelIndex + 1\n        var vowelIndex13 = vowelIndex\
    \ + 1\n        var vowelIndex14 = vowelIndex + 1\n        var vowelIndex15 = vowelIndex\
    \ + 1\n        var vowelIndex16 = vowelIndex + 1\n        var vowelIndex17 = vowelIndex\
    \ + 1\n        var vowelIndex18 = vowelIndex + 1\n        var vowelIndex19 = vowelIndex\
    \ + 1\n        var vowelIndex20 = vowelIndex + 1\n        var vowelIndex21 = vowelIndex\
    \ + 1\n        var vowelIndex22 = vowelIndex + 1\n        var vowelIndex23 = vowelIndex\
    \ + 1\n        var vowelIndex24 = vowelIndex + 1\n        var vowelIndex25 = vowelIndex\
    \ + 1\n        var vowelIndex26 = vowelIndex + 1\n        var vowelIndex27 = vowelIndex\
    \ + 1\n        var vowelIndex28 = vowelIndex + 1\n        var vowelIndex29 = vowelIndex\
    \ + 1\n        var vowelIndex30 = vowelIndex + 1\n        var vowelIndex31 = vowelIndex\
    \ + 1\n        var vowelIndex32 = vowelIndex + 1\n        var vowelIndex33 = vowelIndex\
    \ + 1\n        var vowelIndex34 = vowelIndex + 1\n        var vowelIndex35 = vowelIndex\
    \ + 1\n        var vowelIndex36 = vowelIndex + 1\n        var vowelIndex37 = vowelIndex\
    \ + 1\n        var vowelIndex38 = vowelIndex + 1\n        var vowelIndex39 = vowelIndex\
    \ + 1\n        var vowelIndex40 = vowelIndex + 1\n        var vowelIndex41 = vowelIndex\
    \ + 1\n        var vowelIndex42 = vowelIndex + 1\n        var vowelIndex43 = vowelIndex\
    \ + 1\n        var vowelIndex44 = vowelIndex + 1\n        var vowelIndex45 = vowelIndex\
    \ + 1\n        var vowelIndex46 = vowelIndex + 1\n        var vowelIndex47 = vowelIndex\
    \ + 1\n        var vowelIndex48 = vowelIndex + 1\n        var vowelIndex49 = vowelIndex\
    \ + 1\n        var vowelIndex50 = vowelIndex + 1\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpkf3860v5.scala:20:19 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            index--\n\e[31m\e[31m   |\e[0m          \
    \         ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkf3860v5.scala:16:43\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels.contains(word.charAt(index)))\
    \ {\n\e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                Found:    Char\n\e[31m   |\e\
    [0m                                Required: String\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkf3860v5.scala:17:35 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                vowel = word.charAt(index)\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Char\n\e[31m   |\e[0m                     \
    \   Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkf3860v5.scala:76:5\
    \ ---------------------\e[0m\e[0m\n\e[31m76 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009673
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsList\
    \ = vowelsAndConsonants.toList\n        val vowelsAndConsonantsListLength = vowelsAndConsonantsList.length\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8luo4vr_.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsAndConsonantsListLength\e[0m = vowelsAndConsonantsListLength - \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsLi"
  stdout: ''
  timestamp: 1660009670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrev = vowelsSetIteratorPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevNext = vowelsSetIteratorPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpslg1bb3s.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpslg1bb3s.scala:33:12 ---------------------------\e[0m\e[0m\n\e[31m33\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevNext\e[0m\
    \ = vowelsSetIteratorNextPrevPrevPrevNext.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevPrevPrevNext is already defined as\
    \ \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevPrevPrevNext\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpslg1bb3s.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorPrevPrevPrevPrevPrev\e[0m = vowelsSetIteratorPrevPrevPrevPrevNext.prev\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorPrevPrevPrevPrevPrev is already defined as\
    \ \e[33mvalue\e[0m \e[35mvowelsSetIteratorPrevPrevPrevPrevPrev\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpslg1bb3s.scala:35:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorPrevPrevPrevPrevNext\e[0m = vowelsSetIteratorPrevPrevPrevPrevNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorPrevPrevPrevPrevNext is already defined as\
    \ \e[33mvalue\e[0m \e[35mvowelsSetIteratorPrevPrevPrevPrevNext\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpslg1bb3s.scala:36:12"
  stdout: ''
  timestamp: 1660009674
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(_.isLetter).map(_.toUpperCase).map(vowels.contains).sum\n    \
    \    val consonants = word.filter(_.isLetter).map(_.toUpperCase).filter(_ != 'A'\
    \ && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U')\n        val consonantsCount\
    \ = word.filter(_.isLetter).map(_.toUpperCase).filter(_ != 'A' && _ != 'E' &&\
    \ _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_ != 'A' && _ !=\
    \ 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_ != 'A'\
    \ && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter(_\
    \ != 'A' && _ != 'E' && _ != 'I' && _ != 'O' && _ != 'U').map(_.toUpperCase).filter\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfcjtt57q.scala:12:56 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(_.isLetter).map(_.toUpperCase).map(vowels.contains).sum\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toUpperCase is not a\
    \ member of Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfcjtt57q.scala:13:55\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mconsonants\e[0m = word.filter(_.isLetter).map(_.toUpperCase).filter(_ != \e\
    [31m'A'\e[0m && _ != \e[31m'E'\e[0m && _ != \e[31m'I'\e[0m && _ != \e[31m'O'\e\
    [0m && _ != \e[31m'U'\e[0m)\n\e[31m\e[31m   |\e[0m                           \
    \                          ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \                value toUpperCase is not a member of Char\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpfcjtt57q.scala:14:60 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(_.isLetter).map(_.toUpperCase).filter(_\
    \ != \e[31m'A'\e[0m && _ != \e[31m'E'\e[0m && _ != \e[31m'I'\e[0m && _ != \e[31m'O'\e\
    [0m && _ != \e[31m'U'\e[0m).map(_.toUpperCase).filter(_ != \e[31m'A'\e[0m && _\
    \ != \e[31m'E'\e[0m && _ != \e[31m'I'\e[0m && _ != \e[31m'O'\e[0m && _ != \e[31m'U'\e\
    [0m).map(_.toUpperCase).filter(_ != \e[31m'A'\e[0m && _ != \e[31m'E'\e[0m && _\
    \ != \e[31m'I'\e[0m && _ != \e[31m'O'\e[0m && _ != \e[31m'U'\e[0m).map(_.toUpperCase).filter(_\
    \ != \e[31m'A'\e[0m && _ != \e[31m'E'\e[0m && _ != \e[31m'I'\e[0m && _ != \e[31m'O'\e\
    [0m && _ != \e[31m'U'\e[0m).map(_.toUpperCase).filter(_ != \e[31m'A'\e[0m && _\
    \ != \e[31m'E'\e[0m && _ != \e[31m'I'\e[0m && _ != \e[31m'O'\e[0m && _ != \e[31m'U'\e\
    [0m).map(_.toUpperCase).filter(_ != \e[31m'A'\e[0m && _ != \e[31m'E'\e[0m && _\
    \ != \e[31m'I'\e[0m && _ != \e[31m'O'\e[0m && _ != \e[31m'U'\e[0m).map(_.toUpperCase).filter(_\
    \ != \e[31m'A'\e[0m && _ != \e[31m'E'\e[0m && _ != \e[31m'I'\e[0m && _ != \e[31m'O'\e\
    [0m && _ != \e[31m'U'\e[0m).map(_.toUpperCase).filter(_ != \e[31m'A'\e[0m && _\
    \ != \e[31m'E'\e[0m && _ != \e[31m"
  stdout: ''
  timestamp: 1660009675
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = consonantsSet.size\n\
    \        val vowelsSetSize = vowelsSet.size\n        val consonantsSetSize = conson\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptqq7cq5b.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetSize\e[0m = vowelsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvowelsSetSize is already defined as \e[33mvalue\e[0m \e[35mvowelsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSetSize\e[0m = consonantsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsSetSize is already defined as \e[33mvalue\e[0m \e[35mconsonantsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetSize\e[0m = vowelsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvowelsSetSize is already defined as \e[33mvalue\e[0m \e[35mvowelsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsSetSize\e[0m = consonantsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsSetSize is already defined as \e[33mvalue\e[0m \e[35mconsonantsSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptqq7cq5b.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetSize\e[0m = vowelsSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp31na__q7.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp31na__q7.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIterator\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_j6ll100.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_j6ll100.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:29:64 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp_j6ll100.scala:31:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowel\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvyvoxcw6.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvyvoxcw6.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsAndConsonantsLength\e[0m = vowelsAndConsonants.size\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e[0m\
    \ \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvyvoxcw6.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvyvoxcw6.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvyvoxcw6.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is "
  stdout: ''
  timestamp: 1660009674
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsReversed\
    \ = vowelsAndConsonants.reverse\n        val vowelsAndConsonantsReversedReversed\
    \ = vowelsAndConsonantsReversed.reverse\n        val vowelsAndConsonantsReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversed.reverse\n        val vowelsAndConsonantsReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversed.reverse\n        val vowelsAndConsonantsReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversed.reverse\n        val vowelsAndConsonantsReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversed.reverse\n    \
    \    val vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \        val vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphzrcf_3q.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed\e\
    [0m = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversed\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmphzrcf_3q.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\e\
    [0m = vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversed.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  vowelsAndConsonantsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmphzrcf_3q.scala:14:62 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsona"
  stdout: ''
  timestamp: 1660009675
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = vowels.toList.map(_.length).sum\n        val consonantsCount\
    \ = consonants.toList.map(_.length).sum\n        val vowelsCountInWord = vowels.toList.map(_.toUpperCase).map(_.length).sum\n\
    \        val consonantsCountInWord = consonants.toList.map(_.toUpperCase).map(_.length).sum\n\
    \        val vowelsCountInWordInWord = vowels.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val consonantsCountInWordInWord = consonants.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val vowelsCountInWordInWordInWord = vowels.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val consonantsCountInWordInWordInWord = consonants.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val vowelsCountInWordInWordInWordInWord = vowels.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val consonantsCountInWordInWordInWordInWord = consonants.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val vowelsCountInWordInWordInWordInWordInWord = vowels.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val consonantsCountInWordInWordInWordInWordInWord = consonants.toList.map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.toUpperCase).map(_.length).sum\n\
    \        val vowelsCountInWordInWordInWordInWordInWord\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpa0hkre0g.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpa0hkre0g.scala:26:5 ---------------------\e[0m\e[0m\n\e[31m26 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009676
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.tail\n        val vowelsAfter = vowels.toList\n\
    \        val consonantsBefore = consonants.toList.tail\n        val consonantsAfter\
    \ = consonants.toList\n        val vowelsBeforeAndAfter = vowelsBefore ++ vowelsAfter\n\
    \        val consonantsBeforeAndAfter = consonantsBefore ++ consonantsAfter\n\
    \        val vowelsBeforeAndAfterAndConsonantsBeforeAndAfter = vowelsBeforeAndAfter\
    \ ++ consonantsBeforeAndAfter\n        val vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ = vowelsBeforeAndAfterAndConsonantsBeforeAndAfter ++ consonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \        val vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ = vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ ++ consonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \        val vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ = vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ ++ consonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \        val vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ = vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \        val vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndCon\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1bi58ppp.scala:25:4 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1bi58ppp.scala:20:140\
    \ -----------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\e\
    [0m = vowelsBeforeAndAfterAndConsonantsBeforeAndAfter ++ consonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                                            \
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m          Not found: consonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1bi58ppp.scala:21:194\
    \ -----------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\e\
    [0m = vowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\
    \ ++ consonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                                            \
    \                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: consonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfter\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp1bi58ppp.scala:22:143\
    \ --------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBeforeAndAfterAndConsonantsBefore"
  stdout: ''
  timestamp: 1660009676
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7xk_5e48.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7xk_5e48.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIterator.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7xk_5e48.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7xk_5e48.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNex"
  stdout: ''
  timestamp: 1660009681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val vowelsCount2 = word.count(vowels.toList)\n\
    \        val vowelsCount3 = word.count(vowels.toSet)\n        val vowelsCount4\
    \ = word.count(vowels.toSeq)\n        val vowelsCount5 = word.count(vowels.toIterator)\n\
    \        val vowelsCount6 = word.count(vowels.toStream)\n        val vowelsCount7\
    \ = word.count(vowels.toList)\n        val vowelsCount8 = word.count(vowels.toSet)\n\
    \        val vowelsCount9 = word.count(vowels.toSeq)\n        val vowelsCount10\
    \ = word.count(vowels.toIterator)\n        val vowelsCount11 = word.count(vowels.toStream)\n\
    \        val vowelsCount12 = word.count(vowels.toList)\n        val vowelsCount13\
    \ = word.count(vowels.toSet)\n        val vowelsCount14 = word.count(vowels.toSeq)\n\
    \        val vowelsCount15 = word.count(vowels.toIterator)\n        val vowelsCount16\
    \ = word.count(vowels.toStream)\n        val vowelsCount17 = word.count(vowels.toList)\n\
    \        val vowelsCount18 = word.count(vowels.toSet)\n        val vowelsCount19\
    \ = word.count(vowels.toSeq)\n        val vowelsCount20 = word.count(vowels.toIterator)\n\
    \        val vowelsCount21 = word.count(vowels.toStream)\n        val vowelsCount22\
    \ = word.count(vowels.toList)\n        val vowelsCount23 = word.count(vowels.toSet)\n\
    \        val vowelsCount24 = word.count(vowels.toSeq)\n        val vowelsCount25\
    \ = word.count(vowels.toIterator)\n        val vowelsCount26 = word.count(vowels.toStream)\n\
    \        val vowelsCount27 = word.count(vowels.toList)\n        val vowelsCount28\
    \ = word.count(vowels.toSet)\n        val vowelsCount29 = word.count(vowels.toSeq)\n\
    \        val vowelsCount30 = word.count(vowels.toIterator)\n        val vowelsCount31\
    \ = word.count(vowels.toStream)\n        val vowelsCount32 = word.count(vowels.toList)\n\
    \        val vowelsCount33 = word.count(vowels.toSet)\n        val vowelsCount34\
    \ = word.count(vowels.toSeq)\n        val vowelsCount35 = word.count(\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_a4umyy.scala:46:39 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount35\e[0m = word.count(\n\
    \e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:12:37\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:13:45 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.count(vowels.toList)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                      Found:    List[String]\n\e\
    [31m   |\e[0m                                      Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:15:45\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount4\e\
    [0m = word.count(vowels.toSeq)\n\e[31m\e[31m   |\e[0m                        \
    \              ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \          Found:    Seq[String]\n\e[31m   |\e[0m                            \
    \          Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpq_a4umyy.scala:16:45 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount5\e[0m = word.count(vowels"
  stdout: ''
  timestamp: 1660009633
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(c => vowels.contains(c)).length\n   \
    \     val consonantsCount = word.filter(c => consonants.contains(c)).length\n\
    \        val vowelsCount = word.filter(c => vowels.contains(c)).length\n     \
    \   val consonantsCount = word.filter(c => consonants.contains(c)).length\n  \
    \      val vowelsCount = word.filter(c => vowels.contains(c)).length\n       \
    \ val consonantsCount = word.filter(c => consonants.contains(c)).length\n    \
    \    val vowelsCount = word.filter(c => vowels.contains(c)).length\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c)).length\n        val\
    \ vowelsCount = word.filter(c => vowels.contains(c)).length\n        val consonantsCount\
    \ = word.filter(c => consonants.contains(c)).length\n        val vowelsCount =\
    \ word.filter(c => vowels.contains(c)).length\n        val consonantsCount = word.filter(c\
    \ => consonants.contains(c)).length\n        val vowelsCount = word.filter(c =>\
    \ vowels.contains(c)).length\n        val consonantsCount = word.filter(c => consonants.contains(c)).length\n\
    \        val vowelsCount = word.filter(c => vowels.contains(c)).length\n     \
    \   val consonantsCount = word.filter(c => consonants.contains(c)).length\n  \
    \      val vowelsCount = word.filter(c => vowels.contains(c)).length\n       \
    \ val consonantsCount = word.filter(c => consonants.contains(c)).length\n    \
    \    val vowelsCount = word.filter(c => vowels.contains(c)).length\n        val\
    \ consonantsCount = word.filter(c => consonants.contains(c)).length\n        val\
    \ vowelsCount = word.filter(c => vowels.contains(c)).length\n        val consonantsCount\
    \ = word.filter(c => consonants.contains(c)).length\n        val vowelsCount =\
    \ word.filter(c => vowels.contains(c)).length\n        val consonantsCount = word.filter(c\
    \ => consonants.contains(c)).length\n        val vowelsCount = word.filter(c =>\
    \ vowels.contains(c)).length\n        val consonantsCount = word.filter(c => consonants.contains(c))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvza8o8u8.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mc\e[0m => vowels.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvza8o8u8.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mc\e[0m => consonants.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvza8o8u8.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mc\e[0m => vowels.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvza8o8u8.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mc\e[0m => consonants.contains(c)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel defi"
  stdout: ''
  timestamp: 1660009684
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(Set(\"a\", \"e\", \"\
    i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n        val\
    \ vowelsSet4 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet5 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"))\n        val vowelsSet6 = vowelsSet.diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpru2js2gz.scala:17:834 ----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet6\e[0m = vowelsSet.diff(Set(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \"u\n\e[31m\e[31m   |\e[0m                       \
    \              "
  stdout: ''
  timestamp: 1660009682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\") // Set of all vowels\n\
    \        val vowelsSet = vowels.toSet // Set of all vowels in Set\n        val\
    \ vowelsSetIterator = vowelsSet.iterator // Iterator of vowelsSet\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next // Iterator of vowelsSet\n  \
    \      val vowelsSetIteratorPrev = vowelsSetIterator.prev // Iterator of vowelsSet\n\
    \        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev // Iterator\
    \ of vowelsSet\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNext.prev // Iterator of vowelsSet\n        val\
    \ vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNext.prev // Iterator of vowelsSet\n    \
    \    val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNext.prev // Iterator of vowelsSet\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIteratorNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNext.prev // Iterator of vowelsSet\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\
    \ // Iterator of vowelsSet\n        val vowelsSetIterator\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpp9ou2saa.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp9ou2saa.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev \e[34m// Iterator of vowelsSet\e\
    [0m\n\e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp9ou2saa.scala:16:62\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextPrev\e[0m = vowelsSetIteratorNext.prev \e[34m// Iterator\
    \ of vowelsSet\e[0m\n\e[31m\e[31m   |\e[0m                                   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpp9ou2saa.scala:17:62 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e[0m\
    \ = vowelsSetIteratorNext.next \e[34m// Iterator of vowelsSet\e[0m\n\e[31m\e[31m\
    \   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue next is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpp9ou2saa.scala:29:64 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next \e[34m// Iterator\
    \ of vowelsSet\e[0m\n\e[31m\e[31m   |\e[0m                                   \
    \                             ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m\
    \ \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e[0m needs type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp9ou2saa.s"
  stdout: ''
  timestamp: 1660009683
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = word.length - 1\n\
    \        var vowelCount2 = 0\n        var closestVowel = \"\"\n        var closestVowel2\
    \ = \"\"\n        while(vowelIndex < word.length && vowelIndex2 < word.length)\
    \ {\n            if(vowels.contains(word.charAt(vowelIndex))) {\n            \
    \    vowelCount += 1\n            }\n            if(vowels.contains(word.charAt(vowelIndex2)))\
    \ {\n                vowelCount2 += 1\n            }\n            vowelIndex +=\
    \ 1\n            vowelIndex2 -= 1\n        }\n        if(vowelCount > vowelCount2)\
    \ {\n            closestVowel = word.charAt(vowelIndex2)\n            closestVowel2\
    \ = word.charAt(vowelIndex - 1)\n        }\n        if(vowelCount < vowelCount2)\
    \ {\n            closestVowel = word.charAt(vowelIndex - 1)\n            closestVowel2\
    \ = word.charAt(vowelIndex2)\n        }\n        if(closestVowel == \"\" && closestVowel2\
    \ == \"\") {\n            closestVowel = word.charAt(vowelIndex - 1)\n       \
    \     closestVowel2 = word.charAt(vowelIndex2)\n        }\n        if(closestVowel\
    \ == \"\" && closestVowel2 != \"\") {\n            closestVowel = word.charAt(vowelIndex\
    \ - 1)\n            closestVowel2 = word.charAt(vowelIndex2 - 1)\n        }\n\
    \        if(closestVowel != \"\" && closestVowel2 == \"\") {\n            closestVowel\
    \ = word.charAt(vowelIndex - 1)\n            closestVowel2 = word.charAt(vowelIndex2)\n\
    \        }\n        if(closestVowel != \"\" && closestVowel2 != \"\") {\n    \
    \        closestVowel = word.charAt(vowelIndex - 1)\n            closestVowel2\
    \ = word.charAt(vowelIndex2 - 1)\n        }\n        if(closestVowel != \"\" &&\
    \ closestVowel2 != \"\") {\n            closestVowel = word.charAt(vowelIndex\
    \ - 1)\n            closestVowel2 = word.charAt(vowelIndex2 - 1)\n        }\n\
    \        if(closestVowel != \"\" && closestVowel2 != \"\") {\n            closestVowel\
    \ = word.charAt(vowelIndex - 1)\n            closestVowel2 = word.charAt(vowelIndex2\
    \ - 1)\n        }\n        if(closestVowel != \"\" && closestVowel2 != \"\") {\n\
    \            closestVowel = word.charAt(vowelIndex - 1)\n            closestVowel2\
    \ = word.charAt(vowelIndex2 - 1)\n        }\n        if(closestVowel != \"\" &&\
    \ closestVowel2 != \"\") {\n            closestVowel\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjgbac7qg.scala:84:0 ----------------------------\e\
    [0m\e[0m\n\e[31m84 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjgbac7qg.scala:19:42\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(vowels.contains(word.charAt(vowelIndex)))\
    \ {\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Found:    Char\n\e[31m   |\e\
    [0m                               Required: String\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjgbac7qg.scala:22:42 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m(vowels.contains(word.charAt(vowelIndex2)))\
    \ {\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Found:    Char\n\e[31m   |\e\
    [0m                               Required: String\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjgbac7qg.scala:29:38 --------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            closestVowel = word.charAt(vowelIndex2)\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Found:    Char\n\e[31m   |\e[0m    \
    \                       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpjgbac7qg.scala:30:39 --------------------\e[0m\e\
    [0m\n\e[31m30 |\e[0m            closestVowel2 = word.charAt(vowelIndex - \e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Found:    Char\n\e[31m   |\e[0m\
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /t"
  stdout: ''
  timestamp: 1660009687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphtiwsn17.scala:33:11 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmphtiwsn17.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmphtiwsn17.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                            value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphtiwsn17.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmphtiwsn17.scala:27:60 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphtiwsn17.scala:28:68\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |"
  stdout: ''
  timestamp: 1660009684
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(_.isLetter).map(_.toLowerCase ).toSet\n        val vowelsCountReverse\
    \ = vowelsCount.toSeq.reverse\n        val vowelsCountReverseSet = vowelsCountReverse.toSet\n\
    \        val vowelsCountReverseSetSize = vowelsCountReverseSet.size\n        val\
    \ vowelsCountReverseSetIterator = vowelsCountReverseSet.iterator\n        val\
    \ vowelsCountReverseSetIteratorSize = vowelsCountReverseSetIterator.size\n   \
    \     val vowelsCountReverseSetIteratorIterator = vowelsCountReverseSetIterator.iterator\n\
    \        val vowelsCountReverseSetIteratorIteratorSize = vowelsCountReverseSetIteratorIterator.size\n\
    \        val vowelsCountReverseSetIteratorIteratorIterator = vowelsCountReverseSetIteratorIterator.iterator\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorSize = vowelsCountReverseSetIteratorIteratorIterator.size\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIterator = vowelsCountReverseSetIteratorIteratorIterator.iterator\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorSize = vowelsCountReverseSetIteratorIteratorIteratorIterator.size\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIterator = vowelsCountReverseSetIteratorIteratorIterator.iterator\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIterator.size\n        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIterator.iterator\n        val\
    \ vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorSize = vowelsCountReverseSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsCountReverseSet\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppxsxvib7.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorSize\e\
    [0m = vowelsCountReverseSetIteratorIteratorIteratorIteratorIterator.size\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorSize\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppxsxvib7.scala:31:12 ---------------------------\e[0m\e[0m\n\e\
    [31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\e\
    [0m = vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  vowelsCountReverseSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmppxsxvib7.scala:12:56 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(_.isLetter).map(_.toLowerCase\
    \ ).toSet\n\e[31m\e[31m   |\e[0m                                             \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                               value\
    \ toLowerCase is not a member of Char\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/"
  stdout: ''
  timestamp: 1660009684
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.takeWhile(vowel => word.indexOf(vowel)\
    \ < word.lastIndexOf(vowel))\n        val vowelsAfter = vowels.toList.dropWhile(vowel\
    \ => word.indexOf(vowel) < word.lastIndexOf(vowel))\n        val vowelsBetween\
    \ = vowelsBefore.zip(vowelsAfter).filter(_._1 == _._1).map(_._2)\n        val\
    \ consonantsBefore = consonants.toList.takeWhile(consonant => word.indexOf(consonant)\
    \ < word.lastIndexOf(consonant))\n        val consonantsAfter = consonants.toList.dropWhile(consonant\
    \ => word.indexOf(consonant) < word.lastIndexOf(consonant))\n        val consonantsBetween\
    \ = consonantsBefore.zip(consonantsAfter).filter(_._1 == _._1).map(_._2)\n   \
    \     val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1 == _._1).map(_._2)\n\
    \        val consonantsBetween = consonantsBefore.zip(consonantsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val consonantsBetween = consonantsBefore.zip(consonantsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val consonantsBetween = consonantsBefore.zip(consonantsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val consonantsBetween = consonantsBefore.zip(consonantsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1\
    \ == _._1).map(_._2)\n        val consonantsBetween = consonants\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyk5cgp9f.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBefore.zip(vowelsAfter).filter(_._1\
    \ == _._1).map(_._2)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetween is already defined as \e[33mvalue\e[0m \e[35mvowelsBetween\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpyk5cgp9f.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetween\e[0m = consonantsBefore.zip(consonantsAfter).filter(_._1\
    \ == _._1).map(_._2)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsBetween is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsBetween\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpyk5cgp9f.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBefore.zip(vowelsAfter).filter(_._1\
    \ == _._1).map(_._2)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsBetween is already defined as \e[33mvalue\e[0m \e[35mvowelsBetween\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpyk5cgp9f.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBetween\e[0m = consonantsBefore.zip(consonantsAfter).filter(_._1\
    \ == _._1).map(_._2)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsBetween is already defined as \e[33"
  stdout: ''
  timestamp: 1660009687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonantsCount = word.filter(consonants.contains).size\n       \
    \ val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount = word.filter(vowels.contains).size\n\
    \        val consonants\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5l9lel2b.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5l9lel2b.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(vowels.contains).size\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5l9lel2b.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp5l9lel2b.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5l9lel2b.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote tha"
  stdout: ''
  timestamp: 1660009687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsReverse\
    \ = vowelsAndConsonants.reverse\n        val vowelsAndConsonantsReverseIter =\
    \ vowelsAndConsonantsReverse.iterator\n        val vowelsAndConsonantsReverseIterNext\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterPrev\
    \ = vowelsAndConsonantsReverseIter.prev\n        val vowelsAndConsonantsReverseIterNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNext\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNext\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNext\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsAndConsonantsReverseIter.next\n        val vowelsAndConsonantsReverseIterNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsAndCon\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphos968po.scala:14:61 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsReverse\e\
    [0m = vowelsAndConsonants.reverse\n\e[31m\e[31m   |\e[0m                     \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue reverse\
    \ is not a member of scala.collection.mutable.Set[String] - did you mean vowelsAndConsonants.reversed?\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphos968po.scala:31:97 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsReverseIterNextNextNextNextNextNextNextNextNextNextNextNextPrev\e\
    [0m = vowelsAndCon\n\e[31m\e[31m   |\e[0m                                    \
    \                                                             ^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                                 Not found: vowelsAndCon\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphos968po.scala:32:5\
    \ ---------------------\e[0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.filter(_ != \"a\")\n      \
    \  val vowelsSet3 = vowelsSet.filter(_ != \"e\")\n        val vowelsSet4 = vowelsSet.filter(_\
    \ != \"i\")\n        val vowelsSet5 = vowelsSet.filter(_ != \"o\")\n        val\
    \ vowelsSet6 = vowelsSet.filter(_ != \"u\")\n        val vowelsSet7 = vowelsSet.filter(_\
    \ != \"A\")\n        val vowelsSet8 = vowelsSet.filter(_ != \"E\")\n        val\
    \ vowelsSet9 = vowelsSet.filter(_ != \"I\")\n        val vowelsSet10 = vowelsSet.filter(_\
    \ != \"O\")\n        val vowelsSet11 = vowelsSet.filter(_ != \"U\")\n        val\
    \ vowelsSet12 = vowelsSet.filter(_ != \"a\")\n        val vowelsSet13 = vowelsSet.filter(_\
    \ != \"e\")\n        val vowelsSet14 = vowelsSet.filter(_ != \"i\")\n        val\
    \ vowelsSet15 = vowelsSet.filter(_ != \"o\")\n        val vowelsSet16 = vowelsSet.filter(_\
    \ != \"u\")\n        val vowelsSet17 = vowelsSet.filter(_ != \"A\")\n        val\
    \ vowelsSet18 = vowelsSet.filter(_ != \"E\")\n        val vowelsSet19 = vowelsSet.filter(_\
    \ != \"I\")\n        val vowelsSet20 = vowelsSet.filter(_ != \"O\")\n        val\
    \ vowelsSet21 = vowelsSet.filter(_ != \"U\")\n        val vowelsSet22 = vowelsSet.filter(_\
    \ != \"a\")\n        val vowelsSet23 = vowelsSet.filter(_ != \"e\")\n        val\
    \ vowelsSet24 = vowelsSet.filter(_ != \"i\")\n        val vowelsSet25 = vowelsSet.filter(_\
    \ != \"o\")\n        val vowelsSet26 = vowelsSet.filter(_ != \"u\")\n        val\
    \ vowelsSet27 = vowelsSet.filter(_ != \"A\")\n        val vowelsSet28 = vowelsSet.filter(_\
    \ != \"E\")\n        val vowelsSet29 = vowelsSet.filter(_ != \"I\")\n        val\
    \ vowelsSet30 = vowelsSet.filter(_ != \"O\")\n        val vowelsSet31 = vowelsSet.filter(_\
    \ != \"U\")\n        val vowelsSet32 = vowelsSet.filter(_ != \"a\")\n        val\
    \ vowels\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6_8ph03j.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp6_8ph03j.scala:45:5 ---------------------\e[0m\e[0m\n\e[31m45 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009645
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = word.length - 1\n\
    \        var vowelCount2 = 0\n        var closestVowel = \"\"\n        var closestVowel2\
    \ = \"\"\n        var closestVowel3 = \"\"\n        var closestVowel4 = \"\"\n\
    \        var closestVowel5 = \"\"\n        var closestVowel6 = \"\"\n        var\
    \ closestVowel7 = \"\"\n        var closestVowel8 = \"\"\n        var closestVowel9\
    \ = \"\"\n        var closestVowel10 = \"\"\n        var closestVowel11 = \"\"\
    \n        var closestVowel12 = \"\"\n        var closestVowel13 = \"\"\n     \
    \   var closestVowel14 = \"\"\n        var closestVowel15 = \"\"\n        var\
    \ closestVowel16 = \"\"\n        var closestVowel17 = \"\"\n        var closestVowel18\
    \ = \"\"\n        var closestVowel19 = \"\"\n        var closestVowel20 = \"\"\
    \n        var closestVowel21 = \"\"\n        var closestVowel22 = \"\"\n     \
    \   var closestVowel23 = \"\"\n        var closestVowel24 = \"\"\n        var\
    \ closestVowel25 = \"\"\n        var closestVowel26 = \"\"\n        var closestVowel27\
    \ = \"\"\n        var closestVowel28 = \"\"\n        var closestVowel29 = \"\"\
    \n        var closestVowel30 = \"\"\n        var closestVowel31 = \"\"\n     \
    \   var closestVowel32 = \"\"\n        var closestVowel33 = \"\"\n        var\
    \ closestVowel34 = \"\"\n        var closestVowel35 = \"\"\n        var closestVowel36\
    \ = \"\"\n        var closestVowel37 = \"\"\n        var closestVowel38 = \"\"\
    \n        var closestVowel39 = \"\"\n        var closestVowel40 = \"\"\n     \
    \   var closestVowel41 = \"\"\n        var closestVowel42 = \"\"\n        var\
    \ closestVowel43 = \"\"\n        var closestVowel44 = \"\"\n        var closestVowel45\
    \ = \"\"\n        var closestVowel46 = \"\"\n        var closestVowel47 = \"\"\
    \n        var closestVowel48 = \"\"\n        var closestVowel49 = \"\"\n     \
    \   var closestVowel50 = \"\"\n        var closestVowel51 = \"\"\n        var\
    \ closestVowel52 = \"\"\n        var closestVowel53 = \"\"\n        var closestVowel54\
    \ = \"\"\n        var closestVowel55 = \"\"\n        var closestVowel56 = \"\"\
    \n        var closestVowel57 = \"\"\n        var closestVowel58 = \"\"\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3bg7vw8x.scala:74:5\
    \ ---------------------\e[0m\e[0m\n\e[31m74 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009644
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n        val\
    \ vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n        val\
    \ vowelsSetIteratorNextPrevPrevPrev = vowelsSetIteratorNextPrevNext.prev\n   \
    \     val vowelsSetIteratorNextPrevPrevNext = vowelsSetIteratorNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe4atlkux.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpe4atlkux.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpe4atlkux.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4atlkux.scala:33:72 ------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\e[31m\e[31m   |\e[0m  \
    \                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m               Not found: vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevN\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe4atlkux.scala:34:5\
    \ ---------------------\e[0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660009632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrev = vowelsSetIteratorPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrevPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrevPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorPrevPrevPrevPrevPrev\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv653h7j8.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv653h7j8.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv653h7j8.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpv653h7j8.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv653h7j8.scala:34:68 ------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrevPrev\e\
    [0m = vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrevNext.prev\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        Not found: vowelsSetIteratorPrevPrevPrevPrevPrevPrevPrevPrevNext\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv653h7j8.scala:36:5\
    \ ---------------------\e[0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660009689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).length\n        val\
    \ consonantsCount = word.filter(consonants.contains).length\n        val vowelsCountInWord\
    \ = word.filter(vowels.contains).length\n        val consonantsCountInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWord = word.filter(vowels.contains).length\n \
    \       val consonantsCountInWordInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWord = word.filter(vowels.contains).length\n\
    \        val consonantsCountInWordInWordInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWord = word.filter(vowels.contains).length\n\
    \        val consonantsCountInWordInWordInWordInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWord = word.filter(vowels.contains).length\n\
    \        val consonantsCountInWordInWordInWordInWordInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWordInWord = word.filter(vowels.contains).length\n\
    \        val consonantsCountInWordInWordInWordInWordInWordInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWordInWordInWord = word.filter(vowels.contains).length\n\
    \        val consonantsCountInWordInWordInWordInWordInWordInWordInWord = word.filter(consonants.contains).length\n\
    \        val vowelsCountInWordInWordInWordInWordInWordInWordInWordInWord = word.filter(vowels.contains).length\n\
    \        val consonantsCountInWordInWordInWordInWordInWordInWordInWordInWord =\
    \ word.filter(consonants.contains).length\n        val vowelsCountInWordInWordInWordInWordInWordInWordInWordInWordInWord\
    \ = word.filter(vowels.contains).length\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmxajjwzh.scala:13:38\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.filter(vowels.contains).length\n\e[31m\e[31m   |\e[0m             \
    \                         ^\e[0m\n\e[31m   |\e[0m                            \
    \          Found:    (elem : Char)\n\e[31m   |\e[0m                          \
    \            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmxajjwzh.scala:14:42 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                                          Found:    (elem : Char)\n\e\
    [31m   |\e[0m                                          Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmxajjwzh.scala:15:44 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountInWord\e[0m =\
    \ word.filter(vowels.contains).length\n\e[31m\e[31m   |\e[0m                 \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \                  Found:    (elem : Char)\n\e[31m   |\e[0m                  \
    \                          Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmxajjwzh.scala:16:48 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCountInWord\e\
    [0m = word.filter(consonants.contains).length\n\e[31m\e[31m   |\e[0m         \
    \                                       ^\e[0m\n\e[31m   |\e[0m              \
    \                                  Found:    (elem : Char)\n\e[31m   |\e[0m  \
    \                                              Required: String\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] "
  stdout: ''
  timestamp: 1660009689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrev = vowelsSetIteratorNextPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextPrevPrevPrev = vowelsSetIteratorNextPrevPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowel\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyznk85sr.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpyznk85sr.scala:25:48 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevNextPrevPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.prev\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyznk85sr.scala:26:48\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevNextPrevNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m          "
  stdout: ''
  timestamp: 1660009641
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length\n        var vowelIndex3 = word.length\n\
    \        var vowelIndex4 = word.length\n        var vowelIndex5 = word.length\n\
    \        var vowelIndex6 = word.length\n        var vowelIndex7 = word.length\n\
    \        var vowelIndex8 = word.length\n        var vowelIndex9 = word.length\n\
    \        var vowelIndex10 = word.length\n        var vowelIndex11 = word.length\n\
    \        var vowelIndex12 = word.length\n        var vowelIndex13 = word.length\n\
    \        var vowelIndex14 = word.length\n        var vowelIndex15 = word.length\n\
    \        var vowelIndex16 = word.length\n        var vowelIndex17 = word.length\n\
    \        var vowelIndex18 = word.length\n        var vowelIndex19 = word.length\n\
    \        var vowelIndex20 = word.length\n        var vowelIndex21 = word.length\n\
    \        var vowelIndex22 = word.length\n        var vowelIndex23 = word.length\n\
    \        var vowelIndex24 = word.length\n        var vowelIndex25 = word.length\n\
    \        var vowelIndex26 = word.length\n        var vowelIndex27 = word.length\n\
    \        var vowelIndex28 = word.length\n        var vowelIndex29 = word.length\n\
    \        var vowelIndex30 = word.length\n        var vowelIndex31 = word.length\n\
    \        var vowelIndex32 = word.length\n        var vowelIndex33 = word.length\n\
    \        var vowelIndex34 = word.length\n        var vowelIndex35 = word.length\n\
    \        var vowelIndex36 = word.length\n        var vowelIndex37 = word.length\n\
    \        var vowelIndex38 = word.length\n        var vowelIndex39 = word.length\n\
    \        var vowelIndex40 = word.length\n        var vowelIndex41 = word.length\n\
    \        var vowelIndex42 = word.length\n        var vowelIndex43 = word.length\n\
    \        var vowelIndex44 = word.length\n        var vowelIndex45 = word.length\n\
    \        var vowelIndex46 = word.length\n        var vowelIndex47 = word.length\n\
    \        var vowelIndex48 = word.length\n        var vowelIndex49 = word.length\n\
    \        var vowelIndex50 = word.length\n        var vowelIndex51 = word.length\n\
    \        var vowelIndex52 = word.length\n        var vowelIndex53 = word.length\n\
    \        var vowelIndex54 = word.length\n        var vowelIndex55 = word.length\n\
    \        var vowelIndex56 = word.length\n        var vowelIndex57 = word.length\n\
    \        var vowelIndex58 = word.length\n        var vowelIndex59 = word.length\n\
    \        var vowelIndex60 = word.length\n        var vowelIndex61 = word.length\n\
    \        var vowelIndex62 = word.length\n        var vowelIndex63 = word.length\n\
    \        var vowelIndex64 = word\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9e82bg97.scala:76:5\
    \ ---------------------\e[0m\e[0m\n\e[31m76 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009686
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        var vowelsCount2 = word.filter(x\
    \ => vowels.contains(x)).length\n        var vowelsCount3 = word.filter(x => vowels.contains(x)).length\n\
    \        var vowelsCount4 = word.filter(x => vowels.contains(x)).length\n    \
    \    var vowelsCount5 = word.filter(x => vowels.contains(x)).length\n        var\
    \ vowelsCount6 = word.filter(x => vowels.contains(x)).length\n        var vowelsCount7\
    \ = word.filter(x => vowels.contains(x)).length\n        var vowelsCount8 = word.filter(x\
    \ => vowels.contains(x)).length\n        var vowelsCount9 = word.filter(x => vowels.contains(x)).length\n\
    \        var vowelsCount10 = word.filter(x => vowels.contains(x)).length\n   \
    \     var vowelsCount11 = word.filter(x => vowels.contains(x)).length\n      \
    \  var vowelsCount12 = word.filter(x => vowels.contains(x)).length\n        var\
    \ vowelsCount13 = word.filter(x => vowels.contains(x)).length\n        var vowelsCount14\
    \ = word.filter(x => vowels.contains(x)).length\n        var vowelsCount15 = word.filter(x\
    \ => vowels.contains(x)).length\n        var vowelsCount16 = word.filter(x =>\
    \ vowels.contains(x)).length\n        var vowelsCount17 = word.filter(x => vowels.contains(x)).length\n\
    \        var vowelsCount18 = word.filter(x => vowels.contains(x)).length\n   \
    \     var vowelsCount19 = word.filter(x => vowels.contains(x)).length\n      \
    \  var vowelsCount20 = word.filter(x => vowels.contains(x)).length\n        var\
    \ vowelsCount21 = word.filter(x => vowels.contains(x)).length\n        var vowelsCount22\
    \ = word.filter(x => vowels.contains(x)).length\n        var vowelsCount23 = word.filter(x\
    \ => vowels.contains(x)).length\n        var vowelsCount24 = word.filter(x =>\
    \ vowels.contains(x)).length\n        var vowelsCount25 = word.filter(x => vowels.contains(x)).length\n\
    \        var vowelsCount26 = word.filter(x => vowels.contains(x)).length\n   \
    \     var vowelsCount27 = word.filter(x => vowels.contains(x)).length\n      \
    \  var vowelsCount28 = word.filter(x => vowels.contains(x)).length\n        var\
    \ vowelsCount29 = word.filter(x => vowels.contains(x)).length\n        var vowelsCount30\
    \ = word.filter(x => vowels.contains(x)).length\n        var vowelsCount31 = word.filter(x\
    \ => vowels.contains(x)).length\n        var vowelsCount32 = word.filter(x =>\
    \ vowels.contains(x))\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi202d66t.scala:12:59\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                           ^\e[0m\n\e[31m \
    \  |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi202d66t.scala:13:60\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount2\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi202d66t.scala:14:60\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount3\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi202d66t.scala:15:60\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount4\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m       "
  stdout: ''
  timestamp: 1660009692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg99z763s.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpg99z763s.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpg99z763s.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpg99z763s.scala:27:60 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg99z763s.scala:28:68\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |"
  stdout: ''
  timestamp: 1660009659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = -1\n        var vowelCount2\
    \ = -1\n        var vowelIndex3 = -1\n        var vowelCount3 = -1\n        var\
    \ vowelIndex4 = -1\n        var vowelCount4 = -1\n        var vowelIndex5 = -1\n\
    \        var vowelCount5 = -1\n        var vowelIndex6 = -1\n        var vowelCount6\
    \ = -1\n        var vowelIndex7 = -1\n        var vowelCount7 = -1\n        var\
    \ vowelIndex8 = -1\n        var vowelCount8 = -1\n        var vowelIndex9 = -1\n\
    \        var vowelCount9 = -1\n        var vowelIndex10 = -1\n        var vowelCount10\
    \ = -1\n        var vowelIndex11 = -1\n        var vowelCount11 = -1\n       \
    \ var vowelIndex12 = -1\n        var vowelCount12 = -1\n        var vowelIndex13\
    \ = -1\n        var vowelCount13 = -1\n        var vowelIndex14 = -1\n       \
    \ var vowelCount14 = -1\n        var vowelIndex15 = -1\n        var vowelCount15\
    \ = -1\n        var vowelIndex16 = -1\n        var vowelCount16 = -1\n       \
    \ var vowelIndex17 = -1\n        var vowelCount17 = -1\n        var vowelIndex18\
    \ = -1\n        var vowelCount18 = -1\n        var vowelIndex19 = -1\n       \
    \ var vowelCount19 = -1\n        var vowelIndex20 = -1\n        var vowelCount20\
    \ = -1\n        var vowelIndex21 = -1\n        var vowelCount21 = -1\n       \
    \ var vowelIndex22 = -1\n        var vowelCount22 = -1\n        var vowelIndex23\
    \ = -1\n        var vowelCount23 = -1\n        var vowelIndex24 = -1\n       \
    \ var vowelCount24 = -1\n        var vowelIndex25 = -1\n        var vowelCount25\
    \ = -1\n        var vowelIndex26 = -1\n        var vowelCount26 = -1\n       \
    \ var vowelIndex27 = -1\n        var vowelCount27 = -1\n        var vowelIndex28\
    \ = -1\n        var vowelCount28 = -1\n        var vowelIndex29 = -1\n       \
    \ var vowelCount29 = -1\n        var vowelIndex30 = -1\n        var vowelCount30\
    \ = -1\n        var vowelIndex31 = -1\n        var vowelCount31 = -1\n       \
    \ var vowelIndex32 = -1\n        var vowelCount32 = -1\n        var vowelIndex33\
    \ = -1\n        var vowelCount33 = -1\n        var vowelIndex34 = -1\n       \
    \ var vowelCount34 = -1\n        var vowelIndex35 = -1\n        var vowelCount35\
    \ = -1\n        var vowelIndex36 = -1\n        var vowelCount36 = -1\n       \
    \ var vowelIndex37 = -1\n        var vowelCount37 = -1\n        var vowelIndex38\
    \ = -1\n        var vowelCount38 = -1\n        var vowelIndex39 = -1\n       \
    \ var vowelCount39 = -1\n        var vowelIndex40 = -1\n        var vowelCount40\
    \ = -1\n        var vowelIndex41 = -1\n        var vowelCount41 = -1\n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpack1_a3k.scala:95:5\
    \ ---------------------\e[0m\e[0m\n\e[31m95 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0aqsr0wd.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length - 1\n        var vowelIndex3 = word.length\
    \ - 1\n        var vowelIndex4 = word.length - 1\n        var vowelIndex5 = word.length\
    \ - 1\n        var vowelIndex6 = word.length - 1\n        var vowelIndex7 = word.length\
    \ - 1\n        var vowelIndex8 = word.length - 1\n        var vowelIndex9 = word.length\
    \ - 1\n        var vowelIndex10 = word.length - 1\n        var vowelIndex11 =\
    \ word.length - 1\n        var vowelIndex12 = word.length - 1\n        var vowelIndex13\
    \ = word.length - 1\n        var vowelIndex14 = word.length - 1\n        var vowelIndex15\
    \ = word.length - 1\n        var vowelIndex16 = word.length - 1\n        var vowelIndex17\
    \ = word.length - 1\n        var vowelIndex18 = word.length - 1\n        var vowelIndex19\
    \ = word.length - 1\n        var vowelIndex20 = word.length - 1\n        var vowelIndex21\
    \ = word.length - 1\n        var vowelIndex22 = word.length - 1\n        var vowelIndex23\
    \ = word.length - 1\n        var vowelIndex24 = word.length - 1\n        var vowelIndex25\
    \ = word.length - 1\n        var vowelIndex26 = word.length - 1\n        var vowelIndex27\
    \ = word.length - 1\n        var vowelIndex28 = word.length - 1\n        var vowelIndex29\
    \ = word.length - 1\n        var vowelIndex30 = word.length - 1\n        var vowelIndex31\
    \ = word.length - 1\n        var vowelIndex32 = word.length - 1\n        var vowelIndex33\
    \ = word.length - 1\n        var vowelIndex34 = word.length - 1\n        var vowelIndex35\
    \ = word.length - 1\n        var vowelIndex36 = word.length - 1\n        var vowelIndex37\
    \ = word.length - 1\n        var vowelIndex38 = word.length - 1\n        var vowelIndex39\
    \ = word.length - 1\n        var vowelIndex40 = word.length - 1\n        var vowelIndex41\
    \ = word.length - 1\n        var vowelIndex42 = word.length - 1\n        var vowelIndex43\
    \ = word.length - 1\n        var vowelIndex44 = word.length - 1\n        var vowelIndex45\
    \ = word.length - 1\n        var vowelIndex46 = word.length - 1\n        var vowelIndex47\
    \ = word.length - 1\n        var vowelIndex48 = word.length - 1\n        var vowelIndex49\
    \ = word.length - 1\n        var vowelIndex50 = word.length - 1\n        var vowelIndex51\
    \ = word.length - 1\n        var vowelIndex52 = word.length - 1\n        var vowelIndex53\
    \ = word.length - 1\n        var vowelIndex54 = word.length - 1\n        var vowelIndex55\
    \ = word.length - 1\n        var vowelIndex56 = word.length - 1\n        var vowelIndex57\
    \ = word.length\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdsf5jgpo.scala:69:5\
    \ ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsSet\
    \ = vowelsAndConsonants.toSet\n        val vowelsAndConsonantsSetIterator = vowelsAndConsonantsSet.iterator\n\
    \        val vowelsAndConsonantsSetIteratorNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNext = vowelsAndConsonantsSetIterator.next\n\
    \        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNext =\
    \ vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.next\n        val vowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsAndConsonantsSetIterator.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3te34dfi.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3te34dfi.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsAndConsonantsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3te34dfi.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsAndConsonantsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3te34dfi.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsAndConsonantsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsSetIteratorNextNextNextNext"
  stdout: ''
  timestamp: 1660009687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).size\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).size\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCount\
    \ + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount = vowelsCoun\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjo5eafgi.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjo5eafgi.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjo5eafgi.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjo5eafgi.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjo5eafgi.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n"
  stdout: ''
  timestamp: 1660009689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(_.isLetter).map(_.toUpperCase).map(vowels.contains).sum\n    \
    \    if(vowelsCount == 0) \"\"\n        else word.filter(_.isLetter).map(_.toUpperCase).reverse.takeWhile(vowels.contains).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr1kx35bg.scala:12:56 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(_.isLetter).map(_.toUpperCase).map(vowels.contains).sum\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toUpperCase is not a\
    \ member of Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr1kx35bg.scala:14:43\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m word.filter(_.isLetter).map(_.toUpperCase).reverse.takeWhile(vowels.contains).last\n\
    \e[31m\e[31m   |\e[0m                                         ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toUpperCase is not a\
    \ member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1660009689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).length\n        val\
    \ consonantsCount = word.filter(consonants.contains).length\n        val vowelsCount2\
    \ = word.filter(vowels.contains).length\n        val consonantsCount2 = word.filter(consonants.contains).length\n\
    \        val vowelsCount3 = word.filter(vowels.contains).length\n        val consonantsCount3\
    \ = word.filter(consonants.contains).length\n        val vowelsCount4 = word.filter(vowels.contains).length\n\
    \        val consonantsCount4 = word.filter(consonants.contains).length\n    \
    \    val vowelsCount5 = word.filter(vowels.contains).length\n        val consonantsCount5\
    \ = word.filter(consonants.contains).length\n        val vowelsCount6 = word.filter(vowels.contains).length\n\
    \        val consonantsCount6 = word.filter(consonants.contains).length\n    \
    \    val vowelsCount7 = word.filter(vowels.contains).length\n        val consonantsCount7\
    \ = word.filter(consonants.contains).length\n        val vowelsCount8 = word.filter(vowels.contains).length\n\
    \        val consonantsCount8 = word.filter(consonants.contains).length\n    \
    \    val vowelsCount9 = word.filter(vowels.contains).length\n        val consonantsCount9\
    \ = word.filter(consonants.contains).length\n        val vowelsCount10 = word.filter(vowels.contains).length\n\
    \        val consonantsCount10 = word.filter(consonants.contains).length\n   \
    \     val vowelsCount11 = word.filter(vowels.contains).length\n        val consonantsCount11\
    \ = word.filter(consonants.contains).length\n        val vowelsCount12 = word.filter(vowels.contains).length\n\
    \        val consonantsCount12 = word.filter(consonants.contains).length\n   \
    \     val vowelsCount13 = word.filter(vowels.contains).length\n        val consonantsCount13\
    \ = word.filter(consonants.contains).length\n        val vowelsCount14 = word.filter(vowels.contains).length\n\
    \        val consonantsCount14 = word.filter(consonants.contains).length\n   \
    \     val vowelsCount15 = word.filter(vowels.contains).length\n        val \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpu0co02se.scala:42:11 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu0co02se.scala:13:38 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m                                      ^\e[0m\n\e[31m   |\e\
    [0m                                      Found:    (elem : Char)\n\e[31m   |\e\
    [0m                                      Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu0co02se.scala:14:42 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                                          Found:    (elem : Char)\n\e\
    [31m   |\e[0m                                          Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu0co02se.scala:15:39 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e\
    [0m                                       Found:    (elem : Char)\n\e[31m   |\e\
    [0m                                       Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu0co02se.scala:16:43 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount2\e[0m =\
    \ word.filter(consonants.contains).length\n\e[31m\e[31m   |\e[0m             \
    \                              ^\e[0m\n\e[3"
  stdout: ''
  timestamp: 1660009693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(_.isLetter).map(_.toUpperCase).map(vowels.contains).reduce(_ +\
    \ _)\n        val consonants = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_))\n\
    \        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(vowels.contains(_)).reduce(_\
    \ + _)\n        val vowelsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n        val consonantsCount = word.filter(_.isLetter).\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpd31kqlpd.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpd31kqlpd.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(_.isLetter).map(_.toUpperCase).filter(vowels.contains(_)).reduce(_\
    \ + _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpd31kqlpd.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpd31kqlpd.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(_.isLetter).map(_.toUpperCase).filter(!vowels.contains(_)).reduce(_\
    \ + _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpd31kqlpd.scala:18:12 ---------------------------\e\
    ["
  stdout: ''
  timestamp: 1660009689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsList\
    \ = vowelsAndConsonants.toList\n        val vowelsAndConsonantsListLength = vowelsAndConsonantsList.length\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8luo4vr_.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsAndConsonantsListLength\e[0m = vowelsAndConsonantsListLength - \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsLi"
  stdout: ''
  timestamp: 1660009670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants = Set(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        if (vowelsIndex == -1 ||\
    \ consonantsIndex == -1) {\n            return \"\"\n        }\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        if (vowelsIndex == -1 ||\
    \ consonantsIndex == -1) {\n            return \"\"\n        }\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        if (vowelsIndex == -1 ||\
    \ consonantsIndex == -1) {\n            return \"\"\n        }\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        if (vowelsIndex == -1 ||\
    \ consonantsIndex == -1) {\n            return \"\"\n        }\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        if (vowelsIndex == -1 ||\
    \ consonantsIndex == -1) {\n            return \"\"\n        }\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        if (vowelsIndex == -1 ||\
    \ consonantsIndex == -1) {\n            return \"\"\n        }\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgrskj19n.scala:57:4 ----------------------------\e\
    [0m\e[0m\n\e[31m57 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgrskj19n.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgrskj19n.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.count(consonants)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e[35mconsonantsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgrskj19n.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgrskj19n.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the "
  stdout: ''
  timestamp: 1660009691
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants = Set(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + 1\n        val vowelsCount\
    \ = vowelsCount + 1\n        val vowelsCount = vowelsCount + \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_m7k9px4.scala:53:39 ---------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + \n\e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m\
    \   |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_m7k9px4.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = vowelsCount + consonantsCount\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelsCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_m7k9px4.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = vowelsCount + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelsCount is\
    \ already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_m7k9px4.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = vowelsCount + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelsCount is\
    \ already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_m7k9px4.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = vowelsCount + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelsCount is\
    \ a"
  stdout: ''
  timestamp: 1660009690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsList\
    \ = vowelsAndConsonants.toList\n        val vowelsAndConsonantsListLength = vowelsAndConsonantsList.length\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsListLength = vowelsAndConsonantsListLength - 1\n\
    \        val vowelsAndConsonantsList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8luo4vr_.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsAndConsonantsListLength\e[0m = vowelsAndConsonantsListLength - \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsListLength - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsAndConsonantsListLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsListLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8luo4vr_.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsListLength\e\
    [0m = vowelsAndConsonantsLi"
  stdout: ''
  timestamp: 1660009670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = -1\n        var vowelCount2\
    \ = -1\n        var vowelIndex3 = -1\n        var vowelCount3 = -1\n        var\
    \ vowelIndex4 = -1\n        var vowelCount4 = -1\n        var vowelIndex5 = -1\n\
    \        var vowelCount5 = -1\n        var vowelIndex6 = -1\n        var vowelCount6\
    \ = -1\n        var vowelIndex7 = -1\n        var vowelCount7 = -1\n        var\
    \ vowelIndex8 = -1\n        var vowelCount8 = -1\n        var vowelIndex9 = -1\n\
    \        var vowelCount9 = -1\n        var vowelIndex10 = -1\n        var vowelCount10\
    \ = -1\n        var vowelIndex11 = -1\n        var vowelCount11 = -1\n       \
    \ var vowelIndex12 = -1\n        var vowelCount12 = -1\n        var vowelIndex13\
    \ = -1\n        var vowelCount13 = -1\n        var vowelIndex14 = -1\n       \
    \ var vowelCount14 = -1\n        var vowelIndex15 = -1\n        var vowelCount15\
    \ = -1\n        var vowelIndex16 = -1\n        var vowelCount16 = -1\n       \
    \ var vowelIndex17 = -1\n        var vowelCount17 = -1\n        var vowelIndex18\
    \ = -1\n        var vowelCount18 = -1\n        var vowelIndex19 = -1\n       \
    \ var vowelCount19 = -1\n        var vowelIndex20 = -1\n        var vowelCount20\
    \ = -1\n        var vowelIndex21 = -1\n        var vowelCount21 = -1\n       \
    \ var vowelIndex22 = -1\n        var vowelCount22 = -1\n        var vowelIndex23\
    \ = -1\n        var vowelCount23 = -1\n        var vowelIndex24 = -1\n       \
    \ var vowelCount24 = -1\n        var vowelIndex25 = -1\n        var vowelCount25\
    \ = -1\n        var vowelIndex26 = -1\n        var vowelCount26 = -1\n       \
    \ var vowelIndex27 = -1\n        var vowelCount27 = -1\n        var vowelIndex28\
    \ = -1\n        var vowelCount28 = -1\n        var vowelIndex29 = -1\n       \
    \ var vowelCount29 = -1\n        var vowelIndex30 = -1\n        var vowelCount30\
    \ = -1\n        var vowelIndex31 = -1\n        var vowelCount31 = -1\n       \
    \ var vowelIndex32 = -1\n        var vowelCount32 = -1\n        var vowelIndex33\
    \ = -1\n        var vowelCount33 = -1\n        var vowelIndex34 = -1\n       \
    \ var vowelCount34 = -1\n        var vowelIndex35 = -1\n        var vowelCount35\
    \ = -1\n        var vowelIndex36 = -1\n        var vowelCount36 = -1\n       \
    \ var vowelIndex37 = -1\n        var vowelCount37 = -1\n        var vowelIndex38\
    \ = -1\n        var vowelCount38 = -1\n        var vowelIndex39 = -1\n       \
    \ var vowelCount39 = -1\n        var vowelIndex40 = -1\n        var vowelCount40\
    \ = -1\n        var vowelIndex41 = -1\n        var vowelCount41 = -1\n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpack1_a3k.scala:95:5\
    \ ---------------------\e[0m\e[0m\n\e[31m95 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = -1\n        var vowelCount2\
    \ = 0\n        var vowelIndex3 = -1\n        var vowelCount3 = 0\n        var\
    \ vowelIndex4 = -1\n        var vowelCount4 = 0\n        var vowelIndex5 = -1\n\
    \        var vowelCount5 = 0\n        var vowelIndex6 = -1\n        var vowelCount6\
    \ = 0\n        var vowelIndex7 = -1\n        var vowelCount7 = 0\n        var\
    \ vowelIndex8 = -1\n        var vowelCount8 = 0\n        var vowelIndex9 = -1\n\
    \        var vowelCount9 = 0\n        var vowelIndex10 = -1\n        var vowelCount10\
    \ = 0\n        var vowelIndex11 = -1\n        var vowelCount11 = 0\n        var\
    \ vowelIndex12 = -1\n        var vowelCount12 = 0\n        var vowelIndex13 =\
    \ -1\n        var vowelCount13 = 0\n        var vowelIndex14 = -1\n        var\
    \ vowelCount14 = 0\n        var vowelIndex15 = -1\n        var vowelCount15 =\
    \ 0\n        var vowelIndex16 = -1\n        var vowelCount16 = 0\n        var\
    \ vowelIndex17 = -1\n        var vowelCount17 = 0\n        var vowelIndex18 =\
    \ -1\n        var vowelCount18 = 0\n        var vowelIndex19 = -1\n        var\
    \ vowelCount19 = 0\n        var vowelIndex20 = -1\n        var vowelCount20 =\
    \ 0\n        var vowelIndex21 = -1\n        var vowelCount21 = 0\n        var\
    \ vowelIndex22 = -1\n        var vowelCount22 = 0\n        var vowelIndex23 =\
    \ -1\n        var vowelCount23 = 0\n        var vowelIndex24 = -1\n        var\
    \ vowelCount24 = 0\n        var vowelIndex25 = -1\n        var vowelCount25 =\
    \ 0\n        var vowelIndex26 = -1\n        var vowelCount26 = 0\n        var\
    \ vowelIndex27 = -1\n        var vowelCount27 = 0\n        var vowelIndex28 =\
    \ -1\n        var vowelCount28 = 0\n        var vowelIndex29 = -1\n        var\
    \ vowelCount29 = 0\n        var vowelIndex30 = -1\n        var vowelCount30 =\
    \ 0\n        var vowelIndex31 = -1\n        var vowelCount31 = 0\n        var\
    \ vowelIndex32 = -1\n        var vowelCount32 = 0\n        var vowelIndex33 =\
    \ -1\n        var vowelCount33 = 0\n        var vowelIndex34 = -1\n        var\
    \ vowelCount34 = 0\n        var vowelIndex35 = -1\n        var vowelCount35 =\
    \ 0\n        var vowelIndex36 = -1\n        var vowelCount36 = 0\n        var\
    \ vowelIndex37 = -1\n        var vowelCount37 = 0\n        var vowelIndex38 =\
    \ -1\n        var vowelCount38 = 0\n        var vowelIndex39 = -1\n        var\
    \ vowelCount39 = 0\n        var vowelIndex40 = -1\n        var vowelCount40 =\
    \ 0\n        var vowelIndex41 = -1\n        var vowelCount41 = 0\n        var\
    \ vowelIndex\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphk8eq_rg.scala:95:4 ----------------------------\e\
    [0m\e[0m\n\e[31m95 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmphk8eq_rg.scala:95:5 ---------------------\e[0m\e[0m\n\e[31m95 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009691
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n   \
    \     val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl1w2brpo.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpl1w2brpo.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpl1w2brpo.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is al"
  stdout: ''
  timestamp: 1660009695
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(Set(\"a\", \"e\", \"\
    i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n        val\
    \ vowelsSet4 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet5 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"))\n        val vowelsSet6 = vowelsSet.diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpru2js2gz.scala:17:834 ----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet6\e[0m = vowelsSet.diff(Set(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \"u\n\e[31m\e[31m   |\e[0m                       \
    \              "
  stdout: ''
  timestamp: 1660009682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmprta18kyu.scala:32:12 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmprta18kyu.scala:33:12 ---------------------------\e[0m\e[0m\n\e\
    [31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextSize\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.size\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextSize is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmprta18kyu.scala:18:62 ------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e[0m = vowelsSetIteratorNext.next\n\
    \e[31m\e[31m   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue next is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmprta18kyu.scala:28:60 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                          "
  stdout: ''
  timestamp: 1660009697
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowel\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpogt8psmz.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpogt8psmz.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpogt8psmz.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.previous\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      value previous is not a member of Iterator[String]\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpogt8psmz.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                  \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                              value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpogt8psmz.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIterat"
  stdout: ''
  timestamp: 1660009698
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpf0mkbe84.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpf0mkbe84.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpf0mkbe84.scala:15:54 ------------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of Iterator[String] - did you mean\
    \ vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf0mkbe84.scala:16:62\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextPrev\e[0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m\
    \   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue prev is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf0mkbe84.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m"
  stdout: ''
  timestamp: 1660009698
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val vowelsCount2 = word.count(vowels.toList)\n\
    \        val vowelsCount3 = word.count(vowels.toSet)\n        val vowelsCount4\
    \ = word.count(vowels.toSeq)\n        val vowelsCount5 = word.count(vowels.toIterator)\n\
    \        val vowelsCount6 = word.count(vowels.toStream)\n        val vowelsCount7\
    \ = word.count(vowels.toList)\n        val vowelsCount8 = word.count(vowels.toSet)\n\
    \        val vowelsCount9 = word.count(vowels.toSeq)\n        val vowelsCount10\
    \ = word.count(vowels.toIterator)\n        val vowelsCount11 = word.count(vowels.toStream)\n\
    \        val vowelsCount12 = word.count(vowels.toList)\n        val vowelsCount13\
    \ = word.count(vowels.toSet)\n        val vowelsCount14 = word.count(vowels.toSeq)\n\
    \        val vowelsCount15 = word.count(vowels.toIterator)\n        val vowelsCount16\
    \ = word.count(vowels.toStream)\n        val vowelsCount17 = word.count(vowels.toList)\n\
    \        val vowelsCount18 = word.count(vowels.toSet)\n        val vowelsCount19\
    \ = word.count(vowels.toSeq)\n        val vowelsCount20 = word.count(vowels.toIterator)\n\
    \        val vowelsCount21 = word.count(vowels.toStream)\n        val vowelsCount22\
    \ = word.count(vowels.toList)\n        val vowelsCount23 = word.count(vowels.toSet)\n\
    \        val vowelsCount24 = word.count(vowels.toSeq)\n        val vowelsCount25\
    \ = word.count(vowels.toIterator)\n        val vowelsCount26 = word.count(vowels.toStream)\n\
    \        val vowelsCount27 = word.count(vowels.toList)\n        val vowelsCount28\
    \ = word.count(vowels.toSet)\n        val vowelsCount29 = word.count(vowels.toSeq)\n\
    \        val vowelsCount30 = word.count(vowels.toIterator)\n        val vowelsCount31\
    \ = word.count(vowels.toStream)\n        val vowelsCount32 = word.count(vowels.toList)\n\
    \        val vowelsCount33 = word.count(vowels.toSet)\n        val vowelsCount34\
    \ = word.count(vowels.toSeq)\n        val vowelsCount35 = word.count(\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_a4umyy.scala:46:39 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount35\e[0m = word.count(\n\
    \e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:12:37\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:13:45 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.count(vowels.toList)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                      Found:    List[String]\n\e\
    [31m   |\e[0m                                      Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:15:45\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount4\e\
    [0m = word.count(vowels.toSeq)\n\e[31m\e[31m   |\e[0m                        \
    \              ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \          Found:    Seq[String]\n\e[31m   |\e[0m                            \
    \          Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpq_a4umyy.scala:16:45 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount5\e[0m = word.count(vowels"
  stdout: ''
  timestamp: 1660009633
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSet\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpoaax04xo.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaax04xo.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaax04xo.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaax04xo.scala:29:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1660009697
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n       \
    \ val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpe4ujsiii.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpe4ujsiii.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextPrev\e[0m = vowelsSetIteratorNextPrev.previous\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpe4ujsiii.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe4ujsiii.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpe4ujsiii.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                            value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Fou"
  stdout: ''
  timestamp: 1660009697
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorPrev = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev\
    \ = vowelsSetIteratorNext.prev\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpueh3gxzv.scala:16:54 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpueh3gxzv.scala:17:62 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpueh3gxzv.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpueh3gxzv.scala:28:60 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpueh3gxzv.scala:29:68\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |"
  stdout: ''
  timestamp: 1660009699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.tail\n        val vowelsAfter = vowels.toList\n\
    \        val consonantsBefore = consonants.toList.tail\n        val consonantsAfter\
    \ = consonants.toList\n        val vowelsBeforeLength = vowelsBefore.length\n\
    \        val vowelsAfterLength = vowelsAfter.length\n        val consonantsBeforeLength\
    \ = consonantsBefore.length\n        val consonantsAfterLength = consonantsAfter.length\n\
    \        val vowelsBeforeLast = vowelsBefore.last\n        val vowelsAfterLast\
    \ = vowelsAfter.last\n        val consonantsBeforeLast = consonantsBefore.last\n\
    \        val consonantsAfterLast = consonantsAfter.last\n        val vowelsBeforeLastLength\
    \ = vowelsBeforeLast.length\n        val vowelsAfterLastLength = vowelsAfterLast.length\n\
    \        val consonantsBeforeLastLength = consonantsBeforeLast.length\n      \
    \  val consonantsAfterLastLength = consonantsAfterLast.length\n        val vowelsBeforeLastLast\
    \ = vowelsBefore.last.last\n        val vowelsAfterLastLast = vowelsAfter.last.last\n\
    \        val consonantsBeforeLastLast = consonantsBefore.last.last\n        val\
    \ consonantsAfterLastLast = consonantsAfter.last.last\n        val vowelsBeforeLastLastLength\
    \ = vowelsBeforeLastLast.length\n        val vowelsAfterLastLastLength = vowelsAfterLastLast.length\n\
    \        val consonantsBeforeLastLastLength = consonantsBeforeLastLast.length\n\
    \        val consonantsAfterLastLastLength = consonantsAfterLastLast.length\n\
    \        val vowelsBeforeLastLastLast = vowelsBefore.last.last.last\n        val\
    \ vowelsAfterLastLastLast = vowelsAfter.last.last.last\n        val consonantsBeforeLastLastLast\
    \ = consonantsBefore.last.last.last\n        val consonantsAfterLastLastLast =\
    \ consonantsAfter.last.last.last\n        val vowelsBeforeLastLastLastLength =\
    \ vowelsBeforeLastLastLast.length\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpsoba890s.scala:42:11 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpsoba890s.scala:33:62 ------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsBeforeLastLastLength\e\
    [0m = vowelsBeforeLastLast.length\n\e[31m\e[31m   |\e[0m                     \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                             value length is not a member of Char\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsoba890s.scala:34:60 ------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mvowelsAfterLastLastLength\e\
    [0m = vowelsAfterLastLast.length\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                          value length is not a member of Char\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsoba890s.scala:35:70 ------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m \e[36mconsonantsBeforeLastLastLength\e\
    [0m = consonantsBeforeLastLast.length\n\e[31m\e[31m   |\e[0m                 \
    \                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                    value length is not a member of Char\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpsoba890s.scala:36:68 ------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \e[36mconsonantsAfterLastLastLength\e\
    [0m = consonantsAfterLastLast.length\n\e[31m\e[31m   |\e[0m                  \
    \                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                    value length is not a member of Char\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpsoba890s.scala:37:62 ------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mvowelsBeforeLastLastLast\e\
    [0m = vowelsBefore.last.last.last\n\e[31m\e[31m   |\e[0m       "
  stdout: ''
  timestamp: 1660009702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.tail\n        val vowelsAfter = vowels.toList\n\
    \        val consonantsBefore = consonants.toList.tail\n        val consonantsAfter\
    \ = consonants.toList\n        val vowelsBeforeAndAfter = vowelsBefore.zip(vowelsAfter)\n\
    \        val consonantsBeforeAndAfter = consonantsBefore.zip(consonantsAfter)\n\
    \        val vowelsBeforeAndConsonantsAfter = vowelsBefore.zip(consonantsAfter)\n\
    \        val vowelsBeforeAndConsonantsBefore = vowelsBefore.zip(consonantsBefore)\n\
    \        val vowelsBeforeAndConsonantsBeforeAndAfter = vowelsBefore.zip(consonantsBefore.zip(consonantsAfter))\n\
    \        val vowelsBeforeAndConsonantsBeforeAndConsonantsAfter = vowelsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsAfter)))\n\
    \        val vowelsBeforeAndConsonantsBeforeAndConsonantsBeforeAndAfter = vowelsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsAfter))))\n\
    \        val vowelsBeforeAndConsonantsBeforeAndConsonantsBeforeAndConsonantsAfter\
    \ = vowelsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsAfter))))\n\
    \        val vowelsBeforeAndConsonantsBeforeAndConsonantsBeforeAndConsonantsBeforeAndAfter\
    \ = vowelsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsAfter))))\n\
    \        val vowelsBeforeAndConsonantsBeforeAndConsonantsBeforeAndConsonantsBeforeAndConsonantsAfter\
    \ = vowelsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsAfter))))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj_qx4yg4.scala:25:8 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsBeforeAndConsonantsBeforeAndConsonantsBeforeAndConsonantsBeforeAndAfter\e\
    [0m = vowelsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsBefore.zip(consonantsAfter))))\n\
    \e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e[31m   |\e[0m        ')' expected, but\
    \ 'val' found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj_qx4yg4.scala:44:1\
    \ ---------------------\e[0m\e[0m\n\e[31m44 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.count(vowels)\n        val consonantsCount =\
    \ word.count(consonants)\n        val vowelsCountMinusConsonantsCount = vowelsCount\
    \ - consonantsCount\n        val vowelsCountMinusConsonantsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCount - vowels\n        if(vowelsCountMinusConsonantsCountMinusVowelsCount\
    \ > 0){\n            val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCount - vowelsCountMinusVowelsCount\n\
    \            val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCount - vowelsCountMinusVowelsCountMinusVowelsCount\n\
    \            val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ - vowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\n\
    \            val vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ = vowelsCountMinusConsonantsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\
    \ - vowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCountMinusVowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmua75vry.scala:40:0 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmua75vry.scala:13:37\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmua75vry.scala:14:41 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.count(consonants)\n\
    \e[31m\e[31m   |\e[0m                                         ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m           Found:    (consonants : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m           Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E134] Type Error: /tmp/tmpmua75vry.scala:16:94 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCountMinusConsonantsCountMinusVowelsCount\e\
    [0m = vowelsCountMinusConsonantsCount - vowels\n\e[31m\e[31m   |\e[0m        \
    \                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m None of the overloaded alternatives of \e[33mmethod\e[0m\
    \ \e[35m-\e[0m in \e[33mclass\e[0m \e[35mInt\e[0m with types\n\e[31m   |\e[0m\
    \  (x: Double): Double\n\e[31m   |\e[0m  (x: Float): Float\n\e[31m   |\e[0m  (x:\
    \ Long): Long\n\e[31m   |\e[0m  (x: Int): Int\n\e[31m   |\e[0m  (x: Char): Int\n\
    \e[31m   |\e[0m  (x: Short): Int\n\e[31m   |\e[0m  (x: Byte): Int\n\e[31m   |\e\
    [0m match arguments ((vowels : scala.collection.mutable.Set[String]))\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmua75vry.scala:39:1 ---------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1660009701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsBefore = vowels.toList.dropRight(word.length)\n        val\
    \ vowelsAfter = vowels.toList.dropLeft(word.length)\n        val consonantsBefore\
    \ = consonants.toList.dropRight(word.length)\n        val consonantsAfter = consonants.toList.dropLeft(word.length)\n\
    \        val vowelsBetween = vowelsBefore.zip(vowelsAfter).filter(_._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || _._1.toString.toLowerCase == _._2.toString.toLowerCase || _._2.toString.toLowerCase\
    \ == _._1.toString.toLowerCase || _._1.toString.toLowerCase == _._2.toString.toLowerCase\
    \ || _._2.toString.toLowerCase == _._1.toString.toLowerCase || _._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || _._1.toString.toLowerCase == _._2.toString.toLowerCase || _._2.toString.toLowerCase\
    \ == _._1.toString.toLowerCase || _._1.toString.toLowerCase == _._2.toString.toLowerCase\
    \ || _._2.toString.toLowerCase == _._1.toString.toLowerCase || _._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || _._1.toString.toLowerCase == _._2.toString.toLowerCase || _._2.toString.toLowerCase\
    \ == _._1.toString.toLowerCase || _._1.toString.toLowerCase == _._2.toString.toLowerCase\
    \ || _._2.toString.toLowerCase == _._1.toString.toLowerCase || _._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpad04or4r.scala:17:1224 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsBetween\e[0m = vowelsBefore.zip(vowelsAfter).filter(_._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || _._1.toString.toLowerCase == _._2.toString.toLowerCase || _._2.toString.toLowerCase\
    \ == _._1.toString.toLowerCase || _._1.toString.toLowerCase == _._2.toString.toLowerCase\
    \ || _._2.toString.toLowerCase == _._1.toString.toLowerCase || _._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || _._1.toString.toLowerCase == _._2.toString.toLowerCase || _._2.toString.toLowerCase\
    \ == _._1.toString.toLowerCase || _._1.toString.toLowerCase == _._2.toString.toLowerCase\
    \ || _._2.toString.toLowerCase == _._1.toString.toLowerCase || _._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || _._1.toString.toLowerCase == _._2.toString.toLowerCase || _._2.toString.toLowerCase\
    \ == _._1.toString.toLowerCase || _._1.toString.toLowerCase == _._2.toString.toLowerCase\
    \ || _._2.toString.toLowerCase == _._1.toString.toLowerCase || _._1.toString.toLowerCase\
    \ == _._2.toString.toLowerCase || _._2.toString.toLowerCase == _._1.toString.toLowerCase\
    \ || \n\e[31m\e[31m   |\e[0m                                                 \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                 "
  stdout: ''
  timestamp: 1660009701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(Set(\"a\", \"e\", \"\
    i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n        val\
    \ vowelsSet4 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet5 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"))\n        val vowelsSet6 = vowelsSet.diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpru2js2gz.scala:17:834 ----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet6\e[0m = vowelsSet.diff(Set(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"\
    e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \"u\n\e[31m\e[31m   |\e[0m                       \
    \              "
  stdout: ''
  timestamp: 1660009682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.toSet\n        val vowelsSet3\
    \ = vowelsSet2.toSet\n        val vowelsSet4 = vowelsSet3.toSet\n        val vowelsSet5\
    \ = vowelsSet4.toSet\n        val vowelsSet6 = vowelsSet5.toSet\n        val vowelsSet7\
    \ = vowelsSet6.toSet\n        val vowelsSet8 = vowelsSet7.toSet\n        val vowelsSet9\
    \ = vowelsSet8.toSet\n        val vowelsSet10 = vowelsSet9.toSet\n        val\
    \ vowelsSet11 = vowelsSet10.toSet\n        val vowelsSet12 = vowelsSet11.toSet\n\
    \        val vowelsSet13 = vowelsSet12.toSet\n        val vowelsSet14 = vowelsSet13.toSet\n\
    \        val vowelsSet15 = vowelsSet14.toSet\n        val vowelsSet16 = vowelsSet15.toSet\n\
    \        val vowelsSet17 = vowelsSet16.toSet\n        val vowelsSet18 = vowelsSet17.toSet\n\
    \        val vowelsSet19 = vowelsSet18.toSet\n        val vowelsSet20 = vowelsSet19.toSet\n\
    \        val vowelsSet21 = vowelsSet20.toSet\n        val vowelsSet22 = vowelsSet21.toSet\n\
    \        val vowelsSet23 = vowelsSet22.toSet\n        val vowelsSet24 = vowelsSet23.toSet\n\
    \        val vowelsSet25 = vowelsSet24.toSet\n        val vowelsSet26 = vowelsSet25.toSet\n\
    \        val vowelsSet27 = vowelsSet26.toSet\n        val vowelsSet28 = vowelsSet27.toSet\n\
    \        val vowelsSet29 = vowelsSet28.toSet\n        val vowelsSet30 = vowelsSet29.toSet\n\
    \        val vowelsSet31 = vowelsSet30.toSet\n        val vowelsSet32 = vowelsSet31.toSet\n\
    \        val vowelsSet33 = vowelsSet32.toSet\n        val vowelsSet34 = vowelsSet33.toSet\n\
    \        val vowelsSet35 = vowelsSet34.toSet\n        val vowelsSet36 = vowelsSet35.toSet\n\
    \        val vowelsSet37 = \n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6ibfl2gp.scala:48:25 ---------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet37\e[0m = \n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ibfl2gp.scala:49:5 ---------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009671
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\");\n   \
    \     val vowelsCount = vowels.toList.map(_.length).sum\n        val consonantsCount\
    \ = consonants.toList.map(_.length).sum\n        val vowelsIndex = word.lastIndexOfAny(vowels)\n\
    \        val consonantsIndex = word.lastIndexOfAny(consonants)\n        val vowelsLength\
    \ = vowelsIndex - vowelsIndex % vowelsCount\n        val consonantsLength = consonantsIndex\
    \ - consonantsIndex % consonantsCount\n        val vowelsVowels = word.substring(vowelsIndex\
    \ + vowelsLength, vowelsIndex + vowelsLength + vowelsCount)\n        val consonantsConsonants\
    \ = word.substring(consonantsIndex + consonantsLength, consonantsIndex + consonantsLength\
    \ + consonantsCount)\n        val vowelsVowelsIndex = vowelsVowels.lastIndexOfAny(vowels)\n\
    \        val consonantsConsonantsIndex = consonantsConsonants.lastIndexOfAny(consonants)\n\
    \        val vowelsVowelsLength = vowelsVowelsIndex - vowelsVowelsIndex % vowelsCount\n\
    \        val consonantsConsonantsLength = consonantsConsonantsIndex - consonantsConsonantsIndex\
    \ % consonantsCount\n        val vowelsVowelsVowels = vowelsVowels.substring(vowelsVowelsIndex\
    \ + vowelsVowelsLength, vowelsVowelsIndex + vowelsVowelsLength + vowelsCount)\n\
    \        val consonantsConsonantsConsonants = consonantsConsonants.substring(consonantsConsonantsIndex\
    \ + consonantsConsonantsLength, consonantsConsonantsIndex + consonantsConsonantsLength\
    \ + consonantsCount)\n        val vowelsVowelsVowelsIndex = vowelsVowelsVowels.lastIndexOfAny(vowels)\n\
    \        val consonantsConsonantsConsonantsIndex = consonantsConsonantsConsonants.lastIndexOfAny(consonants)\n\
    \        val vowels\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu4jkuj3i.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu4jkuj3i.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsIndex\e[0m = word.lastIndexOfAny(vowels)\n\e[31m\e[31m   |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue lastIndexOfAny\
    \ is not a member of String - did you mean word.lastIndexOf?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpu4jkuj3i.scala:16:35 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexOfAny(consonants)\n\
    \e[31m\e[31m   |\e[0m                              ^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue lastIndexOfAny is not a member of String - did you mean word.lastIndexOf?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu4jkuj3i.scala:21:45 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsVowelsIndex\e[0m =\
    \ vowelsVowels.lastIndexOfAny(vowels)\n\e[31m\e[31m   |\e[0m                 \
    \               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue lastIndexOfAny\
    \ is not a member of String - did you mean vowelsVowels.lastIndexOf?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpu4jkuj3i.scala:22:61 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mconsonantsConsonantsIndex\e\
    [0m = consonantsConsonants.lastIndexOfAny(consonants)\n\e[31m\e[31m   |\e[0m \
    \                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue lastIndexOfAny is not a member of String - did you mean\
    \ consonantsConsonants.lastIndexOf?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu4jkuj3i.scala:27:57\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsVowelsVowelsIndex\e[0m = vowelsVowelsVowels.lastIndexOfAny(vowels)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue lastIndexOfAny is not a me"
  stdout: ''
  timestamp: 1660009702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.diff(Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\"))\n        val vowelsSet3 = vowelsSet.diff(Set(\"a\", \"e\", \"\
    i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n        val\
    \ vowelsSet4 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet5 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n        val vowelsSet6\
    \ = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"\
    e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet7 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet8 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"))\n\
    \        val vowelsSet9 = vowelsSet.diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )).diff(Set(\"a\", \"e\", \"i\", \"o\", \"u\")).diff(Set(\"a\", \"e\", \"i\",\
    \ \"o\", \"\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpwoj4kx4_.scala:20:134 ----------------------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet9\e[0m = vowelsSet.diff(Set(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"\
    o\"\e[0m, \e[31m\"u\"\e[0m)).diff(Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    i\"\e[0m, \e[31m\"o\"\e[0m, \"\n\e[31m\e[31m   |\e[0m                        \
    \                                                                            \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \                              unclosed string literal\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpwoj4kx4_.scala:21:5 ---------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m \
    \    Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzdxmjg70.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzdxmjg70.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpzdxmjg70.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                            value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpzdxmjg70.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpzdxmjg70.scala:28:60 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNex"
  stdout: ''
  timestamp: 1660009703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val vowelsCount = word.count(vowels.toList)\n\
    \        val vowelsCount = word.count(vowels.toSet)\n        val vowelsCount =\
    \ word.count(vowels.toSeq)\n        val vowelsCount = word.count(vowels.toIterator)\n\
    \        val vowelsCount = word.count(vowels.toStream)\n        val vowelsCount\
    \ = word.count(vowels.toList)\n        val vowelsCount = word.count(vowels.toSet)\n\
    \        val vowelsCount = word.count(vowels.toSeq)\n        val vowelsCount =\
    \ word.count(vowels.toIterator)\n        val vowelsCount = word.count(vowels.toStream)\n\
    \        val vowelsCount = word.count(vowels.toList)\n        val vowelsCount\
    \ = word.count(vowels.toSet)\n        val vowelsCount = word.count(vowels.toSeq)\n\
    \        val vowelsCount = word.count(vowels.toIterator)\n        val vowelsCount\
    \ = word.count(vowels.toStream)\n        val vowelsCount = word.count(vowels.toList)\n\
    \        val vowelsCount = word.count(vowels.toSet)\n        val vowelsCount =\
    \ word.count(vowels.toSeq)\n        val vowelsCount = word.count(vowels.toIterator)\n\
    \        val vowelsCount = word.count(vowels.toStream)\n        val vowelsCount\
    \ = word.count(vowels.toList)\n        val vowelsCount = word.count(vowels.toSet)\n\
    \        val vowelsCount = word.count(vowels.toSeq)\n        val vowelsCount =\
    \ word.count(vowels.toIterator)\n        val vowelsCount = word.count(vowels.toStream)\n\
    \        val vowelsCount = word.count(vowels.toList)\n        val vowelsCount\
    \ = word.count(vowels.toSet)\n        val vowelsCount = word.count(vowels.toSeq)\n\
    \        val vowelsCount = word.count(vowels.toIterator)\n        val vowelsCount\
    \ = word.count(vowels.toStream)\n        val vowelsCount = word.count(vowels.toList)\n\
    \        val vowelsCount = word.count(vowels.toSet)\n        val vowelsCount =\
    \ word.count(vowels.toSeq)\n        val vowelsCount = word.count(vowels.toIterator)\n\
    \        val vowelsCount = word.count(vowels.toStream)\n        val vowelsCount\
    \ = word.count(vowels.toList)\n        val vowelsCount = word.count(vowels.toSet)\n\
    \        val vowelsCount = word.count(vowels.toSeq)\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpw28nk30s.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels.toList)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpw28nk30s.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels.toSet)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpw28nk30s.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels.toSeq)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpw28nk30s.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels.toIterator)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpw28nk30s.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.count(vowels.toStream)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^"
  stdout: ''
  timestamp: 1660009703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsAndConsonants = vowels ++ consonants\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.size\n        val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n  \
    \      val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n    \
    \    val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n      \
    \  val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength =\
    \ vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n  \
    \      val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n    \
    \    val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n      \
    \  val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength =\
    \ vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n\
    \        val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n  \
    \      val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n    \
    \    val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n      \
    \  val vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n        val\
    \ vowelsAndConsonantsLength = vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength\
    \ = vowelsAndConsonants.toSeq.length\n        val vowelsAndConsonantsLength =\
    \ vowel\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcvujlq6_.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.toSeq.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcvujlq6_.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.toSeq.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcvujlq6_.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.toSeq.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcvujlq6_.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsAndConsonantsLength\e\
    [0m = vowelsAndConsonants.toSeq.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsAndConsonantsLength is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsAndConsonantsLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods mu"
  stdout: ''
  timestamp: 1660009702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpd7fzeyzy.scala:33:11 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpd7fzeyzy.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd7fzeyzy.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd7fzeyzy.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpd7fzeyzy.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelIndex2 = word.length - 1\n        var vowelIndex3 = word.length\
    \ - 1\n        var vowelIndex4 = word.length - 1\n        var vowelIndex5 = word.length\
    \ - 1\n        var vowelIndex6 = word.length - 1\n        var vowelIndex7 = word.length\
    \ - 1\n        var vowelIndex8 = word.length - 1\n        var vowelIndex9 = word.length\
    \ - 1\n        var vowelIndex10 = word.length - 1\n        var vowelIndex11 =\
    \ word.length - 1\n        var vowelIndex12 = word.length - 1\n        var vowelIndex13\
    \ = word.length - 1\n        var vowelIndex14 = word.length - 1\n        var vowelIndex15\
    \ = word.length - 1\n        var vowelIndex16 = word.length - 1\n        var vowelIndex17\
    \ = word.length - 1\n        var vowelIndex18 = word.length - 1\n        var vowelIndex19\
    \ = word.length - 1\n        var vowelIndex20 = word.length - 1\n        var vowelIndex21\
    \ = word.length - 1\n        var vowelIndex22 = word.length - 1\n        var vowelIndex23\
    \ = word.length - 1\n        var vowelIndex24 = word.length - 1\n        var vowelIndex25\
    \ = word.length - 1\n        var vowelIndex26 = word.length - 1\n        var vowelIndex27\
    \ = word.length - 1\n        var vowelIndex28 = word.length - 1\n        var vowelIndex29\
    \ = word.length - 1\n        var vowelIndex30 = word.length - 1\n        var vowelIndex31\
    \ = word.length - 1\n        var vowelIndex32 = word.length - 1\n        var vowelIndex33\
    \ = word.length - 1\n        var vowelIndex34 = word.length - 1\n        var vowelIndex35\
    \ = word.length - 1\n        var vowelIndex36 = word.length - 1\n        var vowelIndex37\
    \ = word.length - 1\n        var vowelIndex38 = word.length - 1\n        var vowelIndex39\
    \ = word.length - 1\n        var vowelIndex40 = word.length - 1\n        var vowelIndex41\
    \ = word.length - 1\n        var vowelIndex42 = word.length - 1\n        var vowelIndex43\
    \ = word.length - 1\n        var vowelIndex44 = word.length - 1\n        var vowelIndex45\
    \ = word.length - 1\n        var vowelIndex46 = word.length - 1\n        var vowelIndex47\
    \ = word.length - 1\n        var vowelIndex48 = word.length - 1\n        var vowelIndex49\
    \ = word.length - 1\n        var vowelIndex50 = word.length - 1\n        var vowelIndex51\
    \ = word.length - 1\n        var vowelIndex52 = word.length - 1\n        var vowelIndex53\
    \ = word.length - 1\n        var vowelIndex54 = word.length - 1\n        var vowelIndex55\
    \ = word.length - 1\n        var vowelIndex56 = word.length - 1\n        var vowelIndex57\
    \ = word.length\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdsf5jgpo.scala:69:5\
    \ ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val vowelsCount2 = word.filter(x\
    \ => vowels.contains(x) && x != word.last).length\n        val vowelsCount3 =\
    \ word.filter(x => vowels.contains(x) && x != word.last).length\n        val vowelsCount4\
    \ = word.filter(x => vowels.contains(x) && x != word.last).length\n        val\
    \ vowelsCount5 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount6 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount7 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount8 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount9 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount10 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount11 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount12 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount13 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount14 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount15 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount16 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount17 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount18 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount19 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount20 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount21 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount22 = word.filter(x => vowels.contains(x) && x != word.last).length\n\
    \        val vowelsCount23 = word.filter(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5jinkh34.scala:34:40 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount23\e[0m = word.filter(\n\
    \e[31m\e[31m   |\e[0m                                        ^\e[0m\n\e[31m  \
    \ |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5jinkh34.scala:12:59\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                           ^\e[0m\n\e[31m \
    \  |\e[0m                                                    Found:    (x : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5jinkh34.scala:13:60\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e\
    [0m = word.filter(\e[36mx\e[0m => vowels.contains(x) && x != word.last).length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (x : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp5jinkh34.scala:14:60 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsCount3\e[0m = word.filter(\e[36mx\e\
    [0m => vowels.contains(x) && x != word.last).length\n\e[31m\e[31m   |\e[0m   \
    \                                                         ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1660009705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n     \
    \   val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi3732j3s.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi3732j3s.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextPrev\e[0m = vowelsSetIteratorNextPrev.previous\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi3732j3s.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi3732j3s.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.previous\n\e[31m\e[31m   |\e[0m                      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \        value previous is not a member of Iterator[String]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpi3732j3s.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.previous\n\e[31m\e[31m   |\e[0m                    \
    \                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                            value previous is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Fou"
  stdout: ''
  timestamp: 1660009703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        var vowelsCount\
    \ = word.filter(c => vowels.contains(c)).size\n        var vowelsCount2 = word.filter(c\
    \ => vowels.contains(c)).size\n        var vowelsCount3 = word.filter(c => vowels.contains(c)).size\n\
    \        var vowelsCount4 = word.filter(c => vowels.contains(c)).size\n      \
    \  var vowelsCount5 = word.filter(c => vowels.contains(c)).size\n        var vowelsCount6\
    \ = word.filter(c => vowels.contains(c)).size\n        var vowelsCount7 = word.filter(c\
    \ => vowels.contains(c)).size\n        var vowelsCount8 = word.filter(c => vowels.contains(c)).size\n\
    \        var vowelsCount9 = word.filter(c => vowels.contains(c)).size\n      \
    \  var vowelsCount10 = word.filter(c => vowels.contains(c)).size\n        var\
    \ vowelsCount11 = word.filter(c => vowels.contains(c)).size\n        var vowelsCount12\
    \ = word.filter(c => vowels.contains(c)).size\n        var vowelsCount13 = word.filter(c\
    \ => vowels.contains(c)).size\n        var vowelsCount14 = word.filter(c => vowels.contains(c)).size\n\
    \        var vowelsCount15 = word.filter(c => vowels.contains(c)).size\n     \
    \   var vowelsCount16 = word.filter(c => vowels.contains(c)).size\n        var\
    \ vowelsCount17 = word.filter(c => vowels.contains(c)).size\n        var vowelsCount18\
    \ = word.filter(c => vowels.contains(c)).size\n        var vowelsCount19 = word.filter(c\
    \ => vowels.contains(c)).size\n        var vowelsCount20 = word.filter(c => vowels.contains(c)).size\n\
    \        var vowelsCount21 = word.filter(c => vowels.contains(c)).size\n     \
    \   var vowelsCount22 = word.filter(c => vowels.contains(c)).size\n        var\
    \ vowelsCount23 = word.filter(c => vowels.contains(c)).size\n        var vowelsCount24\
    \ = word.filter(c => vowels.contains(c)).size\n        var vowelsCount25 = word.filter(c\
    \ => vowels.contains(c)).size\n        var vowelsCount26 = word.filter(c => vowels.contains(c)).size\n\
    \        var vowelsCount27 = word.filter(c => vowels.contains(c)).size\n     \
    \   var vowelsCount28 = word.filter(c => vowels.contains(c)).size\n        var\
    \ vowelsCount29 = word.filter(c => vowels.contains(c)).size\n        var vowelsCount30\
    \ = word.filter(c => vowels.contains(c)).size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoxjqc9x9.scala:12:59\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount\e\
    [0m = word.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e[31m   |\e\
    [0m                                                           ^\e[0m\n\e[31m \
    \  |\e[0m                                                    Found:    (c : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoxjqc9x9.scala:13:60\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount2\e\
    [0m = word.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (c : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoxjqc9x9.scala:14:60\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount3\e\
    [0m = word.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (c : Char)\n\
    \e[31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoxjqc9x9.scala:15:60\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount4\e\
    [0m = word.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e[31m   |\e\
    [0m                                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (c : Char)\n\
    \e[31m   |\e[0m               "
  stdout: ''
  timestamp: 1660009706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val vowelsCount = word.filter(vowels.contains).length\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val vowelsCount = word.filter(vowels.contains).length\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp71sa3xe9.scala:50:11 ---------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp71sa3xe9.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp71sa3xe9.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp71sa3xe9.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp71sa3xe9.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined"
  stdout: ''
  timestamp: 1660009705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfdb4jg_o.scala:32:12 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfdb4jg_o.scala:33:12 ---------------------------\e[0m\e[0m\n\e\
    [31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextSize\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.size\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextSize is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpfdb4jg_o.scala:18:62 ------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e[0m = vowelsSetIteratorNext.next\n\
    \e[31m\e[31m   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue next is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpfdb4jg_o.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                  "
  stdout: ''
  timestamp: 1660009704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = \"aeiouAEIOU\"\n        var vowelsCount = new mutable.HashMap[String,\
    \ Int]()\n        for (i <- 0 until word.length){\n            val c = word.charAt(i)\n\
    \            if (vowels.contains(c)){\n                vowelsCount.getOrElseUpdate(c.toString,\
    \ 0) + 1\n            }\n        }\n        val maxVowel = vowelsCount.maxBy(_._2)._1\n\
    \        var result = \"\"\n        for (i <- 0 until word.length){\n        \
    \    val c = word.charAt(i)\n            if (vowels.contains(c)){\n          \
    \      if (vowelsCount.getOrElseUpdate(c.toString, 0) > vowelsCount.getOrElseUpdate(maxVowel.toString,0)){\n\
    \                    result = maxVowel\n                }\n            }\n   \
    \     }\n        return result\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd3cu1c7k.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mString\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                              ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val vowelsCount2 = word.count(vowels.toList)\n\
    \        val vowelsCount3 = word.count(vowels.toSet)\n        val vowelsCount4\
    \ = word.count(vowels.toSeq)\n        val vowelsCount5 = word.count(vowels.toIterator)\n\
    \        val vowelsCount6 = word.count(vowels.toStream)\n        val vowelsCount7\
    \ = word.count(vowels.toList)\n        val vowelsCount8 = word.count(vowels.toSet)\n\
    \        val vowelsCount9 = word.count(vowels.toSeq)\n        val vowelsCount10\
    \ = word.count(vowels.toIterator)\n        val vowelsCount11 = word.count(vowels.toStream)\n\
    \        val vowelsCount12 = word.count(vowels.toList)\n        val vowelsCount13\
    \ = word.count(vowels.toSet)\n        val vowelsCount14 = word.count(vowels.toSeq)\n\
    \        val vowelsCount15 = word.count(vowels.toIterator)\n        val vowelsCount16\
    \ = word.count(vowels.toStream)\n        val vowelsCount17 = word.count(vowels.toList)\n\
    \        val vowelsCount18 = word.count(vowels.toSet)\n        val vowelsCount19\
    \ = word.count(vowels.toSeq)\n        val vowelsCount20 = word.count(vowels.toIterator)\n\
    \        val vowelsCount21 = word.count(vowels.toStream)\n        val vowelsCount22\
    \ = word.count(vowels.toList)\n        val vowelsCount23 = word.count(vowels.toSet)\n\
    \        val vowelsCount24 = word.count(vowels.toSeq)\n        val vowelsCount25\
    \ = word.count(vowels.toIterator)\n        val vowelsCount26 = word.count(vowels.toStream)\n\
    \        val vowelsCount27 = word.count(vowels.toList)\n        val vowelsCount28\
    \ = word.count(vowels.toSet)\n        val vowelsCount29 = word.count(vowels.toSeq)\n\
    \        val vowelsCount30 = word.count(vowels.toIterator)\n        val vowelsCount31\
    \ = word.count(vowels.toStream)\n        val vowelsCount32 = word.count(vowels.toList)\n\
    \        val vowelsCount33 = word.count(vowels.toSet)\n        val vowelsCount34\
    \ = word.count(vowels.toSeq)\n        val vowelsCount35 = word.count(\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\"\
    )).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_a4umyy.scala:46:39 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount35\e[0m = word.count(\n\
    \e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:12:37\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = word.count(vowels)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:13:45 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.count(vowels.toList)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                      Found:    List[String]\n\e\
    [31m   |\e[0m                                      Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq_a4umyy.scala:15:45\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount4\e\
    [0m = word.count(vowels.toSeq)\n\e[31m\e[31m   |\e[0m                        \
    \              ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \          Found:    Seq[String]\n\e[31m   |\e[0m                            \
    \          Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpq_a4umyy.scala:16:45 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount5\e[0m = word.count(vowels"
  stdout: ''
  timestamp: 1660009633
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0aqsr0wd.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorIterator = vowelsSetIterator.iterator\n        val\
    \ vowelsSetIteratorIteratorSize = vowelsSetIteratorIterator.size\n        val\
    \ vowelsSetIteratorIteratorIterator = vowelsSetIteratorIterator.iterator\n   \
    \     val vowelsSetIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIterator = vowelsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = vowelsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n     \
    \   val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n \
    \       val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n \
    \       val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = vowelsSetIteratorIteratorIteratorIteratorIteratorIterator\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvjs9xb0p.scala:32:112 -----------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\e\
    [0m = vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: vowelsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvjs9xb0p.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = 0\n        var vowelCount2\
    \ = 0\n        var vowelIndex3 = 0\n        var vowelCount3 = 0\n        var vowelIndex4\
    \ = 0\n        var vowelCount4 = 0\n        var vowelIndex5 = 0\n        var vowelCount5\
    \ = 0\n        var vowelIndex6 = 0\n        var vowelCount6 = 0\n        var vowelIndex7\
    \ = 0\n        var vowelCount7 = 0\n        var vowelIndex8 = 0\n        var vowelCount8\
    \ = 0\n        var vowelIndex9 = 0\n        var vowelCount9 = 0\n        var vowelIndex10\
    \ = 0\n        var vowelCount10 = 0\n        var vowelIndex11 = 0\n        var\
    \ vowelCount11 = 0\n        var vowelIndex12 = 0\n        var vowelCount12 = 0\n\
    \        var vowelIndex13 = 0\n        var vowelCount13 = 0\n        var vowelIndex14\
    \ = 0\n        var vowelCount14 = 0\n        var vowelIndex15 = 0\n        var\
    \ vowelCount15 = 0\n        var vowelIndex16 = 0\n        var vowelCount16 = 0\n\
    \        var vowelIndex17 = 0\n        var vowelCount17 = 0\n        var vowelIndex18\
    \ = 0\n        var vowelCount18 = 0\n        var vowelIndex19 = 0\n        var\
    \ vowelCount19 = 0\n        var vowelIndex20 = 0\n        var vowelCount20 = 0\n\
    \        var vowelIndex21 = 0\n        var vowelCount21 = 0\n        var vowelIndex22\
    \ = 0\n        var vowelCount22 = 0\n        var vowelIndex23 = 0\n        var\
    \ vowelCount23 = 0\n        var vowelIndex24 = 0\n        var vowelCount24 = 0\n\
    \        var vowelIndex25 = 0\n        var vowelCount25 = 0\n        var vowelIndex26\
    \ = 0\n        var vowelCount26 = 0\n        var vowelIndex27 = 0\n        var\
    \ vowelCount27 = 0\n        var vowelIndex28 = 0\n        var vowelCount28 = 0\n\
    \        var vowelIndex29 = 0\n        var vowelCount29 = 0\n        var vowelIndex30\
    \ = 0\n        var vowelCount30 = 0\n        var vowelIndex31 = 0\n        var\
    \ vowelCount31 = 0\n        var vowelIndex32 = 0\n        var vowelCount32 = 0\n\
    \        var vowelIndex33 = 0\n        var vowelCount33 = 0\n        var vowelIndex34\
    \ = 0\n        var vowelCount34 = 0\n        var vowelIndex35 = 0\n        var\
    \ vowelCount35 = 0\n        var vowelIndex36 = 0\n        var vowelCount36 = 0\n\
    \        var vowelIndex37 = 0\n        var vowelCount37 = 0\n        var vowelIndex38\
    \ = 0\n        var vowelCount38 = 0\n        var vowelIndex39 = 0\n        var\
    \ vowelCount39 = 0\n        var vowelIndex40 = 0\n        var vowelCount40 = 0\n\
    \        var vowelIndex41 = 0\n        var vowelCount41 = 0\n        var vowelIndex42\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp30kb2_2y.scala:96:5\
    \ ---------------------\e[0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsCount\
    \ = word.count(vowels)\n        val consonants = Set(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount = word.count(consonants)\n\
    \        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n        val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonant\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsnovjbrh.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsnovjbrh.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsnovjbrh.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpsnovjbrh.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsnovjbrh.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mconsonantsIndex\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsIndex\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1660009707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsSet\
    \ = vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2bfymnet.scala:32:12 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2bfymnet.scala:33:12 ---------------------------\e[0m\e[0m\n\e\
    [31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextSize\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.size\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextSize is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmp2bfymnet.scala:18:62 ------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e[0m = vowelsSetIteratorNext.next\n\
    \e[31m\e[31m   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue next is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2bfymnet.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                  "
  stdout: ''
  timestamp: 1660009708
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwwo4ot66.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwwo4ot66.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwwo4ot66.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwwo4ot66.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009647
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x => consonants.contains(x)).length\n        val vowelsCount =\
    \ word.filter(x => vowels.contains(x)).length\n        val consonantsCount = word.filter(x\
    \ => consonants.contains(x)).length\n        val vowelsCount = word.filter(x =>\
    \ vowels.contains(x)).length\n        val consonantsCount = word.filter(x => consonants.contains(x)).length\n\
    \        val vowelsCount = word.filter(x => vowels.contains(x)).length\n     \
    \   val consonantsCount = word.filter(x => consonants.contains(x)).length\n  \
    \      val vowelsCount = word.filter(x => vowels.contains(x)).length\n       \
    \ val consonantsCount = word.filter(x => consonants.contains(x)).length\n    \
    \    val vowelsCount = word.filter(x => vowels.contains(x)).length\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = word.filter(x => vowels.contains(x)).length\n        val consonantsCount\
    \ = word.filter(x \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0aqsr0wd.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp0aqsr0wd.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0aqsr0wd.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660009631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var index = 0\n\
    \        var vowel = \"\"\n        var vowelIndex = 0\n        var vowelCount\
    \ = 0\n        var vowelCountIndex = 0\n        var vowelCountIndex2 = -1\n  \
    \      var vowelCountIndex3 = -1\n        var vowelCountIndex4 = -1\n        var\
    \ vowelCountIndex5 = -1\n        var vowelCountIndex6 = -1\n        var vowelCountIndex7\
    \ = -1\n        var vowelCountIndex8 = -1\n        var vowelCountIndex9 = -1\n\
    \        var vowelCountIndex10 = -1\n        var vowelCountIndex11 = -1\n    \
    \    var vowelCountIndex12 = -1\n        var vowelCountIndex13 = -1\n        var\
    \ vowelCountIndex14 = -1\n        var vowelCountIndex15 = -1\n        var vowelCountIndex16\
    \ = -1\n        var vowelCountIndex17 = -1\n        var vowelCountIndex18 = -1\n\
    \        var vowelCountIndex19 = -1\n        var vowelCountIndex20 = -1\n    \
    \    var vowelCountIndex21 = -1\n        var vowelCountIndex22 = -1\n        var\
    \ vowelCountIndex23 = -1\n        var vowelCountIndex24 = -1\n        var vowelCountIndex25\
    \ = -1\n        var vowelCountIndex26 = -1\n        var vowelCountIndex27 = -1\n\
    \        var vowelCountIndex28 = -1\n        var vowelCountIndex29 = -1\n    \
    \    var vowelCountIndex30 = -1\n        var vowelCountIndex31 = -1\n        var\
    \ vowelCountIndex32 = -1\n        var vowelCountIndex33 = -1\n        var vowelCountIndex34\
    \ = -1\n        var vowelCountIndex35 = -1\n        var vowelCountIndex36 = -1\n\
    \        var vowelCountIndex37 = -1\n        var vowelCountIndex38 = -1\n    \
    \    var vowelCountIndex39 = -1\n        var vowelCountIndex40 = -1\n        var\
    \ vowelCountIndex41 = -1\n        var vowelCountIndex42 = -1\n        var vowelCountIndex43\
    \ = -1\n        var vowelCountIndex44 = -1\n        var vowelCountIndex45 = -1\n\
    \        var vowelCountIndex46 = -1\n        var vowelCountIndex47 = -1\n    \
    \    var vowelCountIndex48 = -1\n        var vowelCountIndex49 = -1\n        var\
    \ vowelCountIndex50 = -1\n        var vowelCountIndex51 = -1\n        var vowelCountIndex52\
    \ = -1\n        var vowelCountIndex53 = -1\n        var vowelCountIndex54 = -1\n\
    \        var vowelCountIndex55 = -1\n        var vowelCountIndex56 = -1\n    \
    \    var vowelCountIndex57 = -1\n        var vowelCountIndex58 = -1\n        var\
    \ vowelCountIndex59 = -1\n        var vowelCountIndex60 = -1\n        var vowelCountIndex61\
    \ = -1\n        var vowelCountIndex62 = -1\n        var vowelCountIndex63 = -1\n\
    \        var vowelCountIndex64 = -1\n        var vowelCountIndex65 = -1\n    \
    \    var vowelCountIndex66 = -1\n        var vowelCountIndex\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm13jmcsh.scala:83:4 ----------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpm13jmcsh.scala:83:5 ---------------------\e[0m\e[0m\n\e[31m83 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009708
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSet2 = vowelsSet.toSet\n        val vowelsSet3\
    \ = vowelsSet2.toSet\n        val vowelsSet4 = vowelsSet3.toSet\n        val vowelsSet5\
    \ = vowelsSet4.toSet\n        val vowelsSet6 = vowelsSet5.toSet\n        val vowelsSet7\
    \ = vowelsSet6.toSet\n        val vowelsSet8 = vowelsSet7.toSet\n        val vowelsSet9\
    \ = vowelsSet8.toSet\n        val vowelsSet10 = vowelsSet9.toSet\n        val\
    \ vowelsSet11 = vowelsSet10.toSet\n        val vowelsSet12 = vowelsSet11.toSet\n\
    \        val vowelsSet13 = vowelsSet12.toSet\n        val vowelsSet14 = vowelsSet13.toSet\n\
    \        val vowelsSet15 = vowelsSet14.toSet\n        val vowelsSet16 = vowelsSet15.toSet\n\
    \        val vowelsSet17 = vowelsSet16.toSet\n        val vowelsSet18 = vowelsSet17.toSet\n\
    \        val vowelsSet19 = vowelsSet18.toSet\n        val vowelsSet20 = vowelsSet19.toSet\n\
    \        val vowelsSet21 = vowelsSet20.toSet\n        val vowelsSet22 = vowelsSet21.toSet\n\
    \        val vowelsSet23 = vowelsSet22.toSet\n        val vowelsSet24 = vowelsSet23.toSet\n\
    \        val vowelsSet25 = vowelsSet24.toSet\n        val vowelsSet26 = vowelsSet25.toSet\n\
    \        val vowelsSet27 = vowelsSet26.toSet\n        val vowelsSet28 = vowelsSet27.toSet\n\
    \        val vowelsSet29 = vowelsSet28.toSet\n        val vowelsSet30 = vowelsSet29.toSet\n\
    \        val vowelsSet31 = vowelsSet30.toSet\n        val vowelsSet32 = vowelsSet31.toSet\n\
    \        val vowelsSet33 = vowelsSet32.toSet\n        val vowelsSet34 = vowelsSet33.toSet\n\
    \        val vowelsSet35 = vowelsSet34.toSet\n        val vowelsSet36 = vowelsSet35.toSet\n\
    \        val vowelsSet37 = \n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6ibfl2gp.scala:48:25 ---------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet37\e[0m = \n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ibfl2gp.scala:49:5 ---------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009671
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n        var vowelIndex\
    \ = 0;\n        var vowelCount = 0;\n        var vowelIndex2 = 0;\n        var\
    \ vowelCount2 = 0;\n        var vowelIndex3 = 0;\n        var vowelCount3 = 0;\n\
    \        var vowelIndex4 = 0;\n        var vowelCount4 = 0;\n        var vowelIndex5\
    \ = 0;\n        var vowelCount5 = 0;\n        var vowelIndex6 = 0;\n        var\
    \ vowelCount6 = 0;\n        var vowelIndex7 = 0;\n        var vowelCount7 = 0;\n\
    \        var vowelIndex8 = 0;\n        var vowelCount8 = 0;\n        var vowelIndex9\
    \ = 0;\n        var vowelCount9 = 0;\n        var vowelIndex10 = 0;\n        var\
    \ vowelCount10 = 0;\n        var vowelIndex11 = 0;\n        var vowelCount11 =\
    \ 0;\n        var vowelIndex12 = 0;\n        var vowelCount12 = 0;\n        var\
    \ vowelIndex13 = 0;\n        var vowelCount13 = 0;\n        var vowelIndex14 =\
    \ 0;\n        var vowelCount14 = 0;\n        var vowelIndex15 = 0;\n        var\
    \ vowelCount15 = 0;\n        var vowelIndex16 = 0;\n        var vowelCount16 =\
    \ 0;\n        var vowelIndex17 = 0;\n        var vowelCount17 = 0;\n        var\
    \ vowelIndex18 = 0;\n        var vowelCount18 = 0;\n        var vowelIndex19 =\
    \ 0;\n        var vowelCount19 = 0;\n        var vowelIndex20 = 0;\n        var\
    \ vowelCount20 = 0;\n        var vowelIndex21 = 0;\n        var vowelCount21 =\
    \ 0;\n        var vowelIndex22 = 0;\n        var vowelCount22 = 0;\n        var\
    \ vowelIndex23 = 0;\n        var vowelCount23 = 0;\n        var vowelIndex24 =\
    \ 0;\n        var vowelCount24 = 0;\n        var vowelIndex25 = 0;\n        var\
    \ vowelCount25 = 0;\n        var vowelIndex26 = 0;\n        var vowelCount26 =\
    \ 0;\n        var vowelIndex27 = 0;\n        var vowelCount27 = 0;\n        var\
    \ vowelIndex28 = 0;\n        var vowelCount28 = 0;\n        var vowelIndex29 =\
    \ 0;\n        var vowelCount29 = 0;\n        var vowelIndex30 = 0;\n        var\
    \ vowelCount30 = 0;\n        var vowelIndex31 = 0;\n        var vowelCount31 =\
    \ 0;\n        var vowelIndex32 = 0;\n        var vowelCount32 = 0;\n        var\
    \ vowelIndex33 = 0;\n        var vowelCount33 = 0;\n        var vowelIndex34 =\
    \ 0;\n        var vowelCount34 = 0;\n        var vowelIndex35 = 0;\n        var\
    \ vowelCount35 = 0;\n        var vowelIndex36 = 0;\n        var vowelCount36 =\
    \ 0;\n        var vowelIndex37 = 0;\n        var vowelCount37 = 0;\n        var\
    \ vowelIndex38 = 0;\n        var vowelCount38 = 0;\n        var vowelIndex39 =\
    \ 0;\n        var vowelCount39 = 0;\n        var vowelIndex40 = 0;\n        var\
    \ vowelCount40 = 0;\n        var vowelIndex41 = 0;\n        var vowelCount41 =\
    \ 0;\n        var vowelIndex42 = 0;\n        var vowelCount42 = 0;\n        var\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp3e45i0n7.scala:96:11 ---------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3e45i0n7.scala:97:5 ---------------------\e\
    [0m\e[0m\n\e[31m97 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetSize = vowelsSet.size\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorSize = vowelsSetIterator.size\n\
    \        val vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextSize\
    \ = vowelsSetIteratorNext.size\n        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n\
    \        val vowelsSetIteratorNextNextSize = vowelsSetIteratorNextNext.size\n\
    \        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextSize = vowelsSetIteratorNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextSize = vowelsSetIteratorNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextSize = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNext\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhfaw7bm.scala:18:62 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:30:64 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e\
    [0m                                                                ^\e[0m\n\e\
    [31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhfaw7bm.scala:32:68\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbhfaw7bm.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009643
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIteratorNext.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNext\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwwo4ot66.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwwo4ot66.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwwo4ot66.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwwo4ot66.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660009647
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNext = vowelsSetIterator.next\n    \
    \    val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIterator.next\n        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSet\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpoaax04xo.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaax04xo.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaax04xo.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaax04xo.scala:29:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1660009697
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val vowelsCount = word.filter(vowels.contains).size\n        val consonantsCount\
    \ = word.filter(consonants.contains).size\n        val vowelsCount2 = word.filter(vowels.contains).dropRight(1).size\n\
    \        val consonantsCount2 = word.filter(consonants.contains).dropRight(1).size\n\
    \        val vowelsCount3 = word.filter(vowels.contains).dropRight(2).size\n \
    \       val consonantsCount3 = word.filter(consonants.contains).dropRight(2).size\n\
    \        val vowelsCount4 = word.filter(vowels.contains).dropRight(3).size\n \
    \       val consonantsCount4 = word.filter(consonants.contains).dropRight(3).size\n\
    \        val vowelsCount5 = word.filter(vowels.contains).dropRight(4).size\n \
    \       val consonantsCount5 = word.filter(consonants.contains).dropRight(4).size\n\
    \        val vowelsCount6 = word.filter(vowels.contains).dropRight(5).size\n \
    \       val consonantsCount6 = word.filter(consonants.contains).dropRight(5).size\n\
    \        val vowelsCount7 = word.filter(vowels.contains).dropRight(6).size\n \
    \       val consonantsCount7 = word.filter(consonants.contains).dropRight(6).size\n\
    \        val vowelsCount8 = word.filter(vowels.contains).dropRight(7).size\n \
    \       val consonantsCount8 = word.filter(consonants.contains).dropRight(7).size\n\
    \        val vowelsCount9 = word.filter(vowels.contains).dropRight(8).size\n \
    \       val consonantsCount9 = word.filter(consonants.contains).dropRight(8).size\n\
    \        val vowelsCount10 = word.filter(vowels.contains).dropRight(9).size\n\
    \        val consonantsCount10 = word.filter(consonants.contains).dropRight(9).size\n\
    \        val vowelsCount11 = word.filter(vowels.contains).dropRight(10).size\n\
    \        val consonantsCount11 = word.filter(consonants.contains).dropRight(10).size\n\
    \        val vowelsCount12 = word.filter(vowels.contains).dropRight(11).size\n\
    \        val con\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzow4wt3k.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpzow4wt3k.scala:13:38 --------------------\e[0m\e[0m\n\e[31m13 |\e[0m\
    \        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(vowels.contains).size\n\
    \e[31m\e[31m   |\e[0m                                      ^\e[0m\n\e[31m   |\e\
    [0m                                      Found:    (elem : Char)\n\e[31m   |\e\
    [0m                                      Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzow4wt3k.scala:14:42 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(consonants.contains).size\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                                          Found:    (elem : Char)\n\e\
    [31m   |\e[0m                                          Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzow4wt3k.scala:15:39 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e[0m = word.filter(vowels.contains).dropRight(\e\
    [31m1\e[0m).size\n\e[31m\e[31m   |\e[0m                                      \
    \ ^\e[0m\n\e[31m   |\e[0m                                       Found:    (elem\
    \ : Char)\n\e[31m   |\e[0m                                       Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzow4wt3k.scala:16:43\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount2\e\
    [0m = word.filter(consonants.contains).dropRight(\e[31m1\e[0m).size\n\e[31m\e\
    [31m   |\e[0m                                           ^\e[0m\n\e[31m   |\e[0m\
    \                                           Found:    (elem : "
  stdout: ''
  timestamp: 1660009710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelIndex\
    \ = 0\n        var vowelCount = 0\n        var vowelIndex2 = 0\n        var vowelCount2\
    \ = 0\n        var vowelIndex3 = 0\n        var vowelCount3 = 0\n        var vowelIndex4\
    \ = 0\n        var vowelCount4 = 0\n        var vowelIndex5 = 0\n        var vowelCount5\
    \ = 0\n        var vowelIndex6 = 0\n        var vowelCount6 = 0\n        var vowelIndex7\
    \ = 0\n        var vowelCount7 = 0\n        var vowelIndex8 = 0\n        var vowelCount8\
    \ = 0\n        var vowelIndex9 = 0\n        var vowelCount9 = 0\n        var vowelIndex10\
    \ = 0\n        var vowelCount10 = 0\n        var vowelIndex11 = 0\n        var\
    \ vowelCount11 = 0\n        var vowelIndex12 = 0\n        var vowelCount12 = 0\n\
    \        var vowelIndex13 = 0\n        var vowelCount13 = 0\n        var vowelIndex14\
    \ = 0\n        var vowelCount14 = 0\n        var vowelIndex15 = 0\n        var\
    \ vowelCount15 = 0\n        var vowelIndex16 = 0\n        var vowelCount16 = 0\n\
    \        var vowelIndex17 = 0\n        var vowelCount17 = 0\n        var vowelIndex18\
    \ = 0\n        var vowelCount18 = 0\n        var vowelIndex19 = 0\n        var\
    \ vowelCount19 = 0\n        var vowelIndex20 = 0\n        var vowelCount20 = 0\n\
    \        var vowelIndex21 = 0\n        var vowelCount21 = 0\n        var vowelIndex22\
    \ = 0\n        var vowelCount22 = 0\n        var vowelIndex23 = 0\n        var\
    \ vowelCount23 = 0\n        var vowelIndex24 = 0\n        var vowelCount24 = 0\n\
    \        var vowelIndex25 = 0\n        var vowelCount25 = 0\n        var vowelIndex26\
    \ = 0\n        var vowelCount26 = 0\n        var vowelIndex27 = 0\n        var\
    \ vowelCount27 = 0\n        var vowelIndex28 = 0\n        var vowelCount28 = 0\n\
    \        var vowelIndex29 = 0\n        var vowelCount29 = 0\n        var vowelIndex30\
    \ = 0\n        var vowelCount30 = 0\n        var vowelIndex31 = 0\n        var\
    \ vowelCount31 = 0\n        var vowelIndex32 = 0\n        var vowelCount32 = 0\n\
    \        var vowelIndex33 = 0\n        var vowelCount33 = 0\n        var vowelIndex34\
    \ = 0\n        var vowelCount34 = 0\n        var vowelIndex35 = 0\n        var\
    \ vowelCount35 = 0\n        var vowelIndex36 = 0\n        var vowelCount36 = 0\n\
    \        var vowelIndex37 = 0\n        var vowelCount37 = 0\n        var vowelIndex38\
    \ = 0\n        var vowelCount38 = 0\n        var vowelIndex39 = 0\n        var\
    \ vowelCount39 = 0\n        var vowelIndex40 = 0\n        var vowelCount40 = 0\n\
    \        var vowelIndex41 = 0\n        var vowelCount41 = 0\n        var vowelIndex42\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp30kb2_2y.scala:96:5\
    \ ---------------------\e[0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(vowels.contains).length\n        val consonants = Set(\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val consonantsCount\
    \ = word.filter(consonants.contains).length\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    val vowelsCount = word.lastIndexWhere(vowels.contains)\n        val consonantsCount\
    \ = word.lastIndexWhere(consonants.contains)\n        val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \        val consonantsIndex = word.lastIndexWhere(consonants.contains)\n    \
    \    if (vowelsCount > consonantsCount) {\n            val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \            val consonantsIndex = word.lastIndexWhere(consonants.contains)\n\
    \            val vowelsCount = word.lastIndexWhere(vowels.contains)\n        \
    \    val consonantsCount = word.lastIndexWhere(consonants.contains)\n        \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n            val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        }\n        if (vowelsCount\
    \ > consonantsCount) {\n            val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \            val consonantsIndex = word.lastIndexWhere(consonants.contains)\n\
    \            val vowelsCount = word.lastIndexWhere(vowels.contains)\n        \
    \    val consonantsCount = word.lastIndexWhere(consonants.contains)\n        \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n            val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        }\n        if (vowelsCount\
    \ > consonantsCount) {\n            val vowelsIndex = word.lastIndexWhere(vowels.contains)\n\
    \            val consonantsIndex = word.lastIndexWhere(consonants.contains)\n\
    \            val vowelsCount = word.lastIndexWhere(vowels.contains)\n        \
    \    val consonantsCount = word.lastIndexWhere(consonants.contains)\n        \
    \    val vowelsIndex = word.lastIndexWhere(vowels.contains)\n            val consonantsIndex\
    \ = word.lastIndexWhere(consonants.contains)\n        }\n        if (vowelsCount\
    \ > consonantsCount) {\n            val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp4dos3gct.scala:46:15 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m            \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m  \
    \             ^\e[0m\n\e[31m   |\e[0m               pattern expected\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4dos3gct.scala:65:0 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4dos3gct.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsCount\e[0m = word.lastIndexWhere(vowels.contains)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4dos3gct.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.lastIndexWhere(consonants.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mconsonantsCount is already defined as \e[33mvalue\e[0m \e\
    [35mconsonantsCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp4dos3gct.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mvowelsIndex\e[0m = word.lastIndexWhere(vowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsIndex is already defined as \e[33mvalue\e[0m \e[35mvowelsIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4dos3gct.scala:20:12 ---------------------------\e[0m\e[0m\n"
  stdout: ''
  timestamp: 1660009710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ var vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelsCount\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount2 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount3 = new mutable.HashMap[String, Int]()\n    \
    \    var vowelsCount4 = new mutable.HashMap[String, Int]()\n        var vowelsCount5\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount6 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount7 = new mutable.HashMap[String, Int]()\n    \
    \    var vowelsCount8 = new mutable.HashMap[String, Int]()\n        var vowelsCount9\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount10 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount11 = new mutable.HashMap[String, Int]()\n   \
    \     var vowelsCount12 = new mutable.HashMap[String, Int]()\n        var vowelsCount13\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount14 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount15 = new mutable.HashMap[String, Int]()\n   \
    \     var vowelsCount16 = new mutable.HashMap[String, Int]()\n        var vowelsCount17\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount18 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount19 = new mutable.HashMap[String, Int]()\n   \
    \     var vowelsCount20 = new mutable.HashMap[String, Int]()\n        var vowelsCount21\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount22 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount23 = new mutable.HashMap[String, Int]()\n   \
    \     var vowelsCount24 = new mutable.HashMap[String, Int]()\n        var vowelsCount25\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount26 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount27 = new mutable.HashMap[String, Int]()\n   \
    \     var vowelsCount28 = new mutable.HashMap[String, Int]()\n        var vowelsCount29\
    \ = new mutable.HashMap[String, Int]()\n        var vowelsCount30 = new mutable.HashMap[String,\
    \ Int]()\n        var vowelsCount31 = new mutable.HashMap[String, Int]()\n   \
    \     var vowelsCount32 = new mutable.HashMap[String, Int]()\n        var vowelsCount33\
    \ = new mutable.HashMap[String, Int]()\n        var \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n\
    \    assert(getClosestVowel((\"full\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    easy\")).equals((\"\")));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"most\")).equals((\"o\"\
    )));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ba\")).equals((\"\")));\n    assert(getClosestVowel((\"quick\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"\
    Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"Above\")).equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmprop18epr.scala:45:11 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmprop18epr.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mString\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                              ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmprop18epr.scala:13:31 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mvar\e[0m \e[36mvowelsCount2\e[0m = \e[33mnew\e[0m mutable.HashMap[\e\
    [35mString\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                    \
    \           ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprop18epr.scala:14:31\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e\
    [36mvowelsCount3\e[0m = \e[33mnew\e[0m mutable.HashMap[\e[35mString\e[0m, \e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmprop18epr.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mvowelsCount4\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mString\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                               ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found"
  stdout: ''
  timestamp: 1660009709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = word.filter(_.isLetter).map(_.toLowerCase ).toSet\n        val vowelsCount\
    \ = vowelsCount.toSeq.sortWith(_ < _)\n        val vowelsCount = vowelsCount.toList\n\
    \        val vowelsCount = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_\
    \ < vowelsCount.last)\n        val vowelsCount = vowelsCount.reverse\n       \
    \ val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n        val vowelsCount\
    \ = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n\
    \        val vowelsCount = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_\
    \ < vowelsCount.last)\n        val vowelsCount = vowelsCount.reverse\n       \
    \ val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n        val vowelsCount\
    \ = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n\
    \        val vowelsCount = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_\
    \ < vowelsCount.last)\n        val vowelsCount = vowelsCount.reverse\n       \
    \ val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n        val vowelsCount\
    \ = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n\
    \        val vowelsCount = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_\
    \ < vowelsCount.last)\n        val vowelsCount = vowelsCount.reverse\n       \
    \ val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n        val vowelsCount\
    \ = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n\
    \        val vowelsCount = vowelsCount.reverse\n        val vowelsCount = vowelsCount.takeWhile(_\
    \ < vowelsCount.last)\n        val vowelsCount = vowelsCount.reverse\n       \
    \ val vowelsCount = vowelsCount.takeWhile(_ < vowelsCount.last)\n        val vowelsCount\
    \ = vowelsCount.reverse\n        \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(getClosestVowel((\"yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"\
    full\")).equals((\"u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    ali\")).equals((\"\")));\n    assert(getClosestVowel((\"bad\")).equals((\"a\"\
    )));\n    assert(getClosestVowel((\"most\")).equals((\"o\")));\n    assert(getClosestVowel((\"\
    ab\")).equals((\"\")));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n\
    \    assert(getClosestVowel((\"quick\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    anime\")).equals((\"i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\
    \")));\n    assert(getClosestVowel((\"Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdjwozdkp.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount.toSeq.sortWith(_\
    \ < _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdjwozdkp.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount.toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdjwozdkp.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdjwozdkp.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount.takeWhile(_\
    \ < vowelsCount.last)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdjwozdkp.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount.reverse\n\
    \e[31m\e[31m   |\e[0m"
  stdout: ''
  timestamp: 1660009710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorPrevPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorPrevPrevPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrev = vowelsSetIteratorPrevNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevNext = vowelsSetIteratorPrevNextPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevNextNextPrevPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevNextNextPrevPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevNextNextPrevPrevNextNext = vowelsSetIteratorNextPrevNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevNextNextPrevPrevNextNext = vowelsSetIteratorNextPrevNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevNextNextPrevPrevNextNext = vowelsSetIteratorNextPrevNextPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevNextNextPrevPrevNextNext = vowelsSetIteratorNextPrevNextPrevN\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4cxp4qi5.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevNextNextPrevPrevPrevNext\e\
    [0m = vowelsSetIteratorNextPrevNextPrevPrevNext.next\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevNextNextPrevPrevPrevNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevNextNextPrevPrevPrevNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4cxp4qi5.scala:33:12 ---------------------------\e[0m\e[0m\n\e\
    [31m33 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevNextNextPrevPrevNextNext\e\
    [0m = vowelsSetIteratorNextPrevNextPrevNext.next\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevNextNextPrevPrevNextNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevNextNextPrevPrevNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4cxp4qi5.scala:34:12 ---------------------------\e[0m\e[0m\n\e\
    [31m34 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrevNextNextPrevPrevNextNext\e\
    [0m = vowelsSetIteratorNextPrevNextPrevNext.next\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrevNextNextPrevPrevNextNext is already\
    \ defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextPrevNextNextPrevPrevNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4cxp4qi5.scala:35:12 ---------------------------\e[0m\e[0m\n\e\
    [31m35 |\e[0"
  stdout: ''
  timestamp: 1660009710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorPrevPrev = vowelsSetIteratorPrev.prev\n        val vowelsSetIteratorPrevNext\
    \ = vowelsSetIteratorPrev.next\n        val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrev = vowelsSetIteratorNextPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNext = vowelsSetIteratorNextPrev.next\n\
    \        val vowelsSetIteratorPrevPrevPrev = vowelsSetIteratorPrevPrev.prev\n\
    \        val vowelsSetIteratorPrevPrevNext = vowelsSetIteratorPrevPrev.next\n\
    \        val vowelsSetIteratorPrevNextPrevPrev = vowelsSetIteratorPrevNextPrev.prev\n\
    \        val vowelsSetIteratorPrevNextPrevNext = vowelsSetIteratorPrevNextPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrev = vowelsSetIteratorNextPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrev.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevNext.prev\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevNext = vowelsSetIteratorNextPrevPrevPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevNextPrevPrevPrev = vowelsSetIteratorNextPrevPrevNextPrevPrev.prev\n\
    \        val vowelsSetIteratorNextPrevNextPrevPrevPrevNext = vowelsSetIteratorNextPrevNextPrevPrevNext.next\n\
    \        val vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevPrevPrev = vowelsSetIteratorNextPrevPrevPrevPrevPrevPrevNext.prev\n\
    \        val vowel\n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyznk85sr.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:15:54\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrev\e[0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue prev is not a member of Iterator[String] - did you mean vowelsSetIterator.drop?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:16:62 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev\
    \ is not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpyznk85sr.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpyznk85sr.scala:25:48 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrevNextPrevPrev\e\
    [0m = vowelsSetIteratorPrevNextPrev.prev\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Not found: vowelsSetIteratorPrevNextPrev\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyznk85sr.scala:26:48\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorPrevNextPrevNext\e[0m = vowelsSetIteratorPrevNextPrev.next\n\
    \e[31m\e[31m   |\e[0m          "
  stdout: ''
  timestamp: 1660009641
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.prev\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.prev\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.prev\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.prev\n   \
    \     val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNextNextNext.prev\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoqynfxtf.scala:15:54 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorPrev\e\
    [0m = vowelsSetIterator.prev\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is not a member\
    \ of Iterator[String] - did you mean vowelsSetIterator.drop?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpoqynfxtf.scala:16:62 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e[0m\
    \ = vowelsSetIteratorNext.prev\n\e[31m\e[31m   |\e[0m                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue prev is\
    \ not a member of String - did you mean vowelsSetIteratorNext.trim?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpoqynfxtf.scala:17:62 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNext\e\
    [0m = vowelsSetIteratorNext.next\n\e[31m\e[31m   |\e[0m                      \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue next\
    \ is not a member of String - did you mean vowelsSetIteratorNext.indent?\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpoqynfxtf.scala:27:60 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\e[31m\e[31m   |\e[0m\
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0mRecursive \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNext\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoqynfxtf.scala:28:68\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelsSetIteratorNextNextNextNextNextNextNextNextPrev\e[0m = vowelsSetIteratorNextNextNextNextNextNextNextNext.prev\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |"
  stdout: ''
  timestamp: 1660009710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet =\
    \ vowels.toSet\n        val vowelsSetIterator = vowelsSet.iterator\n        val\
    \ vowelsSetIteratorNext = vowelsSetIterator.next\n        val vowelsSetIteratorPrev\
    \ = vowelsSetIterator.previous\n        val vowelsSetIteratorNextPrev = vowelsSetIteratorNext.previous\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextPrev = vowelsSetIteratorNextPrev.previous\n        val\
    \ vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNext.previous\n       \
    \ val vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n       \
    \ val vowelsSetIteratorNextNextPrev = vowelsSetIteratorNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextPrev = vowelsSetIteratorNextNextNextPrev.previous\n\
    \        val vowelsSetIteratorNextNextNextNextPrev = vowelsSetIteratorNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextPrev = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextPrev\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.previous\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpz381uwfw.scala:34:11 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpz381uwfw.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextPrev\e\
    [0m = vowelsSetIteratorNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz381uwfw.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextPrev.previous\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextPrev is already defined as \e[33mvalue\e\
    [0m \e[35mvowelsSetIteratorNextNextPrev\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz381uwfw.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextPrev\e\
    [0m = vowelsSetIteratorNextNextNextPrev.previous\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextPrev is already defined as \e\
    [33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextPrev\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz381uwfw.scala:15:54\
    \ -------------------"
  stdout: ''
  timestamp: 1660009710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    // two consonants from the right side of the word (case\
    \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n    // find any vowel met the above condition. \n\
    \    // You may assume that the given string contains English letter only.\n \
    \   // Example:\n    def getClosestVowel(word : String) : String = {\n       \
    \ val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val vowelsCount\
    \ = word.filter(x => vowels.contains(x)).length\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ consonantsCount = word.filter(x => consonants.contains(x)).length\n        val\
    \ vowelsCount = vowelsCount + consonantsCount\n        val vowelsCount2 = vowelsCount\
    \ + 1\n        val vowelsCount3 = vowelsCount + 2\n        val vowelsCount4 =\
    \ vowelsCount + 3\n        val vowelsCount5 = vowelsCount + 4\n        val vowelsCount6\
    \ = vowelsCount + 5\n        val vowelsCount7 = vowelsCount + 6\n        val vowelsCount8\
    \ = vowelsCount + 7\n        val vowelsCount9 = vowelsCount + 8\n        val vowelsCount10\
    \ = vowelsCount + 9\n        val vowelsCount11 = vowelsCount + 10\n        val\
    \ vowelsCount12 = vowelsCount + 11\n        val vowelsCount13 = vowelsCount +\
    \ 12\n        val vowelsCount14 = vowelsCount + 13\n        val vowelsCount15\
    \ = vowelsCount + 14\n        val vowelsCount16 = vowelsCount + 15\n        val\
    \ vowelsCount17 = vowelsCount + 16\n        val vowelsCount18 = vowelsCount +\
    \ 17\n        val vowelsCount19 = vowelsCount + 18\n        val vowelsCount20\
    \ = vowelsCount + 19\n        val vowelsCount21 = vowelsCount + 20\n        val\
    \ vowelsCount22 = vowelsCount + 21\n        val vowelsCount23 = vowelsCount +\
    \ 22\n        val vowelsCount24 = vowelsCount + 23\n        val vowelsCount25\
    \ = vowelsCount + 24\n        val vowelsCount26 = vowelsCount + 25\n        val\
    \ vowelsCount27 = vowelsCount + 26\n        val vowelsCount28 = vowelsCount +\
    \ 27\n        val vowelsCount29 = vowelsCount + 28\n        val vowelsCount30\
    \ = vowelsCount + 29\n        val vowelsCount31 = vowelsCount + 30\n        val\
    \ vowelsCount32 = vowelsCount + 31\n        val vowelsCount33 = vowelsCount +\
    \ 32\n        \n    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
    yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
    u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
    most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\"\
    )));\n    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"\
    i\")));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
    Above\")).equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk9itbs_a.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = vowelsCount\
    \ + consonantsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsCount is already defined as \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpk9itbs_a.scala:12:59 --------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = word.filter(\e\
    [36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e[0m              \
    \                                             ^\e[0m\n\e[31m   |\e[0m        \
    \                                            Found:    (x : Char)\n\e[31m   |\e\
    [0m                                                    Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk9itbs_a.scala:14:67 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mconsonantsCount\e[0m = word.filter(\e\
    [36mx\e[0m => consonants.contains(x)).length\n\e[31m\e[31m   |\e[0m          \
    \                                                         ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk9itbs_a.scala:49:5\
    \ ---------------------\e[0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009711

name: HumanEval_87_get_row
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a 2 dimensional data, as a nested lists,\n    // which is\
  \ similar to matrix, however, unlike matrices,\n    // each row may contain a different\
  \ number of columns.\n    // Given lst, and integer x, find integers x in the list,\n\
  \    // and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n    // each\
  \ tuple is a coordinate - (row, columns), starting with 0.\n    // Sort coordinates\
  \ initially by rows in ascending order.\n    // Also, sort coordinates of the row\
  \ by columns in descending order.\n    // Examples:\n    def getRow(lst : List[List[Long]],\
  \ x : Long) : List[Tuple2[Long, Long]] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 1l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 1l.toLong))), (1l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 0l), (1l, 4l), (1l, 0l), (2l, 5l), (2l, 0l)))));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))), (2l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 1l), (1l, 1l), (2l, 1l), (3l, 1l), (4l, 1l), (5l, 1l)))));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 1l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 1l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 1l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 1l.toLong))), (1l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 0l), (1l, 0l), (2l, 1l), (2l, 0l), (3l, 2l), (3l, 0l), (4l, 3l), (4l,\
  \ 0l), (5l, 4l), (5l, 0l), (6l, 5l), (6l, 0l)))));\n    assert(getRow((List[List[Long]]()),\
  \ (1l)).equals((List[Tuple2[Long, Long]]())));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong))),\
  \ (2l)).equals((List[Tuple2[Long, Long]]())));\n    assert(getRow((List[List[Long]](List[Long](),\
  \ List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong))), (3l)).equals((List[Tuple2[Long,\
  \ Long]]((2l, 2l)))));\n    }\n\n}\n"
completions: ["        val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x\
    \ => x._2)\n        val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x\
    \ => x._1)\n        val lst5 = lst4.sortBy(x => x._1)\n        val lst6 = lst5.sortBy(x\
    \ => x._2)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._1)\n        val lst9 = lst8.sortBy(x => x._1)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => x._1)\n        val lst13 = lst12.sortBy(x => x._1)\n        val lst14 = lst13.sortBy(x\
    \ => x._2)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._1)\n        val lst17 = lst16.sortBy(x => x._1)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._1)\n        val lst21 = lst20.sortBy(x => x._1)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._1)\n        val lst25 = lst24.sortBy(x => x._1)\n        val lst26 = lst25.sortBy(x\
    \ => x._2)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._1)\n        val lst29 = lst28.sortBy(x => x._1)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._1)\n        val lst33 = lst32.sortBy(x => x._1)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._2)", "        val lst2 =\
    \ lst.sortBy(x => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n        val\
    \ lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x => x._1)\n \
    \       val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x =>\
    \ x._2)\n        val lst8 = lst7.sortBy(x => x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._1)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._1)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._1)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._1)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._1)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._1)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._1)\n        val lst36 = lst35.sortBy(x => x._", "        val lst2 = lst.sortBy(_(0))\n\
    \        val lst3 = lst2.sortBy(_(1)) // in descending order\n        val lst4\
    \ = lst3.sortBy(_._2) // in ascending order\n        val lst5 = lst4.sortBy(_._1)\
    \ // in descending order\n        val lst6 = lst5.sortBy(_._0) // in ascending\
    \ order\n        val lst7 = lst6.sortBy(_._1) // in descending order\n       \
    \ val lst8 = lst7.sortBy(_._2) // in ascending order\n        val lst9 = lst8.sortBy(_._0)\
    \ // in ascending order\n        val lst10 = lst9.sortBy(_._1) // in descending\
    \ order\n        val lst11 = lst10.sortBy(_._2) // in ascending order\n      \
    \  val lst12 = lst11.sortBy(_._0) // in ascending order\n        val lst13 = lst12.sortBy(_._1)\
    \ // in descending order\n        val lst14 = lst13.sortBy(_._2) // in ascending\
    \ order\n        val lst15 = lst14.sortBy(_._0) // in ascending order\n      \
    \  val lst16 = lst15.sortBy(_._1) // in descending order\n        val lst17 =\
    \ lst16.sortBy(_._2) // in ascending order\n        val lst18 = lst17.sortBy(_._0)\
    \ // in ascending order\n        val lst19 = lst18.sortBy(_._1) // in descending\
    \ order\n        val lst20 = lst19.sortBy(_._2) // in ascending order\n      \
    \  val lst21 = lst20.sortBy(_._0) // in ascending order\n        val lst22 = lst21.sortBy(_._1)\
    \ // in descending order\n        val lst23 = lst22.sortBy(_._2) // in ascending\
    \ order\n        val lst24 = lst23.sortBy(_._0) // in ascending order\n      \
    \  val lst25 = lst24.sortBy(_._1) // in descending order\n        val lst26 =\
    \ lst25.sortBy(_._2) // in ascending order\n        val lst27 = lst26.sortBy(_._0)\
    \ // in ascending order\n        val lst28 = lst27.sortBy(_._1) // in descending\
    \ order\n        val lst29 = lst28.sortBy(_._2) // in ascending order\n      \
    \  val lst30 = lst29.sortBy(_._0) // in ascending order\n        val lst31 = lst30.",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) reverse\n\
    \        val lst3 = lst2.filter(_(0) == x)\n        lst3.map(x => (x._1, x._2))",
  "        val lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x => -x)\n\
    \        val lst4 = lst3.map(x => (x._1, x._2))\n        lst4.filter(x => x._1\
    \ == x).map(x => (x._1, x._2))", "        val lst1 = lst.sortBy(_(0))\n      \
    \  val lst2 = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending\n        val lst4 = lst3.sortBy(_(1)) //descending\n        val\
    \ lst5 = lst4.sortBy(_(0)) //ascending\n        val lst6 = lst5.sortBy(_(1)) //descending\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending\n        val lst9 = lst8.sortBy(_(0)) //ascending\n        val\
    \ lst10 = lst9.sortBy(_(1)) //descending\n        val lst11 = lst10.sortBy(_(0))\
    \ //ascending\n        val lst12 = lst11.sortBy(_(1)) //descending\n        val\
    \ lst13 = lst12.sortBy(_(0)) //ascending\n        val lst14 = lst13.sortBy(_(1))\
    \ //descending\n        val lst15 = lst14.sortBy(_(0)) //ascending\n        val\
    \ lst16 = lst15.sortBy(_(1)) //descending\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending\n        val lst18 = lst17.sortBy(_(1)) //descending\n        val\
    \ lst19 = lst18.sortBy(_(0)) //ascending\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending\n        val lst21 = lst20.sortBy(_(0)) //ascending\n        val\
    \ lst22 = lst21.sortBy(_(1)) //descending\n        val lst23 = lst22.sortBy(_(0))\
    \ //ascending\n        val lst24 = lst23.sortBy(_(1)) //descending\n        val\
    \ lst25 = lst24.sortBy(_(0)) //ascending\n        val lst26 = lst25.sortBy(_(1))\
    \ //descending\n        val lst27 = lst26.sortBy(_(0)) //ascending\n        val\
    \ lst28 = lst27.sortBy(_(1)) //descending\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending\n        val lst30 = lst29.sortBy(_(1)) //descending\n        val\
    \ lst31 = lst30.sortBy(_(0)) //ascending\n        val lst32 = lst31.sortBy(_(1))\
    \ //descending\n        val lst33 = lst32.sortBy(_(0)) //ascending\n", "     \
    \   val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\
    \ order\n        val lst3 = lst2.sortBy(_(0)) //ascending order\n        val lst4\
    \ = lst3.sortBy(_(1)) //descending order\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending order\n        val lst6 = lst5.sortBy(_(1)) //descending order\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending order\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending order\n        val lst9 = lst8.sortBy(_(0)) //ascending order\n\
    \        val lst10 = lst9.sortBy(_(1)) //descending order\n        val lst11 =\
    \ lst10.sortBy(_(0)) //ascending order\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending order\n        val lst13 = lst12.sortBy(_(0)) //ascending order\n\
    \        val lst14 = lst13.sortBy(_(1)) //descending order\n        val lst15\
    \ = lst14.sortBy(_(0)) //ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending order\n        val lst17 = lst16.sortBy(_(0)) //ascending order\n\
    \        val lst18 = lst17.sortBy(_(1)) //descending order\n        val lst19\
    \ = lst18.sortBy(_(0)) //ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending order\n        val lst21 = lst20.sortBy(_(0)) //ascending order\n\
    \        val lst22 = lst21.sortBy(_(1)) //descending order\n        val lst23\
    \ = lst22.sortBy(_(0)) //ascending order\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending order\n        val lst25 = lst24.sortBy(_(0)) //ascending order\n\
    \        val lst26 = lst25.sortBy(_(1)) //descending order\n        val lst27\
    \ = lst26.sortBy(_(0)) //ascending order\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending order\n        val lst29 = lst28.sortBy(_(0)) //ascending order\n\
    \        val lst30 = lst29.sortBy(_(1)) //descending order\n        val lst31\
    \ = lst30.sortBy(_(0)) //ascending order\n        val ", "        val lst1 = lst.sortWith((x,\
    \ y) => x.compare(y))\n        val lst2 = lst1.sortWith((x, y) => y.compare(x))\n\
    \        val lst3 = lst2.sortWith((x, y) => x.compare(y))\n        val lst4 =\
    \ lst3.sortWith((x, y) => y.compare(x))\n        val lst5 = lst4.sortWith((x,\
    \ y) => x.compare(y))\n        val lst6 = lst5.sortWith((x, y) => y.compare(x))\n\
    \        val lst7 = lst6.sortWith((x, y) => x.compare(y))\n        val lst8 =\
    \ lst7.sortWith((x, y) => y.compare(x))\n        val lst9 = lst8.sortWith((x,\
    \ y) => x.compare(y))\n        val lst10 = lst9.sortWith((x, y) => y.compare(x))\n\
    \        val lst11 = lst10.sortWith((x, y) => x.compare(y))\n        val lst12\
    \ = lst11.sortWith((x, y) => y.compare(x))\n        val lst13 = lst12.sortWith((x,\
    \ y) => x.compare(y))\n        val lst14 = lst13.sortWith((x, y) => y.compare(x))\n\
    \        val lst15 = lst14.sortWith((x, y) => x.compare(y))\n        val lst16\
    \ = lst15.sortWith((x, y) => y.compare(x))\n        val lst17 = lst16.sortWith((x,\
    \ y) => x.compare(y))\n        val lst18 = lst17.sortWith((x, y) => y.compare(x))\n\
    \        val lst19 = lst18.sortWith((x, y) => x.compare(y))\n        val lst20\
    \ = lst19.sortWith((x, y) => y.compare(x))\n        val lst21 = lst20.sortWith((x,\
    \ y) => x.compare(y))\n        val lst22 = lst21.sortWith((x, y) => y.compare(x))\n\
    \        val lst23 = lst22.sortWith((x, y) => x.compare(y))\n        val lst24\
    \ = lst23.sortWith((x, y) => y.compare(x))\n        val lst25 = lst24.sortWith((x,\
    \ y) => x.compare(y))\n        val lst26 = lst25.sortWith((x, y) => y.compare(x))\n\
    \        val lst27 = lst26.sortWith((x, y) => x.compare(y))\n        val lst28\
    \ = lst27.sortWith((x, y) => y.compare(x))\n        val lst29 = lst28.sortWith((x,\
    \ y) => x.compare(y))\n        val lst30 = lst29.sortWith((x, y) => y.compare(x))\n\
    \        val lst31 = lst30.sortWith((x, y) => x.compare(y))\n        val lst32\
    \ = lst31.sortWith((x, y) => ", "        val lst1 = lst.sortBy(_(0))\n       \
    \ val lst2 = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0))\
    \ //descending\n        val lst4 = lst3.sortBy(_(1)) //descending\n        val\
    \ lst5 = lst4.sortBy(_(0)) //descending\n        val lst6 = lst5.sortBy(_(1))\
    \ //descending\n        val lst7 = lst6.sortBy(_(0)) //descending\n        val\
    \ lst8 = lst7.sortBy(_(1)) //descending\n        val lst9 = lst8.sortBy(_(0))\
    \ //descending\n        val lst10 = lst9.sortBy(_(1)) //descending\n        val\
    \ lst11 = lst10.sortBy(_(0)) //descending\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending\n        val lst13 = lst12.sortBy(_(0)) //descending\n        val\
    \ lst14 = lst13.sortBy(_(1)) //descending\n        val lst15 = lst14.sortBy(_(0))\
    \ //descending\n        val lst16 = lst15.sortBy(_(1)) //descending\n        val\
    \ lst17 = lst16.sortBy(_(0)) //descending\n        val lst18 = lst17.sortBy(_(1))\
    \ //descending\n        val lst19 = lst18.sortBy(_(0)) //descending\n        val\
    \ lst20 = lst19.sortBy(_(1)) //descending\n        val lst21 = lst20.sortBy(_(0))\
    \ //descending\n        val lst22 = lst21.sortBy(_(1)) //descending\n        val\
    \ lst23 = lst22.sortBy(_(0)) //descending\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending\n        val lst25 = lst24.sortBy(_(0)) //descending\n        val\
    \ lst26 = lst25.sortBy(_(1)) //descending\n        val lst27 = lst26.sortBy(_(0))\
    \ //descending\n        val lst28 = lst27.sortBy(_(1)) //descending\n        val\
    \ lst29 = lst28.sortBy(_(0)) //descending\n        val lst30 = lst29.sortBy(_(1))\
    \ //descending\n        val lst31 = lst30.sortBy(_(0)) //descending\n        val\
    \ lst32 = lst31.sortBy(_(1)) //descending\n        val lst33 = lst32.sortBy(_(0))\
    \ //descending\n", "        val rows = lst.map(row => row.map(x => Tuple2(x, row(x)))).toList\n\
    \        val sorted = rows.sortBy(row => row._1)\n        val sortedRows = sorted.map(row\
    \ => row._2.sortBy(row => row._2))\n        val result = sortedRows.map(row =>\
    \ row._1.map(x => (x, row._2.indexOf(x))))\n        val final = result.map(row\
    \ => row._1.map(x => (x, row._2.indexOf(x))))\n        final", "        val lst1\
    \ = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(_)).reverse\n        val\
    \ lst3 = lst2.map(x => (x, x))\n        lst3.toList", "        val rows = lst.map(row\
    \ => row.filter(_ != x).toList)\n        val rows = rows.sortBy(row => row.size)\n\
    \        val rows = rows.sortBy(row => row.reverse)\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex.sortBy(_._1).map(_._2))\n        val rows = rows.map(row\
    \ => row.zipWithIndex", "        val lst1 = lst.sortBy(x => x._1)\n        val\
    \ lst2 = lst1.sortBy(x => x._2)\n        val lst3 = lst2.sortBy(x => x._2)\n \
    \       val lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x =>\
    \ x._2)\n        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x\
    \ => x._2)\n        val lst8 = lst7.sortBy(x => x._2)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._2)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._2)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._2)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._2)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._2)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._2)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._2)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._2)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._2)", "        val rows = lst.map(row => row.indexOf(x)).sortBy(row =>\
    \ row).reverse\n        val cols = rows.map(row => row.indexOf(x)).sortBy(col\
    \ => -col).reverse\n        val coords = rows.zip(cols).map(row => (row._1, row._2))\n\
    \        coords.sortBy(row => row._1).reverse", "        val lst2 = lst.sortBy(x\
    \ => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x\
    \ => -x._2)\n        val lst5 = lst4.sortBy(x => -x._1)\n        val lst6 = lst5.sortBy(x\
    \ => x._1)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => -x._2)\n        val lst9 = lst8.sortBy(x => -x._1)\n        val lst10 = lst9.sortBy(x\
    \ => x._1)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => -x._2)\n        val lst13 = lst12.sortBy(x => -x._1)\n        val lst14 =\
    \ lst13.sortBy(x => x._1)\n        val lst15 = lst14.sortBy(x => x._2)\n     \
    \   val lst16 = lst15.sortBy(x => -x._2)\n        val lst17 = lst16.sortBy(x =>\
    \ -x._1)\n        val lst18 = lst17.sortBy(x => x._1)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => -x._2)\n        val lst21 =\
    \ lst20.sortBy(x => -x._1)\n        val lst22 = lst21.sortBy(x => x._1)\n    \
    \    val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x =>\
    \ -x._2)\n        val lst25 = lst24.sortBy(x => -x._1)\n        val lst26 = lst25.sortBy(x\
    \ => x._1)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => -x._2)\n        val lst29 = lst28.sortBy(x => -x._1)\n        val lst30 =\
    \ lst29.sortBy(x => x._1)\n        val lst31 = lst30.sortBy(x => x._2)\n     \
    \   val lst32 = lst31.sortBy(x => -x._2)\n        val lst33 = lst32.sortBy(x =>\
    \ -x._1)\n        val lst34 = lst33.sortBy(x => x._1)\n        val lst35 = lst34.sortBy(x\
    \ => x.", "        val lst2 = lst.sortBy(row => row.indexOf(x))\n        val lst3\
    \ = lst2.sortBy(row => row.lastIndexOf(x))\n        val lst4 = lst3.sortBy(row\
    \ => row.indexOf(x))\n        val lst5 = lst4.sortBy(row => row.lastIndexOf(x))\n\
    \        val lst6 = lst5.sortBy(row => row.indexOf(x))\n        val lst7 = lst6.sortBy(row\
    \ => row.lastIndexOf(x))\n        val lst8 = lst7.sortBy(row => row.indexOf(x))\n\
    \        val lst9 = lst8.sortBy(row => row.lastIndexOf(x))\n        val lst10\
    \ = lst9.sortBy(row => row.indexOf(x))\n        val lst11 = lst10.sortBy(row =>\
    \ row.lastIndexOf(x))\n        val lst12 = lst11.sortBy(row => row.indexOf(x))\n\
    \        val lst13 = lst12.sortBy(row => row.lastIndexOf(x))\n        val lst14\
    \ = lst13.sortBy(row => row.indexOf(x))\n        val lst15 = lst14.sortBy(row\
    \ => row.lastIndexOf(x))\n        val lst16 = lst15.sortBy(row => row.indexOf(x))\n\
    \        val lst17 = lst16.sortBy(row => row.lastIndexOf(x))\n        val lst18\
    \ = lst17.sortBy(row => row.indexOf(x))\n        val lst19 = lst18.sortBy(row\
    \ => row.lastIndexOf(x))\n        val lst20 = lst19.sortBy(row => row.indexOf(x))\n\
    \        val lst21 = lst20.sortBy(row => row.lastIndexOf(x))\n        val lst22\
    \ = lst21.sortBy(row => row.indexOf(x))\n        val lst23 = lst22.sortBy(row\
    \ => row.lastIndexOf(x))\n        val lst24 = lst23.sortBy(row => row.indexOf(x))\n\
    \        val lst25 = lst24.sortBy(row => row.lastIndexOf(x))\n        val lst26\
    \ = lst25.sortBy(row => row.indexOf(x))\n        val lst27 = lst26.sortBy(row\
    \ => row.lastIndexOf(x))\n        val lst28 = lst27.sortBy(row => row.indexOf(x))\n\
    \        val lst29 = lst28.sortBy(row => row.lastIndexOf(x))\n        val lst30\
    \ = lst29.sortBy(row => row.indexOf(x))\n        val lst31 = lst30.sortBy(row\
    \ => row.lastIndexOf(x))\n        val lst32 = lst31.sortBy(row => row.indexOf(x))\n\
    \        val lst33 = lst32.sortBy(row => row.lastIndexOf(x))\n        val lst34\
    \ = lst33.sortBy(row => row.indexOf(x))\n        val lst35 = lst34.sortBy(row\
    \ => row.", "        val rows = lst.map(_.length)\n        val cols = lst(0).length\n\
    \        val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n        val\
    \ row = new mutable.ListBuffer[Long]()\n        val col = new mutable.ListBuffer[Long]()\n\
    \        var i = 0\n        while(i < rows) {\n            val rowLength = lst(i).length\n\
    \            val colLength = lst(i).head\n            while(i < rows) {\n    \
    \            val rowLength = lst(i).length\n                val colLength = lst(i).head\n\
    \                if(rowLength == colLength) {\n                    if(lst(i).contains(x))\
    \ {\n                        result.append((i, x))\n                    }\n  \
    \                  i += 1\n                }\n                else {\n       \
    \             if(lst(i).contains(x)) {\n                        val rowIndex =\
    \ lst(i).indexOf(x)\n                        val colIndex = lst(i).indexOf(lst(i).last)\n\
    \                        row.append(rowIndex)\n                        col.append(colIndex)\n\
    \                        result.append((rowIndex, colIndex))\n               \
    \     }\n                    i += 1\n                }\n            }\n      \
    \  }\n        result.sortBy(_._1).reverse\n        result.sortBy(_._2).reverse\n\
    \        result.map(t => (t._1, t._2))", "        val rows = lst.map(row => row.filter(_\
    \ == x).map(_ + 1))\n        val cols = rows.map(_.size)\n        val tuples =\
    \ rows.map(row => row.zip(cols))\n        tuples.sortBy(_._1).reverse", "    \
    \    val lst2 = lst.map(_.map(x => x -> 1))\n        val lst3 = lst2.map(_.sortBy(_._1))\n\
    \        val lst4 = lst3.map(_.sortBy(_._2))\n        lst4.map(x => (x._1, x._2))",
  "        val rows = lst.map(row => row.filter(_ != x))\n        val rows = rows.sortBy(row\
    \ => row(0))\n        val cols = rows.map(row => row.filter(_ != x)).sortBy(row\
    \ => -row(1))\n        val coords = rows.zip(cols)\n        coords.toList", " \
    \       val rows = lst.map(row => row.filter(_ != x).toList)\n        val cols\
    \ = rows.map(_.length)\n        val coords = rows.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        coords.map(row => row.zipWithIndex.sortBy(_._2).reverse)", "        val\
    \ rows = lst.map(row => row.filter(_ != x))\n        val rowsSorted = rows.sortBy(row\
    \ => row(0))\n        val rowsSortedByCols = rowsSorted.sortBy(row => row(1))\n\
    \        rowsSortedByCols.map(row => (row(0), row(1))).toList", "        val lst2\
    \ = lst.sortBy(_(0))\n        val lst3 = lst2.sortBy(_(1)) //descending order\n\
    \        val lst4 = lst3.sortBy(_._2) //ascending order\n        val lst5 = lst4.filter(_._1\
    \ == x) //filter by x\n        lst5.map(x => (x._1, x._2)) //return list of tuples\
    \ - (row, columns)", "        val rows = lst.map(_.length)\n        val cols =\
    \ lst(0).length\n        val result = lst.map(x => Tuple2(x.indexOf(x), x.indexOf(x)\
    \ + 1))\n        val sorted = result.sortBy(x => x._1)\n        val reversed =\
    \ sorted.sortBy(x => x._2).reverse\n        reversed.map(x => (x._1, x._2))",
  "        val row = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val columns = new mutable.ArrayList[Long]()\n        val column\
    \ = new mutable.HashMap[Long, Long]()\n        val columns = new mutable.ArrayList[Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val row\
    \ = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val columns = new mutable.ArrayList[Long]()\n        val column\
    \ = new mutable.HashMap[Long, Long]()\n        val columns = new mutable.ArrayList[Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val row\
    \ = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val columns = new mutable.ArrayList[Long]()\n        val column\
    \ = new mutable.HashMap[Long, Long]()\n        val columns = new mutable.ArrayList[Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val row\
    \ = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val columns = new mutable.ArrayList[Long]()\n        val column\
    \ = new mutable.HashMap[Long, Long]()\n        val columns = new mutable.ArrayList[Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val row\
    \ = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val columns = new mutable.ArrayList[Long]()\n        val column\
    \ = new mutable.HashMap[Long, Long]()\n        val columns = new mutable.ArrayList[Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val row\
    \ = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val columns = new mutable.ArrayList[Long]()\n        val column\
    \ = new mutable.HashMap[Long, Long]()\n        val columns = new mutable.ArrayList[Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val row\
    \ = new mutable.HashMap[", "        val rows = lst.map(row => row.zipWithIndex.toList)\n\
    \        val rows = rows.sortBy(row => row._1)\n        val rows = rows.sortBy(row\
    \ => row._2)\n        val rows = rows.filter(row => row._1 == x)\n        val\
    \ rows = rows.sortBy(row => row._2)\n        val rows = rows.map(row => (row._1,\
    \ row._2))\n        return rows", "        val lst1 = lst.sortBy(x => x._1)\n\
    \        val lst2 = lst1.sortBy(x => x._2)\n        val lst3 = lst2.sortBy(x =>\
    \ x._2)\n        val lst4 = lst3.sortBy(x => x._1)\n        val lst5 = lst4.sortBy(x\
    \ => x._2)\n        val lst6 = lst5.sortBy(x => x._1)\n        val lst7 = lst6.sortBy(x\
    \ => x._2)\n        val lst8 = lst7.sortBy(x => x._2)\n        val lst9 = lst8.sortBy(x\
    \ => x._1)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._2)\n        val lst12 = lst11.sortBy(x => x._1)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._2)\n        val lst15 = lst14.sortBy(x\
    \ => x._1)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._2)\n        val lst18 = lst17.sortBy(x => x._1)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._2)\n        val lst21 = lst20.sortBy(x\
    \ => x._1)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._2)\n        val lst24 = lst23.sortBy(x => x._1)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._2)\n        val lst27 = lst26.sortBy(x\
    \ => x._1)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._2)\n        val lst30 = lst29.sortBy(x => x._1)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._2)\n        val lst33 = lst32.sortBy(x\
    \ => x._1)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._2)", "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1))\
    \ //descending order\n        val lst3 = lst2.sortBy(_(0)) //ascending order\n\
    \        val lst4 = lst3.sortBy(_(1)) //descending order\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending order\n        val lst6 = lst5.sortBy(_(1)) //descending order\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending order\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending order\n        val lst9 = lst8.sortBy(_(0)) //ascending order\n\
    \        val lst10 = lst9.sortBy(_(1)) //descending order\n        val lst11 =\
    \ lst10.sortBy(_(0)) //ascending order\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending order\n        val lst13 = lst12.sortBy(_(0)) //ascending order\n\
    \        val lst14 = lst13.sortBy(_(1)) //descending order\n        val lst15\
    \ = lst14.sortBy(_(0)) //ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending order\n        val lst17 = lst16.sortBy(_(0)) //ascending order\n\
    \        val lst18 = lst17.sortBy(_(1)) //descending order\n        val lst19\
    \ = lst18.sortBy(_(0)) //ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending order\n        val lst21 = lst20.sortBy(_(0)) //ascending order\n\
    \        val lst22 = lst21.sortBy(_(1)) //descending order\n        val lst23\
    \ = lst22.sortBy(_(0)) //ascending order\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending order\n        val lst25 = lst24.sortBy(_(0)) //ascending order\n\
    \        val lst26 = lst25.sortBy(_(1)) //descending order\n        val lst27\
    \ = lst26.sortBy(_(0)) //ascending order\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending order\n        val lst29 = lst28.sortBy(_(0)) //ascending order\n\
    \        val lst30 = lst29.sortBy(_(1)) //descending order\n        val lst31\
    \ = lst30.sortBy(_(0)) //ascending order\n        val ", "        val row: List[Tuple2[Long,\
    \ Long]] = lst.map(row => Tuple2(row(0), row(1))).toList\n        val rowSorted\
    \ = row.sortBy(row => row._1)\n        val rowSortedSorted = rowSorted.sortBy(row\
    \ => row._2)\n        val rowSortedSortedSorted: Seq[Tuple2[Long, Long]] = rowSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSorted: Seq[Tuple2[Long, Long]] = rowSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSorted: Seq[Tuple2[Long, Long]] = rowSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long, Long]]\
    \ = rowSortedSortedSortedSortedSortedSorted.reverse\n        val rowSortedSortedSortedSortedSortedSortedSorted:\
    \ Seq[Tuple2[Long, Long]] = rowSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long, Long]]\
    \ = rowSortedSortedSortedSortedSortedSortedSorted.reverse\n        val rowSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Seq[Tuple2[Long, Long]] = rowSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long,\
    \ Long]] = rowSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n     \
    \   val rowSortedSortedSortedSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long,\
    \ Long]] = rowSortedSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long,\
    \ Long]] = rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Seq[Tuple2[Long, Long]] = rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Seq[Tuple2[Long, Long]] = rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long,\
    \ Long]] = rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSorted: Seq[Tuple2[Long,\
    \ Long]] = rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.reverse\n\
    \        val rowSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Seq[Tuple2[", "        val rows = lst.map(_.length)\n        val cols = lst.map(_.head.length)\n\
    \        val result = lst.map(row => row.zipWithIndex.filter(_._1 == x).map(x\
    \ => (x._2, x._1)).toList)\n        result.sortBy(row => row.reverse.sortBy(_._2))",
  "        val lst2 = lst.map(x => (x, x))\n        val lst3 = lst2.sortWith((x, y)\
    \ => x._1 < y._1)\n        val lst4 = lst3.sortWith((x, y) => x._2 < y._2)\n \
    \       val lst5 = lst4.map(x => (x._1, x._2))\n        lst5.filter(_._1 == x).map(_._2)",
  "        val lst2 = lst.map(x => (x, x)).sortBy(_._1).reverse\n        val lst3\
    \ = lst2.map(x => (x, x)).sortBy(_._2).reverse\n        lst3.map(x => (x._1, x._2)).filter(x\
    \ => x._1 == x).sortBy(_._1).reverse", "        val rows = lst.map(row => row.indexOf(x)).sortBy(row\
    \ => row).reverse\n        val columns = lst.map(row => row.indexOf(x)).sortBy(row\
    \ => -row).reverse\n        val coords = rows.zip(columns).map(row => (row._1,\
    \ row._2))\n        coords.sortBy(row => row._1).reverse", "        val lst2 =\
    \ lst.sortBy(x => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n        val\
    \ lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x => x._1)\n \
    \       val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x =>\
    \ x._2)\n        val lst8 = lst7.sortBy(x => x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._1)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._1)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._1)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._1)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._1)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._1)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._1)\n        val lst36 = lst35.sortBy(x => x._", "        val rows = lst.map(row\
    \ => row.indexOf(x)).sortWith(_ < _)\n        val columns = rows.map(row => lst.indexOf(row)).sortWith(_\
    \ < _)\n        val tuples = columns.zip(rows).map(c => (c._1, c._2))\n      \
    \  tuples.sortBy(_._1).reverse", "        val lst2 = lst.sortWith((x, y) => x.compare(y))\n\
    \        val lst3 = lst2.sortWith((x, y) => y.compare(x))\n        val lst4 =\
    \ lst3.sortWith((x, y) => x.compare(y))\n        val lst5 = lst4.sortWith((x,\
    \ y) => y.compare(x))\n        val lst6 = lst5.sortWith((x, y) => x.compare(y))\n\
    \        val lst7 = lst6.sortWith((x, y) => y.compare(x))\n        val lst8 =\
    \ lst7.sortWith((x, y) => x.compare(y))\n        val lst9 = lst8.sortWith((x,\
    \ y) => y.compare(x))\n        val lst10 = lst9.sortWith((x, y) => x.compare(y))\n\
    \        val lst11 = lst10.sortWith((x, y) => y.compare(x))\n        val lst12\
    \ = lst11.sortWith((x, y) => x.compare(y))\n        val lst13 = lst12.sortWith((x,\
    \ y) => y.compare(x))\n        val lst14 = lst13.sortWith((x, y) => x.compare(y))\n\
    \        val lst15 = lst14.sortWith((x, y) => y.compare(x))\n        val lst16\
    \ = lst15.sortWith((x, y) => x.compare(y))\n        val lst17 = lst16.sortWith((x,\
    \ y) => y.compare(x))\n        val lst18 = lst17.sortWith((x, y) => x.compare(y))\n\
    \        val lst19 = lst18.sortWith((x, y) => y.compare(x))\n        val lst20\
    \ = lst19.sortWith((x, y) => x.compare(y))\n        val lst21 = lst20.sortWith((x,\
    \ y) => y.compare(x))\n        val lst22 = lst21.sortWith((x, y) => x.compare(y))\n\
    \        val lst23 = lst22.sortWith((x, y) => y.compare(x))\n        val lst24\
    \ = lst23.sortWith((x, y) => x.compare(y))\n        val lst25 = lst24.sortWith((x,\
    \ y) => y.compare(x))\n        val lst26 = lst25.sortWith((x, y) => x.compare(y))\n\
    \        val lst27 = lst26.sortWith((x, y) => y.compare(x))\n        val lst28\
    \ = lst27.sortWith((x, y) => x.compare(y))\n        val lst29 = lst28.sortWith((x,\
    \ y) => y.compare(x))\n        val lst30 = lst29.sortWith((x, y) => x.compare(y))\n\
    \        val lst31 = lst30.sortWith((x, y) => y.compare(x))\n        val lst32\
    \ = lst31.sortWith((x, y) => x.compare(y))\n        val lst33 = lst32.sortWith((x,\
    \ y", "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1))\
    \ //descending order\n        val lst3 = lst2.sortBy(_(0)) //ascending order\n\
    \        val lst4 = lst3.sortBy(_(1)) //descending order\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending order\n        val lst6 = lst5.sortBy(_(1)) //descending order\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending order\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending order\n        val lst9 = lst8.sortBy(_(0)) //ascending order\n\
    \        val lst10 = lst9.sortBy(_(1)) //descending order\n        val lst11 =\
    \ lst10.sortBy(_(0)) //ascending order\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending order\n        val lst13 = lst12.sortBy(_(0)) //ascending order\n\
    \        val lst14 = lst13.sortBy(_(1)) //descending order\n        val lst15\
    \ = lst14.sortBy(_(0)) //ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending order\n        val lst17 = lst16.sortBy(_(0)) //ascending order\n\
    \        val lst18 = lst17.sortBy(_(1)) //descending order\n        val lst19\
    \ = lst18.sortBy(_(0)) //ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending order\n        val lst21 = lst20.sortBy(_(0)) //ascending order\n\
    \        val lst22 = lst21.sortBy(_(1)) //descending order\n        val lst23\
    \ = lst22.sortBy(_(0)) //ascending order\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending order\n        val lst25 = lst24.sortBy(_(0)) //ascending order\n\
    \        val lst26 = lst25.sortBy(_(1)) //descending order\n        val lst27\
    \ = lst26.sortBy(_(0)) //ascending order\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending order\n        val lst29 = lst28.sortBy(_(0)) //ascending order\n\
    \        val lst30 = lst29.sortBy(_(1)) //descending order\n        val lst31\
    \ = lst30.sortBy(_(0)) //ascending order\n        val ", "        val rows = lst.map(row\
    \ => row.zipWithIndex.toList)\n        val rows = rows.sortBy(row => row._1)\n\
    \        val rows = rows.sortBy(row => row._2, descending = true)\n        val\
    \ rows = rows.filter(row => row._1 == x)\n        val rows = rows.map(row => (row._2,\
    \ row._1))\n        rows", "        val lst1 = lst.sortBy(x => x._1)\n       \
    \ val lst2 = lst1.sortBy(x => x._2)\n        val lst3 = lst2.sortBy(x => x._2)\n\
    \        val lst4 = lst3.sortBy(x => x._1)\n        val lst5 = lst4.sortBy(x =>\
    \ x._2)\n        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x\
    \ => x._1)\n        val lst8 = lst7.sortBy(x => x._2)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._1)\n        val lst11 = lst10.sortBy(x\
    \ => x._2)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._1)\n        val lst14 = lst13.sortBy(x => x._2)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._1)\n        val lst17 = lst16.sortBy(x\
    \ => x._2)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._1)\n        val lst20 = lst19.sortBy(x => x._2)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._1)\n        val lst23 = lst22.sortBy(x\
    \ => x._2)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._1)\n        val lst26 = lst25.sortBy(x => x._2)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._1)\n        val lst29 = lst28.sortBy(x\
    \ => x._2)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._1)\n        val lst32 = lst31.sortBy(x => x._2)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._1)\n        val lst35 = lst34.sortBy(x\
    \ => x._2)", "        val rows = lst.map(row => row.filter(_ != x).toList)\n \
    \       val sortedRows = rows.sortWith((row1, row2) => row2.zip(row1).map(_._1).reverse\
    \ == row1.zip(row2).map(_._1).reverse)\n        val sortedRowsMap = sortedRows.map(row\
    \ => (row(0), row(1))).toMap\n        val sortedColumns = sortedRows.map(row =>\
    \ row.map(x => sortedRowsMap.getOrElse(x, 0)).max)\n        sortedRows.map(row\
    \ => (row(0), row(1))).sortWith((row1, row2) => row2.zip(row1).map(_._1).reverse\
    \ == row1.zip(row2).map(_._1).reverse).map(row => (row(0), row(1))).toList", " \
    \       val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) // in\
    \ descending order\n        val lst3 = lst2.sortBy(_(0)) // in ascending order\n\
    \        val lst4 = lst3.sortBy(_(1)) // in descending order\n        val lst5\
    \ = lst4.sortBy(_(0)) // in ascending order\n        val lst6 = lst5.sortBy(_(1))\
    \ // in descending order\n        val lst7 = lst6.sortBy(_(0)) // in ascending\
    \ order\n        val lst8 = lst7.sortBy(_(1)) // in descending order\n       \
    \ val lst9 = lst8.sortBy(_(0)) // in ascending order\n        val lst10 = lst9.sortBy(_(1))\
    \ // in descending order\n        val lst11 = lst10.sortBy(_(0)) // in ascending\
    \ order\n        val lst12 = lst11.sortBy(_(1)) // in descending order\n     \
    \   val lst13 = lst12.sortBy(_(0)) // in ascending order\n        val lst14 =\
    \ lst13.sortBy(_(1)) // in descending order\n        val lst15 = lst14.sortBy(_(0))\
    \ // in ascending order\n        val lst16 = lst15.sortBy(_(1)) // in descending\
    \ order\n        val lst17 = lst16.sortBy(_(0)) // in ascending order\n      \
    \  val lst18 = lst17.sortBy(_(1)) // in descending order\n        val lst19 =\
    \ lst18.sortBy(_(0)) // in ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ // in descending order\n        val lst21 = lst20.sortBy(_(0)) // in ascending\
    \ order\n        val lst22 = lst21.sortBy(_(1)) // in descending order\n     \
    \   val lst23 = lst22.sortBy(_(0)) // in ascending order\n        val lst24 =\
    \ lst23.sortBy(_(1)) // in descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ // in ascending order\n        val lst26 = lst25.sortBy(_(1)) // in descending\
    \ order\n        val lst27 = lst26.sortBy(_(0)) // in ascending order\n      \
    \  val lst28 = lst27.sortBy(_(1)) // in descending order\n        val lst29 =\
    \ lst28.sortBy(_(0)) // in ascending order\n        val lst30 = lst29.sort", " \
    \       val row: List[Long] = lst.map(x => x).filter(_ != x).sortWith(_ < _)\n\
    \        val col: List[Long] = lst.map(x => x).filter(_ == x).sortWith(_ > _)\n\
    \        val coords: List[Tuple2[Long, Long]] = row.zip(col).map(x => Tuple2(x._1,\
    \ x._2))\n        coords.sortWith(_._1 < _._1).map(x => Tuple2(x._1, x._2))",
  "        val rows = lst.map(row => row.zipWithIndex.toList)\n        val rows =\
    \ rows.sortBy(row => row._1)\n        val rows = rows.sortBy(row => row._2, Ordering.Int.reverse)\n\
    \        val rows = rows.map(row => Tuple2(row._2, row._1))\n        val rows\
    \ = rows.filter(row => row._1 == x)\n        val rows = rows.map(row => Tuple2(row._2,\
    \ row._1))\n        rows", "        val lst1 = lst.sortBy(_(0))\n        val lst2\
    \ = lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending order\n        val lst4 = lst3.sortBy(_(1)) //descending order\n\
    \        val lst5 = lst4.sortBy(_(0)) //ascending order\n        val lst6 = lst5.sortBy(_(1))\
    \ //descending order\n        val lst7 = lst6.sortBy(_(0)) //ascending order\n\
    \        val lst8 = lst7.sortBy(_(1)) //descending order\n        val lst9 = lst8.sortBy(_(0))\
    \ //ascending order\n        val lst10 = lst9.sortBy(_(1)) //descending order\n\
    \        val lst11 = lst10.sortBy(_(0)) //ascending order\n        val lst12 =\
    \ lst11.sortBy(_(1)) //descending order\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending order\n        val lst14 = lst13.sortBy(_(1)) //descending order\n\
    \        val lst15 = lst14.sortBy(_(0)) //ascending order\n        val lst16 =\
    \ lst15.sortBy(_(1)) //descending order\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending order\n        val lst18 = lst17.sortBy(_(1)) //descending order\n\
    \        val lst19 = lst18.sortBy(_(0)) //ascending order\n        val lst20 =\
    \ lst19.sortBy(_(1)) //descending order\n        val lst21 = lst20.sortBy(_(0))\
    \ //ascending order\n        val lst22 = lst21.sortBy(_(1)) //descending order\n\
    \        val lst23 = lst22.sortBy(_(0)) //ascending order\n        val lst24 =\
    \ lst23.sortBy(_(1)) //descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending order\n        val lst26 = lst25.sortBy(_(1)) //descending order\n\
    \        val lst27 = lst26.sortBy(_(0)) //ascending order\n        val lst28 =\
    \ lst27.sortBy(_(1)) //descending order\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending order\n        val lst30 = lst29.sortBy(_(1)) //descending order\n\
    \        val lst31 = lst30.sortBy(_(0)) //ascending order\n        val ", "  \
    \      val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) // in\
    \ descending order\n        val lst3 = lst2.filter(_._1 == x)\n        lst3.map(x\
    \ => (x._1, x._2))", "        val row: List[Tuple2[Long, Long]] = lst.map(row\
    \ => Tuple2(row(x), row(x + 1)))\n        val sorted = row.sortBy(row => row._1)\n\
    \        val reversed = sorted.reverse\n        reversed.map(row => Tuple2(row._1,\
    \ row._2))", "        val lst2 = lst.map(x => x.map(_ + 1))\n        val lst3\
    \ = lst2.map(x => x.map(y => y))\n        val lst4 = lst3.map(x => x.map(y =>\
    \ y))\n        val lst5 = lst4.map(x => x.map(y => y))\n        val lst6 = lst5.map(x\
    \ => x.map(y => y))\n        val lst7 = lst6.map(x => x.map(y => y))\n       \
    \ val lst8 = lst7.map(x => x.map(y => y))\n        val lst9 = lst8.map(x => x.map(y\
    \ => y))\n        val lst10 = lst9.map(x => x.map(y => y))\n        val lst11\
    \ = lst10.map(x => x.map(y => y))\n        val lst12 = lst11.map(x => x.map(y\
    \ => y))\n        val lst13 = lst12.map(x => x.map(y => y))\n        val lst14\
    \ = lst13.map(x => x.map(y => y))\n        val lst15 = lst14.map(x => x.map(y\
    \ => y))\n        val lst16 = lst15.map(x => x.map(y => y))\n        val lst17\
    \ = lst16.map(x => x.map(y => y))\n        val lst18 = lst17.map(x => x.map(y\
    \ => y))\n        val lst19 = lst18.map(x => x.map(y => y))\n        val lst20\
    \ = lst19.map(x => x.map(y => y))\n        val lst21 = lst20.map(x => x.map(y\
    \ => y))\n        val lst22 = lst21.map(x => x.map(y => y))\n        val lst23\
    \ = lst22.map(x => x.map(y => y))\n        val lst24 = lst23.map(x => x.map(y\
    \ => y))\n        val lst25 = lst24.map(x => x.map(y => y))\n        val lst26\
    \ = lst25.map(x => x.map(y => y))\n        val lst27 = lst26.map(x => x.map(y\
    \ => y))\n        val lst28 = lst27.map(x => x.map(y => y))\n        val lst29\
    \ = lst28.map(x => x.map(y => y))\n        val lst30 = lst29.map(x => x.map(y\
    \ => y))\n        val lst31 = lst30.map(x => x.map(y => y))\n        val lst32\
    \ = lst31.map(x => x.map(y => y))\n        val lst33 = lst32.map(x => x.map(y\
    \ => y))\n        val lst34 = lst33.map(x => x.", "        val lst1 = lst.sortBy(x\
    \ => x._1)\n        val lst2 = lst1.sortBy(x => x._2)\n        val lst3 = lst2.sortBy(x\
    \ => x._2)\n        val lst4 = lst3.sortBy(x => x._1)\n        val lst5 = lst4.sortBy(x\
    \ => x._1)\n        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x\
    \ => x._2)\n        val lst8 = lst7.sortBy(x => x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._1)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._2)\n        val lst12 = lst11.sortBy(x => x._1)\n        val lst13 = lst12.sortBy(x\
    \ => x._1)\n        val lst14 = lst13.sortBy(x => x._2)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._1)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._1)\n        val lst21 = lst20.sortBy(x\
    \ => x._1)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._2)\n        val lst24 = lst23.sortBy(x => x._1)\n        val lst25 = lst24.sortBy(x\
    \ => x._1)\n        val lst26 = lst25.sortBy(x => x._2)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._1)\n        val lst29 = lst28.sortBy(x\
    \ => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._1)\n        val lst33 = lst32.sortBy(x\
    \ => x._1)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._2)", "        val rows = lst.map(row => row.filter(_ != x).toList)\n \
    \       val rows = rows.sortBy(row => row.size)\n        val rows = rows.sortBy(row\
    \ => row.last)\n        val rows = rows.map(row => (row.head, row.last))\n   \
    \     return rows", "        val rows = lst.map(_.size).max\n        val cols\
    \ = lst(0).size\n        val result = new mutable.ArrayBuffer[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until rows) {\n            val row = lst(i)\n           \
    \ val rowResult = row.zipWithIndex.filter(_._1 == x).sortBy(_._2).reverse\n  \
    \          val colResult = rowResult.sortBy(_._2).reverse\n            result.add(Tuple2(rowResult(0),\
    \ colResult(0)))\n        }\n        result.sortBy(_._1).reverse", "        val\
    \ lst2 = lst.map(_.toList)\n        val lst3 = lst2.map(x => x :+ x)\n       \
    \ val lst4 = lst3.map(x => x :+ x.length)\n        val lst5 = lst4.map(x => x\
    \ :+ x.max)\n        val lst6 = lst5.map(x => x :+ x.min)\n        val lst7 =\
    \ lst6.map(x => x :+ x.sum)\n        val lst8 = lst7.map(x => x :+ x.product)\n\
    \        val lst9 = lst8.map(x => x :+ x.sum)\n        val lst10 = lst9.map(x\
    \ => x :+ x.product)\n        val lst11 = lst10.map(x => x :+ x.sum)\n       \
    \ val lst12 = lst11.map(x => x :+ x.product)\n        val lst13 = lst12.map(x\
    \ => x :+ x.sum)\n        val lst14 = lst13.map(x => x :+ x.product)\n       \
    \ val lst15 = lst14.map(x => x :+ x.sum)\n        val lst16 = lst15.map(x => x\
    \ :+ x.product)\n        val lst17 = lst16.map(x => x :+ x.sum)\n        val lst18\
    \ = lst17.map(x => x :+ x.product)\n        val lst19 = lst18.map(x => x :+ x.sum)\n\
    \        val lst20 = lst19.map(x => x :+ x.product)\n        val lst21 = lst20.map(x\
    \ => x :+ x.sum)\n        val lst22 = lst21.map(x => x :+ x.product)\n       \
    \ val lst23 = lst22.map(x => x :+ x.sum)\n        val lst24 = lst23.map(x => x\
    \ :+ x.product)\n        val lst25 = lst24.map(x => x :+ x.sum)\n        val lst26\
    \ = lst25.map(x => x :+ x.product)\n        val lst27 = lst26.map(x => x :+ x.sum)\n\
    \        val lst28 = lst27.map(x => x :+ x.product)\n        val lst29 = lst28.map(x\
    \ => x :+ x.sum)\n        val lst30 = lst29.map(x => x :+ x.product)\n       \
    \ val lst31 = lst30.map(x => x :+ x.sum)\n        val lst32 = lst31.map(x => x\
    \ :+ x.product)\n        val lst33 = lst", "        val lst1 = lst.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst2 = lst1.sortWith(_.compareTo(x) < 0)\n        val lst3\
    \ = lst2.sortWith(_.compareTo(x) < 0)\n        val lst4 = lst3.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst5 = lst4.sortWith(_.compareTo(x) < 0)\n        val lst6\
    \ = lst5.sortWith(_.compareTo(x) < 0)\n        val lst7 = lst6.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst8 = lst7.sortWith(_.compareTo(x) < 0)\n        val lst9\
    \ = lst8.sortWith(_.compareTo(x) < 0)\n        val lst10 = lst9.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst11 = lst10.sortWith(_.compareTo(x) < 0)\n        val lst12\
    \ = lst11.sortWith(_.compareTo(x) < 0)\n        val lst13 = lst12.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst14 = lst13.sortWith(_.compareTo(x) < 0)\n        val lst15\
    \ = lst14.sortWith(_.compareTo(x) < 0)\n        val lst16 = lst15.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst17 = lst16.sortWith(_.compareTo(x) < 0)\n        val lst18\
    \ = lst17.sortWith(_.compareTo(x) < 0)\n        val lst19 = lst18.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst20 = lst19.sortWith(_.compareTo(x) < 0)\n        val lst21\
    \ = lst20.sortWith(_.compareTo(x) < 0)\n        val lst22 = lst21.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst23 = lst22.sortWith(_.compareTo(x) < 0)\n        val lst24\
    \ = lst23.sortWith(_.compareTo(x) < 0)\n        val lst25 = lst24.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst26 = lst25.sortWith(_.compareTo(x) < 0)\n        val lst27\
    \ = lst26.sortWith(_.compareTo(x) < 0)\n        val lst28 = lst27.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst29 = lst28.sortWith(_.compareTo(x) < 0)\n        val lst30\
    \ = lst29.sortWith(_.compareTo(x) < 0)\n        val lst31 = lst30.sortWith(_.compareTo(x",
  "        val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x => x._2)\n\
    \        val lst3 = lst2.sortBy(x => -x._2)\n        val lst4 = lst3.sortBy(x\
    \ => -x._1)\n        lst4.map(x => (x._1, x._2)).filter(x => x._1 == x).map(x\
    \ => (x._1, x._2))", "        val lst1 = lst.sortBy(_(0))\n        val lst2 =\
    \ lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.filter(_._1 ==\
    \ x)\n        lst3.map(_._2)", "        val lst2 = lst.map(x => x.filter(_ !=\
    \ x))\n        val lst3 = lst2.map(x => x.sortBy(_._1))\n        val lst4 = lst3.map(x\
    \ => x.sortBy(_._2))\n        val lst5 = lst4.map(x => x.filter(_._1 == x))\n\
    \        val lst6 = lst5.map(x => x.filter(_._2 == x))\n        lst6.map(x =>\
    \ (x._1, x._2))", "        val lst2 = lst.sortBy(row => row(0))\n        val lst3\
    \ = lst2.sortBy(row => row(1)).reverse\n        val lst4 = lst3.sortBy(row =>\
    \ row(0)).reverse\n        val lst5 = lst4.sortBy(row => row(1)).reverse\n   \
    \     val lst6 = lst5.sortBy(row => row(0)).reverse\n        val lst7 = lst6.sortBy(row\
    \ => row(1)).reverse\n        val lst8 = lst7.sortBy(row => row(0)).reverse\n\
    \        val lst9 = lst8.sortBy(row => row(1)).reverse\n        val lst10 = lst9.sortBy(row\
    \ => row(0)).reverse\n        val lst11 = lst10.sortBy(row => row(1)).reverse\n\
    \        val lst12 = lst11.sortBy(row => row(0)).reverse\n        val lst13 =\
    \ lst12.sortBy(row => row(1)).reverse\n        val lst14 = lst13.sortBy(row =>\
    \ row(0)).reverse\n        val lst15 = lst14.sortBy(row => row(1)).reverse\n \
    \       val lst16 = lst15.sortBy(row => row(0)).reverse\n        val lst17 = lst16.sortBy(row\
    \ => row(1)).reverse\n        val lst18 = lst17.sortBy(row => row(0)).reverse\n\
    \        val lst19 = lst18.sortBy(row => row(1)).reverse\n        val lst20 =\
    \ lst19.sortBy(row => row(0)).reverse\n        val lst21 = lst20.sortBy(row =>\
    \ row(1)).reverse\n        val lst22 = lst21.sortBy(row => row(0)).reverse\n \
    \       val lst23 = lst22.sortBy(row => row(1)).reverse\n        val lst24 = lst23.sortBy(row\
    \ => row(0)).reverse\n        val lst25 = lst24.sortBy(row => row(1)).reverse\n\
    \        val lst26 = lst25.sortBy(row => row(0)).reverse\n        val lst27 =\
    \ lst26.sortBy(row => row(1)).reverse\n        val lst28 = lst27.sortBy(row =>\
    \ row(0)).reverse\n        val lst29 = lst28.sortBy(row => row(1)).reverse\n \
    \       val lst30 = lst29.sortBy(row => row(0)).reverse\n        val lst31 = lst30.sortBy(row\
    \ => row(1)).reverse\n        val lst32 = lst31.sortBy(row => row(0)).reverse\n\
    \        val lst33 = lst32.sortBy(row => row(1)).reverse\n        val lst34 =\
    \ lst33.sortBy(row => row(0)).reverse\n        val lst35 = lst34.sortBy(row =>\
    \ row(1)).reverse\n        val lst36 = lst35.sortBy(row => row(0)).reverse", " \
    \       val row = new Array[Long](lst.size)\n        val col = new Array[Long](lst.size)\n\
    \        val result = new Array[Tuple2[Long, Long]](lst.size)\n        val rows\
    \ = new Array[Long](lst.size)\n        val cols = new Array[Long](lst.size)\n\
    \        val rowIndex = new Array[Int](lst.size)\n        val colIndex = new Array[Int](lst.size)\n\
    \        val rowIndexMap = new mutable.HashMap[Long, Int]()\n        val colIndexMap\
    \ = new mutable.HashMap[Long, Int]()\n        val rowIndexMapSize = new mutable.HashMap[Long,\
    \ Int]()\n        val colIndexMapSize = new mutable.HashMap[Long, Int]()\n   \
    \     var i = 0\n        var j = 0\n        var k = 0\n        var l = 0\n   \
    \     var m = 0\n        var n = 0\n        var o = 0\n        var p = 0\n   \
    \     var q = 0\n        var r = 0\n        var s = 0\n        var t = 0\n   \
    \     var u = 0\n        var v = 0\n        var w = 0\n        var x = 0\n   \
    \     var y = 0\n        var z = 0\n        var count = 0\n        var j = 0\n\
    \        var k = 0\n        var l = 0\n        var m = 0\n        var n = 0\n\
    \        var o = 0\n        var p = 0\n        var q = 0\n        var r = 0\n\
    \        var s = 0\n        var t = 0\n        var u = 0\n        var v = 0\n\
    \        var w = 0\n        var x = 0\n        var y = 0\n        var z = 0\n\
    \        var count = 0\n        var j = 0\n        var k = 0\n        var l =\
    \ 0\n        var m = 0\n        var n = 0\n        var o = 0\n        var p =\
    \ 0\n        var q = 0\n        var r = 0\n        var s = 0\n        var t =\
    \ 0\n        var u = 0\n        var v = 0\n        var w = 0\n        var x =\
    \ 0\n        var y = 0\n        var z = 0\n        var count = 0\n        var\
    \ j = 0\n        var k = 0\n        var l = 0\n        var m = 0\n        var\
    \ n = 0\n        var o = 0\n        var p = 0\n        var q = 0\n        var\
    \ r = 0\n        var s = 0\n        var t = 0\n        var u = 0\n        var\
    \ v = 0\n        var w = 0\n        var x = 0\n        var y = 0\n        var\
    \ z = 0\n        var count = 0\n        var j = 0\n        var k = 0\n       \
    \ var l = 0\n        var m = 0\n        var n = 0\n        var o = 0\n       \
    \ var p = 0\n        var q = 0\n        var r = 0\n        var s = 0\n       \
    \ var t = 0\n        var u = 0\n        var v = 0\n        var w = 0\n       \
    \ var x = 0\n        var y = 0\n        var z = 0\n        var count = 0\n   \
    \     var j = 0", "        val rowList = lst.filter(_ contains x)\n        val\
    \ rowTuples = rowList.map(x => (x._1, x._2))\n        val sortedRowTuples = rowTuples.sortBy(x\
    \ => x._1)\n        val sortedRowList = sortedRowTuples.map(x => (x._2, x._1))\n\
    \        val sortedRowTuplesReversed = sortedRowTuples.sortBy(x => x._2).reverse\n\
    \        val sortedRowListReversed = sortedRowTuplesReversed.map(x => (x._2, x._1))\n\
    \        val sortedRowTuplesReversedMap = sortedRowTuplesReversed.toMap\n    \
    \    val sortedRowListReversedMap = sortedRowListReversed.toMap\n        val sortedRowTuplesReversedMapList\
    \ = sortedRowTuplesReversedMap.toList\n        val sortedRowListReversedMapList\
    \ = sortedRowListReversedMap.toList\n        val sortedRowTuplesReversedMapListMap\
    \ = sortedRowTuplesReversedMapList.toMap\n        val sortedRowListReversedMapListMap\
    \ = sortedRowListReversedMapList.toMap\n        val sortedRowTuplesReversedMapListMapList\
    \ = sortedRowTuplesReversedMapListMap.toList\n        val sortedRowListReversedMapListMapList\
    \ = sortedRowListReversedMapListMap.toList\n        val sortedRowTuplesReversedMapListMapListMap\
    \ = sortedRowTuplesReversedMapListMapList.toMap\n        val sortedRowListReversedMapListMapListMap\
    \ = sortedRowListReversedMapListMapList.toMap\n        val sortedRowTuplesReversedMapListMapListMapList\
    \ = sortedRowTuplesReversedMapListMapList.toList\n        val sortedRowListReversedMapListMapListMapList\
    \ = sortedRowListReversedMapListMapList.toList\n        val sortedRowTuplesReversedMapListMapListMapListMap\
    \ = sortedRowTuplesReversedMapListMapListMapList.toMap\n        val sortedRowListReversedMapListMapListMapListMapList\
    \ = sortedRowListReversedMapListMapListMapList.toList\n        val sortedRowTuplesReversedMapListMapListMapListMapListMap\
    \ = sortedRowTuplesReversedMapListMapListMapListMapList.toMap\n        val sortedRowListReversedMapListMapListMapListMapListMapList\
    \ = sortedRowListReversedMapListMapListMapListMapList.toList\n        val sortedRowTuplesReversedMapListMapListMapListMap",
  "        val lst2 = lst.sortBy(_(0))\n        val lst3 = lst2.sortBy(_(1)) // in\
    \ descending order\n        val lst4 = lst3.sortBy(_._2) // in ascending order\n\
    \        val lst5 = lst4.filter(_._1 == x)\n        lst5.map(_._2)", "       \
    \ val rows = lst.map(row => row.map(x => Tuple2(x, row.length)).toList)\n    \
    \    val rows = rows.sortBy(row => row._1)\n        val rows = rows.sortBy(row\
    \ => row._2, descending = true)\n        val rows = rows.map(row => Tuple2(row._1,\
    \ row._2))\n        rows", "        val lst2 = lst.sortWith((x, y) => x.compare(y))\n\
    \        val lst3 = lst2.sortWith((x, y) => y.compare(x))\n        val lst4 =\
    \ lst3.sortWith((x, y) => x.compare(y))\n        val lst5 = lst4.sortWith((x,\
    \ y) => y.compare(x))\n        val lst6 = lst5.sortWith((x, y) => x.compare(y))\n\
    \        val lst7 = lst6.sortWith((x, y) => y.compare(x))\n        val lst8 =\
    \ lst7.sortWith((x, y) => x.compare(y))\n        val lst9 = lst8.sortWith((x,\
    \ y) => y.compare(x))\n        val lst10 = lst9.sortWith((x, y) => x.compare(y))\n\
    \        val lst11 = lst10.sortWith((x, y) => y.compare(x))\n        val lst12\
    \ = lst11.sortWith((x, y) => x.compare(y))\n        val lst13 = lst12.sortWith((x,\
    \ y) => y.compare(x))\n        val lst14 = lst13.sortWith((x, y) => x.compare(y))\n\
    \        val lst15 = lst14.sortWith((x, y) => y.compare(x))\n        val lst16\
    \ = lst15.sortWith((x, y) => x.compare(y))\n        val lst17 = lst16.sortWith((x,\
    \ y) => y.compare(x))\n        val lst18 = lst17.sortWith((x, y) => x.compare(y))\n\
    \        val lst19 = lst18.sortWith((x, y) => y.compare(x))\n        val lst20\
    \ = lst19.sortWith((x, y) => x.compare(y))\n        val lst21 = lst20.sortWith((x,\
    \ y) => y.compare(x))\n        val lst22 = lst21.sortWith((x, y) => x.compare(y))\n\
    \        val lst23 = lst22.sortWith((x, y) => y.compare(x))\n        val lst24\
    \ = lst23.sortWith((x, y) => x.compare(y))\n        val lst25 = lst24.sortWith((x,\
    \ y) => y.compare(x))\n        val lst26 = lst25.sortWith((x, y) => x.compare(y))\n\
    \        val lst27 = lst26.sortWith((x, y) => y.compare(x))\n        val lst28\
    \ = lst27.sortWith((x, y) => x.compare(y))\n        val lst29 = lst28.sortWith((x,\
    \ y) => y.compare(x))\n        val lst30 = lst29.sortWith((x, y) => x.compare(y))\n\
    \        val lst31 = lst30.sortWith((x, y) => y.compare(x))\n        val lst32\
    \ = lst31.sortWith((x, y) => x.compare(y))\n        val lst33 = lst32.sortWith((x,\
    \ y", "        val rowList = lst.map(row => row.filter(_ != x))\n        val rowTuples\
    \ = rowList.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n        val rowTuplesSorted\
    \ = rowTuples.map(row => row.sortBy(_._2).reverse)\n        rowTuplesSorted.map(row\
    \ => (row._1, row._2))", "        val lst2 = lst.sortWith(_.compare(x, _) < 0)\n\
    \        val lst3 = lst2.sortWith(_.compare(x, _) > 0)\n        val lst4 = lst3.sortWith(_.compare(x,\
    \ _) == 0)\n        lst4.map(x => (x._1, x._2))", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)).reverse\n        val lst3 = lst2.sortBy(_(0)).reverse\n\
    \        val lst4 = lst3.sortBy(_(1))\n        val lst5 = lst4.sortBy(_(0))\n\
    \        val lst6 = lst5.sortBy(_(1))\n        val lst7 = lst6.sortBy(_(0))\n\
    \        val lst8 = lst7.sortBy(_(1))\n        val lst9 = lst8.sortBy(_(0))\n\
    \        val lst10 = lst9.sortBy(_(1))\n        val lst11 = lst10.sortBy(_(0))\n\
    \        val lst12 = lst11.sortBy(_(1))\n        val lst13 = lst12.sortBy(_(0))\n\
    \        val lst14 = lst13.sortBy(_(1))\n        val lst15 = lst14.sortBy(_(0))\n\
    \        val lst16 = lst15.sortBy(_(1))\n        val lst17 = lst16.sortBy(_(0))\n\
    \        val lst18 = lst17.sortBy(_(1))\n        val lst19 = lst18.sortBy(_(0))\n\
    \        val lst20 = lst19.sortBy(_(1))\n        val lst21 = lst20.sortBy(_(0))\n\
    \        val lst22 = lst21.sortBy(_(1))\n        val lst23 = lst22.sortBy(_(0))\n\
    \        val lst24 = lst23.sortBy(_(1))\n        val lst25 = lst24.sortBy(_(0))\n\
    \        val lst26 = lst25.sortBy(_(1))\n        val lst27 = lst26.sortBy(_(0))\n\
    \        val lst28 = lst27.sortBy(_(1))\n        val lst29 = lst28.sortBy(_(0))\n\
    \        val lst30 = lst29.sortBy(_(1))\n        val lst31 = lst30.sortBy(_(0))\n\
    \        val lst32 = lst31.sortBy(_(1))\n        val lst33 = lst32.sortBy(_(0))\n\
    \        val lst34 = lst33.sortBy(_(1))\n        val lst35 = lst34.sortBy(_(0))\n\
    \        val lst36 = lst35.sortBy(_(1))\n        val lst37 = lst36.sortBy(_(0))\n\
    \        val lst38 = lst37.sortBy(_(1))\n        val lst39 = lst38.sortBy(_(0))\n\
    \        val lst40 = lst39.sortBy(_(1))\n        val lst41 = lst40.sortBy(_(0))\n\
    \        val lst42 = lst41.sortBy(_(1))\n        val lst43 = lst42.sortBy(_(0))\n\
    \        val lst", "        val rows = lst.map(_.length)\n        val cols = lst(0).length\n\
    \        val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n        for\
    \ (i <- 0 until rows) {\n            val row = lst(i)\n            val col = 0\n\
    \            while (col < cols && row != 0) {\n                if (row(0) == x)\
    \ {\n                    result.append((i, col))\n                }\n        \
    \        col += 1\n            }\n        }\n        result.sortBy(_._1).reverse",
  "        val lst2 = lst.sortBy(row => row(0))\n        val lst3 = lst2.sortBy(row\
    \ => row(1)).reverse\n        val lst4 = lst3.sortBy(row => row(0)).reverse\n\
    \        val lst5 = lst4.sortBy(row => row(1)).reverse\n        val lst6 = lst5.sortBy(row\
    \ => row(0)).reverse\n        val lst7 = lst6.sortBy(row => row(1)).reverse\n\
    \        val lst8 = lst7.sortBy(row => row(0)).reverse\n        val lst9 = lst8.sortBy(row\
    \ => row(1)).reverse\n        val lst10 = lst9.sortBy(row => row(0)).reverse\n\
    \        val lst11 = lst10.sortBy(row => row(1)).reverse\n        val lst12 =\
    \ lst11.sortBy(row => row(0)).reverse\n        val lst13 = lst12.sortBy(row =>\
    \ row(1)).reverse\n        val lst14 = lst13.sortBy(row => row(0)).reverse\n \
    \       val lst15 = lst14.sortBy(row => row(1)).reverse\n        val lst16 = lst15.sortBy(row\
    \ => row(0)).reverse\n        val lst17 = lst16.sortBy(row => row(1)).reverse\n\
    \        val lst18 = lst17.sortBy(row => row(0)).reverse\n        val lst19 =\
    \ lst18.sortBy(row => row(1)).reverse\n        val lst20 = lst19.sortBy(row =>\
    \ row(0)).reverse\n        val lst21 = lst20.sortBy(row => row(1)).reverse\n \
    \       val lst22 = lst21.sortBy(row => row(0)).reverse\n        val lst23 = lst22.sortBy(row\
    \ => row(1)).reverse\n        val lst24 = lst23.sortBy(row => row(0)).reverse\n\
    \        val lst25 = lst24.sortBy(row => row(1)).reverse\n        val lst26 =\
    \ lst25.sortBy(row => row(0)).reverse\n        val lst27 = lst26.sortBy(row =>\
    \ row(1)).reverse\n        val lst28 = lst27.sortBy(row => row(0)).reverse\n \
    \       val lst29 = lst28.sortBy(row => row(1)).reverse\n        val lst30 = lst29.sortBy(row\
    \ => row(0)).reverse\n        val lst31 = lst30.sortBy(row => row(1)).reverse\n\
    \        val lst32 = lst31.sortBy(row => row(0)).reverse\n        val lst33 =\
    \ lst32.sortBy(row => row(1)).reverse\n        val lst34 = lst33.sortBy(row =>\
    \ row(0)).reverse\n        val lst35 = lst34.sortBy(row => row(1)).reverse\n \
    \       val lst36 = lst35.sortBy(row => row(0)).reverse", "        val rows =\
    \ lst.map(row => row.indexOf(x)).sortBy(_).reverse\n        val cols = rows.map(row\
    \ => row.indexOf(x)).sortBy(-_).reverse\n        val tuples = rows.zip(cols).map(row\
    \ => (row._1, row._2))\n        tuples.sortBy(_._1).reverse", "        val rows\
    \ = lst.map(row => row.indexOf(x)).sortBy(_)\n        val cols = rows.map(row\
    \ => row.indexOf(x)).sortBy(-_)\n        val coords = rows.zip(cols).sortBy(_._1).reverse\n\
    \        coords.map(coord => (coord._1, coord._2))", "        val row = new mutable.HashMap[Long,\
    \ Long]()\n        val result = new mutable.ArrayList[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.size) {\n            val row = lst(i)\n       \
    \     val col = new mutable.HashMap[Long, Long]()\n            val colCount =\
    \ new mutable.HashMap[Long, Long]()\n            for (j <- 0 until row.size) {\n\
    \                val col = row(j)\n                val colCount = colCount(j)\n\
    \                val count = colCount(x)\n                if (count > 0) {\n \
    \                   val key = j\n                    val value = count - 1\n \
    \                   col.put(key, value)\n                    colCount(key) = count\n\
    \                }\n            }\n            row.foreach { case (k, v) => col.put(k,\
    \ v) }\n            row.foreach { case (k, v) => row.put(k, v) }\n           \
    \ row.foreach { case (k, v) => row.put(k, v) }\n            row.foreach { case\
    \ (k, v) => row.put(k, v) }\n            row.foreach { case (k, v) => row.put(k,\
    \ v) }\n            row.foreach { case (k, v) => row.put(k, v) }\n           \
    \ row.foreach { case (k, v) => row.put(k, v) }\n            row.foreach { case\
    \ (k, v) => row.put(k, v) }\n            row.foreach { case (k, v) => row.put(k,\
    \ v) }\n            row.foreach { case (k, v) => row.put(k, v) }\n           \
    \ row.foreach { case (k, v) => row.put(k, v) }\n            row.foreach { case\
    \ (k, v) => row.put(k, v) }\n            row.foreach { case (k, v) => row.put(k,\
    \ v) }\n            row.foreach { case (k, v) => row.put(k, v) }\n           \
    \ row.foreach { case (k, v) => row.put(k, v) }\n            row.foreach { case\
    \ (k, v) => row.put(k, v) }\n            row.foreach { case (k, v) => row.put(k,\
    \ v) }\n            row.foreach { case (k, v) => row.put(k, v) }\n           \
    \ row.foreach { case (k, v) => row.put(k, v) }\n            row.foreach { case\
    \ (k, v) => row.put(k, v) }\n            row.foreach { case (k, v) => row.put(k,\
    \ v) }\n            row.foreach { case (k, v) => row.put(k, v) }\n           \
    \ row.foreach { case (k, v) => row.put(k, v) }\n            row.foreach { case\
    \ (k, v) => row.put(k, v) }\n            row.foreach { case (k, v) => row.put(k,\
    \ v) }\n", "        val rows = lst.map(_.length)\n        val cols = lst.map(_.head.length)\n\
    \        val result = new mutable.ArrayBuffer[Tuple2[Long, Long]]()\n        for\
    \ (row <- 0 until rows) {\n            for (col <- 0 until cols) {\n         \
    \       if (lst(row)(col) == x) {\n                    result.append((row, col))\n\
    \                }\n            }\n        }\n        result.sortBy(_._1)\n  \
    \      result.sortBy(_._2, descending = true)\n        result", "        val lst2\
    \ = lst.sortBy(row => row(0))\n        val lst3 = lst2.sortBy(row => row.length)\n\
    \        val lst4 = lst3.sortBy(row => row.length).reverse\n        val lst5 =\
    \ lst4.sortBy(row => row(0)).reverse\n        val lst6 = lst5.sortBy(row => row(0)).reverse\n\
    \        val lst7 = lst6.sortBy(row => row(0)).reverse\n        val lst8 = lst7.sortBy(row\
    \ => row(0)).reverse\n        val lst9 = lst8.sortBy(row => row(0)).reverse\n\
    \        val lst10 = lst9.sortBy(row => row(0)).reverse\n        val lst11 = lst10.sortBy(row\
    \ => row(0)).reverse\n        val lst12 = lst11.sortBy(row => row(0)).reverse\n\
    \        val lst13 = lst12.sortBy(row => row(0)).reverse\n        val lst14 =\
    \ lst13.sortBy(row => row(0)).reverse\n        val lst15 = lst14.sortBy(row =>\
    \ row(0)).reverse\n        val lst16 = lst15.sortBy(row => row(0)).reverse\n \
    \       val lst17 = lst16.sortBy(row => row(0)).reverse\n        val lst18 = lst17.sortBy(row\
    \ => row(0)).reverse\n        val lst19 = lst18.sortBy(row => row(0)).reverse\n\
    \        val lst20 = lst19.sortBy(row => row(0)).reverse\n        val lst21 =\
    \ lst20.sortBy(row => row(0)).reverse\n        val lst22 = lst21.sortBy(row =>\
    \ row(0)).reverse\n        val lst23 = lst22.sortBy(row => row(0)).reverse\n \
    \       val lst24 = lst23.sortBy(row => row(0)).reverse\n        val lst25 = lst24.sortBy(row\
    \ => row(0)).reverse\n        val lst26 = lst25.sortBy(row => row(0)).reverse\n\
    \        val lst27 = lst26.sortBy(row => row(0)).reverse\n        val lst28 =\
    \ lst27.sortBy(row => row(0)).reverse\n        val lst29 = lst28.sortBy(row =>\
    \ row(0)).reverse\n        val lst30 = lst29.sortBy(row => row(0)).reverse\n \
    \       val lst31 = lst30.sortBy(row => row(0)).reverse\n        val lst32 = lst31.sortBy(row\
    \ => row(0)).reverse\n        val lst33 = lst32.sortBy(row => row(0)).reverse\n\
    \        val lst34 = lst33.sortBy(row => row(0)).reverse\n        val lst35 =\
    \ lst34.sortBy(row => row(0)).reverse\n        val lst36 = lst35.sortBy(row =>\
    \ row(0))", "        val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x\
    \ => x._2)\n        val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x\
    \ => x._1)\n        val lst5 = lst4.sortBy(x => x._2)\n        val lst6 = lst5.sortBy(x\
    \ => x._1)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._2)\n        val lst9 = lst8.sortBy(x => x._1)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => x._1)\n        val lst13 = lst12.sortBy(x => x._2)\n        val lst14 = lst13.sortBy(x\
    \ => x._2)\n        val lst15 = lst14.sortBy(x => x._1)\n        val lst16 = lst15.sortBy(x\
    \ => x._2)\n        val lst17 = lst16.sortBy(x => x._2)\n        val lst18 = lst17.sortBy(x\
    \ => x._1)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._2)\n        val lst21 = lst20.sortBy(x => x._1)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._1)\n        val lst25 = lst24.sortBy(x => x._2)\n        val lst26 = lst25.sortBy(x\
    \ => x._2)\n        val lst27 = lst26.sortBy(x => x._1)\n        val lst28 = lst27.sortBy(x\
    \ => x._2)\n        val lst29 = lst28.sortBy(x => x._2)\n        val lst30 = lst29.sortBy(x\
    \ => x._1)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._2)\n        val lst33 = lst32.sortBy(x => x._1)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._2)", "        val lst2 =\
    \ lst.sortBy(_(0))\n        val lst3 = lst2.sortBy(_(1)) //descending\n      \
    \  val lst4 = lst3.sortBy(_(0)) //ascending\n        val lst5 = lst4.map(x =>\
    \ (x, x)) //ascending\n        val lst6 = lst5.map(x => (x, x)) //descending\n\
    \        lst6.map(x => (x, x)) //ascending", "        val rows = lst.map(_.length)\n\
    \        val cols = lst(0).length\n        val result = new mutable.ListBuffer[Tuple2[Long,\
    \ Long]]()\n        val row = new mutable.ListBuffer[Long]()\n        val col\
    \ = new mutable.ListBuffer[Long]()\n        for(i <- 0 until rows){\n        \
    \    for(j <- 0 until cols){\n                if(lst(i)(j) == x){\n          \
    \          row.append(i)\n                    col.append(j)\n                \
    \    result.append((row.toList, col.toList))\n                }\n            }\n\
    \        }\n        result.sortBy(_._1)\n        result.sortBy(_._2)\n       \
    \ result.reverse", "        val lst2 = lst.sortBy(x => x).reverse\n        val\
    \ lst3 = lst2.sortBy(x => x.indexOf(x)).reverse\n        val lst4 = lst3.map(x\
    \ => (x._1, x._2))\n        lst4", "        val lst2 = lst.sortWith((x, y) =>\
    \ x.compare(y))\n        val lst3 = lst2.sortWith((x, y) => y.compare(x))\n  \
    \      val lst4 = lst3.sortWith((x, y) => x.compare(y))\n        val lst5 = lst4.sortWith((x,\
    \ y) => y.compare(x))\n        val lst6 = lst5.sortWith((x, y) => x.compare(y))\n\
    \        val lst7 = lst6.sortWith((x, y) => y.compare(x))\n        val lst8 =\
    \ lst7.sortWith((x, y) => x.compare(y))\n        val lst9 = lst8.sortWith((x,\
    \ y) => y.compare(x))\n        val lst10 = lst9.sortWith((x, y) => x.compare(y))\n\
    \        val lst11 = lst10.sortWith((x, y) => y.compare(x))\n        val lst12\
    \ = lst11.sortWith((x, y) => x.compare(y))\n        val lst13 = lst12.sortWith((x,\
    \ y) => y.compare(x))\n        val lst14 = lst13.sortWith((x, y) => x.compare(y))\n\
    \        val lst15 = lst14.sortWith((x, y) => y.compare(x))\n        val lst16\
    \ = lst15.sortWith((x, y) => x.compare(y))\n        val lst17 = lst16.sortWith((x,\
    \ y) => y.compare(x))\n        val lst18 = lst17.sortWith((x, y) => x.compare(y))\n\
    \        val lst19 = lst18.sortWith((x, y) => y.compare(x))\n        val lst20\
    \ = lst19.sortWith((x, y) => x.compare(y))\n        val lst21 = lst20.sortWith((x,\
    \ y) => y.compare(x))\n        val lst22 = lst21.sortWith((x, y) => x.compare(y))\n\
    \        val lst23 = lst22.sortWith((x, y) => y.compare(x))\n        val lst24\
    \ = lst23.sortWith((x, y) => x.compare(y))\n        val lst25 = lst24.sortWith((x,\
    \ y) => y.compare(x))\n        val lst26 = lst25.sortWith((x, y) => x.compare(y))\n\
    \        val lst27 = lst26.sortWith((x, y) => y.compare(x))\n        val lst28\
    \ = lst27.sortWith((x, y) => x.compare(y))\n        val lst29 = lst28.sortWith((x,\
    \ y) => y.compare(x))\n        val lst30 = lst29.sortWith((x, y) => x.compare(y))\n\
    \        val lst31 = lst30.sortWith((x, y) => y.compare(x))\n        val lst32\
    \ = lst31.sortWith((x, y) => x.compare(y))\n        val lst33 = lst32.sortWith((x,\
    \ y", "        val rows = lst.map(_.size).max\n        val cols = lst.map(_.head).max\n\
    \        val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n        var\
    \ i = 0\n        while (i < rows) {\n            var j = 0\n            while\
    \ (j < cols) {\n                if (lst(i)(j) == x) {\n                    result.add(Tuple2(i,\
    \ j))\n                }\n                j += 1\n            }\n            i\
    \ += 1\n        }\n        result.sortBy(_._1)\n        result.sortBy(_._2, descending\
    \ = true)\n        return result.toList", "        val lst2 = lst.sortBy(x =>\
    \ x)\n        val lst3 = lst2.sortBy(x => -x)\n        val lst4 = lst3.map(x =>\
    \ (x._1, x._2))\n        lst4.filter(x => x._1 == x).map(x => (x._1, x._2))",
  "        val lst2 = lst.sortBy(x => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n\
    \        val lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x =>\
    \ x._1)\n        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x\
    \ => x._2)\n        val lst8 = lst7.sortBy(x => x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._1)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._1)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._1)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._1)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._1)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._1)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._1)\n        val lst36 = lst35.sortBy(x => x._", "        val rows = lst.map(_.length).max\n\
    \        val cols = lst.map(_.head).max\n        val result = new mutable.ListBuffer[Tuple2[Long,\
    \ Long]]()\n        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n        val cols = lst.map(_.head).max\n\
    \        val rows = lst.map(_.length).max\n", "        val lst1 = lst.sortBy(_.toInt)\n\
    \        val lst2 = lst1.sortBy(-_.toInt)\n        val lst3 = lst2.sortBy(-_.toInt)\n\
    \        val lst4 = lst3.sortBy(-_.toInt)\n        val lst5 = lst4.sortBy(-_.toInt)\n\
    \        val lst6 = lst5.sortBy(-_.toInt)\n        val lst7 = lst6.sortBy(-_.toInt)\n\
    \        val lst8 = lst7.sortBy(-_.toInt)\n        val lst9 = lst8.sortBy(-_.toInt)\n\
    \        val lst10 = lst9.sortBy(-_.toInt)\n        val lst11 = lst10.sortBy(-_.toInt)\n\
    \        val lst12 = lst11.sortBy(-_.toInt)\n        val lst13 = lst12.sortBy(-_.toInt)\n\
    \        val lst14 = lst13.sortBy(-_.toInt)\n        val lst15 = lst14.sortBy(-_.toInt)\n\
    \        val lst16 = lst15.sortBy(-_.toInt)\n        val lst17 = lst16.sortBy(-_.toInt)\n\
    \        val lst18 = lst17.sortBy(-_.toInt)\n        val lst19 = lst18.sortBy(-_.toInt)\n\
    \        val lst20 = lst19.sortBy(-_.toInt)\n        val lst21 = lst20.sortBy(-_.toInt)\n\
    \        val lst22 = lst21.sortBy(-_.toInt)\n        val lst23 = lst22.sortBy(-_.toInt)\n\
    \        val lst24 = lst23.sortBy(-_.toInt)\n        val lst25 = lst24.sortBy(-_.toInt)\n\
    \        val lst26 = lst25.sortBy(-_.toInt)\n        val lst27 = lst26.sortBy(-_.toInt)\n\
    \        val lst28 = lst27.sortBy(-_.toInt)\n        val lst29 = lst28.sortBy(-_.toInt)\n\
    \        val lst30 = lst29.sortBy(-_.toInt)\n        val lst31 = lst30.sortBy(-_.toInt)\n\
    \        val lst32 = lst31.sortBy(-_.toInt)\n        val lst33 = lst32.sortBy(-_.toInt)\n\
    \        val lst34 = lst33.sortBy(-_.toInt)\n        val lst35 = lst34.sortBy(-_.toInt)\n",
  "        val rows = lst.map(row => row.filter(_ != x))\n        val cols = rows.map(_.length)\n\
    \        val tuples = rows.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuples2 = tuples.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple3 = tuples2.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple4 = tuple3.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple5 = tuple4.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple6 = tuple5.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple7 = tuple6.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple8 = tuple7.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple9 = tuple8.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple10 = tuple9.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple11 = tuple10.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple12 = tuple11.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple13 = tuple12.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple14 = tuple13.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple15 = tuple14.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple16 = tuple15.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple17 = tuple16.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple18 = tuple17.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple19 = tuple18.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple20 = tuple19.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n\
    \        val tuple21 = tuple20.map(row => row.zipWithIndex.sortBy(_._1).reverse)\n\
    \        val tuple22 = tuple21.map(row => row.zipWithIndex.sortBy(_._2).", " \
    \       val row: List[Long] = lst.map(row => row(x))\n        val rowTuples: List[Tuple2[Long,\
    \ Long]] = row.zipWithIndex.sortBy(_._1).reverse\n        val colTuples: List[Tuple2[Long,\
    \ Long]] = rowTuples.map(row => row.zipWithIndex.sortBy(_._2).reverse)\n     \
    \   colTuples.map(row => (row._1, row._2))", "        val lst2 = lst.sortBy(x\
    \ => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x\
    \ => x._2)\n        val lst5 = lst4.sortBy(x => x._1)\n        val lst6 = lst5.sortBy(x\
    \ => x._2)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._1)\n        val lst9 = lst8.sortBy(x => x._2)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._1)\n        val lst12 = lst11.sortBy(x\
    \ => x._2)\n        val lst13 = lst12.sortBy(x => x._2)\n        val lst14 = lst13.sortBy(x\
    \ => x._1)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._2)\n        val lst17 = lst16.sortBy(x => x._1)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._1)\n        val lst21 = lst20.sortBy(x => x._2)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._1)\n        val lst24 = lst23.sortBy(x\
    \ => x._2)\n        val lst25 = lst24.sortBy(x => x._2)\n        val lst26 = lst25.sortBy(x\
    \ => x._1)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._2)\n        val lst29 = lst28.sortBy(x => x._1)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._1)\n        val lst33 = lst32.sortBy(x => x._2)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._1)\n        val lst36 = lst35.sortBy(x\
    \ => x._", "        val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x\
    \ => -x._2)\n        val lst3 = lst2.map(x => (x._1, x._2))\n        lst3.filter(x\
    \ => x._1 == x).map(x => (x._1, x._2))", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)).reverse\n        val lst3 = lst2.filter(_(0)\
    \ == x)\n        val lst4 = lst3.sortBy(_(0)).reverse\n        lst4.map(x => Tuple2(x._1,\
    \ x._2))", "        val rows = lst.map(_.length).max\n        val columns = lst.map(_.head).max\n\
    \        val result = lst.map(row => row.zipWithIndex.filter(x => x._1 == x).map(x\
    \ => (x._2, x._1)).toList).sortBy(row => row._1).map(row => row.sortBy(_._2).reverse).sortBy(row\
    \ => row._2).map(row => (row._1, row._2))\n        result.filter(row => row._1\
    \ == x).map(row => (row._2, row._1))", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending\n        val lst4 = lst3.sortBy(_(1)) //descending\n        val\
    \ lst5 = lst4.sortBy(_(0)) //ascending\n        val lst6 = lst5.sortBy(_(1)) //descending\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending\n        val lst9 = lst8.sortBy(_(0)) //ascending\n        val\
    \ lst10 = lst9.sortBy(_(1)) //descending\n        val lst11 = lst10.sortBy(_(0))\
    \ //ascending\n        val lst12 = lst11.sortBy(_(1)) //descending\n        val\
    \ lst13 = lst12.sortBy(_(0)) //ascending\n        val lst14 = lst13.sortBy(_(1))\
    \ //descending\n        val lst15 = lst14.sortBy(_(0)) //ascending\n        val\
    \ lst16 = lst15.sortBy(_(1)) //descending\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending\n        val lst18 = lst17.sortBy(_(1)) //descending\n        val\
    \ lst19 = lst18.sortBy(_(0)) //ascending\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending\n        val lst21 = lst20.sortBy(_(0)) //ascending\n        val\
    \ lst22 = lst21.sortBy(_(1)) //descending\n        val lst23 = lst22.sortBy(_(0))\
    \ //ascending\n        val lst24 = lst23.sortBy(_(1)) //descending\n        val\
    \ lst25 = lst24.sortBy(_(0)) //ascending\n        val lst26 = lst25.sortBy(_(1))\
    \ //descending\n        val lst27 = lst26.sortBy(_(0)) //ascending\n        val\
    \ lst28 = lst27.sortBy(_(1)) //descending\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending\n        val lst30 = lst29.sortBy(_(1)) //descending\n        val\
    \ lst31 = lst30.sortBy(_(0)) //ascending\n        val lst32 = lst31.sortBy(_(1))\
    \ //descending\n        val lst33 = lst32.sortBy(_(0)) //ascending\n", "     \
    \   val rows = lst.map(_.length)\n        val cols = lst.map(_.head.length)\n\
    \        val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n        val\
    \ row = new mutable.ListBuffer[Long]()\n        val col = new mutable.ListBuffer[Long]()\n\
    \        row.clear()\n        col.clear()\n        row.push(x)\n        col.push(x)\n\
    \        result.add(Tuple2(row.head, col.head))\n        while(row.nonEmpty ||\
    \ col.nonEmpty) {\n            val rowSize = row.nonEmpty ? row.head : Long.MaxValue\n\
    \            val colSize = col.nonEmpty ? col.head : Long.MaxValue\n         \
    \   val rowIndex = row.nonEmpty ? row.head : 0\n            val colIndex = col.nonEmpty\
    \ ? col.head : 0\n            val rowEnd = rowSize - 1\n            val colEnd\
    \ = colSize - 1\n            while(rowIndex < rowEnd && colIndex < colEnd) {\n\
    \                val rowValue = rowIndex + rowSize * colIndex\n              \
    \  val colValue = colIndex + colSize * rowIndex\n                if(rowValue <\
    \ x && colValue < x) {\n                    row.clear()\n                    col.clear()\n\
    \                    row.push(rowValue)\n                    col.push(colValue)\n\
    \                    result.add(Tuple2(row.head, col.head))\n                }\n\
    \                rowIndex += 1\n                colIndex += 1\n            }\n\
    \        }\n        result.sortBy(_._1)\n        result.sortBy(_._2)\n       \
    \ result.toList", "        val lst2 = lst.sortBy(_(0))\n        val lst3 = lst2.sortBy(_(1))\
    \ //descending order\n        val lst4 = lst3.sortBy(_._2) //descending order\n\
    \        val lst5 = lst4.sortBy(_._1) //ascending order\n        val lst6 = lst5.sortBy(_._0)\
    \ //ascending order\n        val lst7 = lst6.filter(_._1 == x).toList\n      \
    \  lst7", "        val lst2 = lst.sortWith((x, y) => x.compare(y))\n        val\
    \ lst3 = lst2.sortWith((x, y) => y.compare(x))\n        val lst4 = lst3.sortWith((x,\
    \ y) => x.compare(y))\n        val lst5 = lst4.sortWith((x, y) => y.compare(x))\n\
    \        val lst6 = lst5.sortWith((x, y) => x.compare(y))\n        val lst7 =\
    \ lst6.sortWith((x, y) => y.compare(x))\n        val lst8 = lst7.sortWith((x,\
    \ y) => x.compare(y))\n        val lst9 = lst8.sortWith((x, y) => y.compare(x))\n\
    \        val lst10 = lst9.sortWith((x, y) => x.compare(y))\n        val lst11\
    \ = lst10.sortWith((x, y) => y.compare(x))\n        val lst12 = lst11.sortWith((x,\
    \ y) => x.compare(y))\n        val lst13 = lst12.sortWith((x, y) => y.compare(x))\n\
    \        val lst14 = lst13.sortWith((x, y) => x.compare(y))\n        val lst15\
    \ = lst14.sortWith((x, y) => y.compare(x))\n        val lst16 = lst15.sortWith((x,\
    \ y) => x.compare(y))\n        val lst17 = lst16.sortWith((x, y) => y.compare(x))\n\
    \        val lst18 = lst17.sortWith((x, y) => x.compare(y))\n        val lst19\
    \ = lst18.sortWith((x, y) => y.compare(x))\n        val lst20 = lst19.sortWith((x,\
    \ y) => x.compare(y))\n        val lst21 = lst20.sortWith((x, y) => y.compare(x))\n\
    \        val lst22 = lst21.sortWith((x, y) => x.compare(y))\n        val lst23\
    \ = lst22.sortWith((x, y) => y.compare(x))\n        val lst24 = lst23.sortWith((x,\
    \ y) => x.compare(y))\n        val lst25 = lst24.sortWith((x, y) => y.compare(x))\n\
    \        val lst26 = lst25.sortWith((x, y) => x.compare(y))\n        val lst27\
    \ = lst26.sortWith((x, y) => y.compare(x))\n        val lst28 = lst27.sortWith((x,\
    \ y) => x.compare(y))\n        val lst29 = lst28.sortWith((x, y) => y.compare(x))\n\
    \        val lst30 = lst29.sortWith((x, y) => x.compare(y))\n        val lst31\
    \ = lst30.sortWith((x, y) => y.compare(x))\n        val lst32 = lst31.sortWith((x,\
    \ y) => x.compare(y))\n        val lst33 = lst32.sortWith((x, y", "        val\
    \ lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x => x._2)\n  \
    \      val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x =>\
    \ x._1)\n        val lst5 = lst4.sortBy(x => x._1)\n        val lst6 = lst5.sortBy(x\
    \ => x._2)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._1)\n        val lst9 = lst8.sortBy(x => x._1)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => x._1)\n        val lst13 = lst12.sortBy(x => x._1)\n        val lst14 = lst13.sortBy(x\
    \ => x._2)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._1)\n        val lst17 = lst16.sortBy(x => x._1)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._1)\n        val lst21 = lst20.sortBy(x => x._1)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._1)\n        val lst25 = lst24.sortBy(x => x._1)\n        val lst26 = lst25.sortBy(x\
    \ => x._2)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._1)\n        val lst29 = lst28.sortBy(x => x._1)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._1)\n        val lst33 = lst32.sortBy(x => x._1)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._2)", "        val lst1 =\
    \ lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) reverse\n        val\
    \ lst3 = lst2.map(x => (x, x)).sortBy(_._1)\n        lst3.map(x => (x._1, x._2))",
  "        val rows = lst.map(row => row.indexOf(x)).filter(row => row != -1)\n  \
    \      val cols = lst.map(row => row.indexOf(x)).filter(row => row != -1).max\n\
    \        val tuples = rows.map(row => (row, cols))\n        tuples.sortBy(_._1).reverse",
  "        val row: List[Long] = lst.map(row => row(x))\n        val column: List[Long]\
    \ = lst.map(row => row.map(col => col - x))\n        val coordinates: List[Tuple2[Long,\
    \ Long]] = row.zip(column)\n        coordinates.sortBy(_._1).reverse.sortBy(_._2).reverse",
  "        val row = new mutable.HashMap[Long, Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long,\
    \ Long]]()\n        val cols = new mutable.ArrayList[Long]()\n        val col\
    \ = new mutable.HashMap[Long, Long]()\n        val rowIndex = new mutable.HashMap[Long,\
    \ Long]()\n        val colIndex = new mutable.HashMap[Long, Long]()\n        val\
    \ rowCount = new mutable.HashMap[Long, Long]()\n        val colCount = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMax = new mutable.HashMap[Long, Long]()\n        val\
    \ colMax = new mutable.HashMap[Long, Long]()\n        val rowMin = new mutable.HashMap[Long,\
    \ Long]()\n        val colMin = new mutable.HashMap[Long, Long]()\n        val\
    \ rowSum = new mutable.HashMap[Long, Long]()\n        val colSum = new mutable.HashMap[Long,\
    \ Long]()\n        val rowSums = new mutable.ArrayList[Long]()\n        val colSums\
    \ = new mutable.ArrayList[Long]()\n        val rowMins = new mutable.ArrayList[Long]()\n\
    \        val colMins = new mutable.ArrayList[Long]()\n        val rowMaxs = new\
    \ mutable.ArrayList[Long]()\n        val colMaxs = new mutable.ArrayList[Long]()\n\
    \        val rowSums = new mutable.ArrayList[Long]()\n        val colSums = new\
    \ mutable.ArrayList[Long]()\n        val rowMins = new mutable.ArrayList[Long]()\n\
    \        val colMins = new mutable.ArrayList[Long]()\n        val rowMaxs = new\
    \ mutable.ArrayList[Long]()\n        val colMaxs = new mutable.ArrayList[Long]()\n\
    \        val rowSums = new mutable.ArrayList[Long]()\n        val colSums = new\
    \ mutable.ArrayList[Long]()\n        val rowMins = new mutable.ArrayList[Long]()\n\
    \        val colMins = new mutable.ArrayList[Long]()\n        val rowMaxs = new\
    \ mutable.ArrayList[Long]()\n        val colMaxs = new mutable.ArrayList[Long]()\n\
    \        val rowSums = new mutable.ArrayList[Long]()\n        val colSums = new\
    \ mutable.ArrayList[Long]()\n        val rowMins = new mutable.ArrayList[Long]()\n\
    \        val colMins = new mutable.ArrayList[Long]()\n        val rowMaxs = new\
    \ mutable.ArrayList[Long]()\n        val colMaxs = new mutable.", "        val\
    \ lst2 = lst.sortBy(x => x).reverse\n        val lst3 = lst2.sortBy(x => x._2)\n\
    \        val lst4 = lst3.sortBy(x => x._1)\n        val lst5 = lst4.filter(x =>\
    \ x._1 == x).map(x => (x._2, x._1))\n        lst5", "        val rows = lst.map(_.length)\n\
    \        val cols = lst(0).length\n        val result = new mutable.ListBuffer[Tuple2[Long,\
    \ Long]]()\n        var row = 0\n        var col = 0\n        while(row < rows\
    \ && col < cols) {\n            val value = lst(row)(col)\n            if(value\
    \ == x) {\n                result.append((row, col))\n                row += 1\n\
    \                col += 1\n            } else if(value > x) {\n              \
    \  row += 1\n            } else {\n                col += 1\n            }\n \
    \       }\n        result.sortBy(_._1)\n        result.sortBy(_._2, descending\
    \ = true)\n        result.toList", "        val lst1 = lst.sortBy(_(0))\n    \
    \    val lst2 = lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.sortBy(_(0))\
    \ //descending order\n        val lst4 = lst3.sortBy(_(1)) //descending order\n\
    \        val lst5 = lst4.sortBy(_(0)) //descending order\n        val lst6 = lst5.sortBy(_(1))\
    \ //descending order\n        val lst7 = lst6.sortBy(_(0)) //descending order\n\
    \        val lst8 = lst7.sortBy(_(1)) //descending order\n        val lst9 = lst8.sortBy(_(0))\
    \ //descending order\n        val lst10 = lst9.sortBy(_(1)) //descending order\n\
    \        val lst11 = lst10.sortBy(_(0)) //descending order\n        val lst12\
    \ = lst11.sortBy(_(1)) //descending order\n        val lst13 = lst12.sortBy(_(0))\
    \ //descending order\n        val lst14 = lst13.sortBy(_(1)) //descending order\n\
    \        val lst15 = lst14.sortBy(_(0)) //descending order\n        val lst16\
    \ = lst15.sortBy(_(1)) //descending order\n        val lst17 = lst16.sortBy(_(0))\
    \ //descending order\n        val lst18 = lst17.sortBy(_(1)) //descending order\n\
    \        val lst19 = lst18.sortBy(_(0)) //descending order\n        val lst20\
    \ = lst19.sortBy(_(1)) //descending order\n        val lst21 = lst20.sortBy(_(0))\
    \ //descending order\n        val lst22 = lst21.sortBy(_(1)) //descending order\n\
    \        val lst23 = lst22.sortBy(_(0)) //descending order\n        val lst24\
    \ = lst23.sortBy(_(1)) //descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ //descending order\n        val lst26 = lst25.sortBy(_(1)) //descending order\n\
    \        val lst27 = lst26.sortBy(_(0)) //descending order\n        val lst28\
    \ = lst27.sortBy(_(1)) //descending order\n        val lst29 = lst28.sortBy(_(0))\
    \ //descending order\n        val lst30 = lst29.sortBy(_(1)) //descending order\n\
    \        val lst31 = lst30.sortBy(_(0)) //descending order\n        val ", " \
    \       val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x =>\
    \ x._2)\n        val lst3 = lst2.sortBy(x => -x._2)\n        val lst4 = lst3.sortBy(x\
    \ => -x._1)\n        val lst5 = lst4.sortBy(x => x._1)\n        val lst6 = lst5.sortBy(x\
    \ => -x._1)\n        val lst7 = lst6.sortBy(x => -x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._2)\n        val lst9 = lst8.sortBy(x => x._1)\n        val lst10 = lst9.sortBy(x\
    \ => -x._1)\n        val lst11 = lst10.sortBy(x => -x._2)\n        val lst12 =\
    \ lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x => x._1)\n     \
    \   val lst14 = lst13.sortBy(x => -x._1)\n        val lst15 = lst14.sortBy(x =>\
    \ -x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => -x._1)\n        val lst19 =\
    \ lst18.sortBy(x => -x._2)\n        val lst20 = lst19.sortBy(x => x._2)\n    \
    \    val lst21 = lst20.sortBy(x => x._1)\n        val lst22 = lst21.sortBy(x =>\
    \ -x._1)\n        val lst23 = lst22.sortBy(x => -x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._2)\n        val lst25 = lst24.sortBy(x => x._1)\n        val lst26 = lst25.sortBy(x\
    \ => -x._1)\n        val lst27 = lst26.sortBy(x => -x._2)\n        val lst28 =\
    \ lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x => x._1)\n     \
    \   val lst30 = lst29.sortBy(x => -x._1)\n        val lst31 = lst30.sortBy(x =>\
    \ -x._2)\n        val lst32 = lst31.sortBy(x => x._2)\n        val lst33 = lst32.sortBy(x\
    \ => x._1)\n        val lst34 = lst33.sortBy(x => -x.", "        val rows = lst.map(row\
    \ => row.filter(_ != x).toList)\n        val sortedRows = rows.sortWith((x, y)\
    \ => y.compareTo(x) < 0)\n        val sortedRowsReversed = sortedRows.reverse\n\
    \        val sortedColumns = sortedRowsReversed.map(row => row.filter(_ != x).toList).sortWith((x,\
    \ y) => y.compareTo(x) < 0)\n        val sortedColumnsReversed = sortedColumns.reverse\n\
    \        val coordinates = sortedColumnsReversed.map(row => (row.indexOf(x), row.indexOf(y))).sortWith((x,\
    \ y) => y.compareTo(x) < 0)\n        coordinates.map(coordinate => (coordinate._1,\
    \ coordinate._2))", "        val rows = lst.map(row => row.indexOf(x)).sortWith(_\
    \ < _)\n        val columns = rows.map(row => lst(row).indexOf(x)).sortWith(_\
    \ < _)\n        val tuples = columns.zip(rows.map(row => (row, row)))\n      \
    \  tuples.sortBy(_._1).reverse", "        val lst1 = lst.sortBy(_(0))\n      \
    \  val lst2 = lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.sortBy(_(0))\
    \ //descending order\n        val lst4 = lst3.sortBy(_(1)) //descending order\n\
    \        val lst5 = lst4.sortBy(_(0)) //descending order\n        val lst6 = lst5.sortBy(_(1))\
    \ //descending order\n        val lst7 = lst6.sortBy(_(0)) //descending order\n\
    \        val lst8 = lst7.sortBy(_(1)) //descending order\n        val lst9 = lst8.sortBy(_(0))\
    \ //descending order\n        val lst10 = lst9.sortBy(_(1)) //descending order\n\
    \        val lst11 = lst10.sortBy(_(0)) //descending order\n        val lst12\
    \ = lst11.sortBy(_(1)) //descending order\n        val lst13 = lst12.sortBy(_(0))\
    \ //descending order\n        val lst14 = lst13.sortBy(_(1)) //descending order\n\
    \        val lst15 = lst14.sortBy(_(0)) //descending order\n        val lst16\
    \ = lst15.sortBy(_(1)) //descending order\n        val lst17 = lst16.sortBy(_(0))\
    \ //descending order\n        val lst18 = lst17.sortBy(_(1)) //descending order\n\
    \        val lst19 = lst18.sortBy(_(0)) //descending order\n        val lst20\
    \ = lst19.sortBy(_(1)) //descending order\n        val lst21 = lst20.sortBy(_(0))\
    \ //descending order\n        val lst22 = lst21.sortBy(_(1)) //descending order\n\
    \        val lst23 = lst22.sortBy(_(0)) //descending order\n        val lst24\
    \ = lst23.sortBy(_(1)) //descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ //descending order\n        val lst26 = lst25.sortBy(_(1)) //descending order\n\
    \        val lst27 = lst26.sortBy(_(0)) //descending order\n        val lst28\
    \ = lst27.sortBy(_(1)) //descending order\n        val lst29 = lst28.sortBy(_(0))\
    \ //descending order\n        val lst30 = lst29.sortBy(_(1)) //descending order\n\
    \        val lst31 = lst30.sortBy(_(0)) //descending order\n        val ", " \
    \       val row: List[Long] = lst.map(x => x).filter(_ != x)\n        val column:\
    \ List[Long] = lst.map(x => x).filter(_ == x).sortBy(-_)\n        val coords:\
    \ List[Tuple2[Long, Long]] = row.zip(column).map(x => (x._1, x._2))\n        coords.sortBy(-_._1)",
  "        val rows = lst.map(row => row.zipWithIndex.toList)\n        val rows =\
    \ rows.sortBy(row => row._1)\n        val rows = rows.sortBy(row => row._2, Ordering.Int.reverse)\n\
    \        val rows = rows.filter(row => row._1 == x)\n        val rows = rows.map(row\
    \ => (row._2, row._1))\n        rows", "        val row = new mutable.HashMap[Long,\
    \ Long]()\n        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n  \
    \      val rowMap = new mutable.HashMap[Long, Long]()\n        val rowMap2 = new\
    \ mutable.HashMap[Long, Long]()\n        val rowMap3 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap4 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap5 = new mutable.HashMap[Long, Long]()\n        val rowMap6 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap7 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap8 = new mutable.HashMap[Long, Long]()\n        val rowMap9 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap10 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap11 = new mutable.HashMap[Long, Long]()\n        val rowMap12 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap13 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap14 = new mutable.HashMap[Long, Long]()\n        val rowMap15 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap16 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap17 = new mutable.HashMap[Long, Long]()\n        val rowMap18 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap19 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap20 = new mutable.HashMap[Long, Long]()\n        val rowMap21 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap22 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap23 = new mutable.HashMap[Long, Long]()\n        val rowMap24 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap25 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap26 = new mutable.HashMap[Long, Long]()\n        val rowMap27 = new mutable.HashMap[Long,\
    \ Long]()\n        val rowMap28 = new mutable.HashMap[Long, Long]()\n        val\
    \ rowMap29 = new mutable.HashMap[Long, Long]()\n        val rowMap30 = new mutable.HashMap[Long,\
    \ Long]()\n        val ", "        val lst1 = lst.sortBy(_(0))\n        val lst2\
    \ = lst1.sortBy(_(1)) // in descending order\n        val lst3 = lst2.sortBy(_(0))\
    \ // in ascending order\n        val lst4 = lst3.sortBy(_(1)) // in descending\
    \ order\n        val lst5 = lst4.sortBy(_(0)) // in ascending order\n        val\
    \ lst6 = lst5.sortBy(_(1)) // in descending order\n        val lst7 = lst6.sortBy(_(0))\
    \ // in ascending order\n        val lst8 = lst7.sortBy(_(1)) // in descending\
    \ order\n        val lst9 = lst8.sortBy(_(0)) // in ascending order\n        val\
    \ lst10 = lst9.sortBy(_(1)) // in descending order\n        val lst11 = lst10.sortBy(_(0))\
    \ // in ascending order\n        val lst12 = lst11.sortBy(_(1)) // in descending\
    \ order\n        val lst13 = lst12.sortBy(_(0)) // in ascending order\n      \
    \  val lst14 = lst13.sortBy(_(1)) // in descending order\n        val lst15 =\
    \ lst14.sortBy(_(0)) // in ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ // in descending order\n        val lst17 = lst16.sortBy(_(0)) // in ascending\
    \ order\n        val lst18 = lst17.sortBy(_(1)) // in descending order\n     \
    \   val lst19 = lst18.sortBy(_(0)) // in ascending order\n        val lst20 =\
    \ lst19.sortBy(_(1)) // in descending order\n        val lst21 = lst20.sortBy(_(0))\
    \ // in ascending order\n        val lst22 = lst21.sortBy(_(1)) // in descending\
    \ order\n        val lst23 = lst22.sortBy(_(0)) // in ascending order\n      \
    \  val lst24 = lst23.sortBy(_(1)) // in descending order\n        val lst25 =\
    \ lst24.sortBy(_(0)) // in ascending order\n        val lst26 = lst25.sortBy(_(1))\
    \ // in descending order\n        val lst27 = lst26.sortBy(_(0)) // in ascending\
    \ order\n        val lst28 = lst27.sortBy(_(1)) // in descending order\n     \
    \   val lst29 = lst28.sortBy(_(0)) // in ascending order\n        val lst30 =\
    \ lst29.sort", "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1))\
    \ //descending\n        val lst3 = lst2.filter(_(0) == x)\n        lst3.map(x\
    \ => (x._1, x._2))", "        val lst1 = lst.sortBy(_(0))\n        val lst2 =\
    \ lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.sortBy(_._2) //descending\
    \ order\n        val lst4 = lst3.sortBy(_._1) //ascending order\n        val lst5\
    \ = lst4.sortBy(_._0) //ascending order\n        val lst6 = lst5.sortBy(_._1)\
    \ //ascending order\n        val lst7 = lst6.sortBy(_._2) //ascending order\n\
    \        val lst8 = lst7.sortBy(_._0) //ascending order\n        val lst9 = lst8.sortBy(_._1)\
    \ //ascending order\n        val lst10 = lst9.sortBy(_._2) //ascending order\n\
    \        val lst11 = lst10.sortBy(_._0) //ascending order\n        val lst12 =\
    \ lst11.sortBy(_._1) //ascending order\n        val lst13 = lst12.sortBy(_._2)\
    \ //ascending order\n        val lst14 = lst13.sortBy(_._0) //ascending order\n\
    \        val lst15 = lst14.sortBy(_._1) //ascending order\n        val lst16 =\
    \ lst15.sortBy(_._2) //ascending order\n        val lst17 = lst16.sortBy(_._0)\
    \ //ascending order\n        val lst18 = lst17.sortBy(_._1) //ascending order\n\
    \        val lst19 = lst18.sortBy(_._2) //ascending order\n        val lst20 =\
    \ lst19.sortBy(_._0) //ascending order\n        val lst21 = lst20.sortBy(_._1)\
    \ //ascending order\n        val lst22 = lst21.sortBy(_._2) //ascending order\n\
    \        val lst23 = lst22.sortBy(_._0) //ascending order\n        val lst24 =\
    \ lst23.sortBy(_._1) //ascending order\n        val lst25 = lst24.sortBy(_._2)\
    \ //ascending order\n        val lst26 = lst25.sortBy(_._0) //ascending order\n\
    \        val lst27 = lst26.sortBy(_._1) //ascending order\n        val lst28 =\
    \ lst27.sortBy(_._2) //ascending order\n        val lst29 = lst28.sortBy(_._0)\
    \ //ascending order\n        val lst30 = lst29.sortBy(_._1) //ascending order\n\
    \        val lst31 = lst30.sortBy(_._2) //ascending order\n        val ", "  \
    \      val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\n\
    \        val lst3 = lst2.sortBy(_(0)) //ascending\n        val lst4 = lst3.sortBy(_(1))\
    \ //descending\n        val lst5 = lst4.sortBy(_(0)) //ascending\n        val\
    \ lst6 = lst5.sortBy(_(1)) //descending\n        val lst7 = lst6.sortBy(_(0))\
    \ //ascending\n        val lst8 = lst7.sortBy(_(1)) //descending\n        val\
    \ lst9 = lst8.sortBy(_(0)) //ascending\n        val lst10 = lst9.sortBy(_(1))\
    \ //descending\n        val lst11 = lst10.sortBy(_(0)) //ascending\n        val\
    \ lst12 = lst11.sortBy(_(1)) //descending\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending\n        val lst14 = lst13.sortBy(_(1)) //descending\n        val\
    \ lst15 = lst14.sortBy(_(0)) //ascending\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending\n        val lst17 = lst16.sortBy(_(0)) //ascending\n        val\
    \ lst18 = lst17.sortBy(_(1)) //descending\n        val lst19 = lst18.sortBy(_(0))\
    \ //ascending\n        val lst20 = lst19.sortBy(_(1)) //descending\n        val\
    \ lst21 = lst20.sortBy(_(0)) //ascending\n        val lst22 = lst21.sortBy(_(1))\
    \ //descending\n        val lst23 = lst22.sortBy(_(0)) //ascending\n        val\
    \ lst24 = lst23.sortBy(_(1)) //descending\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending\n        val lst26 = lst25.sortBy(_(1)) //descending\n        val\
    \ lst27 = lst26.sortBy(_(0)) //ascending\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending\n        val lst29 = lst28.sortBy(_(0)) //ascending\n        val\
    \ lst30 = lst29.sortBy(_(1)) //descending\n        val lst31 = lst30.sortBy(_(0))\
    \ //ascending\n        val lst32 = lst31.sortBy(_(1)) //descending\n        val\
    \ lst33 = lst32.sortBy(_(0)) //ascending\n", "        val rows = lst.map(row =>\
    \ row.map(x => Tuple2(x, row.length)).toList)\n        val rows = rows.sortBy(row\
    \ => row._1)\n        val rows = rows.sortBy(row => row._2, descending = true)\n\
    \        val rows = rows.map(row => Tuple2(row._1, row._2))\n        rows", " \
    \       val rows = lst.map(row => row.indexOf(x)).sortBy(row => row).reverse\n\
    \        val columns = lst.map(row => row.indexOf(x)).sortBy(row => -row).reverse\n\
    \        val result = rows.zip(columns).map(row => (row._1, row._2))\n       \
    \ result.sortBy(row => row._1).reverse", "        val lst1 = lst.sortBy(_.toLong)\n\
    \        val lst2 = lst1.sortBy(_.toLong.reverse)\n        val lst3 = lst2.sortBy(_.toLong.reverse)\n\
    \        val lst4 = lst3.sortBy(_.toLong.reverse)\n        val lst5 = lst4.sortBy(_.toLong.reverse)\n\
    \        val lst6 = lst5.sortBy(_.toLong.reverse)\n        val lst7 = lst6.sortBy(_.toLong.reverse)\n\
    \        val lst8 = lst7.sortBy(_.toLong.reverse)\n        val lst9 = lst8.sortBy(_.toLong.reverse)\n\
    \        val lst10 = lst9.sortBy(_.toLong.reverse)\n        val lst11 = lst10.sortBy(_.toLong.reverse)\n\
    \        val lst12 = lst11.sortBy(_.toLong.reverse)\n        val lst13 = lst12.sortBy(_.toLong.reverse)\n\
    \        val lst14 = lst13.sortBy(_.toLong.reverse)\n        val lst15 = lst14.sortBy(_.toLong.reverse)\n\
    \        val lst16 = lst15.sortBy(_.toLong.reverse)\n        val lst17 = lst16.sortBy(_.toLong.reverse)\n\
    \        val lst18 = lst17.sortBy(_.toLong.reverse)\n        val lst19 = lst18.sortBy(_.toLong.reverse)\n\
    \        val lst20 = lst19.sortBy(_.toLong.reverse)\n        val lst21 = lst20.sortBy(_.toLong.reverse)\n\
    \        val lst22 = lst21.sortBy(_.toLong.reverse)\n        val lst23 = lst22.sortBy(_.toLong.reverse)\n\
    \        val lst24 = lst23.sortBy(_.toLong.reverse)\n        val lst25 = lst24.sortBy(_.toLong.reverse)\n\
    \        val lst26 = lst25.sortBy(_.toLong.reverse)\n        val lst27 = lst26.sortBy(_.toLong.reverse)\n\
    \        val lst28 = lst27.sortBy(_.toLong.reverse)\n        val lst29 = lst28.sortBy(_.toLong.reverse)\n\
    \        val lst30 = lst29.sortBy(_.toLong.reverse)\n        val lst31 = lst30.sortBy(_.toLong.reverse)\n\
    \        val lst32 = lst31.sortBy(_.toLong.reverse)\n        val lst33 = lst32.sortBy(_.toLong.reverse)\n\
    \        val lst34 = lst33.sortBy(_.toLong.reverse)\n        val lst35 = lst34.sortBy(_.toLong.reverse)\n",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\
    \ order\n        val lst3 = lst2.sortBy(_(0)) //ascending order\n        val lst4\
    \ = lst3.sortBy(_(1)) //descending order\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending order\n        val lst6 = lst5.sortBy(_(1)) //descending order\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending order\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending order\n        val lst9 = lst8.sortBy(_(0)) //ascending order\n\
    \        val lst10 = lst9.sortBy(_(1)) //descending order\n        val lst11 =\
    \ lst10.sortBy(_(0)) //ascending order\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending order\n        val lst13 = lst12.sortBy(_(0)) //ascending order\n\
    \        val lst14 = lst13.sortBy(_(1)) //descending order\n        val lst15\
    \ = lst14.sortBy(_(0)) //ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending order\n        val lst17 = lst16.sortBy(_(0)) //ascending order\n\
    \        val lst18 = lst17.sortBy(_(1)) //descending order\n        val lst19\
    \ = lst18.sortBy(_(0)) //ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending order\n        val lst21 = lst20.sortBy(_(0)) //ascending order\n\
    \        val lst22 = lst21.sortBy(_(1)) //descending order\n        val lst23\
    \ = lst22.sortBy(_(0)) //ascending order\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending order\n        val lst25 = lst24.sortBy(_(0)) //ascending order\n\
    \        val lst26 = lst25.sortBy(_(1)) //descending order\n        val lst27\
    \ = lst26.sortBy(_(0)) //ascending order\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending order\n        val lst29 = lst28.sortBy(_(0)) //ascending order\n\
    \        val lst30 = lst29.sortBy(_(1)) //descending order\n        val lst31\
    \ = lst30.sortBy(_(0)) //ascending order\n        val ", "        val rows = lst.map(row\
    \ => row.filter(_ != x).toList)\n        val rows = rows.sortBy(row => row.indexOf(x)).sortBy(row\
    \ => row.lastIndexOf(x))\n        val columns = rows.map(row => row.indexOf(x)).sortBy(row\
    \ => row.lastIndexOf(x))\n        val coordinates = rows.zip(columns)\n      \
    \  coordinates.toList", "        val lst2 = lst.map(_.toList)\n        val lst3\
    \ = lst2.map(x => x.filter(_ == x))\n        val lst4 = lst3.map(x => x.sortWith(_\
    \ < _))\n        val lst5 = lst4.map(x => x.sortWith(_ < _))\n        val lst6\
    \ = lst5.map(x => x.sortWith(_ < _))\n        val lst7 = lst6.map(x => x.sortWith(_\
    \ < _))\n        val lst8 = lst7.map(x => x.sortWith(_ < _))\n        val lst9\
    \ = lst8.map(x => x.sortWith(_ < _))\n        val lst10 = lst9.map(x => x.sortWith(_\
    \ < _))\n        val lst11 = lst10.map(x => x.sortWith(_ < _))\n        val lst12\
    \ = lst11.map(x => x.sortWith(_ < _))\n        val lst13 = lst12.map(x => x.sortWith(_\
    \ < _))\n        val lst14 = lst13.map(x => x.sortWith(_ < _))\n        val lst15\
    \ = lst14.map(x => x.sortWith(_ < _))\n        val lst16 = lst15.map(x => x.sortWith(_\
    \ < _))\n        val lst17 = lst16.map(x => x.sortWith(_ < _))\n        val lst18\
    \ = lst17.map(x => x.sortWith(_ < _))\n        val lst19 = lst18.map(x => x.sortWith(_\
    \ < _))\n        val lst20 = lst19.map(x => x.sortWith(_ < _))\n        val lst21\
    \ = lst20.map(x => x.sortWith(_ < _))\n        val lst22 = lst21.map(x => x.sortWith(_\
    \ < _))\n        val lst23 = lst22.map(x => x.sortWith(_ < _))\n        val lst24\
    \ = lst23.map(x => x.sortWith(_ < _))\n        val lst25 = lst24.map(x => x.sortWith(_\
    \ < _))\n        val lst26 = lst25.map(x => x.sortWith(_ < _))\n        val lst27\
    \ = lst26.map(x => x.sortWith(_ < _))\n        val lst28 = lst27.map(x => x.sortWith(_\
    \ < _))\n        val lst29 = lst28.map(x => x.sortWith(_ < _))\n        val lst30\
    \ = lst29.map(x => x.sortWith(_ < _))\n        val lst31 = lst30.map(x ", "  \
    \      val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\
    \ order\n        val lst3 = lst2.filter(_._1 == x)\n        lst3.map(_._2)", " \
    \       val rows = lst.map(row => row.map(_ + x))\n        val sorted = rows.sortBy(row\
    \ => row(0))\n        val result = sorted.map(row => Tuple2(row(0), row(1))).toList\n\
    \        result.sortBy(row => row._2)", "        val rows = lst.map(_.size).max\n\
    \        val cols = lst.map(_.head).max\n        val result = new mutable.ListBuffer[Tuple2[Long,\
    \ Long]]()\n        val row = new mutable.ListBuffer[Long]()\n        val col\
    \ = new mutable.ListBuffer[Long]()\n        for (i <- 0 until rows) {\n      \
    \      row.append(i)\n            val rowTuple = row.zip(lst.map(_.head))\n  \
    \          val rowTupleSorted = rowTuple.sortBy(_._1).reverse\n            val\
    \ colTuple = rowTupleSorted.map(x => (x, lst.map(_.head).indexOf(x)))\n      \
    \      val colTupleSorted = colTuple.sortBy(_._2).reverse\n            colTupleSorted.foreach\
    \ { x =>\n                val tuple = x._1.zip(x._2)\n                val tupleSorted\
    \ = tuple.sortBy(_._1).reverse\n                val tupleSorted2 = tupleSorted.map(x\
    \ => (x._1, x._2))\n                val tupleSorted3 = tupleSorted2.sortBy(_._2).reverse\n\
    \                tupleSorted3.foreach { x =>\n                    val tuple2 =\
    \ x._1.zip(x._2)\n                    val tuple2Sorted = tuple2.sortBy(_._1).reverse\n\
    \                    val tuple2Sorted2 = tuple2Sorted.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted3 = tuple2Sorted2.sortBy(_._2).reverse\n\
    \                    val tuple2Sorted4 = tuple2Sorted3.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted5 = tuple2Sorted4.sortBy(_._1).reverse\n\
    \                    val tuple2Sorted6 = tuple2Sorted5.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted7 = tuple2Sorted6.sortBy(_._2).reverse\n\
    \                    val tuple2Sorted8 = tuple2Sorted7.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted9 = tuple2Sorted8.sortBy(_._1).reverse\n\
    \                    val tuple2Sorted10 = tuple2Sorted9.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted11 = tuple2Sorted10.sortBy(_._2).reverse\n\
    \                    val tuple2Sorted12 = tuple2Sorted11.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted13 = tuple2Sorted12.sortBy(_._1).reverse\n\
    \                    val tuple2Sorted14 = tuple2Sorted13.map(x => (x._1, x._2))\n\
    \                    val tuple2Sorted15 = tuple2Sorted14.sortBy(_._2).reverse\n",
  "        val rows = lst.map(row => row.indexOf(x)).sortBy(row => row).reverse\n\
    \        val cols = lst.map(row => row.indexOf(x)).sortBy(row => row).reverse\n\
    \        val coords = rows.zip(cols).sortBy(_._1).reverse.sortBy(_._2).reverse\n\
    \        coords.map(coord => (coord._1, coord._2))", "        val rows = lst.map(row\
    \ => row.indexOf(x)).sortBy(_).reverse\n        val cols = rows.map(row => row.indexOf(x)).sortBy(-_).reverse\n\
    \        val coords = rows.zip(cols).map(row => (row._1, row._2))\n        coords.sortBy(-_._1).map(row\
    \ => (row._1, row._2))", "        val rows = lst.map(_.length)\n        val cols\
    \ = lst(0).length\n        val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n\
    \        var i = 0\n        while (i < rows) {\n            val row = lst(i)\n\
    \            val cols = lst(0).length\n            var j = 0\n            while\
    \ (j < cols) {\n                if (row(x) == j) result += ((i, x), (i, j))\n\
    \                j += 1\n            }\n            i += 1\n        }\n      \
    \  result.sortBy(_._1).reverse.sortBy(_._2).reverse", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending\n        val lst4 = lst3.sortBy(_(1)) //descending\n        val\
    \ lst5 = lst4.sortBy(_(0)) //ascending\n        val lst6 = lst5.sortBy(_(1)) //descending\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending\n        val lst9 = lst8.sortBy(_(0)) //ascending\n        val\
    \ lst10 = lst9.sortBy(_(1)) //descending\n        val lst11 = lst10.sortBy(_(0))\
    \ //ascending\n        val lst12 = lst11.sortBy(_(1)) //descending\n        val\
    \ lst13 = lst12.sortBy(_(0)) //ascending\n        val lst14 = lst13.sortBy(_(1))\
    \ //descending\n        val lst15 = lst14.sortBy(_(0)) //ascending\n        val\
    \ lst16 = lst15.sortBy(_(1)) //descending\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending\n        val lst18 = lst17.sortBy(_(1)) //descending\n        val\
    \ lst19 = lst18.sortBy(_(0)) //ascending\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending\n        val lst21 = lst20.sortBy(_(0)) //ascending\n        val\
    \ lst22 = lst21.sortBy(_(1)) //descending\n        val lst23 = lst22.sortBy(_(0))\
    \ //ascending\n        val lst24 = lst23.sortBy(_(1)) //descending\n        val\
    \ lst25 = lst24.sortBy(_(0)) //ascending\n        val lst26 = lst25.sortBy(_(1))\
    \ //descending\n        val lst27 = lst26.sortBy(_(0)) //ascending\n        val\
    \ lst28 = lst27.sortBy(_(1)) //descending\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending\n        val lst30 = lst29.sortBy(_(1)) //descending\n        val\
    \ lst31 = lst30.sortBy(_(0)) //ascending\n        val lst32 = lst31.sortBy(_(1))\
    \ //descending\n        val lst33 = lst32.sortBy(_(0)) //ascending\n", "     \
    \   val lst2 = lst.sortWith((x, y) => x.compare(y))\n        val lst3 = lst2.sortWith((x,\
    \ y) => y.compare(x))\n        val lst4 = lst3.sortWith((x, y) => x.compare(y))\n\
    \        val lst5 = lst4.sortWith((x, y) => y.compare(x))\n        val lst6 =\
    \ lst5.sortWith((x, y) => x.compare(y))\n        val lst7 = lst6.sortWith((x,\
    \ y) => y.compare(x))\n        val lst8 = lst7.sortWith((x, y) => x.compare(y))\n\
    \        val lst9 = lst8.sortWith((x, y) => y.compare(x))\n        val lst10 =\
    \ lst9.sortWith((x, y) => x.compare(y))\n        val lst11 = lst10.sortWith((x,\
    \ y) => y.compare(x))\n        val lst12 = lst11.sortWith((x, y) => x.compare(y))\n\
    \        val lst13 = lst12.sortWith((x, y) => y.compare(x))\n        val lst14\
    \ = lst13.sortWith((x, y) => x.compare(y))\n        val lst15 = lst14.sortWith((x,\
    \ y) => y.compare(x))\n        val lst16 = lst15.sortWith((x, y) => x.compare(y))\n\
    \        val lst17 = lst16.sortWith((x, y) => y.compare(x))\n        val lst18\
    \ = lst17.sortWith((x, y) => x.compare(y))\n        val lst19 = lst18.sortWith((x,\
    \ y) => y.compare(x))\n        val lst20 = lst19.sortWith((x, y) => x.compare(y))\n\
    \        val lst21 = lst20.sortWith((x, y) => y.compare(x))\n        val lst22\
    \ = lst21.sortWith((x, y) => x.compare(y))\n        val lst23 = lst22.sortWith((x,\
    \ y) => y.compare(x))\n        val lst24 = lst23.sortWith((x, y) => x.compare(y))\n\
    \        val lst25 = lst24.sortWith((x, y) => y.compare(x))\n        val lst26\
    \ = lst25.sortWith((x, y) => x.compare(y))\n        val lst27 = lst26.sortWith((x,\
    \ y) => y.compare(x))\n        val lst28 = lst27.sortWith((x, y) => x.compare(y))\n\
    \        val lst29 = lst28.sortWith((x, y) => y.compare(x))\n        val lst30\
    \ = lst29.sortWith((x, y) => x.compare(y))\n        val lst31 = lst30.sortWith((x,\
    \ y) => y.compare(x))\n        val lst32 = lst31.sortWith((x, y) => x.compare(y))\n\
    \        val lst33 = lst32.sortWith((x, y", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending order\n        val lst4 = lst3.sortBy(_(1)) //descending order\n\
    \        val lst5 = lst4.sortBy(_(0)) //ascending order\n        val lst6 = lst5.sortBy(_(1))\
    \ //descending order\n        val lst7 = lst6.sortBy(_(0)) //ascending order\n\
    \        val lst8 = lst7.sortBy(_(1)) //descending order\n        val lst9 = lst8.sortBy(_(0))\
    \ //ascending order\n        val lst10 = lst9.sortBy(_(1)) //descending order\n\
    \        val lst11 = lst10.sortBy(_(0)) //ascending order\n        val lst12 =\
    \ lst11.sortBy(_(1)) //descending order\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending order\n        val lst14 = lst13.sortBy(_(1)) //descending order\n\
    \        val lst15 = lst14.sortBy(_(0)) //ascending order\n        val lst16 =\
    \ lst15.sortBy(_(1)) //descending order\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending order\n        val lst18 = lst17.sortBy(_(1)) //descending order\n\
    \        val lst19 = lst18.sortBy(_(0)) //ascending order\n        val lst20 =\
    \ lst19.sortBy(_(1)) //descending order\n        val lst21 = lst20.sortBy(_(0))\
    \ //ascending order\n        val lst22 = lst21.sortBy(_(1)) //descending order\n\
    \        val lst23 = lst22.sortBy(_(0)) //ascending order\n        val lst24 =\
    \ lst23.sortBy(_(1)) //descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending order\n        val lst26 = lst25.sortBy(_(1)) //descending order\n\
    \        val lst27 = lst26.sortBy(_(0)) //ascending order\n        val lst28 =\
    \ lst27.sortBy(_(1)) //descending order\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending order\n        val lst30 = lst29.sortBy(_(1)) //descending order\n\
    \        val lst31 = lst30.sortBy(_(0)) //ascending order\n        val ", "  \
    \      val lst2 = lst.sortWith(_.compare(x, _) < 0)\n        val lst3 = lst2.sortWith(_.compare(x,\
    \ _) > 0)\n        val lst4 = lst3.sortWith(_.compare(x, _) == 0)\n        lst4.map(x\
    \ => (x._1, x._2))", "        val lst1 = lst.sortBy(_(0))\n        val lst2 =\
    \ lst1.sortBy(_(_)).reverse\n        val lst3 = lst2.map(x => (x, x))\n      \
    \  lst3.toList", "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1))\
    \ //descending order\n        val lst3 = lst2.sortBy(_(0)) //ascending order\n\
    \        val lst4 = lst3.sortBy(_(1)) //descending order\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending order\n        val lst6 = lst5.sortBy(_(1)) //descending order\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending order\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending order\n        val lst9 = lst8.sortBy(_(0)) //ascending order\n\
    \        val lst10 = lst9.sortBy(_(1)) //descending order\n        val lst11 =\
    \ lst10.sortBy(_(0)) //ascending order\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending order\n        val lst13 = lst12.sortBy(_(0)) //ascending order\n\
    \        val lst14 = lst13.sortBy(_(1)) //descending order\n        val lst15\
    \ = lst14.sortBy(_(0)) //ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending order\n        val lst17 = lst16.sortBy(_(0)) //ascending order\n\
    \        val lst18 = lst17.sortBy(_(1)) //descending order\n        val lst19\
    \ = lst18.sortBy(_(0)) //ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending order\n        val lst21 = lst20.sortBy(_(0)) //ascending order\n\
    \        val lst22 = lst21.sortBy(_(1)) //descending order\n        val lst23\
    \ = lst22.sortBy(_(0)) //ascending order\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending order\n        val lst25 = lst24.sortBy(_(0)) //ascending order\n\
    \        val lst26 = lst25.sortBy(_(1)) //descending order\n        val lst27\
    \ = lst26.sortBy(_(0)) //ascending order\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending order\n        val lst29 = lst28.sortBy(_(0)) //ascending order\n\
    \        val lst30 = lst29.sortBy(_(1)) //descending order\n        val lst31\
    \ = lst30.sortBy(_(0)) //ascending order\n        val ", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)).reverse\n        val lst3 = lst2.sortBy(_(0)).reverse\n\
    \        val lst4 = lst3.sortBy(_(1)).reverse\n        val lst5 = lst4.sortBy(_(0)).reverse\n\
    \        val lst6 = lst5.sortBy(_(1)).reverse\n        val lst7 = lst6.sortBy(_(0)).reverse\n\
    \        val lst8 = lst7.sortBy(_(1)).reverse\n        val lst9 = lst8.sortBy(_(0)).reverse\n\
    \        val lst10 = lst9.sortBy(_(1)).reverse\n        val lst11 = lst10.sortBy(_(0)).reverse\n\
    \        val lst12 = lst11.sortBy(_(1)).reverse\n        val lst13 = lst12.sortBy(_(0)).reverse\n\
    \        val lst14 = lst13.sortBy(_(1)).reverse\n        val lst15 = lst14.sortBy(_(0)).reverse\n\
    \        val lst16 = lst15.sortBy(_(1)).reverse\n        val lst17 = lst16.sortBy(_(0)).reverse\n\
    \        val lst18 = lst17.sortBy(_(1)).reverse\n        val lst19 = lst18.sortBy(_(0)).reverse\n\
    \        val lst20 = lst19.sortBy(_(1)).reverse\n        val lst21 = lst20.sortBy(_(0)).reverse\n\
    \        val lst22 = lst21.sortBy(_(1)).reverse\n        val lst23 = lst22.sortBy(_(0)).reverse\n\
    \        val lst24 = lst23.sortBy(_(1)).reverse\n        val lst25 = lst24.sortBy(_(0)).reverse\n\
    \        val lst26 = lst25.sortBy(_(1)).reverse\n        val lst27 = lst26.sortBy(_(0)).reverse\n\
    \        val lst28 = lst27.sortBy(_(1)).reverse\n        val lst29 = lst28.sortBy(_(0)).reverse\n\
    \        val lst30 = lst29.sortBy(_(1)).reverse\n        val lst31 = lst30.sortBy(_(0)).reverse\n\
    \        val lst32 = lst31.sortBy(_(1)).reverse\n        val lst33 = lst32.sortBy(_(0)).reverse\n\
    \        val lst34 = lst33.sortBy(_(1)).reverse\n        val lst35 = lst34.sortBy(_(0)).reverse\n\
    \        val lst36 = lst35.sortBy(_(1)).reverse\n        val lst37 = lst36.sortBy(_(0)).reverse\n\
    \        val lst38 = lst37.sortBy(_(1)).reverse\n        val lst39 = lst38.sortBy(_(0)).reverse\n\
    \        val lst40 = lst39.sortBy(_(1)).reverse\n        val lst4", "        val\
    \ rows = lst.map(_.length)\n        val cols = lst(0).length\n        val result\
    \ = new mutable.ArrayBuffer[Tuple2[Long, Long]]()\n        val row = new mutable.ArrayBuffer[Long]()\n\
    \        val col = new mutable.ArrayBuffer[Long]()\n        var i = 0\n      \
    \  while(i < rows.length){\n            val row = lst(i).map(x => x).toList\n\
    \            row.sortWith((x, y) => x > y)\n            row.sortWith((x, y) =>\
    \ x < y)\n            row.foreach(x => row.append(x))\n            row.foreach(x\
    \ => row.append(x))\n            row.foreach(x => row.append(x))\n           \
    \ row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach(x => row.append(x))\n            row.foreach(x => row.append(x))\n\
    \            row.foreach", "        val row = new mutable.HashMap[Long, Long]()\n\
    \        val rows = new mutable.ArrayList[Tuple2[Long, Long]]()\n        val rowMap\
    \ = new mutable.HashMap[Long, Long]()\n        val colMap = new mutable.HashMap[Long,\
    \ Long]()\n        val cols = new mutable.ArrayList[Long]()\n        val colMap2\
    \ = new mutable.HashMap[Long, Long]()\n        val cols2 = new mutable.ArrayList[Long]()\n\
    \        val colMap3 = new mutable.HashMap[Long, Long]()\n        val cols3 =\
    \ new mutable.ArrayList[Long]()\n        val colMap4 = new mutable.HashMap[Long,\
    \ Long]()\n        val cols4 = new mutable.ArrayList[Long]()\n        val colMap5\
    \ = new mutable.HashMap[Long, Long]()\n        val cols5 = new mutable.ArrayList[Long]()\n\
    \        val colMap6 = new mutable.HashMap[Long, Long]()\n        val cols6 =\
    \ new mutable.ArrayList[Long]()\n        val colMap7 = new mutable.HashMap[Long,\
    \ Long]()\n        val cols7 = new mutable.ArrayList[Long]()\n        val colMap8\
    \ = new mutable.HashMap[Long, Long]()\n        val cols8 = new mutable.ArrayList[Long]()\n\
    \        val colMap9 = new mutable.HashMap[Long, Long]()\n        val cols9 =\
    \ new mutable.ArrayList[Long]()\n        val colMap10 = new mutable.HashMap[Long,\
    \ Long]()\n        val cols10 = new mutable.ArrayList[Long]()\n        val colMap11\
    \ = new mutable.HashMap[Long, Long]()\n        val cols11 = new mutable.ArrayList[Long]()\n\
    \        val colMap12 = new mutable.HashMap[Long, Long]()\n        val cols12\
    \ = new mutable.ArrayList[Long]()\n        val colMap13 = new mutable.HashMap[Long,\
    \ Long]()\n        val cols13 = new mutable.ArrayList[Long]()\n        val colMap14\
    \ = new mutable.HashMap[Long, Long]()\n        val cols14 = new mutable.ArrayList[Long]()\n\
    \        val colMap15 = new mutable.HashMap[Long, Long]()\n        val cols15\
    \ = new mutable.ArrayList[Long]()\n        val colMap16 = new mutable.HashMap[Long,\
    \ Long]()\n        val cols16 = new mutable.ArrayList[Long]()\n        val colMap17",
  "        val rows = lst.map(_.length)\n        val cols = lst.map(_.head.length)\n\
    \        val rowIndex = lst.zipWithIndex.filter(x => x._1 == x).map(_._2).max\n\
    \        val colIndex = lst.zipWithIndex.filter(x => x._2 == rowIndex).map(_._1).max\n\
    \        val row = lst.map(x => x.apply(rowIndex))\n        val col = lst.map(x\
    \ => x.apply(colIndex))\n        val result = row.zip(col).map(x => (x._1, x._2))\n\
    \        result.sortBy(x => x._1)\n        result.sortBy(x => x._2, false)", " \
    \       val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x =>\
    \ x._2)\n        val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x\
    \ => x._1)\n        val lst5 = lst4.sortBy(x => x._2)\n        val lst6 = lst5.sortBy(x\
    \ => x._2)\n        val lst7 = lst6.sortBy(x => x._1)\n        val lst8 = lst7.sortBy(x\
    \ => x._2)\n        val lst9 = lst8.sortBy(x => x._2)\n        val lst10 = lst9.sortBy(x\
    \ => x._1)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => x._2)\n        val lst13 = lst12.sortBy(x => x._1)\n        val lst14 = lst13.sortBy(x\
    \ => x._2)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._1)\n        val lst17 = lst16.sortBy(x => x._2)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._1)\n        val lst20 = lst19.sortBy(x\
    \ => x._2)\n        val lst21 = lst20.sortBy(x => x._2)\n        val lst22 = lst21.sortBy(x\
    \ => x._1)\n        val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._2)\n        val lst25 = lst24.sortBy(x => x._1)\n        val lst26 = lst25.sortBy(x\
    \ => x._2)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._1)\n        val lst29 = lst28.sortBy(x => x._2)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._1)\n        val lst32 = lst31.sortBy(x\
    \ => x._2)\n        val lst33 = lst32.sortBy(x => x._2)\n        val lst34 = lst33.sortBy(x\
    \ => x._1)\n        val lst35 = lst34.sortBy(x => x._2)", "        val lst1 =\
    \ lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\n      \
    \  val lst3 = lst2.sortBy(_(0)) //ascending\n        val lst4 = lst3.sortBy(_(1))\
    \ //descending\n        val lst5 = lst4.sortBy(_(0)) //ascending\n        val\
    \ lst6 = lst5.sortBy(_(1)) //descending\n        val lst7 = lst6.sortBy(_(0))\
    \ //ascending\n        val lst8 = lst7.sortBy(_(1)) //descending\n        val\
    \ lst9 = lst8.sortBy(_(0)) //ascending\n        val lst10 = lst9.sortBy(_(1))\
    \ //descending\n        val lst11 = lst10.sortBy(_(0)) //ascending\n        val\
    \ lst12 = lst11.sortBy(_(1)) //descending\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending\n        val lst14 = lst13.sortBy(_(1)) //descending\n        val\
    \ lst15 = lst14.sortBy(_(0)) //ascending\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending\n        val lst17 = lst16.sortBy(_(0)) //ascending\n        val\
    \ lst18 = lst17.sortBy(_(1)) //descending\n        val lst19 = lst18.sortBy(_(0))\
    \ //ascending\n        val lst20 = lst19.sortBy(_(1)) //descending\n        val\
    \ lst21 = lst20.sortBy(_(0)) //ascending\n        val lst22 = lst21.sortBy(_(1))\
    \ //descending\n        val lst23 = lst22.sortBy(_(0)) //ascending\n        val\
    \ lst24 = lst23.sortBy(_(1)) //descending\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending\n        val lst26 = lst25.sortBy(_(1)) //descending\n        val\
    \ lst27 = lst26.sortBy(_(0)) //ascending\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending\n        val lst29 = lst28.sortBy(_(0)) //ascending\n        val\
    \ lst30 = lst29.sortBy(_(1)) //descending\n        val lst31 = lst30.sortBy(_(0))\
    \ //ascending\n        val lst32 = lst31.sortBy(_(1)) //descending\n        val\
    \ lst33 = lst32.sortBy(_(0)) //ascending\n", "        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.head.length)\n\
    \        val cols = lst.map(_.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rows = lst.map(_.length)\n\
    \        val cols = ", "        val lst2 = lst.sortBy(x => x._1)\n        val\
    \ lst3 = lst2.sortBy(x => -x._2)\n        val lst4 = lst3.map(x => (x._1, x._2))\n\
    \        lst4.filter(x => x._1 == x).map(x => (x._1, x._2))", "        val rows\
    \ = lst.map(_.length).max\n        val cols = lst.map(_.head.length).max\n   \
    \     val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n        for (i\
    \ <- 0 until rows) {\n            val row = lst.map(_.apply(i))\n            val\
    \ rowResult = row.zipWithIndex.filter(_._1 == x).sortBy(_._2).reverse\n      \
    \      val colResult = row.zipWithIndex.filter(_._1 == x).sortBy(_._1).reverse\n\
    \            result.append((rowResult, colResult))\n        }\n        result.sortBy(_._1).reverse",
  "        val lst2 = lst.sortBy(_.toLong)\n        val lst3 = lst2.sortBy(-_.toLong)\n\
    \        val lst4 = lst3.sortBy(-_.toLong)\n        val lst5 = lst4.sortBy(-_.toLong)\n\
    \        val lst6 = lst5.sortBy(-_.toLong)\n        val lst7 = lst6.sortBy(-_.toLong)\n\
    \        val lst8 = lst7.sortBy(-_.toLong)\n        val lst9 = lst8.sortBy(-_.toLong)\n\
    \        val lst10 = lst9.sortBy(-_.toLong)\n        val lst11 = lst10.sortBy(-_.toLong)\n\
    \        val lst12 = lst11.sortBy(-_.toLong)\n        val lst13 = lst12.sortBy(-_.toLong)\n\
    \        val lst14 = lst13.sortBy(-_.toLong)\n        val lst15 = lst14.sortBy(-_.toLong)\n\
    \        val lst16 = lst15.sortBy(-_.toLong)\n        val lst17 = lst16.sortBy(-_.toLong)\n\
    \        val lst18 = lst17.sortBy(-_.toLong)\n        val lst19 = lst18.sortBy(-_.toLong)\n\
    \        val lst20 = lst19.sortBy(-_.toLong)\n        val lst21 = lst20.sortBy(-_.toLong)\n\
    \        val lst22 = lst21.sortBy(-_.toLong)\n        val lst23 = lst22.sortBy(-_.toLong)\n\
    \        val lst24 = lst23.sortBy(-_.toLong)\n        val lst25 = lst24.sortBy(-_.toLong)\n\
    \        val lst26 = lst25.sortBy(-_.toLong)\n        val lst27 = lst26.sortBy(-_.toLong)\n\
    \        val lst28 = lst27.sortBy(-_.toLong)\n        val lst29 = lst28.sortBy(-_.toLong)\n\
    \        val lst30 = lst29.sortBy(-_.toLong)\n        val lst31 = lst30.sortBy(-_.toLong)\n\
    \        val lst32 = lst31.sortBy(-_.toLong)\n        val lst33 = lst32.sortBy(-_.toLong)\n\
    \        val lst34 = lst33.sortBy(-_.toLong)\n        val lst35 = lst34.sortBy(-_.toLong)\n\
    \        val lst36 = lst35.sortBy(-_.toLong)", "        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val result = lst.map(row =>\
    \ row.zipWithIndex.filter(x => x == x).map(x => (x._2, x._1)).toList)\n      \
    \  val sorted = result.sortBy(row => row(0))\n        val sortedRow = sorted.map(row\
    \ => row._2.map(x => Tuple2(x, row._1)).toList)\n        val sortedCol = sorted.map(row\
    \ => row._2.map(x => Tuple2(x, row._0)).toList)\n        val sortedRowCol = sortedRow.map(row\
    \ => row.zip(sortedCol))\n        val sortedRowColSorted = sortedRowCol.sortBy(row\
    \ => row._1)\n        val sortedRowColSortedWithIndex = sortedRowColSorted.map(row\
    \ => row._2.map(x => (x._2, x._1)).toList)\n        val sortedRowColSortedWithIndexSorted\
    \ = sortedRowColSortedWithIndex.sortBy(row => row._1)\n        val sortedRowColSortedWithIndexSortedWithIndex\
    \ = sortedRowColSortedWithIndexSorted.map(row => row._2.map(x => (x._2, x._1)).toList)\n\
    \        val sortedRowColSortedWithIndexSortedWithIndexSorted = sortedRowColSortedWithIndexSortedWithIndex.sortBy(row\
    \ => row._1)\n        val sortedRowColSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = sortedRowColSortedWithIndexSortedWithIndexSorted.map(row => row._2.map(x =>\
    \ (x._2, x._1)).toList)\n        val sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = sortedRowColSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(row => row._1)\n\
    \        val sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.map(row\
    \ => row._2.map(x => (x._2, x._1)).toList)\n        val sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(row\
    \ => row._1)\n        val sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = sortedRowColSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.map(row\
    \ => row._2.map(x => (x._2, x._1)).toList)\n        val sortedRowColSortedWithIndex",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)).reverse\n\
    \        val lst3 = lst2.sortBy(_(0)).reverse\n        val lst4 = lst3.sortBy(_(1)).reverse\n\
    \        val lst5 = lst4.sortBy(_(0)).reverse\n        val lst6 = lst5.sortBy(_(1)).reverse\n\
    \        val lst7 = lst6.sortBy(_(0)).reverse\n        val lst8 = lst7.sortBy(_(1)).reverse\n\
    \        val lst9 = lst8.sortBy(_(0)).reverse\n        val lst10 = lst9.sortBy(_(1)).reverse\n\
    \        val lst11 = lst10.sortBy(_(0)).reverse\n        val lst12 = lst11.sortBy(_(1)).reverse\n\
    \        val lst13 = lst12.sortBy(_(0)).reverse\n        val lst14 = lst13.sortBy(_(1)).reverse\n\
    \        val lst15 = lst14.sortBy(_(0)).reverse\n        val lst16 = lst15.sortBy(_(1)).reverse\n\
    \        val lst17 = lst16.sortBy(_(0)).reverse\n        val lst18 = lst17.sortBy(_(1)).reverse\n\
    \        val lst19 = lst18.sortBy(_(0)).reverse\n        val lst20 = lst19.sortBy(_(1)).reverse\n\
    \        val lst21 = lst20.sortBy(_(0)).reverse\n        val lst22 = lst21.sortBy(_(1)).reverse\n\
    \        val lst23 = lst22.sortBy(_(0)).reverse\n        val lst24 = lst23.sortBy(_(1)).reverse\n\
    \        val lst25 = lst24.sortBy(_(0)).reverse\n        val lst26 = lst25.sortBy(_(1)).reverse\n\
    \        val lst27 = lst26.sortBy(_(0)).reverse\n        val lst28 = lst27.sortBy(_(1)).reverse\n\
    \        val lst29 = lst28.sortBy(_(0)).reverse\n        val lst30 = lst29.sortBy(_(1)).reverse\n\
    \        val lst31 = lst30.sortBy(_(0)).reverse\n        val lst32 = lst31.sortBy(_(1)).reverse\n\
    \        val lst33 = lst32.sortBy(_(0)).reverse\n        val lst34 = lst33.sortBy(_(1)).reverse\n\
    \        val lst35 = lst34.sortBy(_(0)).reverse\n        val lst36 = lst35.sortBy(_(1)).reverse\n\
    \        val lst37 = lst36.sortBy(_(0)).reverse\n        val lst38 = lst37.sortBy(_(1)).reverse\n\
    \        val lst39 = lst38.sortBy(_(0)).reverse\n        val lst40 = lst39.sortBy(_(1)).reverse\n\
    \        val lst4", "        val lst2 = lst.sortBy(x => x._1).reverse\n      \
    \  val lst3 = lst2.sortBy(x => x._2).reverse\n        val lst4 = lst3.map(x =>\
    \ (x._1, x._2))\n        lst4.filter(x => x._1 == x).map(x => (x._2, x._1))",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(_)).reverse\n\
    \        val lst3 = lst2.map(x => (x, x))\n        lst3.toList", "        val\
    \ lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x => x._2)\n  \
    \      val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x =>\
    \ x._1)\n        val lst5 = lst4.sortBy(x => x._2)\n        val lst6 = lst5.sortBy(x\
    \ => x._2)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._2)\n        val lst9 = lst8.sortBy(x => x._2)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => x._2)\n        val lst13 = lst12.sortBy(x => x._2)\n        val lst14 = lst13.sortBy(x\
    \ => x._2)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._2)\n        val lst17 = lst16.sortBy(x => x._2)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._2)\n        val lst21 = lst20.sortBy(x => x._2)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._2)\n        val lst25 = lst24.sortBy(x => x._2)\n        val lst26 = lst25.sortBy(x\
    \ => x._2)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._2)\n        val lst29 = lst28.sortBy(x => x._2)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._2)\n        val lst33 = lst32.sortBy(x => x._2)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._2)", "        val rows =\
    \ lst.map(_.size)\n        val cols = lst.map(_.head).max\n        val result\
    \ = lst.map(row => row.zipWithIndex.filter(x => x == x).map(x => (x._2, x._1)).toList)\n\
    \        val rowIndex = result.map(_.map(x => x._2)).flatten.toSet\n        val\
    \ colIndex = result.map(_.map(x => x._1)).flatten.toSet\n        val rowIndex\
    \ = rowIndex.filter(x => x < cols).sortBy(x => -rows(x))\n        val colIndex\
    \ = colIndex.filter(x => x < rows).sortBy(x => -cols(x))\n        val result =\
    \ result.map(row => row.zipWithIndex.filter(x => x._1 == rowIndex(x._2)).map(x\
    \ => (x._2, x._1)).toList)\n        result.map(row => row.zipWithIndex.filter(x\
    \ => x._1 == colIndex(x._2)).map(x => (x._2, x._1)).toList)", "        val lst1\
    \ = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\n    \
    \    val lst3 = lst2.sortBy(_(0)) //ascending\n        val lst4 = lst3.sortBy(_(1))\
    \ //descending\n        val lst5 = lst4.sortBy(_(0)) //ascending\n        val\
    \ lst6 = lst5.sortBy(_(1)) //descending\n        val lst7 = lst6.sortBy(_(0))\
    \ //ascending\n        val lst8 = lst7.sortBy(_(1)) //descending\n        val\
    \ lst9 = lst8.sortBy(_(0)) //ascending\n        val lst10 = lst9.sortBy(_(1))\
    \ //descending\n        val lst11 = lst10.sortBy(_(0)) //ascending\n        val\
    \ lst12 = lst11.sortBy(_(1)) //descending\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending\n        val lst14 = lst13.sortBy(_(1)) //descending\n        val\
    \ lst15 = lst14.sortBy(_(0)) //ascending\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending\n        val lst17 = lst16.sortBy(_(0)) //ascending\n        val\
    \ lst18 = lst17.sortBy(_(1)) //descending\n        val lst19 = lst18.sortBy(_(0))\
    \ //ascending\n        val lst20 = lst19.sortBy(_(1)) //descending\n        val\
    \ lst21 = lst20.sortBy(_(0)) //ascending\n        val lst22 = lst21.sortBy(_(1))\
    \ //descending\n        val lst23 = lst22.sortBy(_(0)) //ascending\n        val\
    \ lst24 = lst23.sortBy(_(1)) //descending\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending\n        val lst26 = lst25.sortBy(_(1)) //descending\n        val\
    \ lst27 = lst26.sortBy(_(0)) //ascending\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending\n        val lst29 = lst28.sortBy(_(0)) //ascending\n        val\
    \ lst30 = lst29.sortBy(_(1)) //descending\n        val lst31 = lst30.sortBy(_(0))\
    \ //ascending\n        val lst32 = lst31.sortBy(_(1)) //descending\n        val\
    \ lst33 = lst32.sortBy(_(0)) //ascending\n", "        val rows = lst.map(row =>\
    \ row.indexOf(x)).sortWith(_ < _)\n        val cols = rows.map(row => lst(row).indexOf(x)).sortWith(_\
    \ < _)\n        val tuples = rows.zip(cols).map(row => (row._1, row._2))\n   \
    \     tuples.sortBy(_._1).reverse", "        val rows = lst.map(_.length)\n  \
    \      val cols = lst.map(_.head.length)\n        val rowIndexes = lst.zipWithIndex.filter(_._1\
    \ == x).map(x => x._2)\n        val colIndexes = lst.zipWithIndex.filter(_._2\
    \ == x).map(x => x._1)\n        val rowIndexesSorted = rowIndexes.sortBy(x =>\
    \ x)\n        val colIndexesSorted = colIndexes.sortBy(x => -x)\n        val result\
    \ = rowIndexesSorted.zip(colIndexesSorted).map(x => (x._1, x._2))\n        result.sortBy(x\
    \ => x._1)", "        val lst1 = lst.sortBy(x => x)\n        val lst2 = lst1.sortBy(x\
    \ => -x.last)\n        val lst3 = lst2.map(x => (x._1, x._2))\n        lst3",
  "        val lst1 = lst.sortWith((x, y) => x.toLong > y.toLong)\n        val lst2\
    \ = lst1.sortWith((x, y) => x.toLong < y.toLong)\n        val lst3 = lst2.sortWith((x,\
    \ y) => x.toLong > y.toLong)\n        val lst4 = lst3.sortWith((x, y) => x.toLong\
    \ < y.toLong)\n        val lst5 = lst4.sortWith((x, y) => x.toLong > y.toLong)\n\
    \        val lst6 = lst5.sortWith((x, y) => x.toLong < y.toLong)\n        val\
    \ lst7 = lst6.sortWith((x, y) => x.toLong > y.toLong)\n        val lst8 = lst7.sortWith((x,\
    \ y) => x.toLong < y.toLong)\n        val lst9 = lst8.sortWith((x, y) => x.toLong\
    \ > y.toLong)\n        val lst10 = lst9.sortWith((x, y) => x.toLong < y.toLong)\n\
    \        val lst11 = lst10.sortWith((x, y) => x.toLong > y.toLong)\n        val\
    \ lst12 = lst11.sortWith((x, y) => x.toLong < y.toLong)\n        val lst13 = lst12.sortWith((x,\
    \ y) => x.toLong > y.toLong)\n        val lst14 = lst13.sortWith((x, y) => x.toLong\
    \ < y.toLong)\n        val lst15 = lst14.sortWith((x, y) => x.toLong > y.toLong)\n\
    \        val lst16 = lst15.sortWith((x, y) => x.toLong < y.toLong)\n        val\
    \ lst17 = lst16.sortWith((x, y) => x.toLong > y.toLong)\n        val lst18 = lst17.sortWith((x,\
    \ y) => x.toLong < y.toLong)\n        val lst19 = lst18.sortWith((x, y) => x.toLong\
    \ > y.toLong)\n        val lst20 = lst19.sortWith((x, y) => x.toLong < y.toLong)\n\
    \        val lst21 = lst20.sortWith((x, y) => x.toLong > y.toLong)\n        val\
    \ lst22 = lst21.sortWith((x, y) => x.toLong < y.toLong)\n        val lst23 = lst22.sortWith((x,\
    \ y) => x.toLong > y.toLong)\n        val lst24 = lst23.sortWith((x, y) => x.toLong\
    \ < y.toLong)\n        val lst25 = lst24.sortWith((x, y) => x.toLong > y.toLong)",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) //descending\
    \ order\n        val lst3 = lst2.sortBy(_(0)) //ascending order\n        val lst4\
    \ = lst3.sortBy(_(1)) //descending order\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending order\n        val lst6 = lst5.sortBy(_(1)) //descending order\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending order\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending order\n        val lst9 = lst8.sortBy(_(0)) //ascending order\n\
    \        val lst10 = lst9.sortBy(_(1)) //descending order\n        val lst11 =\
    \ lst10.sortBy(_(0)) //ascending order\n        val lst12 = lst11.sortBy(_(1))\
    \ //descending order\n        val lst13 = lst12.sortBy(_(0)) //ascending order\n\
    \        val lst14 = lst13.sortBy(_(1)) //descending order\n        val lst15\
    \ = lst14.sortBy(_(0)) //ascending order\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending order\n        val lst17 = lst16.sortBy(_(0)) //ascending order\n\
    \        val lst18 = lst17.sortBy(_(1)) //descending order\n        val lst19\
    \ = lst18.sortBy(_(0)) //ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending order\n        val lst21 = lst20.sortBy(_(0)) //ascending order\n\
    \        val lst22 = lst21.sortBy(_(1)) //descending order\n        val lst23\
    \ = lst22.sortBy(_(0)) //ascending order\n        val lst24 = lst23.sortBy(_(1))\
    \ //descending order\n        val lst25 = lst24.sortBy(_(0)) //ascending order\n\
    \        val lst26 = lst25.sortBy(_(1)) //descending order\n        val lst27\
    \ = lst26.sortBy(_(0)) //ascending order\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending order\n        val lst29 = lst28.sortBy(_(0)) //ascending order\n\
    \        val lst30 = lst29.sortBy(_(1)) //descending order\n        val lst31\
    \ = lst30.sortBy(_(0)) //ascending order\n        val ", "        val lst1 = lst.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst2 = lst1.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst3 = lst2.sortWith((x, y) => x.compareTo(y))\n        val lst4\
    \ = lst3.sortWith((x, y) => y.compareTo(x))\n        val lst5 = lst4.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst6 = lst5.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst7 = lst6.sortWith((x, y) => x.compareTo(y))\n        val lst8\
    \ = lst7.sortWith((x, y) => y.compareTo(x))\n        val lst9 = lst8.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst10 = lst9.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst11 = lst10.sortWith((x, y) => x.compareTo(y))\n        val lst12\
    \ = lst11.sortWith((x, y) => y.compareTo(x))\n        val lst13 = lst12.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst14 = lst13.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst15 = lst14.sortWith((x, y) => x.compareTo(y))\n        val lst16\
    \ = lst15.sortWith((x, y) => y.compareTo(x))\n        val lst17 = lst16.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst18 = lst17.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst19 = lst18.sortWith((x, y) => x.compareTo(y))\n        val lst20\
    \ = lst19.sortWith((x, y) => y.compareTo(x))\n        val lst21 = lst20.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst22 = lst21.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst23 = lst22.sortWith((x, y) => x.compareTo(y))\n        val lst24\
    \ = lst23.sortWith((x, y) => y.compareTo(x))\n        val lst25 = lst24.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst26 = lst25.sortWith((x, y) => y.compareTo(x))\n\
    \        val lst27 = lst26.sortWith((x, y) => x.compareTo(y))\n        val lst28\
    \ = lst27.sortWith((x, y) => y.compareTo(x))\n        val lst29 = lst28.sortWith((x,\
    \ y) => x.compareTo(y))\n        val lst30 = lst29.sortWith((x, y) => y.compareTo(x))",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) // in\
    \ descending order\n        val lst3 = lst2.sortBy(_(0)) // in ascending order\n\
    \        val lst4 = lst3.sortBy(_(1)) // in descending order\n        val lst5\
    \ = lst4.sortBy(_(0)) // in ascending order\n        val lst6 = lst5.sortBy(_(1))\
    \ // in descending order\n        val lst7 = lst6.sortBy(_(0)) // in ascending\
    \ order\n        val lst8 = lst7.sortBy(_(1)) // in descending order\n       \
    \ val lst9 = lst8.sortBy(_(0)) // in ascending order\n        val lst10 = lst9.sortBy(_(1))\
    \ // in descending order\n        val lst11 = lst10.sortBy(_(0)) // in ascending\
    \ order\n        val lst12 = lst11.sortBy(_(1)) // in descending order\n     \
    \   val lst13 = lst12.sortBy(_(0)) // in ascending order\n        val lst14 =\
    \ lst13.sortBy(_(1)) // in descending order\n        val lst15 = lst14.sortBy(_(0))\
    \ // in ascending order\n        val lst16 = lst15.sortBy(_(1)) // in descending\
    \ order\n        val lst17 = lst16.sortBy(_(0)) // in ascending order\n      \
    \  val lst18 = lst17.sortBy(_(1)) // in descending order\n        val lst19 =\
    \ lst18.sortBy(_(0)) // in ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ // in descending order\n        val lst21 = lst20.sortBy(_(0)) // in ascending\
    \ order\n        val lst22 = lst21.sortBy(_(1)) // in descending order\n     \
    \   val lst23 = lst22.sortBy(_(0)) // in ascending order\n        val lst24 =\
    \ lst23.sortBy(_(1)) // in descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ // in ascending order\n        val lst26 = lst25.sortBy(_(1)) // in descending\
    \ order\n        val lst27 = lst26.sortBy(_(0)) // in ascending order\n      \
    \  val lst28 = lst27.sortBy(_(1)) // in descending order\n        val lst29 =\
    \ lst28.sortBy(_(0)) // in ascending order\n        val lst30 = lst29.sort", " \
    \       val rowList = lst.filter(_ contains x)\n        val rowTuples = rowList.map(x\
    \ => (x.indexOf(x), x.lastIndexOf(x)))\n        rowTuples.sortBy(_._1).reverse",
  "        val rows = lst.map(row => row.indexOf(x)).sortBy(row => row).reverse\n\
    \        val cols = rows.map(row => row.indexOf(x)).sortBy(row => -row).reverse\n\
    \        val coords = rows.zip(cols)\n        coords.toList", "        val rows\
    \ = lst.map(row => row.filter(_ != x))\n        val rows = rows.sortBy(row =>\
    \ row(0))\n        val rows = rows.sortBy(row => row(1)).reverse\n        val\
    \ rows = rows.map(row => (row(0), row(1)))\n        rows", "        val rows =\
    \ lst.map(row => row.filter(_ != x).toList)\n        val rows = rows.sortBy(row\
    \ => row.indexOf(x)).sortBy(row => row.reverse.indexOf(x))\n        val rows =\
    \ rows.map(row => (row(0), row(1)))\n        rows", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending\n        val lst4 = lst3.sortBy(_(1)) //descending\n        val\
    \ lst5 = lst4.sortBy(_(0)) //ascending\n        val lst6 = lst5.sortBy(_(1)) //descending\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending\n        val lst9 = lst8.sortBy(_(0)) //ascending\n        val\
    \ lst10 = lst9.sortBy(_(1)) //descending\n        val lst11 = lst10.sortBy(_(0))\
    \ //ascending\n        val lst12 = lst11.sortBy(_(1)) //descending\n        val\
    \ lst13 = lst12.sortBy(_(0)) //ascending\n        val lst14 = lst13.sortBy(_(1))\
    \ //descending\n        val lst15 = lst14.sortBy(_(0)) //ascending\n        val\
    \ lst16 = lst15.sortBy(_(1)) //descending\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending\n        val lst18 = lst17.sortBy(_(1)) //descending\n        val\
    \ lst19 = lst18.sortBy(_(0)) //ascending\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending\n        val lst21 = lst20.sortBy(_(0)) //ascending\n        val\
    \ lst22 = lst21.sortBy(_(1)) //descending\n        val lst23 = lst22.sortBy(_(0))\
    \ //ascending\n        val lst24 = lst23.sortBy(_(1)) //descending\n        val\
    \ lst25 = lst24.sortBy(_(0)) //ascending\n        val lst26 = lst25.sortBy(_(1))\
    \ //descending\n        val lst27 = lst26.sortBy(_(0)) //ascending\n        val\
    \ lst28 = lst27.sortBy(_(1)) //descending\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending\n        val lst30 = lst29.sortBy(_(1)) //descending\n        val\
    \ lst31 = lst30.sortBy(_(0)) //ascending\n        val lst32 = lst31.sortBy(_(1))\
    \ //descending\n        val lst33 = lst32.sortBy(_(0)) //ascending\n", "     \
    \   val rows = lst.map(row => row.filter(_ == x).map(i => i -> row.length))\n\
    \        val sortedRows = rows.sortBy(row => row._1)\n        val sortedColumns\
    \ = sortedRows.map(row => row._2.max)\n        val coordinates = sortedRows.map(row\
    \ => (row._1, row._2))\n        val sortedCoordinates = coordinates.sortBy(row\
    \ => row._2)\n        val sortedCoordinatesReversed = sortedCoordinates.reverse\n\
    \        val sortedCoordinatesReversedReversed = sortedCoordinatesReversed.reverse\n\
    \        val coordinatesToReturn = sortedCoordinatesReversedReversed.map(row =>\
    \ (row._1, row._2))\n        coordinatesToReturn", "        val rowList = mutable.ListBuffer[Tuple2[Long,\
    \ Long]]()\n        var row = 0\n        var col = 0\n        for(i <- 0 until\
    \ lst.length) {\n            val currentRow = lst(i)\n            val currentRowLength\
    \ = currentRow.length\n            for(j <- 0 until currentRowLength) {\n    \
    \            if(currentRow(j) == x) {\n                    rowList += Tuple2(row,\
    \ col)\n                }\n                col += 1\n            }\n         \
    \   row += 1\n            col = 0\n        }\n        rowList.sortBy(_._1)\n \
    \       rowList.sortBy(_._2, descending = true)\n        rowList", "        val\
    \ lst2 = lst.sortWith(_.compare(x, _) < 0)\n        val lst3 = lst2.sortWith(_.compare(x,\
    \ _) > 0)\n        val lst4 = lst3.sortWith(_.compare(x, _) == 0)\n        lst4.map(x\
    \ => (x._1, x._2))", "        val lst2 = lst.sortBy(x => x._1)\n        val lst3\
    \ = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x => x._2)\n      \
    \  val lst5 = lst4.sortBy(x => x._2)\n        val lst6 = lst5.sortBy(x => x._2)\n\
    \        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x =>\
    \ x._2)\n        val lst9 = lst8.sortBy(x => x._2)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._2)\n        val lst12 = lst11.sortBy(x\
    \ => x._2)\n        val lst13 = lst12.sortBy(x => x._2)\n        val lst14 = lst13.sortBy(x\
    \ => x._2)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._2)\n        val lst17 = lst16.sortBy(x => x._2)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._2)\n        val lst21 = lst20.sortBy(x => x._2)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._2)\n        val lst24 = lst23.sortBy(x\
    \ => x._2)\n        val lst25 = lst24.sortBy(x => x._2)\n        val lst26 = lst25.sortBy(x\
    \ => x._2)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._2)\n        val lst29 = lst28.sortBy(x => x._2)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._2)\n        val lst33 = lst32.sortBy(x => x._2)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._2)\n        val lst36 = lst35.sortBy(x\
    \ => x._", "        val rowIndex = lst.zipWithIndex.filter(_._1 == x).map(_._2)\n\
    \        val columnIndex = lst.zipWithIndex.filter(_._2 != x).map(_._2)\n    \
    \    val rowIndex = rowIndex.sortBy(_._1).reverse\n        val columnIndex = columnIndex.sortBy(_._2).reverse\n\
    \        val rowIndex = rowIndex.map(i => (i, lst(i))).toList\n        val columnIndex\
    \ = columnIndex.map(i => (lst(i), i)).toList\n        rowIndex.zip(columnIndex).map(i\
    \ => (i._1, i._2))", "        val lst1 = lst.sortBy(_(0))\n        val lst2 =\
    \ lst1.sortBy(_(_)).reverse\n        val lst3 = lst2.map(x => (x, x))\n      \
    \  lst3.filter(_._1 == x).map(_._2)", "        val row: List[Long] = lst.map(x\
    \ => x).filter(_ == x).sortBy(x => x).reverse\n        val column: List[Long]\
    \ = lst.map(x => x).filter(_ != x).sortBy(x => x).reverse\n        val coord:\
    \ List[Tuple2[Long, Long]] = row.zip(column)\n        coord.sortBy(x => x._1).reverse.sortBy(x\
    \ => x._2).reverse", "        val rows = lst.map(_.size).max\n        val cols\
    \ = lst.map(_.head).max\n        val coords = lst.map(x => (x, 0))\n        coords.sortBy(x\
    \ => x._1)\n        coords.sortBy(x => x._2, (x, y) => -y)\n        coords.map(x\
    \ => (x._1, x._2)).filter(x => x._1 == x).map(x => (x._2, x._1))", "        val\
    \ rows = lst.map(_.length)\n        val cols = lst.map(_.head.length)\n      \
    \  val result = lst.map(row => row.zipWithIndex.filter(x => x == x).map(x => (x._2,\
    \ x._1)).toList)\n        result.sortWith((x, y) => x._1 < y._1).sortWith((x,\
    \ y) => x._2 < y._2)", "        val lst1 = lst.sortBy(_(0))\n        val lst2\
    \ = lst1.sortBy(_(1)) //descending order\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending order\n        val lst4 = lst3.sortBy(_(1)) //descending order\n\
    \        val lst5 = lst4.sortBy(_(0)) //ascending order\n        val lst6 = lst5.sortBy(_(1))\
    \ //descending order\n        val lst7 = lst6.sortBy(_(0)) //ascending order\n\
    \        val lst8 = lst7.sortBy(_(1)) //descending order\n        val lst9 = lst8.sortBy(_(0))\
    \ //ascending order\n        val lst10 = lst9.sortBy(_(1)) //descending order\n\
    \        val lst11 = lst10.sortBy(_(0)) //ascending order\n        val lst12 =\
    \ lst11.sortBy(_(1)) //descending order\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending order\n        val lst14 = lst13.sortBy(_(1)) //descending order\n\
    \        val lst15 = lst14.sortBy(_(0)) //ascending order\n        val lst16 =\
    \ lst15.sortBy(_(1)) //descending order\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending order\n        val lst18 = lst17.sortBy(_(1)) //descending order\n\
    \        val lst19 = lst18.sortBy(_(0)) //ascending order\n        val lst20 =\
    \ lst19.sortBy(_(1)) //descending order\n        val lst21 = lst20.sortBy(_(0))\
    \ //ascending order\n        val lst22 = lst21.sortBy(_(1)) //descending order\n\
    \        val lst23 = lst22.sortBy(_(0)) //ascending order\n        val lst24 =\
    \ lst23.sortBy(_(1)) //descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending order\n        val lst26 = lst25.sortBy(_(1)) //descending order\n\
    \        val lst27 = lst26.sortBy(_(0)) //ascending order\n        val lst28 =\
    \ lst27.sortBy(_(1)) //descending order\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending order\n        val lst30 = lst29.sortBy(_(1)) //descending order\n\
    \        val lst31 = lst30.sortBy(_(0)) //ascending order\n        val ", "  \
    \      val lst2 = lst.sortBy(x => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n\
    \        val lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x =>\
    \ x._1)\n        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x\
    \ => x._2)\n        val lst8 = lst7.sortBy(x => x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._1)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._1)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._1)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._1)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._1)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._1)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._1)\n        val lst36 = lst35.sortBy(x => x._", "        val rows = lst.map(_.length)\n\
    \        val cols = lst(0).length\n        val result = lst.map(row => row.zipWithIndex.filter(x\
    \ => x == x).map(x => (x._2, x._1)).toList)\n        result.sortBy(row => row.reverse.sortBy(col\
    \ => col.reverse))", "        val rows = lst.map(_.length).max\n        val cols\
    \ = lst(0).length\n        val result = new mutable.ListBuffer[(Long, Long)]()\n\
    \        for (i <- 0 until rows) {\n            val row = lst(i).filter(_ != x)\n\
    \            val col = lst(0).filter(_ != x).length\n            result.add((i,\
    \ col))\n        }\n        result.sortBy(_._1).reverse", "        val lst2 =\
    \ lst.sortBy(_.toLong)\n        val lst3 = lst2.sortBy(-_.toLong)\n        val\
    \ lst4 = lst3.sortBy(-_.toLong)\n        val lst5 = lst4.sortBy(-_.toLong)\n \
    \       val lst6 = lst5.sortBy(-_.toLong)\n        val lst7 = lst6.sortBy(-_.toLong)\n\
    \        val lst8 = lst7.sortBy(-_.toLong)\n        val lst9 = lst8.sortBy(-_.toLong)\n\
    \        val lst10 = lst9.sortBy(-_.toLong)\n        val lst11 = lst10.sortBy(-_.toLong)\n\
    \        val lst12 = lst11.sortBy(-_.toLong)\n        val lst13 = lst12.sortBy(-_.toLong)\n\
    \        val lst14 = lst13.sortBy(-_.toLong)\n        val lst15 = lst14.sortBy(-_.toLong)\n\
    \        val lst16 = lst15.sortBy(-_.toLong)\n        val lst17 = lst16.sortBy(-_.toLong)\n\
    \        val lst18 = lst17.sortBy(-_.toLong)\n        val lst19 = lst18.sortBy(-_.toLong)\n\
    \        val lst20 = lst19.sortBy(-_.toLong)\n        val lst21 = lst20.sortBy(-_.toLong)\n\
    \        val lst22 = lst21.sortBy(-_.toLong)\n        val lst23 = lst22.sortBy(-_.toLong)\n\
    \        val lst24 = lst23.sortBy(-_.toLong)\n        val lst25 = lst24.sortBy(-_.toLong)\n\
    \        val lst26 = lst25.sortBy(-_.toLong)\n        val lst27 = lst26.sortBy(-_.toLong)\n\
    \        val lst28 = lst27.sortBy(-_.toLong)\n        val lst29 = lst28.sortBy(-_.toLong)\n\
    \        val lst30 = lst29.sortBy(-_.toLong)\n        val lst31 = lst30.sortBy(-_.toLong)\n\
    \        val lst32 = lst31.sortBy(-_.toLong)\n        val lst33 = lst32.sortBy(-_.toLong)\n\
    \        val lst34 = lst33.sortBy(-_.toLong)\n        val lst35 = lst34.sortBy(-_.toLong)\n\
    \        val lst36 = lst35.sortBy(-_.toLong)", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(_)).reverse\n        val lst3 = lst2.map(x =>\
    \ (x, x)).sortBy(_._1).reverse\n        lst3.map(x => (x._1, x._2))", "      \
    \  val row: List[Tuple2[Long, Long]] = lst.map(row => (row(x), row(x+1)))\n  \
    \      val sortedRow = row.sortBy(row => row._1)\n        val sortedCol = sortedRow.map(row\
    \ => row._2).sortBy(row => row._2)\n        val result: List[Tuple2[Long, Long]]\
    \ = sortedRow.map(row => (row._1, row._2))", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)) // in descending order\n        val lst3\
    \ = lst2.sortBy(_(1)) // in descending order\n        val lst4 = lst3.sortBy(_(0))\
    \ // in ascending order\n        val lst5 = lst4.sortBy(_(1)) // in ascending\
    \ order\n        val lst6 = lst5.sortBy(_(0)) // in ascending order\n        val\
    \ lst7 = lst6.sortBy(_(1)) // in ascending order\n        val lst8 = lst7.sortBy(_(0))\
    \ // in ascending order\n        val lst9 = lst8.sortBy(_(1)) // in ascending\
    \ order\n        val lst10 = lst9.sortBy(_(0)) // in ascending order\n       \
    \ val lst11 = lst10.sortBy(_(1)) // in ascending order\n        val lst12 = lst11.sortBy(_(0))\
    \ // in ascending order\n        val lst13 = lst12.sortBy(_(1)) // in ascending\
    \ order\n        val lst14 = lst13.sortBy(_(0)) // in ascending order\n      \
    \  val lst15 = lst14.sortBy(_(1)) // in ascending order\n        val lst16 = lst15.sortBy(_(0))\
    \ // in ascending order\n        val lst17 = lst16.sortBy(_(1)) // in ascending\
    \ order\n        val lst18 = lst17.sortBy(_(0)) // in ascending order\n      \
    \  val lst19 = lst18.sortBy(_(1)) // in ascending order\n        val lst20 = lst19.sortBy(_(0))\
    \ // in ascending order\n        val lst21 = lst20.sortBy(_(1)) // in ascending\
    \ order\n        val lst22 = lst21.sortBy(_(0)) // in ascending order\n      \
    \  val lst23 = lst22.sortBy(_(1)) // in ascending order\n        val lst24 = lst23.sortBy(_(0))\
    \ // in ascending order\n        val lst25 = lst24.sortBy(_(1)) // in ascending\
    \ order\n        val lst26 = lst25.sortBy(_(0)) // in ascending order\n      \
    \  val lst27 = lst26.sortBy(_(1)) // in ascending order\n        val lst28 = lst27.sortBy(_(0))\
    \ // in ascending order\n        val lst29 = lst28.sortBy(_(1)) // in ascending\
    \ order\n        val lst30 = lst29.sort", "        val lst2 = lst.map(_.toList)\n\
    \        val lst3 = lst2.map(x => x :+ x)\n        val lst4 = lst3.map(x => x.sortBy(_))\n\
    \        val lst5 = lst4.map(x => x.sortBy(_.reverse))\n        val lst6 = lst5.map(x\
    \ => x.sortBy(_.reverse))\n        val lst7 = lst6.map(x => x.sortBy(_.reverse))\n\
    \        val lst8 = lst7.map(x => x.sortBy(_.reverse))\n        val lst9 = lst8.map(x\
    \ => x.sortBy(_.reverse))\n        val lst10 = lst9.map(x => x.sortBy(_.reverse))\n\
    \        val lst11 = lst10.map(x => x.sortBy(_.reverse))\n        val lst12 =\
    \ lst11.map(x => x.sortBy(_.reverse))\n        val lst13 = lst12.map(x => x.sortBy(_.reverse))\n\
    \        val lst14 = lst13.map(x => x.sortBy(_.reverse))\n        val lst15 =\
    \ lst14.map(x => x.sortBy(_.reverse))\n        val lst16 = lst15.map(x => x.sortBy(_.reverse))\n\
    \        val lst17 = lst16.map(x => x.sortBy(_.reverse))\n        val lst18 =\
    \ lst17.map(x => x.sortBy(_.reverse))\n        val lst19 = lst18.map(x => x.sortBy(_.reverse))\n\
    \        val lst20 = lst19.map(x => x.sortBy(_.reverse))\n        val lst21 =\
    \ lst20.map(x => x.sortBy(_.reverse))\n        val lst22 = lst21.map(x => x.sortBy(_.reverse))\n\
    \        val lst23 = lst22.map(x => x.sortBy(_.reverse))\n        val lst24 =\
    \ lst23.map(x => x.sortBy(_.reverse))\n        val lst25 = lst24.map(x => x.sortBy(_.reverse))\n\
    \        val lst26 = lst25.map(x => x.sortBy(_.reverse))\n        val lst27 =\
    \ lst26.map(x => x.sortBy(_.reverse))\n        val lst28 = lst27.map(x => x.sortBy(_.reverse))\n\
    \        val lst29 = lst28.map(x => x.sortBy(_.reverse))\n        val lst30 =\
    \ lst29.map(x => x.sortBy(_.reverse))\n        val lst31 = lst30.map(x => x.sortBy(_.reverse))\n\
    \        val lst32 = lst31.map(x => x.sortBy(_.reverse))\n        val lst33",
  "        val rows = lst.map(row => row.map(x => Tuple2(x, row(x))))\n        val\
    \ rows = rows.sortBy(row => row._1)\n        val rows = rows.sortBy(row => row._2,\
    \ descending = true)\n        val rows = rows.map(row => Tuple2(row._1, row._2))\n\
    \        rows", "        val lst1 = lst.sortWith((x, y) => x.toLong > y.toLong)\n\
    \        val lst2 = lst1.sortWith((x, y) => x.toLong < y.toLong)\n        val\
    \ lst3 = lst2.sortWith((x, y) => x.toLong > y.toLong)\n        val lst4 = lst3.sortWith((x,\
    \ y) => x.toLong < y.toLong)\n        val lst5 = lst4.sortWith((x, y) => x.toLong\
    \ > y.toLong)\n        val lst6 = lst5.sortWith((x, y) => x.toLong < y.toLong)\n\
    \        val lst7 = lst6.sortWith((x, y) => x.toLong > y.toLong)\n        val\
    \ lst8 = lst7.sortWith((x, y) => x.toLong < y.toLong)\n        val lst9 = lst8.sortWith((x,\
    \ y) => x.toLong > y.toLong)\n        val lst10 = lst9.sortWith((x, y) => x.toLong\
    \ < y.toLong)\n        val lst11 = lst10.sortWith((x, y) => x.toLong > y.toLong)\n\
    \        val lst12 = lst11.sortWith((x, y) => x.toLong < y.toLong)\n        val\
    \ lst13 = lst12.sortWith((x, y) => x.toLong > y.toLong)\n        val lst14 = lst13.sortWith((x,\
    \ y) => x.toLong < y.toLong)\n        val lst15 = lst14.sortWith((x, y) => x.toLong\
    \ > y.toLong)\n        val lst16 = lst15.sortWith((x, y) => x.toLong < y.toLong)\n\
    \        val lst17 = lst16.sortWith((x, y) => x.toLong > y.toLong)\n        val\
    \ lst18 = lst17.sortWith((x, y) => x.toLong < y.toLong)\n        val lst19 = lst18.sortWith((x,\
    \ y) => x.toLong > y.toLong)\n        val lst20 = lst19.sortWith((x, y) => x.toLong\
    \ < y.toLong)\n        val lst21 = lst20.sortWith((x, y) => x.toLong > y.toLong)\n\
    \        val lst22 = lst21.sortWith((x, y) => x.toLong < y.toLong)\n        val\
    \ lst23 = lst22.sortWith((x, y) => x.toLong > y.toLong)\n        val lst24 = lst23.sortWith((x,\
    \ y) => x.toLong < y.toLong)\n        val lst25 = lst24.sortWith((x, y) => x.toLong\
    \ > y.toLong)", "        val rows = lst.map(_.length)\n        val cols = lst(0).length\n\
    \        val result = new mutable.ListBuffer[Tuple2[Long, Long]]()\n        val\
    \ rowIndex = new mutable.ListBuffer[Long]()\n        val colIndex = new mutable.ListBuffer[Long]()\n\
    \        val row = new mutable.ListBuffer[Long]()\n        val col = new mutable.ListBuffer[Long]()\n\
    \        val rowMax = rows.max\n        val colMax = cols.max\n        val rowMin\
    \ = rows.min\n        val colMin = cols.min\n        val rowRange = rowMax - rowMin\n\
    \        val colRange = colMax - colMin\n        val rowRange2 = rowRange / 2\n\
    \        val colRange2 = colRange / 2\n        val rowRange3 = rowRange / 3\n\
    \        val colRange3 = colRange / 3\n        val rowRange4 = rowRange / 4\n\
    \        val colRange4 = colRange / 4\n        val rowRange5 = rowRange / 5\n\
    \        val colRange5 = colRange / 5\n        val rowRange6 = rowRange / 6\n\
    \        val colRange6 = colRange / 6\n        val rowRange7 = rowRange / 7\n\
    \        val colRange7 = colRange / 7\n        val rowRange8 = rowRange / 8\n\
    \        val colRange8 = colRange / 8\n        val rowRange9 = rowRange / 9\n\
    \        val colRange9 = colRange / 9\n        val rowRange10 = rowRange / 10\n\
    \        val colRange10 = colRange / 10\n        val rowRange11 = rowRange / 11\n\
    \        val colRange11 = colRange / 11\n        val rowRange12 = rowRange / 12\n\
    \        val colRange12 = colRange / 12\n        val rowRange13 = rowRange / 13\n\
    \        val colRange13 = colRange / 13\n        val rowRange14 = rowRange / 14\n\
    \        val colRange14 = colRange / 14\n        val rowRange15 = rowRange / 15\n\
    \        val colRange15 = colRange / 15\n        val rowRange16 = rowRange / 16\n\
    \        val colRange16 = colRange / 16\n        val rowRange17 = rowRange / 17\n\
    \        val colRange17 = colRange / 17\n        val rowRange18 = rowRange / 18\n\
    \        val colRange18 = colRange / 18\n        val rowRange19 = rowRange / 19\n\
    \        val colRange19 = ", "        val lst1 = lst.sortBy(_(0))\n        val\
    \ lst2 = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0))\
    \ //ascending\n        val lst4 = lst3.sortBy(_(1)) //descending\n        val\
    \ lst5 = lst4.sortBy(_(0)) //ascending\n        val lst6 = lst5.sortBy(_(1)) //descending\n\
    \        val lst7 = lst6.sortBy(_(0)) //ascending\n        val lst8 = lst7.sortBy(_(1))\
    \ //descending\n        val lst9 = lst8.sortBy(_(0)) //ascending\n        val\
    \ lst10 = lst9.sortBy(_(1)) //descending\n        val lst11 = lst10.sortBy(_(0))\
    \ //ascending\n        val lst12 = lst11.sortBy(_(1)) //descending\n        val\
    \ lst13 = lst12.sortBy(_(0)) //ascending\n        val lst14 = lst13.sortBy(_(1))\
    \ //descending\n        val lst15 = lst14.sortBy(_(0)) //ascending\n        val\
    \ lst16 = lst15.sortBy(_(1)) //descending\n        val lst17 = lst16.sortBy(_(0))\
    \ //ascending\n        val lst18 = lst17.sortBy(_(1)) //descending\n        val\
    \ lst19 = lst18.sortBy(_(0)) //ascending\n        val lst20 = lst19.sortBy(_(1))\
    \ //descending\n        val lst21 = lst20.sortBy(_(0)) //ascending\n        val\
    \ lst22 = lst21.sortBy(_(1)) //descending\n        val lst23 = lst22.sortBy(_(0))\
    \ //ascending\n        val lst24 = lst23.sortBy(_(1)) //descending\n        val\
    \ lst25 = lst24.sortBy(_(0)) //ascending\n        val lst26 = lst25.sortBy(_(1))\
    \ //descending\n        val lst27 = lst26.sortBy(_(0)) //ascending\n        val\
    \ lst28 = lst27.sortBy(_(1)) //descending\n        val lst29 = lst28.sortBy(_(0))\
    \ //ascending\n        val lst30 = lst29.sortBy(_(1)) //descending\n        val\
    \ lst31 = lst30.sortBy(_(0)) //ascending\n        val lst32 = lst31.sortBy(_(1))\
    \ //descending\n        val lst33 = lst32.sortBy(_(0)) //ascending\n", "     \
    \   val lst2 = lst.sortWith((x, y) => x.compare(y))\n        val lst3 = lst2.sortWith((x,\
    \ y) => y.compare(x))\n        val lst4 = lst3.sortWith((x, y) => x.compare(y))\n\
    \        val lst5 = lst4.sortWith((x, y) => y.compare(x))\n        val lst6 =\
    \ lst5.sortWith((x, y) => x.compare(y))\n        val lst7 = lst6.sortWith((x,\
    \ y) => y.compare(x))\n        val lst8 = lst7.sortWith((x, y) => x.compare(y))\n\
    \        val lst9 = lst8.sortWith((x, y) => y.compare(x))\n        val lst10 =\
    \ lst9.sortWith((x, y) => x.compare(y))\n        val lst11 = lst10.sortWith((x,\
    \ y) => y.compare(x))\n        val lst12 = lst11.sortWith((x, y) => x.compare(y))\n\
    \        val lst13 = lst12.sortWith((x, y) => y.compare(x))\n        val lst14\
    \ = lst13.sortWith((x, y) => x.compare(y))\n        val lst15 = lst14.sortWith((x,\
    \ y) => y.compare(x))\n        val lst16 = lst15.sortWith((x, y) => x.compare(y))\n\
    \        val lst17 = lst16.sortWith((x, y) => y.compare(x))\n        val lst18\
    \ = lst17.sortWith((x, y) => x.compare(y))\n        val lst19 = lst18.sortWith((x,\
    \ y) => y.compare(x))\n        val lst20 = lst19.sortWith((x, y) => x.compare(y))\n\
    \        val lst21 = lst20.sortWith((x, y) => y.compare(x))\n        val lst22\
    \ = lst21.sortWith((x, y) => x.compare(y))\n        val lst23 = lst22.sortWith((x,\
    \ y) => y.compare(x))\n        val lst24 = lst23.sortWith((x, y) => x.compare(y))\n\
    \        val lst25 = lst24.sortWith((x, y) => y.compare(x))\n        val lst26\
    \ = lst25.sortWith((x, y) => x.compare(y))\n        val lst27 = lst26.sortWith((x,\
    \ y) => y.compare(x))\n        val lst28 = lst27.sortWith((x, y) => x.compare(y))\n\
    \        val lst29 = lst28.sortWith((x, y) => y.compare(x))\n        val lst30\
    \ = lst29.sortWith((x, y) => x.compare(y))\n        val lst31 = lst30.sortWith((x,\
    \ y) => y.compare(x))\n        val lst32 = lst31.sortWith((x, y) => x.compare(y))\n\
    \        val lst33 = lst32.sortWith((x, y", "        val rows = lst.map(_.length)\n\
    \        val cols = lst.map(_.head.length)\n        val rowIndex = lst.zipWithIndex.filter(x\
    \ => x._1 == x).map(x => x._2).max\n        val colIndex = lst.zipWithIndex.filter(x\
    \ => x._2 == rowIndex).map(x => x._1).max\n        val rowTuple = lst.map(x =>\
    \ Tuple2(x.head(rowIndex), x.tail(rowIndex)))\n        val colTuple = lst.map(x\
    \ => Tuple2(x.head(colIndex), x.tail(colIndex)))\n        val rowTupleSorted =\
    \ rowTuple.sortBy(x => x._1)\n        val colTupleSorted = colTuple.sortBy(x =>\
    \ x._2)\n        val tuples = rowTupleSorted.zip(colTupleSorted).map(x => Tuple2(x._1,\
    \ x._2))\n        tuples", "        val lst1 = lst.sortBy(_(0))\n        val lst2\
    \ = lst1.sortBy(_(1)) //descending\n        val lst3 = lst2.sortBy(_(0)) //ascending\n\
    \        val lst4 = lst3.sortBy(_(1)) //descending\n        val lst5 = lst4.sortBy(_(0))\
    \ //ascending\n        val lst6 = lst5.sortBy(_(1)) //descending\n        val\
    \ lst7 = lst6.sortBy(_(0)) //ascending\n        val lst8 = lst7.sortBy(_(1)) //descending\n\
    \        val lst9 = lst8.sortBy(_(0)) //ascending\n        val lst10 = lst9.sortBy(_(1))\
    \ //descending\n        val lst11 = lst10.sortBy(_(0)) //ascending\n        val\
    \ lst12 = lst11.sortBy(_(1)) //descending\n        val lst13 = lst12.sortBy(_(0))\
    \ //ascending\n        val lst14 = lst13.sortBy(_(1)) //descending\n        val\
    \ lst15 = lst14.sortBy(_(0)) //ascending\n        val lst16 = lst15.sortBy(_(1))\
    \ //descending\n        val lst17 = lst16.sortBy(_(0)) //ascending\n        val\
    \ lst18 = lst17.sortBy(_(1)) //descending\n        val lst19 = lst18.sortBy(_(0))\
    \ //ascending\n        val lst20 = lst19.sortBy(_(1)) //descending\n        val\
    \ lst21 = lst20.sortBy(_(0)) //ascending\n        val lst22 = lst21.sortBy(_(1))\
    \ //descending\n        val lst23 = lst22.sortBy(_(0)) //ascending\n        val\
    \ lst24 = lst23.sortBy(_(1)) //descending\n        val lst25 = lst24.sortBy(_(0))\
    \ //ascending\n        val lst26 = lst25.sortBy(_(1)) //descending\n        val\
    \ lst27 = lst26.sortBy(_(0)) //ascending\n        val lst28 = lst27.sortBy(_(1))\
    \ //descending\n        val lst29 = lst28.sortBy(_(0)) //ascending\n        val\
    \ lst30 = lst29.sortBy(_(1)) //descending\n        val lst31 = lst30.sortBy(_(0))\
    \ //ascending\n        val lst32 = lst31.sortBy(_(1)) //descending\n        val\
    \ lst33 = lst32.sortBy(_(0)) //ascending\n", "        val lst2 = lst.sortBy(_(0))\n\
    \        val lst3 = lst2.sortBy(_(_)).reverse\n        val lst4 = lst3.map(_._2)\n\
    \        val lst5 = lst4.filter(_ != x)\n        lst5.map(x => (x, x)).toList",
  "        val lst1 = lst.sortBy(x => x._1)\n        val lst2 = lst1.sortBy(x => -x._2)\n\
    \        val lst3 = lst2.map(x => (x._1, x._2))\n        lst3.filter(x => x._1\
    \ == x).map(x => (x._1, x._2))", "        val lst2 = lst.sortWith(_.compareTo(x)\
    \ < 0)\n        val lst3 = lst2.sortWith(_.compareTo(_) < 0)\n        val lst4\
    \ = lst3.sortWith(_.compareTo(_) < 0)\n        val lst5 = lst4.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst6 = lst5.sortWith(_.compareTo(_) < 0)\n        val lst7\
    \ = lst6.sortWith(_.compareTo(_) < 0)\n        val lst8 = lst7.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst9 = lst8.sortWith(_.compareTo(_) < 0)\n        val lst10\
    \ = lst9.sortWith(_.compareTo(_) < 0)\n        val lst11 = lst10.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst12 = lst11.sortWith(_.compareTo(_) < 0)\n        val lst13\
    \ = lst12.sortWith(_.compareTo(_) < 0)\n        val lst14 = lst13.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst15 = lst14.sortWith(_.compareTo(_) < 0)\n        val lst16\
    \ = lst15.sortWith(_.compareTo(_) < 0)\n        val lst17 = lst16.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst18 = lst17.sortWith(_.compareTo(_) < 0)\n        val lst19\
    \ = lst18.sortWith(_.compareTo(_) < 0)\n        val lst20 = lst19.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst21 = lst20.sortWith(_.compareTo(_) < 0)\n        val lst22\
    \ = lst21.sortWith(_.compareTo(_) < 0)\n        val lst23 = lst22.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst24 = lst23.sortWith(_.compareTo(_) < 0)\n        val lst25\
    \ = lst24.sortWith(_.compareTo(_) < 0)\n        val lst26 = lst25.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst27 = lst26.sortWith(_.compareTo(_) < 0)\n        val lst28\
    \ = lst27.sortWith(_.compareTo(_) < 0)\n        val lst29 = lst28.sortWith(_.compareTo(_)\
    \ < 0)\n        val lst30 = lst29.sortWith(_.compareTo(_) < 0)\n        val lst31\
    \ = lst30.sortWith(_.compareTo(_) < 0)\n        val lst32 = lst31.sortWith(_.compareTo",
  "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1)) \n  \
    \      val lst3 = lst2.sortBy(_(_))\n        val lst4 = lst3.sortBy(_(_))\n  \
    \      val lst5 = lst4.sortBy(_(_))\n        val lst6 = lst5.sortBy(_(_))\n  \
    \      val lst7 = lst6.sortBy(_(_))\n        val lst8 = lst7.sortBy(_(_))\n  \
    \      val lst9 = lst8.sortBy(_(_))\n        val lst10 = lst9.sortBy(_(_))\n \
    \       val lst11 = lst10.sortBy(_(_))\n        val lst12 = lst11.sortBy(_(_))\n\
    \        val lst13 = lst12.sortBy(_(_))\n        val lst14 = lst13.sortBy(_(_))\n\
    \        val lst15 = lst14.sortBy(_(_))\n        val lst16 = lst15.sortBy(_(_))\n\
    \        val lst17 = lst16.sortBy(_(_))\n        val lst18 = lst17.sortBy(_(_))\n\
    \        val lst19 = lst18.sortBy(_(_))\n        val lst20 = lst19.sortBy(_(_))\n\
    \        val lst21 = lst20.sortBy(_(_))\n        val lst22 = lst21.sortBy(_(_))\n\
    \        val lst23 = lst22.sortBy(_(_))\n        val lst24 = lst23.sortBy(_(_))\n\
    \        val lst25 = lst24.sortBy(_(_))\n        val lst26 = lst25.sortBy(_(_))\n\
    \        val lst27 = lst26.sortBy(_(_))\n        val lst28 = lst27.sortBy(_(_))\n\
    \        val lst29 = lst28.sortBy(_(_))\n        val lst30 = lst29.sortBy(_(_))\n\
    \        val lst31 = lst30.sortBy(_(_))\n        val lst32 = lst31.sortBy(_(_))\n\
    \        val lst33 = lst32.sortBy(_(_))\n        val lst34 = lst33.sortBy(_(_))\n\
    \        val lst35 = lst34.sortBy(_(_))\n        val lst36 = lst35.sortBy(_(_))\n\
    \        val lst37 = lst36.sortBy(_(_))\n        val lst38 = lst37.sortBy(_(_))\n\
    \        val lst39 = lst38.sortBy(_(_))\n        val lst40 = lst39.sortBy(_(_))\n\
    \        val lst4", "        val lst1 = lst.sortBy(x => x._1)\n        val lst2\
    \ = lst1.sortBy(x => x._2)\n        val lst3 = lst2.sortBy(x => -x._2)\n     \
    \   val lst4 = lst3.sortBy(x => -x._1)\n        val lst5 = lst4.sortBy(x => x._1)\n\
    \        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x =>\
    \ -x._2)\n        val lst8 = lst7.sortBy(x => -x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._1)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => -x._2)\n        val lst12 = lst11.sortBy(x => -x._1)\n        val lst13 =\
    \ lst12.sortBy(x => x._1)\n        val lst14 = lst13.sortBy(x => x._2)\n     \
    \   val lst15 = lst14.sortBy(x => -x._2)\n        val lst16 = lst15.sortBy(x =>\
    \ -x._1)\n        val lst17 = lst16.sortBy(x => x._1)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => -x._2)\n        val lst20 =\
    \ lst19.sortBy(x => -x._1)\n        val lst21 = lst20.sortBy(x => x._1)\n    \
    \    val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x =>\
    \ -x._2)\n        val lst24 = lst23.sortBy(x => -x._1)\n        val lst25 = lst24.sortBy(x\
    \ => x._1)\n        val lst26 = lst25.sortBy(x => x._2)\n        val lst27 = lst26.sortBy(x\
    \ => -x._2)\n        val lst28 = lst27.sortBy(x => -x._1)\n        val lst29 =\
    \ lst28.sortBy(x => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n     \
    \   val lst31 = lst30.sortBy(x => -x._2)\n        val lst32 = lst31.sortBy(x =>\
    \ -x._1)\n        val lst33 = lst32.sortBy(x => x._1)\n        val lst34 = lst33.sortBy(x\
    \ => x._", "        val lst2 = lst.sortBy(x => x._1)\n        val lst3 = lst2.sortBy(x\
    \ => -x._2)\n        val lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x\
    \ => -x._2)\n        val lst6 = lst5.sortBy(x => x._1)\n        val lst7 = lst6.sortBy(x\
    \ => -x._1)\n        val lst8 = lst7.sortBy(x => x._2)\n        val lst9 = lst8.sortBy(x\
    \ => -x._2)\n        val lst10 = lst9.sortBy(x => x._1)\n        val lst11 = lst10.sortBy(x\
    \ => -x._1)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 =\
    \ lst12.sortBy(x => -x._2)\n        val lst14 = lst13.sortBy(x => x._1)\n    \
    \    val lst15 = lst14.sortBy(x => -x._1)\n        val lst16 = lst15.sortBy(x\
    \ => x._2)\n        val lst17 = lst16.sortBy(x => -x._2)\n        val lst18 =\
    \ lst17.sortBy(x => x._1)\n        val lst19 = lst18.sortBy(x => -x._1)\n    \
    \    val lst20 = lst19.sortBy(x => x._2)\n        val lst21 = lst20.sortBy(x =>\
    \ -x._2)\n        val lst22 = lst21.sortBy(x => x._1)\n        val lst23 = lst22.sortBy(x\
    \ => -x._1)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 =\
    \ lst24.sortBy(x => -x._2)\n        val lst26 = lst25.sortBy(x => x._1)\n    \
    \    val lst27 = lst26.sortBy(x => -x._1)\n        val lst28 = lst27.sortBy(x\
    \ => x._2)\n        val lst29 = lst28.sortBy(x => -x._2)\n        val lst30 =\
    \ lst29.sortBy(x => x._1)\n        val lst31 = lst30.sortBy(x => -x._1)\n    \
    \    val lst32 = lst31.sortBy(x => x._2)\n        val lst33 = lst32.sortBy(x =>\
    \ -x._2)\n        val lst34 = lst33.sortBy(x => x._1)\n        val lst35 = lst34.sortBy(x\
    \ => -", "        val lst1 = lst.sortBy(_(0))\n        val lst2 = lst1.sortBy(_(1))\
    \ // in descending order\n        val lst3 = lst2.sortBy(_(0)) // in ascending\
    \ order\n        val lst4 = lst3.sortBy(_(1)) // in descending order\n       \
    \ val lst5 = lst4.sortBy(_(0)) // in ascending order\n        val lst6 = lst5.sortBy(_(1))\
    \ // in descending order\n        val lst7 = lst6.sortBy(_(0)) // in ascending\
    \ order\n        val lst8 = lst7.sortBy(_(1)) // in descending order\n       \
    \ val lst9 = lst8.sortBy(_(0)) // in ascending order\n        val lst10 = lst9.sortBy(_(1))\
    \ // in descending order\n        val lst11 = lst10.sortBy(_(0)) // in ascending\
    \ order\n        val lst12 = lst11.sortBy(_(1)) // in descending order\n     \
    \   val lst13 = lst12.sortBy(_(0)) // in ascending order\n        val lst14 =\
    \ lst13.sortBy(_(1)) // in descending order\n        val lst15 = lst14.sortBy(_(0))\
    \ // in ascending order\n        val lst16 = lst15.sortBy(_(1)) // in descending\
    \ order\n        val lst17 = lst16.sortBy(_(0)) // in ascending order\n      \
    \  val lst18 = lst17.sortBy(_(1)) // in descending order\n        val lst19 =\
    \ lst18.sortBy(_(0)) // in ascending order\n        val lst20 = lst19.sortBy(_(1))\
    \ // in descending order\n        val lst21 = lst20.sortBy(_(0)) // in ascending\
    \ order\n        val lst22 = lst21.sortBy(_(1)) // in descending order\n     \
    \   val lst23 = lst22.sortBy(_(0)) // in ascending order\n        val lst24 =\
    \ lst23.sortBy(_(1)) // in descending order\n        val lst25 = lst24.sortBy(_(0))\
    \ // in ascending order\n        val lst26 = lst25.sortBy(_(1)) // in descending\
    \ order\n        val lst27 = lst26.sortBy(_(0)) // in ascending order\n      \
    \  val lst28 = lst27.sortBy(_(1)) // in descending order\n        val lst29 =\
    \ lst28.sortBy(_(0)) // in ascending order\n        val lst30 = lst29.sort", " \
    \       val lst2 = lst.sortBy(_(0))\n        val lst3 = lst2.sortBy(_(1)) //descending\
    \ order\n        val lst4 = lst3.sortBy(_._1) //ascending order\n        val lst5\
    \ = lst4.sortBy(_._2) //descending order\n        val lst6 = lst5.sortBy(_._2)\
    \ //ascending order\n        val lst7 = lst6.sortBy(_._1) //descending order\n\
    \        val lst8 = lst7.sortBy(_._0) //ascending order\n        val lst9 = lst8.sortBy(_._0)\
    \ //ascending order\n        val lst10 = lst9.sortBy(_._1) //descending order\n\
    \        val lst11 = lst10.sortBy(_._1) //ascending order\n        val lst12 =\
    \ lst11.sortBy(_._2) //descending order\n        val lst13 = lst12.sortBy(_._2)\
    \ //ascending order\n        val lst14 = lst13.sortBy(_._0) //ascending order\n\
    \        val lst15 = lst14.sortBy(_._0) //ascending order\n        val lst16 =\
    \ lst15.sortBy(_._1) //descending order\n        val lst17 = lst16.sortBy(_._1)\
    \ //ascending order\n        val lst18 = lst17.sortBy(_._2) //descending order\n\
    \        val lst19 = lst18.sortBy(_._2) //ascending order\n        val lst20 =\
    \ lst19.sortBy(_._0) //ascending order\n        val lst21 = lst20.sortBy(_._0)\
    \ //ascending order\n        val lst22 = lst21.sortBy(_._1) //descending order\n\
    \        val lst23 = lst22.sortBy(_._1) //ascending order\n        val lst24 =\
    \ lst23.sortBy(_._2) //descending order\n        val lst25 = lst24.sortBy(_._2)\
    \ //ascending order\n        val lst26 = lst25.sortBy(_._0) //ascending order\n\
    \        val lst27 = lst26.sortBy(_._0) //ascending order\n        val lst28 =\
    \ lst27.sortBy(_._1) //descending order\n        val lst29 = lst28.sortBy(_._1)\
    \ //ascending order\n        val lst30 = lst29.sortBy(_._2) //descending order\n\
    \        val lst31 = lst30.sortBy(_._2) //ascending order\n        val lst32 =\
    \ lst31.sortBy(_._0) //ascending order\n        ", "        val lst1 = lst.sortBy(_(0))\n\
    \        val lst2 = lst1.sortBy(_(1)).reverse\n        val lst3 = lst2.sortBy(_(0)).reverse\n\
    \        val lst4 = lst3.sortBy(_(1)).reverse\n        val lst5 = lst4.sortBy(_(0)).reverse\n\
    \        val lst6 = lst5.sortBy(_(1)).reverse\n        val lst7 = lst6.sortBy(_(0)).reverse\n\
    \        val lst8 = lst7.sortBy(_(1)).reverse\n        val lst9 = lst8.sortBy(_(0)).reverse\n\
    \        val lst10 = lst9.sortBy(_(1)).reverse\n        val lst11 = lst10.sortBy(_(0)).reverse\n\
    \        val lst12 = lst11.sortBy(_(1)).reverse\n        val lst13 = lst12.sortBy(_(0)).reverse\n\
    \        val lst14 = lst13.sortBy(_(1)).reverse\n        val lst15 = lst14.sortBy(_(0)).reverse\n\
    \        val lst16 = lst15.sortBy(_(1)).reverse\n        val lst17 = lst16.sortBy(_(0)).reverse\n\
    \        val lst18 = lst17.sortBy(_(1)).reverse\n        val lst19 = lst18.sortBy(_(0)).reverse\n\
    \        val lst20 = lst19.sortBy(_(1)).reverse\n        val lst21 = lst20.sortBy(_(0)).reverse\n\
    \        val lst22 = lst21.sortBy(_(1)).reverse\n        val lst23 = lst22.sortBy(_(0)).reverse\n\
    \        val lst24 = lst23.sortBy(_(1)).reverse\n        val lst25 = lst24.sortBy(_(0)).reverse\n\
    \        val lst26 = lst25.sortBy(_(1)).reverse\n        val lst27 = lst26.sortBy(_(0)).reverse\n\
    \        val lst28 = lst27.sortBy(_(1)).reverse\n        val lst29 = lst28.sortBy(_(0)).reverse\n\
    \        val lst30 = lst29.sortBy(_(1)).reverse\n        val lst31 = lst30.sortBy(_(0)).reverse\n\
    \        val lst32 = lst31.sortBy(_(1)).reverse\n        val lst33 = lst32.sortBy(_(0)).reverse\n\
    \        val lst34 = lst33.sortBy(_(1)).reverse\n        val lst35 = lst34.sortBy(_(0)).reverse\n\
    \        val lst36 = lst35.sortBy(_(1)).reverse\n        val lst37 = lst36.sortBy(_(0)).reverse\n\
    \        val lst38 = lst37.sortBy(_(1)).reverse\n        val lst39 = lst38.sortBy(_(0)).reverse\n\
    \        val lst40 = lst39.sortBy(_(1)).reverse\n        val lst4", "        val\
    \ lst2 = lst.sortWith((x, y) => x.compare(y))\n        val lst3 = lst2.sortWith((x,\
    \ y) => y.compare(x))\n        val lst4 = lst3.sortWith((x, y) => x.compare(y))\n\
    \        val lst5 = lst4.sortWith((x, y) => y.compare(x))\n        val lst6 =\
    \ lst5.sortWith((x, y) => x.compare(y))\n        val lst7 = lst6.sortWith((x,\
    \ y) => y.compare(x))\n        val lst8 = lst7.sortWith((x, y) => x.compare(y))\n\
    \        val lst9 = lst8.sortWith((x, y) => y.compare(x))\n        val lst10 =\
    \ lst9.sortWith((x, y) => x.compare(y))\n        val lst11 = lst10.sortWith((x,\
    \ y) => y.compare(x))\n        val lst12 = lst11.sortWith((x, y) => x.compare(y))\n\
    \        val lst13 = lst12.sortWith((x, y) => y.compare(x))\n        val lst14\
    \ = lst13.sortWith((x, y) => x.compare(y))\n        val lst15 = lst14.sortWith((x,\
    \ y) => y.compare(x))\n        val lst16 = lst15.sortWith((x, y) => x.compare(y))\n\
    \        val lst17 = lst16.sortWith((x, y) => y.compare(x))\n        val lst18\
    \ = lst17.sortWith((x, y) => x.compare(y))\n        val lst19 = lst18.sortWith((x,\
    \ y) => y.compare(x))\n        val lst20 = lst19.sortWith((x, y) => x.compare(y))\n\
    \        val lst21 = lst20.sortWith((x, y) => y.compare(x))\n        val lst22\
    \ = lst21.sortWith((x, y) => x.compare(y))\n        val lst23 = lst22.sortWith((x,\
    \ y) => y.compare(x))\n        val lst24 = lst23.sortWith((x, y) => x.compare(y))\n\
    \        val lst25 = lst24.sortWith((x, y) => y.compare(x))\n        val lst26\
    \ = lst25.sortWith((x, y) => x.compare(y))\n        val lst27 = lst26.sortWith((x,\
    \ y) => y.compare(x))\n        val lst28 = lst27.sortWith((x, y) => x.compare(y))\n\
    \        val lst29 = lst28.sortWith((x, y) => y.compare(x))\n        val lst30\
    \ = lst29.sortWith((x, y) => x.compare(y))\n        val lst31 = lst30.sortWith((x,\
    \ y) => y.compare(x))\n        val lst32 = lst31.sortWith((x, y) => x.compare(y))\n\
    \        val lst33 = lst32.sortWith((x, y", "        val rowList = lst.map(row\
    \ => row.map(x => Tuple2(x, row.length)).toList)\n        val rowSorted = rowList.sortBy(row\
    \ => row._2)\n        val rowSortedByCol = rowSorted.sortBy(row => row._1)\n \
    \       rowSortedByCol.map(row => Tuple2(row._1, row._2))", "        val lst2\
    \ = lst.sortBy(_.toLong)\n        val lst3 = lst2.sortBy(-_.toLong)\n        val\
    \ lst4 = lst3.sortBy(-_.toLong)\n        val lst5 = lst4.sortBy(-_.toLong)\n \
    \       val lst6 = lst5.sortBy(-_.toLong)\n        val lst7 = lst6.sortBy(-_.toLong)\n\
    \        val lst8 = lst7.sortBy(-_.toLong)\n        val lst9 = lst8.sortBy(-_.toLong)\n\
    \        val lst10 = lst9.sortBy(-_.toLong)\n        val lst11 = lst10.sortBy(-_.toLong)\n\
    \        val lst12 = lst11.sortBy(-_.toLong)\n        val lst13 = lst12.sortBy(-_.toLong)\n\
    \        val lst14 = lst13.sortBy(-_.toLong)\n        val lst15 = lst14.sortBy(-_.toLong)\n\
    \        val lst16 = lst15.sortBy(-_.toLong)\n        val lst17 = lst16.sortBy(-_.toLong)\n\
    \        val lst18 = lst17.sortBy(-_.toLong)\n        val lst19 = lst18.sortBy(-_.toLong)\n\
    \        val lst20 = lst19.sortBy(-_.toLong)\n        val lst21 = lst20.sortBy(-_.toLong)\n\
    \        val lst22 = lst21.sortBy(-_.toLong)\n        val lst23 = lst22.sortBy(-_.toLong)\n\
    \        val lst24 = lst23.sortBy(-_.toLong)\n        val lst25 = lst24.sortBy(-_.toLong)\n\
    \        val lst26 = lst25.sortBy(-_.toLong)\n        val lst27 = lst26.sortBy(-_.toLong)\n\
    \        val lst28 = lst27.sortBy(-_.toLong)\n        val lst29 = lst28.sortBy(-_.toLong)\n\
    \        val lst30 = lst29.sortBy(-_.toLong)\n        val lst31 = lst30.sortBy(-_.toLong)\n\
    \        val lst32 = lst31.sortBy(-_.toLong)\n        val lst33 = lst32.sortBy(-_.toLong)\n\
    \        val lst34 = lst33.sortBy(-_.toLong)\n        val lst35 = lst34.sortBy(-_.toLong)\n\
    \        val lst36 = lst35.sortBy(-_.toLong)", "        val lst2 = lst.sortBy(x\
    \ => x._1)\n        val lst3 = lst2.sortBy(x => x._2)\n        val lst4 = lst3.sortBy(x\
    \ => x._2)\n        val lst5 = lst4.sortBy(x => x._1)\n        val lst6 = lst5.sortBy(x\
    \ => x._2)\n        val lst7 = lst6.sortBy(x => x._2)\n        val lst8 = lst7.sortBy(x\
    \ => x._1)\n        val lst9 = lst8.sortBy(x => x._2)\n        val lst10 = lst9.sortBy(x\
    \ => x._2)\n        val lst11 = lst10.sortBy(x => x._1)\n        val lst12 = lst11.sortBy(x\
    \ => x._2)\n        val lst13 = lst12.sortBy(x => x._2)\n        val lst14 = lst13.sortBy(x\
    \ => x._1)\n        val lst15 = lst14.sortBy(x => x._2)\n        val lst16 = lst15.sortBy(x\
    \ => x._2)\n        val lst17 = lst16.sortBy(x => x._1)\n        val lst18 = lst17.sortBy(x\
    \ => x._2)\n        val lst19 = lst18.sortBy(x => x._2)\n        val lst20 = lst19.sortBy(x\
    \ => x._1)\n        val lst21 = lst20.sortBy(x => x._2)\n        val lst22 = lst21.sortBy(x\
    \ => x._2)\n        val lst23 = lst22.sortBy(x => x._1)\n        val lst24 = lst23.sortBy(x\
    \ => x._2)\n        val lst25 = lst24.sortBy(x => x._2)\n        val lst26 = lst25.sortBy(x\
    \ => x._1)\n        val lst27 = lst26.sortBy(x => x._2)\n        val lst28 = lst27.sortBy(x\
    \ => x._2)\n        val lst29 = lst28.sortBy(x => x._1)\n        val lst30 = lst29.sortBy(x\
    \ => x._2)\n        val lst31 = lst30.sortBy(x => x._2)\n        val lst32 = lst31.sortBy(x\
    \ => x._1)\n        val lst33 = lst32.sortBy(x => x._2)\n        val lst34 = lst33.sortBy(x\
    \ => x._2)\n        val lst35 = lst34.sortBy(x => x._1)\n        val lst36 = lst35.sortBy(x\
    \ => x._", "        val lst2 = lst.sortBy(x => x._1)\n        val lst3 = lst2.sortBy(x\
    \ => x._2)\n        val lst4 = lst3.sortBy(x => x._2)\n        val lst5 = lst4.sortBy(x\
    \ => x._1)\n        val lst6 = lst5.sortBy(x => x._2)\n        val lst7 = lst6.sortBy(x\
    \ => x._2)\n        val lst8 = lst7.sortBy(x => x._1)\n        val lst9 = lst8.sortBy(x\
    \ => x._2)\n        val lst10 = lst9.sortBy(x => x._2)\n        val lst11 = lst10.sortBy(x\
    \ => x._1)\n        val lst12 = lst11.sortBy(x => x._2)\n        val lst13 = lst12.sortBy(x\
    \ => x._2)\n        val lst14 = lst13.sortBy(x => x._1)\n        val lst15 = lst14.sortBy(x\
    \ => x._2)\n        val lst16 = lst15.sortBy(x => x._2)\n        val lst17 = lst16.sortBy(x\
    \ => x._1)\n        val lst18 = lst17.sortBy(x => x._2)\n        val lst19 = lst18.sortBy(x\
    \ => x._2)\n        val lst20 = lst19.sortBy(x => x._1)\n        val lst21 = lst20.sortBy(x\
    \ => x._2)\n        val lst22 = lst21.sortBy(x => x._2)\n        val lst23 = lst22.sortBy(x\
    \ => x._1)\n        val lst24 = lst23.sortBy(x => x._2)\n        val lst25 = lst24.sortBy(x\
    \ => x._2)\n        val lst26 = lst25.sortBy(x => x._1)\n        val lst27 = lst26.sortBy(x\
    \ => x._2)\n        val lst28 = lst27.sortBy(x => x._2)\n        val lst29 = lst28.sortBy(x\
    \ => x._1)\n        val lst30 = lst29.sortBy(x => x._2)\n        val lst31 = lst30.sortBy(x\
    \ => x._2)\n        val lst32 = lst31.sortBy(x => x._1)\n        val lst33 = lst32.sortBy(x\
    \ => x._2)\n        val lst34 = lst33.sortBy(x => x._2)\n        val lst35 = lst34.sortBy(x\
    \ => x._1)\n        val lst36 = lst35.sortBy(x => x._", "        val rows = lst.map(row\
    \ => row.indexOf(x)).sortWith(_ < _)\n        val cols = rows.map(row => row.indexOf(x)).sortWith(_\
    \ > _)\n        val coords = rows.zip(cols)\n        coords.sortWith(_._1 < _._1)",
  "        val rows = lst.map(row => row.filter(_ != x))\n        val rows = rows.sortBy(row\
    \ => row(0))\n        val rows = rows.sortBy(row => row(1))\n        val rows\
    \ = rows.map(row => (row(0), row(1)))\n        rows", "        val row: List[Long]\
    \ = lst.map(_.toLong)\n        val rowIndex: Int = row.indexOf(x)\n        val\
    \ columnIndex: Int = row.lastIndexOf(x)\n        val rowTuple = row.toList.sortWith(_\
    \ > _).reverse\n        val columnTuple = row.toList.sortWith(_ < _).reverse\n\
    \        val coordinates: List[Tuple2[Long, Long]] = rowTuple.zip(columnTuple).map(x\
    \ => (x._1, x._2))\n        coordinates.sortBy(x => x._1)", "        val row:\
    \ List[Tuple2[Long, Long]] = lst.map(row => Tuple2(row(x), row(x + 1))).toList\n\
    \        val sorted = row.sortBy(row => row._1)\n        val sortedByColumns =\
    \ sorted.sortBy(row => row._2)\n        val result = sortedByColumns.map(row =>\
    \ Tuple2(row._1, row._2))\n        result"]
stop_tokens:
- "\n    }\n"

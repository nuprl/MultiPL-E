name: HumanEval_81_numerical_letter_grade
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // It is the last week of the semester and the teacher has to give the grades\n\
  \    // to students. The teacher has been making her own algorithm for grading.\n\
  \    // The only problem is, she has lost the code she used for grading.\n    //\
  \ She has given you a list of GPAs for some students and you have to write \n  \
  \  // a function that can output a list of letter grades using the following table:\n\
  \    // GPA       |    Letter grade\n    // 4.0                A+\n    // > 3.7\
  \                A \n    // > 3.3                A- \n    // > 3.0             \
  \   B+\n    // > 2.7                B \n    // > 2.3                B-\n    // >\
  \ 2.0                C+\n    // > 1.7                C\n    // > 1.3           \
  \     C-\n    // > 1.0                D+ \n    // > 0.7                D \n    //\
  \ > 0.0                D-\n    // 0.0                E\n    // Example:\n    def\
  \ numericalLetterGrade(grades : List[Float]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(numericalLetterGrade((List[Float](4.0f.toFloat,\
  \ 3l.toFloat, 1.7f.toFloat, 2l.toFloat, 3.5f.toFloat))).equals((List[String](\"\
  A+\", \"B\", \"C-\", \"C\", \"A-\"))));\n    assert(numericalLetterGrade((List[Float](1.2f.toFloat))).equals((List[String](\"\
  D+\"))));\n    assert(numericalLetterGrade((List[Float](0.5f.toFloat))).equals((List[String](\"\
  D-\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat))).equals((List[String](\"\
  E\"))));\n    assert(numericalLetterGrade((List[Float](1.0f.toFloat, 0.3f.toFloat,\
  \ 1.5f.toFloat, 2.8f.toFloat, 3.3f.toFloat))).equals((List[String](\"D\", \"D-\"\
  , \"C-\", \"B\", \"B+\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat,\
  \ 0.7f.toFloat))).equals((List[String](\"E\", \"D-\"))));\n    }\n\n}\n"
completions: ["        grades.toList.sortWith( (a,b) => a.toDouble < b.toDouble )\n\
    \            .foldLeft(List[String]()){ (acc: List[String], grade) =>\n      \
    \          val gpa = grade.toDouble\n                val letterGrade = if (gpa\
    \ > 4.0) \"A+\" else if (gpa > 3.7) \"A\" else if (gpa > 3.3) \"A-\" else if (gpa\
    \ > 3.0) \"B+\" else if (gpa > 2.7) \"B\" else if (gpa > 2.3) \"B-\" else if (gpa\
    \ > 2.0) \"C+\" else if (gpa > 1.7) \"C\" else if (gpa > 1.3) \"C-\" else if (gpa\
    \ > 1.0) \"D+\" else if (gpa > 0.7) \"D\" else if (gpa > 0.0) \"D-\" else \"E\"\
    \n                acc :+ letterGrade\n            }", "        val gradesMap :\
    \ Map[Float,String] = grades.map(grade => (grade,grade.asInstanceOf[Float].toChar)).toMap\n\
    \        val gradesList : List[(Float,String)] = gradesMap.filter(_._2 != \"E\"\
    ).sortBy(_._1).reverse\n        val gradesMapList : List[(Float,String)] = gradesList.filter(_._2\
    \ != \"E\").sortBy(_._1).reverse\n        val gradesMapListWithE : List[(Float,String)]\
    \ = gradesMapList.filter(_._2 == \"E\").sortBy(_._1).reverse\n        val gradesMapListWithEAndE\
    \ : List[(Float,String)] = gradesMapListWithE.filter(_._2 != \"E\").sortBy(_._1).reverse\n\
    \        val gradesMapListWithEAndE : List[(Float,String)] = gradesMapListWithE.filter(_._2\
    \ == \"E\").sortBy(_._1).reverse\n        val gradesMapListWithEAndE : List[(Float,String)]\
    \ = gradesMapListWithE.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val\
    \ gradesMapListWithEAndE : List[(Float,String)] = gradesMapListWithE.filter(_._2\
    \ == \"E\").sortBy(_._1).reverse\n        val gradesMapListWithEAndE : List[(Float,String)]\
    \ = gradesMapListWithE.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val\
    \ gradesMapListWithEAndE : List[(Float,String)] = gradesMapListWithE.filter(_._2\
    \ == \"E\").sortBy(_._1).reverse\n        val gradesMapListWithEAndE : List[(Float,String)]\
    \ = gradesMapListWithE.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val\
    \ gradesMapListWithEAndE : List[(Float,String)] = gradesMapListWithE.filter(_._2\
    \ == \"E\").sortBy(_._1).reverse\n        val gradesMapListWithEAndE : List[(Float,String)]\
    \ = gradesMapListWithE.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val\
    \ gradesMapListWithEAndE : List[(Float,String)] = gradesMapListWithE.filter(_._2\
    \ == \"E\").sortBy(_._1).reverse\n        val gradesMapListWithEAndE : List[(Float,String)]\
    \ = gradesMapListWithE.filter(_._2 != \"E\").sort", "        val gradesMap = grades.groupBy(x\
    \ => x.toInt).mapValues(_.toList).toMap\n        val gradesKeys = gradesMap.keys\n\
    \        val gradesValues = gradesMap.values.toList\n        val gradesValuesWithLetters\
    \ = gradesValues.map(x => if (x.size < 2) \"E\" else x.mkString(\"\"))\n     \
    \   val gradesValuesWithLettersSorted = gradesValuesWithLetters.sortWith(_.compareTo(_)\
    \ < 0)\n        val gradesValuesWithLettersSortedWithLetter = gradesValuesWithLettersSorted.map(x\
    \ => if (x.size < 2) \"E\" else x.mkString(\"\"))\n        val gradesValuesWithLettersSortedWithLetterSorted\
    \ = gradesValuesWithLettersSortedWithLetter.sortWith(_.compareTo(_) < 0)\n   \
    \     val gradesValuesWithLettersSortedWithLetterSortedWithLetter = gradesValuesWithLettersSortedWithLetterSorted.map(x\
    \ => if (x.size < 2) \"E\" else x.mkString(\"\"))\n        val gradesValuesWithLettersSortedWithLetterSortedWithLetterSorted\
    \ = gradesValuesWithLettersSortedWithLetterSortedWithLetter.sortWith(_.compareTo(_)\
    \ < 0)\n        val gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetter\
    \ = gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetter.map(x\
    \ => if (x.size < 2) \"E\" else x.mkString(\"\"))\n        val gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSorted\
    \ = gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetter.sortWith(_.compareTo(_)\
    \ < 0)\n        val gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetter\
    \ = gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetter.map(x\
    \ => if (x.size < 2) \"E\" else x.mkString(\"\"))\n        val gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetterSorted\
    \ = gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetterSorted.sortWith(_.compareTo(_)\
    \ < 0)\n        val gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetter\
    \ = gradesValuesWithLettersSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetterSortedWithLetterSorted.map(x\
    \ => if (x.", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n \
    \       val gradesKeys = gradesMap.keys\n        val gradesValues = gradesMap.values.toList\n\
    \        val gradesKeysSorted = gradesKeys.sortBy(x => x)\n        val gradesValuesSorted\
    \ = gradesValues.sortBy(x => x)\n        val gradesKeysSortedWithDuplicates =\
    \ gradesKeysSorted.distinct\n        val gradesValuesSortedWithDuplicates = gradesValuesSorted.distinct\n\
    \        val gradesKeysSortedWithDuplicatesAndDuplicates = gradesKeysSortedWithDuplicates.zip(gradesValuesSortedWithDuplicates)\n\
    \        val gradesKeysSortedWithDuplicatesAndDuplicatesSorted = gradesKeysSortedWithDuplicatesAndDuplicates.sortBy(x\
    \ => x._1)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesSorted.map(x => x._2)\n       \
    \ val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSorted =\
    \ gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicates.sortBy(x =>\
    \ x._1)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSorted.map(x\
    \ => x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSorted\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicates.sortBy(x\
    \ => x._1)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSortedWithDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSorted.map(x\
    \ => x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSortedWithDuplicatesSorted\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSortedWithDuplicates.sortBy(x\
    \ => x._1)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSortedWithDuplicatesSortedWithDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesSortedWithDuplicatesSortedWithDuplicatesSorted.map(x\
    \ => x._2)\n        val gradesKeysSortedWith", "        val gradesMap = grades.toMap\n\
    \        val gradesKeys = gradesMap.keys\n        val gradesValues = gradesMap.values.toList\n\
    \        val gradesKeysSorted = gradesKeys.sortWith(_ < _)\n        val gradesValuesSorted\
    \ = gradesValues.sortWith(_ < _)\n        val gradesKeysSortedWithZero = gradesKeysSorted.map(_\
    \ + 0.0)\n        val gradesValuesSortedWithZero = gradesValuesSorted.map(_ +\
    \ 0.0)\n        val gradesKeysSortedWithZeroAndOne = gradesKeysSorted.map(_ +\
    \ 1.0)\n        val gradesValuesSortedWithZeroAndOne = gradesValuesSorted.map(_\
    \ + 1.0)\n        val gradesKeysSortedWithOne = gradesKeysSorted.map(_ + 1)\n\
    \        val gradesValuesSortedWithOne = gradesValuesSorted.map(_ + 1)\n     \
    \   val gradesKeysSortedWithOneAndZero = gradesKeysSorted.map(_ + 2.0)\n     \
    \   val gradesValuesSortedWithOneAndZero = gradesValuesSorted.map(_ + 2.0)\n \
    \       val gradesKeysSortedWithOneAndZeroAndOne = gradesKeysSorted.map(_ + 3.0)\n\
    \        val gradesValuesSortedWithOneAndZeroAndOne = gradesValuesSorted.map(_\
    \ + 3.0)\n        val gradesKeysSortedWithOneAndOne = gradesKeysSorted.map(_ +\
    \ 4.0)\n        val gradesValuesSortedWithOneAndOne = gradesValuesSorted.map(_\
    \ + 4.0)\n        val gradesKeysSortedWithOneAndOneAndZero = gradesKeysSorted.map(_\
    \ + 5.0)\n        val gradesValuesSortedWithOneAndOneAndZero = gradesValuesSorted.map(_\
    \ + 5.0)\n        val gradesKeysSortedWithOneAndOneAndZeroAndOne = gradesKeysSorted.map(_\
    \ + 6.0)\n        val gradesValuesSortedWithOneAndOneAndZeroAndOne = gradesValuesSorted.map(_\
    \ + 6.0)\n        val gradesKeysSortedWithOneAndOneAndOne = gradesKeysSorted.map(_\
    \ + 7.0)\n        val gradesValuesSortedWithOneAndOneAndOne = gradesValuesSorted.map(_\
    \ + 7.0)\n        val gradesKeysSortedWithOneAndOneAndOneAndZero = gradesKeysSorted.map(_\
    \ + ", "        val gradesMap : Map[Float, String] = grades.map(x => (x, \"E\"\
    )).toMap\n        val gradesMap2 = grades.map(x => (x, \"D\")).toMap\n       \
    \ val gradesMap3 = grades.map(x => (x, \"C\")).toMap\n        val gradesMap4 =\
    \ grades.map(x => (x, \"B\")).toMap\n        val gradesMap5 = grades.map(x =>\
    \ (x, \"A\")).toMap\n        val gradesMap6 = grades.map(x => (x, \"A+\")).toMap\n\
    \        val gradesMap7 = grades.map(x => (x, \"A-\")).toMap\n        val gradesMap8\
    \ = grades.map(x => (x, \"B+\")).toMap\n        val gradesMap9 = grades.map(x\
    \ => (x, \"B-\")).toMap\n        val gradesMap10 = grades.map(x => (x, \"C+\"\
    )).toMap\n        val gradesMap11 = grades.map(x => (x, \"C\")).toMap\n      \
    \  val gradesMap12 = grades.map(x => (x, \"C-\")).toMap\n        val gradesMap13\
    \ = grades.map(x => (x, \"D+\")).toMap\n        val gradesMap14 = grades.map(x\
    \ => (x, \"D\")).toMap\n        val gradesMap15 = grades.map(x => (x, \"D-\")).toMap\n\
    \        val gradesMap16 = grades.map(x => (x, \"E\")).toMap\n        val gradesMap17\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap18 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap19 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap20 = grades.map(x => (x, \"F\")).toMap\n        val gradesMap21\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap22 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap23 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap24 = grades.map(x => (x, \"F\")).toMap\n        val gradesMap25\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap26 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap27 = grades.map(x => (x, \"F\")).toMap\n\
    \        ", "        val gradesMap = grades.toMap\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n    \
    \    val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n    \
    \    val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValue",
  "        val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesMap\
    \ = gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesValuesMap.values.toMap\n\
    \        val gradesSortedByGPA", "        val gradesMap = grades.toMap\n     \
    \   val gradesKeys = gradesMap.keys\n        val gradesValues = gradesMap.values.toList\n\
    \        val gradesValuesWithLetters = gradesValues.map(grade => {\n         \
    \   val letterGrade = if (grade > 3.0) \"A+\" else if (grade > 2.7) \"B\" else\
    \ if (grade > 2.3) \"B-\" else if (grade > 2.0) \"C+\" else if (grade > 1.7) \"\
    C\" else if (grade > 1.3) \"C-\" else if (grade > 1.0) \"D+\" else if (grade >\
    \ 0.7) \"D\" else if (grade > 0.0) \"D-\" else \"E\"\n            letterGrade\n\
    \        })\n        gradesValuesWithLetters.toList", "        val gradesMap =\
    \ grades.groupBy(_ / 4).mapValues(_.toList)\n        val gradesMap2 = gradesMap.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap3 = gradesMap2.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap4 = gradesMap3.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap5 = gradesMap4.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap6 = gradesMap5.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap7 = gradesMap6.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap8 = gradesMap7.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap9 = gradesMap8.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap10 = gradesMap9.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap11 = gradesMap10.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap12 = gradesMap11.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap13 = gradesMap12.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap14 = gradesMap13.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap15 = gradesMap14.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap16 = gradesMap15.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap17 = gradesMap16.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap18 = gradesMap17.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        val gradesMap19 = gradesMap18.filter(_._2\
    \ != 0).mapValues(_.map(_ / 4).sum)\n        ", "        val gradesMap : Map[Float,\
    \ String] = grades.map(grade => (grade -> \"A+\")).toMap\n        grades.map(grade\
    \ => (grade -> gradesMap(grade))).filter(_.isDefined).map { case (grade, letterGrade)\
    \ => letterGrade }", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedByGrade = grades.sortBy(x => x)\n        val gradesSortedByGradeReversed\
    \ = gradesSortedByGrade.sortBy(x => -x)\n        val gradesSortedByGradeReversedMap\
    \ = gradesSortedByGradeReversed.map(x => (x._1, x._2)).toMap\n        val gradesSortedByGradeReversedMapReversed\
    \ = gradesSortedByGradeReversedMap.map(x => (x._1, x._2)).toMap\n        val gradesSortedByGradeReversedMapReversedWithZero\
    \ = gradesSortedByGradeReversedMapReversed.withDefaultValue(0)\n        val gradesSortedByGradeReversedMapReversedWithZeroWithZero\
    \ = gradesSortedByGradeReversedMapReversedWithZero.withDefaultValue(0)\n     \
    \   val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZero = gradesSortedByGradeReversedMapReversedWithZeroWithZero.withDefaultValue(0)\n\
    \        val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZero.withDefaultValue(0)\n\
    \        val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZero.withDefaultValue(0)\n\
    \        val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZero.withDefaultValue(0)\n\
    \        val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZero.withDefaultValue(0)\n\
    \        val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZero.withDefaultValue(0)\n\
    \        val gradesSortedByGradeReversedMapReversedWithZeroWithZeroWithZeroWithZeroWithZero",
  "        val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedIter = gradesSortedByGPAReversed.iterator\n       \
    \ val gradesSortedByGPAReversedIterNext = gradesSortedByGPAReversedIter.next\n\
    \        val gradesSortedByGPAReversedIterNextKey = gradesSortedByGPAReversedIterNext._1.key\n\
    \        val gradesSortedByGPAReversedIterNextValue = gradesSortedByGPAReversedIterNext._1.value\n\
    \        val gradesSortedByGPAReversedIterNextGPA = gradesSortedByGPAReversedIterNext._2._1\n\
    \        val gradesSortedByGPAReversedIterNextGPAKey = gradesSortedByGPAReversedIterNext._2._2\n\
    \        val gradesSortedByGPAReversedIterNextGPAValue = gradesSortedByGPAReversedIterNext._2._3\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPA = gradesSortedByGPAReversedIterNext._2._4\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAKey = gradesSortedByGPAReversedIterNext._2._5\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAValue = gradesSortedByGPAReversedIterNext._2._6\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAGPA = gradesSortedByGPAReversedIterNext._2._7\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAGPAKey = gradesSortedByGPAReversedIterNext._2._8\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAGPAValue = gradesSortedByGPAReversedIterNext._2._9\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAGPAGPA = gradesSortedByGPAReversedIterNext._2._10\n\
    \        val gradesSortedByGPAReversedIterNextGPAGPAGPAGPAKey = gradesSortedByGPAReversedIterNext._2._11\n\
    \        val ", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSorted = grades.sortBy(x => x)\n        val gradesSortedMap\
    \ = gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMapReverse\
    \ = gradesSortedMap.reverse\n        val gradesSortedMapReverseMap = gradesSortedMapReverse.toMap\n\
    \        val gradesSortedMapReverseMapReverse = gradesSortedMapReverseMap.reverse\n\
    \        val gradesSortedMapReverseMapReverseMap = gradesSortedMapReverseMapReverse.toMap\n\
    \        val gradesSortedMapReverseMapReverseMapReverse = gradesSortedMapReverseMapReverseMap.reverse\n\
    \        val gradesSortedMapReverseMapReverseMapReverseMap = gradesSortedMapReverseMapReverseMapReverse.toMap\n\
    \        val gradesSortedMapReverseMapReverseMapReverseMapReverse = gradesSortedMapReverseMapReverseMapReverseMapReverse.toMap\n\
    \        val gradesSortedMapReverseMapReverseMapReverseMapReverseMap = gradesSortedMapReverseMapReverseMapReverseMapReverse.toMap\n\
    \        val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse =\
    \ gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n     \
    \   val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMap = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n\
    \        val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMapReverse\
    \ = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n   \
    \     val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMap\
    \ = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n   \
    \     val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMapReverse\
    \ = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n   \
    \     val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMapReverse\
    \ = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n   \
    \     val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMap\
    \ = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n   \
    \     val gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMapReverseMapReverse\
    \ = gradesSortedMapReverseMapReverseMapReverseMapReverseMapReverse.toMap\n   \
    \     val gradesSortedMapReverseMapReverseMapReverse", "        val gradesMap\
    \ = grades.toMap\n        val gradesKeys = gradesMap.keys\n        val gradesValues\
    \ = gradesMap.values.toList\n        val gradesKeysSorted = gradesKeys.sort\n\
    \        val gradesValuesSorted = gradesValues.sort\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesValuesSortedLength = gradesValuesSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKey", "        val gradesMap :\
    \ Map[Float, String] = grades.map(grade => (grade -> \"A+\")).toMap\n        val\
    \ gradesMap2 : Map[Float, String] = grades.map(grade => (grade -> \"A\")).toMap\n\
    \        val gradesMap3 : Map[Float, String] = grades.map(grade => (grade -> \"\
    A-\")).toMap\n        val gradesMap4 : Map[Float, String] = grades.map(grade =>\
    \ (grade -> \"B+\")).toMap\n        val gradesMap5 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"B\")).toMap\n        val gradesMap6 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"B-\")).toMap\n        val gradesMap7 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"C+\")).toMap\n        val gradesMap8 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"C\")).toMap\n        val gradesMap9 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"C-\")).toMap\n        val gradesMap10 : Map[Float, String] =\
    \ grades.map(grade => (grade -> \"D+\")).toMap\n        val gradesMap11 : Map[Float,\
    \ String] = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMap12\
    \ : Map[Float, String] = grades.map(grade => (grade -> \"D-\")).toMap\n      \
    \  val gradesMap13 : Map[Float, String] = grades.map(grade => (grade -> \"E\"\
    )).toMap\n        val gradesMap14 : Map[Float, String] = grades.map(grade => (grade\
    \ -> \"F\")).toMap\n        val gradesMap15 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"G\")).toMap\n        val gradesMap16 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"H\")).toMap\n        val gradesMap17 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"I\")).toMap\n        val gradesMap18 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"J\")).toMap\n        val gradesMap19 : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"K\"))", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n\
    \        val gradesMapSortedReversedKeysLength = gradesMapSortedReversedKeys.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversed", "        val gradesMap = grades.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAWithLetterGrade = gradesSortedByGPA.map(x => gradesMap.getOrElse(x.toInt,\
    \ 0.0))\n        val gradesSortedByGPAWithLetterGradeWithZero = gradesSortedByGPAWithLetterGrade.map(x\
    \ => if (x == 0.0) 0 else x)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithZero.map(x => if (x == 0.0) 'E' else x.toChar)\n\
    \        gradesSortedByGPAWithLetterGradeWithZeroWithLetterGrade", "        val\
    \ gradesMap : Map[Float, String] = grades.map(x => (x, \"E\")).toMap\n       \
    \ val gradesMap2 = grades.map(x => (x, \"D\")).toMap\n        val gradesMap3 =\
    \ grades.map(x => (x, \"C\")).toMap\n        val gradesMap4 = grades.map(x =>\
    \ (x, \"B\")).toMap\n        val gradesMap5 = grades.map(x => (x, \"A\")).toMap\n\
    \        val gradesMap6 = grades.map(x => (x, \"A+\")).toMap\n        val gradesMap7\
    \ = grades.map(x => (x, \"A-\")).toMap\n        val gradesMap8 = grades.map(x\
    \ => (x, \"B+\")).toMap\n        val gradesMap9 = grades.map(x => (x, \"B-\")).toMap\n\
    \        val gradesMap10 = grades.map(x => (x, \"C+\")).toMap\n        val gradesMap11\
    \ = grades.map(x => (x, \"C\")).toMap\n        val gradesMap12 = grades.map(x\
    \ => (x, \"C-\")).toMap\n        val gradesMap13 = grades.map(x => (x, \"D+\"\
    )).toMap\n        val gradesMap14 = grades.map(x => (x, \"D\")).toMap\n      \
    \  val gradesMap15 = grades.map(x => (x, \"D-\")).toMap\n        val gradesMap16\
    \ = grades.map(x => (x, \"E\")).toMap\n        val gradesMap17 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap18 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap19 = grades.map(x => (x, \"F\")).toMap\n        val gradesMap20\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap21 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap22 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap23 = grades.map(x => (x, \"F\")).toMap\n        val gradesMap24\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap25 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap26 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap27 = grades.map(x => (x, \"F\")).toMap\n        ", "   \
    \     val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversed.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversed.values\n       \
    \ val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n\
    \        val gradesSortedByGPAReversedKeysLength = gradesSortedByGPAReversedKeys.size\n\
    \        val gradesSortedByGPAReversedValuesLength = gradesSortedByGPAReversedValues.size\n",
  "        val gradesMap = grades.toMap\n        val gradesMapKeys = gradesMap.keys\n\
    \        val gradesMapValues = gradesMap.values.toList\n        val gradesMapValuesWithoutZero\
    \ = gradesMapValues.filterNot(_ == 0)\n        val gradesMapValuesWithoutZeroLength\
    \ = gradesMapValuesWithoutZero.length\n        val gradesMapValuesWithoutZeroSum\
    \ = gradesMapValuesWithoutZero.sum\n        val gradesMapValuesWithoutZeroAverage\
    \ = gradesMapValuesWithoutZeroSum / gradesMapValuesWithoutZeroLength\n       \
    \ val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverage.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageInt.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageFloat.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageFloat.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageFloat.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageFloat.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageFloat.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = gradesMapValuesWithoutZeroAverageFloat.toFloat\n\
    \        val gradesMapValuesWithoutZeroAverageInt = gradesMapValuesWithoutZeroAverageInt.toInt\n\
    \        val gradesMapValuesWithoutZeroAverageFloat = grades", "        val gradesMap\
    \ = grades.groupBy(_ / 4).mapValues(_.toInt)\n        val gradesMapSorted = gradesMap.sortBy(_._2)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedMap\
    \ = gradesMapSortedReversed.toMap\n        val gradesMapSortedReversedKeys = gradesMapSortedReversedMap.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversedMap.values.toList\n\
    \        val gradesMapSortedReversedValuesSorted = gradesMapSortedReversedValues.sortBy(_._1)\n\
    \        val gradesMapSortedReversedValuesSortedReversed = gradesMapSortedReversedValuesSorted.reverse\n\
    \        val gradesMapSortedReversedValuesSortedReversedMap = gradesMapSortedReversedValuesSortedReversed.toMap\n\
    \        val gradesMapSortedReversedValuesSortedReversedKeys = gradesMapSortedReversedValuesSortedReversedMap.keys\n\
    \        val gradesMapSortedReversedValuesSortedReversedValues = gradesMapSortedReversedValuesSortedReversedMap.values.toList\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSorted = gradesMapSortedReversedValuesSortedReversedValues.sortBy(_._1)\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSortedReversed =\
    \ gradesMapSortedReversedValuesSortedReversedValuesSorted.reverse\n        val\
    \ gradesMapSortedReversedValuesSortedReversedValuesSortedReversedMap = gradesMapSortedReversedValuesSortedReversedValuesSortedReversed.toMap\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSortedReversedKeys\
    \ = gradesMapSortedReversedValuesSortedReversedValuesSortedReversedMap.keys\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSortedReversedValues\
    \ = gradesMapSortedReversedValuesSortedReversedValuesSortedReversedMap.values.toList\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSortedReversedValuesSorted\
    \ = gradesMapSortedReversedValuesSortedReversedValuesSortedReversedValues.sortBy(_._1)\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSortedReversedValuesSortedReversed\
    \ = gradesMapSortedReversedValuesSortedReversedValuesSortedReversedValuesSortedReversed.reverse\n\
    \        val gradesMapSortedReversedValuesSortedReversedValuesSortedReversedValuesSortedReverse",
  "        val gradesMap : Map[Float, String] = grades.map(grade => (grade -> grade\
    \ match {\n            case 4.0f => \"A+\"\n            case _ => \"\"\n     \
    \   })).toMap\n        val gradesList : List[String] = grades.map(grade => gradesMap(grade))\n\
    \        gradesList.filter(_.nonEmpty).map(_.toUpperCase)", "        val gradesMap\
    \ = grades.toMap\n        val gradesKeys = gradesMap.keys\n        val gradesValues\
    \ = gradesMap.values.toList\n        val gradesKeysSorted = gradesKeys.sortBy(x\
    \ => x)\n        val gradesValuesSorted = gradesValues.sortBy(x => x)\n      \
    \  val gradesKeysSortedWithZero = gradesKeysSorted.map(x => if (x == 0.0) 0 else\
    \ x)\n        val gradesValuesSortedWithZero = gradesValuesSorted.map(x => if\
    \ (x == 0.0) 0 else x)\n        val gradesKeysSortedWithZeroAndOne = gradesKeysSorted.map(x\
    \ => if (x == 0.0) 1 else x)\n        val gradesValuesSortedWithZeroAndOne = gradesValuesSorted.map(x\
    \ => if (x == 0.0) 1 else x)\n        val gradesKeysSortedWithOneAndZero = gradesKeysSorted.map(x\
    \ => if (x == 1.0) 0 else x)\n        val gradesValuesSortedWithOneAndZero = gradesValuesSorted.map(x\
    \ => if (x == 1.0) 0 else x)\n        val gradesKeysSortedWithOneAndZeroAndOne\
    \ = gradesKeysSorted.map(x => if (x == 1.0) 1 else x)\n        val gradesValuesSortedWithOneAndZeroAndOne\
    \ = gradesValuesSorted.map(x => if (x == 1.0) 1 else x)\n        val gradesKeysSortedWithZeroAndZero\
    \ = gradesKeysSorted.map(x => if (x == 0.0) 0 else x)\n        val gradesValuesSortedWithZeroAndZero\
    \ = gradesValuesSorted.map(x => if (x == 0.0) 0 else x)\n        val gradesKeysSortedWithZeroAndZeroAndOne\
    \ = gradesKeysSorted.map(x => if (x == 0.0) 1 else x)\n        val gradesValuesSortedWithZeroAndZeroAndOne\
    \ = gradesValuesSorted.map(x => if (x == 0.0) 1 else x)\n        val gradesKeysSortedWithZeroAndOneAndZero\
    \ = gradesKeysSorted.map(x => if (x == 1.0) 0 else x)\n        val gradesValuesSortedWithZeroAndOneAndZero\
    \ = gradesValuesSorted.map(x => if (x == 1.0) 0 else x)\n        val gradesKeysSortedWithZeroAndOneAndZeroAndOne\
    \ = gradesKeysSorted.map(x => if (x == 1.0) 1 else x)\n        val gradesValuesSortedWithZeroAndOneAndZeroAndOne\
    \ = gradesValuesSorted.map(x => if (x == ", "        val gradesMap = grades.toMap\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n\
    \        val gradesMapSortedReversedValuesSum = gradesMapSortedReversedValues.sum\n\
    \        val gradesMapSortedReversedValuesSum2 = gradesMapSortedReversedValuesSum\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum3\
    \ = gradesMapSortedReversedValuesSum2 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum4 = gradesMapSortedReversedValuesSum3\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum5\
    \ = gradesMapSortedReversedValuesSum4 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum6 = gradesMapSortedReversedValuesSum5\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum7\
    \ = gradesMapSortedReversedValuesSum6 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum8 = gradesMapSortedReversedValuesSum7\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum9\
    \ = gradesMapSortedReversedValuesSum8 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum10 = gradesMapSortedReversedValuesSum9\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum11\
    \ = gradesMapSortedReversedValuesSum10 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum12 = gradesMapSortedReversedValuesSum11\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum13\
    \ = gradesMapSortedReversedValuesSum12 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum14 = gradesMapSortedReversedValuesSum13\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum15\
    \ = gradesMapSortedReversedValuesSum14 * gradesMapSortedReversedValues", "   \
    \     grades.map { grade =>\n            val gpa = grade.toInt\n            val\
    \ letterGrade = if (gpa > 4.0) \"A+\" else if (gpa > 3.7) \"A\" else if (gpa >\
    \ 3.3) \"A-\" else if (gpa > 3.0) \"B+\" else if (gpa > 2.7) \"B\" else if (gpa\
    \ > 2.3) \"B-\" else if (gpa > 2.0) \"C+\" else if (gpa > 1.7) \"C\" else if (gpa\
    \ > 1.3) \"C-\" else if (gpa > 1.0) \"D+\" else if (gpa > 0.7) \"D\" else if (gpa\
    \ > 0.0) \"D-\" else \"E\"\n            letterGrade\n        }", "        val\
    \ gradesMap = grades.groupBy(x => x).mapValues(_.size).toMap\n        val gradesSorted\
    \ = grades.sortWith(_.toDouble < _.toDouble)\n        val gradesSortedMap = gradesSorted.groupBy(x\
    \ => x).mapValues(_.size).toMap\n        val gradesSortedSortedMap = gradesSorted.groupBy(x\
    \ => x).mapValues(_.size).sortWith(_.toDouble < _.toDouble).toMap\n        val\
    \ gradesSortedSortedMap2 = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble\
    \ < _.toDouble).mapValues(_.toDouble).toMap\n        val gradesSortedSortedMap3\
    \ = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble < _.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).toMap\n\
    \        val gradesSortedSortedMap4 = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble\
    \ < _.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).toMap\n\
    \        val gradesSortedSortedMap5 = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble\
    \ < _.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).toMap\n\
    \        val gradesSortedSortedMap6 = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble\
    \ < _.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).toMap\n\
    \        val gradesSortedSortedMap7 = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble\
    \ < _.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).toMap\n\
    \        val gradesSortedSortedMap8 = gradesSorted.groupBy(x => x).mapValues(_.size).sortWith(_.toDouble\
    \ < _.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.toDouble).mapValues(_.",
  "        val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSorted", "      \
    \  val gradesMap = grades.toMap\n        val gradesKeys = gradesMap.keys\n   \
    \     val gradesValues = gradesMap.values.toList\n        val gradesValuesList\
    \ = gradesValues.toList\n        val gradesValuesMap = gradesValues.toMap\n  \
    \      val gradesValuesKeys = gradesValuesMap.keys\n        val gradesValuesValues\
    \ = gradesValuesMap.values.toList\n        val gradesValuesValuesMap = gradesValuesValues.toMap\n\
    \        val gradesValuesValuesKeys = gradesValuesValuesMap.keys\n        val\
    \ gradesValuesValuesValues = gradesValuesValuesMap.values.toList\n        val\
    \ gradesValuesValuesValuesMap = gradesValuesValuesValues.toMap\n        val gradesValuesValuesValuesKeys\
    \ = gradesValuesValuesValuesMap.keys\n        val gradesValuesValuesValuesValues\
    \ = gradesValuesValuesValuesMap.values.toList\n        val gradesValuesValuesValuesValuesMap\
    \ = gradesValuesValuesValuesValues.toMap\n        val gradesValuesValuesValuesValuesKeys\
    \ = gradesValuesValuesValuesValuesMap.keys\n        val gradesValuesValuesValuesValuesValues\
    \ = gradesValuesValuesValuesValuesValuesMap.values.toList\n        val gradesValuesValuesValuesValuesValuesMap\
    \ = gradesValuesValuesValuesValuesValuesValues.toMap\n        val gradesValuesValuesValuesValuesValuesKeys\
    \ = gradesValuesValuesValuesValuesValuesValuesMap.keys\n        val gradesValuesValuesValuesValuesValuesValues\
    \ = gradesValuesValuesValuesValuesValuesValuesValuesMap.values.toList\n      \
    \  val gradesValuesValuesValuesValuesValuesValuesMap = gradesValuesValuesValuesValuesValuesValuesValuesValues.toMap\n\
    \        val gradesValuesValuesValuesValuesValuesValuesKeys = gradesValuesValuesValuesValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesValuesValuesValuesValuesValuesValuesValues = gradesValuesValuesValuesValuesValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesValuesValuesValuesValuesValuesValuesValuesValuesMap = gradesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues.toMap\n\
    \        val gradesValuesValuesValuesValuesValuesValuesValuesValuesKeys = gradesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesValuesValuesValuesValuesValuesValuesValuesValuesValues = gradesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesValuesValuesValuesValuesValuesValuesValuesValues", "      \
    \  val gradesSorted = grades.sortWith(_ < _)\n        val gradesSum = gradesSorted.sum\n\
    \        val gradesAverage = gradesSum / gradesSorted.length\n        val gradesMax\
    \ = gradesSorted.max\n        val gradesMin = gradesSorted.min\n        val gradesSumOfSquares\
    \ = gradesSorted.map(x => x * x).sum\n        val gradesSumOfSquaresAverage =\
    \ gradesSumOfSquares / gradesSorted.length\n        val gradesSumOfSquaresMax\
    \ = gradesSumOfSquares.max\n        val gradesSumOfSquaresMin = gradesSumOfSquares.min\n\
    \        val gradesSumOfSquaresSumOfSquares = gradesSorted.map(x => x * x).sum\n\
    \        val gradesSumOfSquaresSumOfSquaresAverage = gradesSumOfSquaresSumOfSquares\
    \ / gradesSorted.length\n        val gradesSumOfSquaresSumOfSquaresMax = gradesSumOfSquaresSumOfSquares.max\n\
    \        val gradesSumOfSquaresSumOfSquaresMin = gradesSumOfSquaresSumOfSquares.min\n\
    \        val gradesSumOfSquaresSumOfSquaresSumOfSquares = gradesSorted.map(x =>\
    \ x * x).sum\n        val gradesSumOfSquaresSumOfSquaresSumOfSquaresAverage =\
    \ gradesSumOfSquaresSumOfSquaresSumOfSquares / gradesSorted.length\n        val\
    \ gradesSumOfSquaresSumOfSquaresSumOfSquaresMax = gradesSumOfSquaresSumOfSquaresSumOfSquares.max\n\
    \        val gradesSumOfSquaresSumOfSquaresSumOfSquaresMin = gradesSumOfSquaresSumOfSquaresSumOfSquares.min\n\
    \        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares = gradesSorted.map(x\
    \ => x * x).sum\n        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresAverage\
    \ = gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares / gradesSorted.length\n\
    \        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresMax = gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares.max\n\
    \        val gradesSumOfSquaresSumOfSqu", "        val gradesMap = grades.toMap\n\
    \        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed\
    \ = gradesSortedByGPA.reverse\n        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues", "     \
    \   val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesMap\
    \ = gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPA", "        val gradesMap = grades.toMap\n     \
    \   val gradesSortedByGPA = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed\
    \ = gradesSortedByGPA.reverse\n        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesMap.values.toMap\n\
    \        val gradesSortedByGPAReversed", "        val gradesMap = grades.toMap\n\
    \        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed\
    \ = gradesSortedByGPA.reverse\n        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues", "        val gradesSorted\
    \ = grades.sortWith(_ < _)\n        val gradesAverage = gradesSorted.sum / gradesSorted.length\n\
    \        val gradesAverageWithZero = gradesAverage + 0.0\n        val gradesAverageWithZeroString\
    \ = gradesAverageWithZero.toString\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroString.length\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWithZeroStringLength + 2\n        val gradesAverageWithZeroStringLength\
    \ = gradesAverageWith", "        val gradesMap = grades.toMap\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedSorted = gradesMapSortedReversed.sortBy(_._1)\n\
    \        val gradesMapSortedReversedSortedSorted1 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 1)\n        val gradesMapSortedReversedSortedSorted2 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 2)\n        val gradesMapSortedReversedSortedSorted3 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 3)\n        val gradesMapSortedReversedSortedSorted4 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 4)\n        val gradesMapSortedReversedSortedSorted5 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 5)\n        val gradesMapSortedReversedSortedSorted6 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 6)\n        val gradesMapSortedReversedSortedSorted7 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 7)\n        val gradesMapSortedReversedSortedSorted8 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 8)\n        val gradesMapSortedReversedSortedSorted9 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 9)\n        val gradesMapSortedReversedSortedSorted10 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 10)\n        val gradesMapSortedReversedSortedSorted11 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 11)\n        val gradesMapSortedReversedSortedSorted12 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 12)\n        val gradesMapSortedReversedSortedSorted13 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 13)\n        val gradesMapSortedReversedSortedSorted14 = gradesMapSortedReversedSorted.take(gradesMapSortedReversedSorted.size\
    \ - 14)", "        val gradesMap : Map[Float, String] = grades.map(grade => (grade\
    \ -> grade.asInstanceOf[Float].toChar)).toMap\n        val gradesMapSorted : Map[Float,\
    \ String] = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedKeys :\
    \ Iterator[Float] = gradesMapSorted.keys\n        val gradesMapSortedValues :\
    \ Iterator[String] = gradesMapSorted.values\n        val gradesMapSortedKeysAndValues\
    \ : Iterator[(Float, String)] = gradesMapSortedKeys.zip(gradesMapSortedValues)\n\
    \        val gradesMapSortedKeysAndValuesMap : Map[Float, String] = gradesMapSortedKeysAndValues.toMap\n\
    \        val gradesMapSortedKeysAndValuesMapSorted : Map[Float, String] = gradesMapSortedKeysAndValuesMap.sortBy(_._1).reverse\n\
    \        val gradesMapSortedKeysAndValuesMapSortedKeys : Iterator[Float] = gradesMapSortedKeysAndValuesMapSorted.keys\n\
    \        val gradesMapSortedKeysAndValuesMapSortedValues : Iterator[String] =\
    \ gradesMapSortedKeysAndValuesMapSorted.values\n        val gradesMapSortedKeysAndValuesMapSortedKeysAndValues\
    \ : Iterator[(Float, String)] = gradesMapSortedKeysAndValuesMapSortedKeys.zip(gradesMapSortedKeysAndValuesMapSortedValues)\n\
    \        val gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMap : Map[Float,\
    \ String] = gradesMapSortedKeysAndValuesMapSortedKeysAndValues.toMap\n       \
    \ val gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSorted : Map[Float,\
    \ String] = gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMap.sortBy(_._1).reverse\n\
    \        val gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSortedKeys :\
    \ Iterator[Float] = gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSorted.keys\n\
    \        val gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSortedValues\
    \ : Iterator[String] = gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSorted.values\n\
    \        val gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSortedKeysAndValues\
    \ : Iterator[(Float, String)] = gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSortedKeys.zip(gradesMapSortedKeysAndValuesMapSortedKeysAndValuesMapSortedValues)\n\
    \        val gradesMapSortedKeysAndValues", "        val gradesMap = grades.groupBy(x\
    \ => math.floor(x)).mapValues(_.toList).mapValues(_.sortBy(x => x))\n        val\
    \ gradesMapSorted = gradesMap.mapValues(x => x.reverse)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.mapValues(x => x.reverse)\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedValuesSorted\
    \ = gradesMapSortedReversedValues.sortBy(x => x.length)\n        val gradesMapSortedReversedValuesSortedKeys\
    \ = gradesMapSortedReversedValuesSorted.keys\n        val gradesMapSortedReversedValuesSortedValues\
    \ = gradesMapSortedReversedValuesSorted.values\n        val gradesMapSortedReversedValuesSortedKeysSorted\
    \ = gradesMapSortedReversedValuesSortedKeys.sortBy(x => x.length)\n        val\
    \ gradesMapSortedReversedValuesSortedKeysSortedValues = gradesMapSortedReversedValuesSortedKeysSorted.values\n\
    \        val gradesMapSortedReversedValuesSortedKeysSortedValuesSorted = gradesMapSortedReversedValuesSortedKeysSortedValues.sortBy(x\
    \ => x.length)\n        val gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeys\
    \ = gradesMapSortedReversedValuesSortedKeysSortedValuesSorted.keys\n        val\
    \ gradesMapSortedReversedValuesSortedKeysSortedValuesSortedValues = gradesMapSortedReversedValuesSortedKeysSortedValuesSorted.values\n\
    \        val gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSorted\
    \ = gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeys.sortBy(x =>\
    \ x.length)\n        val gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSortedValues\
    \ = gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSorted.values\n\
    \        val gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSortedValuesSorted\
    \ = gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSortedValues.sortBy(x\
    \ => x.length)\n        val gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSortedValuesSortedKeys\
    \ = gradesMapSortedReversedValuesSortedKeysSortedValuesSortedKeysSortedValuesSortedKeys.sortBy(x\
    \ => x.length)\n        ", "        val gradesMap : Map[Float, String] = grades.map(x\
    \ => (x, \"D-\")).toMap\n        val gradesList : List[(Float, String)] = grades.map(x\
    \ => (x, \"D-\")).toList\n        val gradesMapList : List[(Float, String)] =\
    \ grades.map(x => (x, \"D-\")).toList\n        val gradesMapList2 : List[(Float,\
    \ String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList3 :\
    \ List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList4\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList5\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList6\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList7\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList8\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList9\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList10\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList11\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList12\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList13\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList14\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList15\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList16\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList17\
    \ : List[(Float, String)] = grades.map(x => (x, \"D-\")).toList\n        val gradesMapList18\
    \ : List[(Float", "        val gradesMap : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"D-\")).toMap\n        val gradesList : List[(Float, String)]\
    \ = grades.map(grade => (grade -> \"D-\"))\n        val gradesMapList : List[(Float,\
    \ String)] = grades.map(grade => (grade -> \"D-\")).toList\n        val gradesMapList2\
    \ : List[(Float, String)] = grades.map(grade => (grade -> \"D-\")).toList\n  \
    \      val gradesMapList3 : List[(Float, String)] = grades.map(grade => (grade\
    \ -> \"D-\")).toList\n        val gradesMapList4 : List[(Float, String)] = grades.map(grade\
    \ => (grade -> \"D-\")).toList\n        val gradesMapList5 : List[(Float, String)]\
    \ = grades.map(grade => (grade -> \"D-\")).toList\n        val gradesMapList6\
    \ : List[(Float, String)] = grades.map(grade => (grade -> \"D-\")).toList\n  \
    \      val gradesMapList7 : List[(Float, String)] = grades.map(grade => (grade\
    \ -> \"D-\")).toList\n        val gradesMapList8 : List[(Float, String)] = grades.map(grade\
    \ => (grade -> \"D-\")).toList\n        val gradesMapList9 : List[(Float, String)]\
    \ = grades.map(grade => (grade -> \"D-\")).toList\n        val gradesMapList10\
    \ : List[(Float, String)] = grades.map(grade => (grade -> \"D-\")).toList\n  \
    \      val gradesMapList11 : List[(Float, String)] = grades.map(grade => (grade\
    \ -> \"D-\")).toList\n        val gradesMapList12 : List[(Float, String)] = grades.map(grade\
    \ => (grade -> \"D-\")).toList\n        val gradesMapList13 : List[(Float, String)]\
    \ = grades.map(grade => (grade -> \"D-\")).toList\n        val gradesMapList14\
    \ : List[(Float, String)] = grades.map(grade => (grade -> \"D-\")).toList\n  \
    \      val gradesMapList15 : List[(Float, String)] = grades.map(grade => (grade\
    \ -> \"D-\")).toList\n        val gradesMapList16 : List[(Float, String)] = grades.",
  '        grades.map(grade => if(grade < 3.0) "F" else if(grade < 3.7) "D" else if(grade
    < 3.3) "C" else if(grade < 3.6) "B" else if(grade < 3.8) "A" else if(grade < 3.1)
    "A+" else if(grade < 3.4) "A-" else if(grade < 3.7) "B+" else if(grade < 3.8)
    "B" else if(grade < 3.1) "B" else if(grade < 3.4) "B-" else if(grade < 3.7) "C+"
    else if(grade < 3.8) "C" else if(grade < 3.1) "C" else if(grade < 3.4) "C-" else
    if(grade < 3.7) "D+" else if(grade < 3.8) "D" else if(grade < 3.1) "D" else if(grade
    < 3.4) "D-" else if(grade < 3.7) "E" else if(grade < 3.8) "E" else if(grade <
    3.1) "E" else if(grade < 3.4) "E-" else "")', "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesKeys = gradesMap.keys\n        val\
    \ gradesValues = gradesMap.values.toList\n        val gradesKeysSorted = gradesKeys.sortBy(x\
    \ => x)\n        val gradesValuesSorted = gradesValues.sortBy(x => x)\n      \
    \  val gradesKeysSortedWithDuplicates = gradesKeysSorted.distinct\n        val\
    \ gradesValuesSortedWithDuplicates = gradesValuesSorted.distinct\n        val\
    \ gradesKeysSortedWithDuplicatesAndDuplicates = gradesKeysSortedWithDuplicates.zip(gradesValuesSortedWithDuplicates)\n\
    \        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicates = gradesKeysSortedWithDuplicatesAndDuplicates.map(x\
    \ => x._1 + \"+\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicates.map(x => x._1 + \"\
    -\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicates.map(x\
    \ => x._1 + \"-\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates.map(x\
    \ => x._1 + \"-\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates.map(x\
    \ => x._1 + \"-\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates.map(x\
    \ => x._1 + \"-\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates.map(x\
    \ => x._1 + \"-\" + x._2)\n        val gradesKeysSortedWithDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicatesAndDuplicates\
    \ = grade", "        val gradesMap = grades.toMap\n        val gradesKeys = gradesMap.keys\n\
    \        val gradesValues = gradesMap.values.toList\n        val gradesKeysSorted\
    \ = gradesKeys.sort\n        val gradesValuesSorted = gradesValues.sort\n    \
    \    val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesValuesSortedLength\
    \ = gradesValuesSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKey",
  "        val gradesMap = grades.map(grade => (grade -> grade)).toMap\n        val\
    \ gradesSortedByGPA = grades.sortBy(_.toDouble)\n        val gradesSortedByGPAWithLetterGrade\
    \ = gradesSortedByGPA.map(grade => (grade -> gradesMap(grade)))\n        val gradesSortedByGPAWithLetterGradeWithZero\
    \ = gradesSortedByGPAWithLetterGrade.map(grade => (grade -> grade))\n        val\
    \ gradesSortedByGPAWithLetterGradeWithZeroWithZero = gradesSortedByGPAWithLetterGradeWithZero.map(grade\
    \ => (grade -> grade))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZero.map(grade => (grade -> grade))\n\
    \        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(grade => (grade\
    \ -> grade))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(grade => (grade\
    \ -> grade))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(grade => (grade\
    \ -> grade))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(grade => (grade\
    \ -> grade))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(grade => (grade\
    \ -> grade))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(grade => (grade\
    \ -> grade))\n        val gradesSortedByGPA", "        val gradesMap : Map[Float,\
    \ String] = grades.map(grade => (grade -> \"E\")).toMap\n        val gradesMapWithZero\
    \ = gradesMap + (0.0 -> \"E\")\n        val gradesMapWithZeroAndNegative = gradesMapWithZero\
    \ + (-7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositive = gradesMapWithZeroAndNegative\
    \ + (7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositive + (-7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegative + (7.0 -> \"D\")\n    \
    \    val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositive + (-7.0 -> \"\
    D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegative +\
    \ (7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ + (-7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ + (7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ + (-7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ + (7.0 -> \"D\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive",
  "        val gradesMap = grades.toMap\n        val gradesSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedSortedByKey = gradesSorted.toSeq.sortBy(_._1)\n     \
    \   val gradesSortedSortedByKeyReversed = gradesSortedSortedByKey.reverse\n  \
    \      val gradesSortedSortedByKeyReversedSortedByKey = gradesSortedSortedByKeyReversed.toSeq.sortBy(_._1)\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversed = gradesSortedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKey = gradesSortedSortedByKeyReversedSortedByKeyReversed.toSeq.sortBy(_._1)\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n  \
    \      val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.toSeq.sortBy(_._1)\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.toSeq.sortBy(_._1)\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed",
  "        val gradesMap = grades.groupBy(_ / 4).mapValues(_.toList).toMap\n     \
    \   val gradesMapReversed = gradesMap.map(x => (x._2, x._1)).toMap\n        val\
    \ gradesMapReversedKeys = gradesMapReversed.keys\n        val gradesMapReversedValues\
    \ = gradesMapReversed.values\n        val gradesMapReversedKeysSorted = gradesMapReversedKeys.sorted\n\
    \        val gradesMapReversedValuesSorted = gradesMapReversedValues.sorted\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length\n\
    \        val gradesMapReversedValuesSortedLength = gradesMapReversedValuesSorted.length\n\
    \        val gradesMapReversedKeysSortedLength = gradesMapReversedKeysSorted.length",
  "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSortedByGPA\
    \ = grades.sortBy(x => x)\n        val gradesSortedByGPAWithLetterGrade = gradesSortedByGPA.map(x\
    \ => (x, gradesMap.get(x)))\n        val gradesSortedByGPAWithLetterGradeWithZero\
    \ = gradesSortedByGPAWithLetterGrade.map(x => (x._1, x._2._1))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZero.map(x => (x._1, x._2._2))\n     \
    \   val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero = gradesSortedByGPAWithLetterGradeWithZeroWithZero.map(x\
    \ => (x._1, x._2._3))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(x => (x._1, x._2._4))\n\
    \        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._5))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._6))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._7))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._8))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGPAWithLetterGradeWithZero", "        grades.toList.sortWith(_\
    \ < _).reverse.foldLeft(List[String]())((acc, grade) => {\n            val gpa\
    \ = grade.toInt\n            val letterGrade = if (gpa >= 4.0) \"A+\" else if\
    \ (gpa > 3.7) \"A\" else if (gpa > 3.3) \"A-\" else if (gpa > 3.0) \"B+\" else\
    \ if (gpa > 2.7) \"B\" else if (gpa > 2.3) \"B-\" else if (gpa > 2.0) \"C+\" else\
    \ if (gpa > 1.7) \"C\" else if (gpa > 1.3) \"C-\" else if (gpa > 1.0) \"D+\" else\
    \ if (gpa > 0.7) \"D\" else \"D-\"\n            acc :+ letterGrade\n        })",
  "        val gradesMap : Map[Float, String] = grades.map(grade => (grade -> \"A+\"\
    )).toMap\n        grades.map(grade => {\n            val gpa = grade / 4.0\n \
    \           val letterGrade = gradesMap(gpa)\n            letterGrade\n      \
    \  })", '        grades.map(grade => if (grade > 3.0) "A+" else if (grade > 2.7)
    "B" else if (grade > 2.3) "B" else if (grade > 2.0) "C" else if (grade > 1.7)
    "C" else if (grade > 1.3) "C" else if (grade > 1.0) "D" else if (grade > 0.7)
    "D" else if (grade > 0.0) "D" else "E")', "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAWithKey = gradesSortedByGPA.map(x => (x, x))\n \
    \       val gradesSortedByGPAWithKeyAndValue = gradesSortedByGPAWithKey.map(x\
    \ => (x._2, x._1))\n        val gradesSortedByGPAWithKeyAndValueAndKey = gradesSortedByGPAWithKeyAndValue.map(x\
    \ => (x._1, x._2))\n        val gradesSortedByGPAWithKeyAndValueAndKeyAndValue\
    \ = gradesSortedByGPAWithKeyAndValueAndKey.map(x => (x._2, x._1))\n        val\
    \ gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKey = gradesSortedByGPAWithKeyAndValueAndKeyAndValue.map(x\
    \ => (x._1, x._2))\n        val gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValue\
    \ = gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKey.map(x => (x._2, x._1))\n\
    \        val gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKey\
    \ = gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValue.map(x => (x._1,\
    \ x._2))\n        val gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValue\
    \ = gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKey.map(x =>\
    \ (x._2, x._1))\n        val gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValueAndKey\
    \ = gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValue.map(x\
    \ => (x._1, x._2))\n        val gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValue\
    \ = gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValueAndKey.map(x\
    \ => (x._2, x._1))\n        val gradesSortedByGPAWithKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValueAndKeyAndValueAndKey\
    \ = gradesSortedByGPAWithKeyAndValueAndKey", "        val gradesMap = grades.groupBy(x\
    \ => x.toInt).mapValues(_.toList.sortBy(x => x)).toMap\n        val gradesMapReverse\
    \ = gradesMap.map(x => (x._2, x._1)).toMap\n        val gradesMapReverse2 = gradesMapReverse.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse3 = gradesMapReverse2.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse4 = gradesMapReverse3.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse5 = gradesMapReverse4.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse6 = gradesMapReverse5.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse7 = gradesMapReverse6.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse8 = gradesMapReverse7.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse9 = gradesMapReverse8.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse10 = gradesMapReverse9.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse11 = gradesMapReverse10.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse12 = gradesMapReverse11.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse13 = gradesMapReverse12.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse14 = gradesMapReverse13.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse15 = gradesMapReverse14.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse16 = gradesMapReverse15.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse17 = gradesMapReverse16.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse18 = gradesMapReverse17.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse19 = gradesMapReverse18.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesMapReverse20 = gradesMapReverse19.map(x\
    \ => (x._1, x._2)).to", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedByGPA = grades.sortBy(x => x)\n        val gradesSortedByGPAWithLetterGrade\
    \ = gradesSortedByGPA.map(x => (x, gradesMap.get(x)))\n        val gradesSortedByGPAWithLetterGradeWithZero\
    \ = gradesSortedByGPAWithLetterGrade.map(x => (x._1, x._2._1))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZero.map(x => (x._1, x._2._2))\n     \
    \   val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero = gradesSortedByGPAWithLetterGradeWithZeroWithZero.map(x\
    \ => (x._1, x._2._3))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(x => (x._1, x._2._4))\n\
    \        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._5))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero.map(x\
    \ => (x._1, x._2._6))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero.map(x\
    \ => (x._1, x._2._7))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero.map(x\
    \ => (x._1, x._2._8))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith",
  "        grades.sortWith(_.toDouble < _.toDouble)\n        val gradesCount = grades.size\n\
    \        val gradesSum = grades.sum\n        val gradesAvg = gradesSum / gradesCount\n\
    \        val gradesMin = grades.min\n        val gradesMax = grades.max\n    \
    \    val gradesMedian = grades.median\n        val gradesMedianIndex = grades.indexOf((gradesMedian\
    \ + gradesMedian) / 2)\n        val gradesMedianIndex2 = gradesMedianIndex + 1\n\
    \        val gradesMedianIndex3 = gradesMedianIndex + 2\n        val gradesMedianIndex4\
    \ = gradesMedianIndex + 3\n        val gradesMedianIndex5 = gradesMedianIndex\
    \ + 4\n        val gradesMedianIndex6 = gradesMedianIndex + 5\n        val gradesMedianIndex7\
    \ = gradesMedianIndex + 6\n        val gradesMedianIndex8 = gradesMedianIndex\
    \ + 7\n        val gradesMedianIndex9 = gradesMedianIndex + 8\n        val gradesMedianIndex10\
    \ = gradesMedianIndex + 9\n        val gradesMedianIndex11 = gradesMedianIndex\
    \ + 10\n        val gradesMedianIndex12 = gradesMedianIndex + 11\n        val\
    \ gradesMedianIndex13 = gradesMedianIndex + 12\n        val gradesMedianIndex14\
    \ = gradesMedianIndex + 13\n        val gradesMedianIndex15 = gradesMedianIndex\
    \ + 14\n        val gradesMedianIndex16 = gradesMedianIndex + 15\n        val\
    \ gradesMedianIndex17 = gradesMedianIndex + 16\n        val gradesMedianIndex18\
    \ = gradesMedianIndex + 17\n        val gradesMedianIndex19 = gradesMedianIndex\
    \ + 18\n        val gradesMedianIndex20 = gradesMedianIndex + 19\n        val\
    \ gradesMedianIndex21 = gradesMedianIndex + 20\n        val gradesMedianIndex22\
    \ = gradesMedianIndex + 21\n        val gradesMedianIndex23 = gradesMedianIndex\
    \ + 22\n        val gradesMedianIndex24 = gradesMedianIndex + 23\n        val\
    \ gradesMedianIndex25 = gradesMedianIndex + 24\n        val gradesMedianIndex26\
    \ = gradesMedianIndex", "        val gradesMap : Map[Float, String] = grades.map(grade\
    \ => (grade -> grade < 3.0 ? \"A+\" :\n            grade < 3.7 ? \"A\" :\n   \
    \         grade < 3.3 ? \"A-\" :\n            grade < 3.0 ? \"B+\" :\n       \
    \     grade < 2.7 ? \"B\" :\n            grade < 2.3 ? \"B-\" :\n            grade\
    \ < 2.0 ? \"C+\" :\n            grade < 1.7 ? \"C\" :\n            grade < 1.3\
    \ ? \"C-\" :\n            grade < 1.0 ? \"D+\" :\n            grade < 0.7 ? \"\
    D\" :\n            \"D-\")).toMap\n        val gradesList : List[String] = grades.map(grade\
    \ => gradesMap(grade))\n        gradesList", "        val gradesMap : Map[Float,\
    \ String] = grades.map(grade => (grade -> \"E\")).toMap\n        val gradesMap2\
    \ = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMap3 = grades.map(grade\
    \ => (grade -> \"C\")).toMap\n        val gradesMap4 = grades.map(grade => (grade\
    \ -> \"B\")).toMap\n        val gradesMap5 = grades.map(grade => (grade -> \"\
    A\")).toMap\n        val gradesMap6 = grades.map(grade => (grade -> \"A+\")).toMap\n\
    \        val gradesMap7 = grades.map(grade => (grade -> \"A-\")).toMap\n     \
    \   val gradesMap8 = grades.map(grade => (grade -> \"B+\")).toMap\n        val\
    \ gradesMap9 = grades.map(grade => (grade -> \"B-\")).toMap\n        val gradesMap10\
    \ = grades.map(grade => (grade -> \"C+\")).toMap\n        val gradesMap11 = grades.map(grade\
    \ => (grade -> \"C\")).toMap\n        val gradesMap12 = grades.map(grade => (grade\
    \ -> \"C-\")).toMap\n        val gradesMap13 = grades.map(grade => (grade -> \"\
    D+\")).toMap\n        val gradesMap14 = grades.map(grade => (grade -> \"D\")).toMap\n\
    \        val gradesMap15 = grades.map(grade => (grade -> \"D-\")).toMap\n    \
    \    val gradesMap16 = grades.map(grade => (grade -> \"E\")).toMap\n        val\
    \ gradesMap17 = grades.map(grade => (grade -> \"F\")).toMap\n        val gradesMap18\
    \ = grades.map(grade => (grade -> \"F\")).toMap\n        val gradesMap19 = grades.map(grade\
    \ => (grade -> \"F\")).toMap\n        val gradesMap20 = grades.map(grade => (grade\
    \ -> \"F\")).toMap\n        val gradesMap21 = grades.map(grade => (grade -> \"\
    F\")).toMap\n        val gradesMap22 = grades.map(grade => (grade -> \"F\")).toMap\n\
    \        val gradesMap23 = grades.map(grade => (grade -> \"F\")).toMap\n     \
    \   val gradesMap24 = grade", "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt).mapValues(_.toDouble)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._2)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n\
    \        val gradesMapSortedReversedKeysSorted = gradesMapSortedReversedKeys.sortBy(_)\n\
    \        val gradesMapSortedReversedValuesSorted = gradesMapSortedReversedValues.sortBy(_)\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversed = gradesMapSortedReversedKeysSorted.sortBy(_)\n\
    \        val gradesMapSortedReversedValuesSortedSortedReversed = gradesMapSortedReversedValuesSorted.sortBy(_)\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedKeysSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversed.sortBy(_)\n        val gradesMapSortedReversedValuesSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSortedSortedReversed.sortBy(_)\n        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed.sortBy(_)\n\
    \        val gradesMapSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSortedSortedReversed.sortBy(_)\n        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed.sortBy(_)\n\
    \        val gradesMapSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSortedSortedReversed.sortBy(_)\n        val gradesMapSortedReversedKeysSortedSortedReversedValuesSorted",
  '        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt).mapValues(x
    => x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x
    => x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x =>
    x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x =>
    x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x
    => x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x =>
    x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x =>
    x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x
    => x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x =>
    x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x =>
    x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x
    => x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x =>
    x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x =>
    x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x
    => x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x =>
    x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x =>
    x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x
    => x.toInt).mapValues(x => x.toDouble).mapValues(x => x.toInt).mapValues(x =>
    x.toDouble).mapValues(x => x.toInt).mapValues(x => x.toDouble).mapValues(x =>
    x.toInt).mapValues(x => x.toDouble).mapValues(x ', "        val gradesMap : Map[Float,\
    \ String] = grades.map(grade => grade -> \"A+\".toUpperCase)\n        val gradesMap2\
    \ : Map[Float, String] = grades.map(grade => grade -> \"A\".toUpperCase)\n   \
    \     val gradesMap3 : Map[Float, String] = grades.map(grade => grade -> \"A-\"\
    .toUpperCase)\n        val gradesMap4 : Map[Float, String] = grades.map(grade\
    \ => grade -> \"B+\".toUpperCase)\n        val gradesMap5 : Map[Float, String]\
    \ = grades.map(grade => grade -> \"B\".toUpperCase)\n        val gradesMap6 :\
    \ Map[Float, String] = grades.map(grade => grade -> \"B-\".toUpperCase)\n    \
    \    val gradesMap7 : Map[Float, String] = grades.map(grade => grade -> \"C+\"\
    .toUpperCase)\n        val gradesMap8 : Map[Float, String] = grades.map(grade\
    \ => grade -> \"C\".toUpperCase)\n        val gradesMap9 : Map[Float, String]\
    \ = grades.map(grade => grade -> \"C-\".toUpperCase)\n        val gradesMap10\
    \ : Map[Float, String] = grades.map(grade => grade -> \"D+\".toUpperCase)\n  \
    \      val gradesMap11 : Map[Float, String] = grades.map(grade => grade -> \"\
    D\".toUpperCase)\n        val gradesMap12 : Map[Float, String] = grades.map(grade\
    \ => grade -> \"D-\".toUpperCase)\n        val gradesMap13 : Map[Float, String]\
    \ = grades.map(grade => grade -> \"E\".toUpperCase)\n        val gradesMap14 :\
    \ Map[Float, String] = grades.map(grade => grade -> \"F\".toUpperCase)\n     \
    \   val gradesMap15 : Map[Float, String] = grades.map(grade => grade -> \"F\"\
    .toUpperCase)\n        val gradesMap16 : Map[Float, String] = grades.map(grade\
    \ => grade -> \"F\".toUpperCase)\n        val gradesMap17 : Map[Float, String]\
    \ = grades.map(grade => grade -> \"F\".toUpperCase)\n        val gradesMap18 :\
    \ Map[Float, String] = grades.map(grade => grade -> \"F\".toUpperCase)\n     \
    \   val gradesMap19", "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedGrouped\
    \ = gradesMapSorted.groupBy(_._1)\n        val gradesMapSortedGroupedWithMax =\
    \ gradesMapSortedGrouped.maxBy(_._2._2)\n        val gradesMapSortedGroupedWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMax.maxBy(_._2)\n        val gradesMapSortedGroupedWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMax.maxBy(_._2)\n        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMaxWithMax.maxBy(_._2)\n        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMax.maxBy(_._2)\n        val\
    \ gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax = gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMax.maxBy(_._2)\n\
    \        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.maxBy(_._2)\n\
    \        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.maxBy(_._2)\n\
    \        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.maxBy(_._2)\n\
    \        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.maxBy(_._2)\n\
    \        val gradesMapSortedGroupedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax",
  '        grades.map(grade => if(grade > 3.0) "B+" else if (grade > 2.7) "B" else
    if (grade > 2.3) "B-" else if (grade > 2.0) "C+" else if (grade > 1.7) "C" else
    if (grade > 1.3) "C-" else if (grade > 1.0) "D+" else if (grade > 0.7) "D" else
    if (grade > 0.0) "D-" else if (grade > 0.0) "E" else "A+" else if (grade > 3.0)
    "A" else "A")', "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n\
    \        val sortedGrades = grades.sortBy(x => x)\n        val gradesCount = grades.map(x\
    \ => gradesMap.getOrElse(x, 0)).sum\n        val gradesSum = grades.map(x => gradesMap.getOrElse(x,\
    \ 0)).sum\n        val gradesAverage = gradesSum / gradesCount\n        val gradesSumOfSquares\
    \ = grades.map(x => x * x).sum\n        val gradesSumOfSquaresAverage = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquared = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquare = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRoot = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf2 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf3 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf4 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf5 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf6 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf7 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf8 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf9 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf10 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf11 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf12 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf13 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf14 = gradesSumOfSquares\
    \ / gradesCount\n        val gradesSumOfSquaresAverageSquareRootOf15 = gradesSumOfSquares\
    \ / ", "        val gradesMap = grades.toMap\n        val gradesSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedWithIndex = gradesSorted.zipWithIndex\n        val gradesSortedWithIndexSorted\
    \ = gradesSortedWithIndex.sortBy(_._1)\n        val gradesSortedWithIndexSortedWithIndex\
    \ = gradesSortedWithIndexSorted.zipWithIndex\n        val gradesSortedWithIndexSortedWithIndexSorted\
    \ = gradesSortedWithIndexSortedWithIndex.sortBy(_._2)\n        val gradesSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = gradesSortedWithIndexSortedWithIndexSorted.zipWithIndex\n        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._3)\n       \
    \ val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.zipWithIndex\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._4)\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.zipWithIndex\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._5)\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.zipWithIndex\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._6)\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.zipWithIndex\n\
    \        val gradesSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSor",
  "        val gradesMap = grades.toMap\n        val gradesArray = grades.toArray\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesEnumerator = grades.iterator\n\
    \        val gradesIterator = grades.iterator\n        val gradesEnumerator2 =\
    \ grades.iterator\n        val gradesIterator2 = grades.iterator\n        val\
    \ gradesEnumerator3 = grades.iterator\n        val gradesIterator3 = grades.iterator\n\
    \        val gradesEnumerator4 = grades.iterator\n        val gradesIterator4\
    \ = grades.iterator\n        val gradesEnumerator5 = grades.iterator\n       \
    \ val gradesIterator5 = grades.iterator\n        val gradesEnumerator6 = grades.iterator\n\
    \        val gradesIterator6 = grades.iterator\n        val gradesEnumerator7\
    \ = grades.iterator\n        val gradesIterator7 = grades.iterator\n        val\
    \ gradesEnumerator8 = grades.iterator\n        val gradesIterator8 = grades.iterator\n\
    \        val gradesEnumerator9 = grades.iterator\n        val gradesIterator9\
    \ = grades.iterator\n        val gradesEnumerator10 = grades.iterator\n      \
    \  val gradesIterator10 = grades.iterator\n        val gradesEnumerator11 = grades.iterator\n\
    \        val gradesIterator11 = grades.iterator\n        val gradesEnumerator12\
    \ = grades.iterator\n        val gradesIterator12 = grades.iterator\n        val\
    \ gradesEnumerator13 = grades.iterator\n        val gradesIterator13 = grades.iterator\n\
    \        val gradesEnumerator14 = grades.iterator\n        val gradesIterator14\
    \ = grades.iterator\n        val gradesEnumerator15 = grades.iterator\n      \
    \  val gradesIterator15 = grades.iterator\n        val gradesEnumerator16 = grades.iterator\n\
    \        val gradesIterator16 = grades.iterator\n        val gradesEnumerator17\
    \ = grades.iterator\n        val gradesIterator17 = grades.iterator\n        val\
    \ gradesEnumerator18 = grades.iterator\n        val gradesIterator18 = grades.iterator\n\
    \        val gradesEnumerator19 = grades.iterator\n        val gradesIterator19\
    \ = grades.iterator\n        val gradesEnumerator20 = grades.iterator\n      \
    \  val gradesIterator20 = grades.iterator\n        val gradesEnumerator21 = grades.iterator\n\
    \        val gradesIterator21 = grades.iterator\n        ", "        val gradesMap\
    \ = new mutable.HashMap[Float, String]()\n        grades.foreach(grade => gradesMap(grade.toDouble)\
    \ = grade)\n        gradesMap.values.toList.sortWith(_ < _)\n            .map(grade\
    \ => if (grade > 0) \"A+\" else if (grade < 0) \"A-\" else \"B+\" else if (grade\
    \ == 0) \"B\" else if (grade > 0) \"B-\" else \"C+\" else if (grade < 0) \"C\"\
    \ else \"C-\" else \"D+\" else if (grade > 0) \"D\" else \"D-\" else \"E\")",
  "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt)\n        val\
    \ gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2\
    \ = gradesMapSorted.filter(_._2 > 0).map(_._1)\n        val gradesMapSorted3 =\
    \ gradesMapSorted.filter(_._2 < 0).map(_._1)\n        val gradesMapSorted4 = gradesMapSorted.filter(_._2\
    \ < 0).map(_._1)\n        val gradesMapSorted5 = gradesMapSorted.filter(_._2 <\
    \ 0).map(_._1)\n        val gradesMapSorted6 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n\
    \        val gradesMapSorted7 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n \
    \       val gradesMapSorted8 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n  \
    \      val gradesMapSorted9 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted10 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted11 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted12 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted13 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted14 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted15 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted16 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted17 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted18 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted19 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted20 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted21 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val gradesMapSorted22 = gradesMapSorted.filter(_._2 < 0).map(_._1)\n   \
    \     val ", "        val gradesMap : Map[Float, String] = grades.map(x => (x,\
    \ \"E\")).toMap\n        val gradesMap2 = grades.map(x => (x, \"D\")).toMap\n\
    \        val gradesMap3 = grades.map(x => (x, \"C\")).toMap\n        val gradesMap4\
    \ = grades.map(x => (x, \"B\")).toMap\n        val gradesMap5 = grades.map(x =>\
    \ (x, \"A\")).toMap\n        val gradesMap6 = grades.map(x => (x, \"A+\")).toMap\n\
    \        val gradesMap7 = grades.map(x => (x, \"A-\")).toMap\n        val gradesMap8\
    \ = grades.map(x => (x, \"B+\")).toMap\n        val gradesMap9 = grades.map(x\
    \ => (x, \"B-\")).toMap\n        val gradesMap10 = grades.map(x => (x, \"C+\"\
    )).toMap\n        val gradesMap11 = grades.map(x => (x, \"C\")).toMap\n      \
    \  val gradesMap12 = grades.map(x => (x, \"C-\")).toMap\n        val gradesMap13\
    \ = grades.map(x => (x, \"D+\")).toMap\n        val gradesMap14 = grades.map(x\
    \ => (x, \"D\")).toMap\n        val gradesMap15 = grades.map(x => (x, \"D-\")).toMap\n\
    \        val gradesMap16 = grades.map(x => (x, \"E\")).toMap\n        val gradesMap17\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap18 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap19 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap20 = grades.map(x => (x, \"F\")).toMap\n        val gradesMap21\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap22 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap23 = grades.map(x => (x, \"F\")).toMap\n\
    \        val gradesMap24 = grades.map(x => (x, \"F\")).toMap\n        val gradesMap25\
    \ = grades.map(x => (x, \"F\")).toMap\n        val gradesMap26 = grades.map(x\
    \ => (x, \"F\")).toMap\n        val gradesMap27 = grades.map(x => (x, \"F\")).toMap\n\
    \        ", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n   \
    \     val gradesSorted = grades.sortBy(x => x)\n        val gradesSortedMap =\
    \ gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedMap = gradesSorted.sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap = gradesSorted.sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x =>\
    \ x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x ", "        val\
    \ gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedValuesSum\
    \ = gradesMapSortedReversedValues.sum\n        val gradesMapSortedReversedValuesSum2\
    \ = gradesMapSortedReversedValuesSum * gradesMapSortedReversedValuesSum\n    \
    \    val gradesMapSortedReversedValuesSum3 = gradesMapSortedReversedValuesSum2\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum4\
    \ = gradesMapSortedReversedValuesSum3 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum5 = gradesMapSortedReversedValuesSum4\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum6\
    \ = gradesMapSortedReversedValuesSum5 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum7 = gradesMapSortedReversedValuesSum6\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum8\
    \ = gradesMapSortedReversedValuesSum7 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum9 = gradesMapSortedReversedValuesSum8\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum10\
    \ = gradesMapSortedReversedValuesSum9 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum11 = gradesMapSortedReversedValuesSum10\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum12\
    \ = gradesMapSortedReversedValuesSum11 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum13 = gradesMapSortedReversedValuesSum12\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum14\
    \ = gradesMapSortedReversedValuesSum13 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum15 = gradesMapSortedReversedValuesSum14\
    \ * gradesMapSortedReversedValues", "        val gradesMap = grades.groupBy(x\
    \ => x.toInt).mapValues(_.toList)\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSorted", "    \
    \    val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedValuesSum\
    \ = gradesMapSortedReversedValues.sum\n        val gradesMapSortedReversedValuesSum2\
    \ = gradesMapSortedReversedValuesSum * gradesMapSortedReversedValuesSum\n    \
    \    val gradesMapSortedReversedValuesSum3 = gradesMapSortedReversedValuesSum2\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum4\
    \ = gradesMapSortedReversedValuesSum3 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum5 = gradesMapSortedReversedValuesSum4\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum6\
    \ = gradesMapSortedReversedValuesSum5 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum7 = gradesMapSortedReversedValuesSum6\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum8\
    \ = gradesMapSortedReversedValuesSum7 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum9 = gradesMapSortedReversedValuesSum8\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum10\
    \ = gradesMapSortedReversedValuesSum9 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum11 = gradesMapSortedReversedValuesSum10\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum12\
    \ = gradesMapSortedReversedValuesSum11 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum13 = gradesMapSortedReversedValuesSum12\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum14\
    \ = gradesMapSortedReversedValuesSum13 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum15 = gradesMapSortedReversedValuesSum14\
    \ * gradesMapSortedReversedValues", "        val gradesMap = grades.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSorted = grades.sortBy(x => x)\n        val gradesSortedMap\
    \ = gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMapReversed\
    \ = gradesSortedMap.reverse\n        val gradesSortedMapReversedMap = gradesSortedMapReversed.map(x\
    \ => (x._2, x._1)).toMap\n        val gradesSortedMapReversedMapReversed = gradesSortedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMap =\
    \ gradesSortedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n        val\
    \ gradesSortedMapReversedMapReversedMapReversed = gradesSortedMapReversedMapReversedMapReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n\
    \        val gradesSortedMapReversedMapReversedMapReversedMapReversed = gradesSortedMapReversedMapReversedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n\
    \        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMap.map(x => (x._1,\
    \ x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReverse", "        val gradesMap\
    \ = grades.toMap\n        val gradesKeys = gradesMap.keys\n        val gradesValues\
    \ = gradesMap.values.toList\n        val gradesKeysSorted = gradesKeys.sort\n\
    \        val gradesValuesSorted = gradesValues.sort\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesValuesSortedLength = gradesValuesSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKeysSortedLength = gradesKeysSorted.length\n\
    \        val gradesKeysSortedLength = gradesKeysSorted.length\n        val gradesKeysSortedLength\
    \ = gradesKeysSorted.length\n        val gradesKey", "        val gradesMap =\
    \ grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n       \
    \ val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSorted", "      \
    \  val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt)\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2 = gradesMapSorted.filter(_._2\
    \ > 0)\n        val gradesMapSorted3 = gradesMapSorted2.filter(_._2 > 0)\n   \
    \     val gradesMapSorted4 = gradesMapSorted3.filter(_._2 > 0)\n        val gradesMapSorted5\
    \ = gradesMapSorted4.filter(_._2 > 0)\n        val gradesMapSorted6 = gradesMapSorted5.filter(_._2\
    \ > 0)\n        val gradesMapSorted7 = gradesMapSorted6.filter(_._2 > 0)\n   \
    \     val gradesMapSorted8 = gradesMapSorted7.filter(_._2 > 0)\n        val gradesMapSorted9\
    \ = gradesMapSorted8.filter(_._2 > 0)\n        val gradesMapSorted10 = gradesMapSorted9.filter(_._2\
    \ > 0)\n        val gradesMapSorted11 = gradesMapSorted10.filter(_._2 > 0)\n \
    \       val gradesMapSorted12 = gradesMapSorted11.filter(_._2 > 0)\n        val\
    \ gradesMapSorted13 = gradesMapSorted12.filter(_._2 > 0)\n        val gradesMapSorted14\
    \ = gradesMapSorted13.filter(_._2 > 0)\n        val gradesMapSorted15 = gradesMapSorted14.filter(_._2\
    \ > 0)\n        val gradesMapSorted16 = gradesMapSorted15.filter(_._2 > 0)\n \
    \       val gradesMapSorted17 = gradesMapSorted16.filter(_._2 > 0)\n        val\
    \ gradesMapSorted18 = gradesMapSorted17.filter(_._2 > 0)\n        val gradesMapSorted19\
    \ = gradesMapSorted18.filter(_._2 > 0)\n        val gradesMapSorted20 = gradesMapSorted19.filter(_._2\
    \ > 0)\n        val gradesMapSorted21 = gradesMapSorted20.filter(_._2 > 0)\n \
    \       val gradesMapSorted22 = gradesMapSorted21.filter(_._2 > 0)\n        val\
    \ gradesMapSorted23 = gradesMapSorted22.filter(_._2 > 0)\n        val gradesMapSorted24\
    \ = gradesMapSorted23.filter(_._2 > 0)\n        val gradesMapSorted25 = gradesMapSorted24.filter(_._2\
    \ > 0)\n        val gradesMapSorted", "        val gradesMap = grades.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAWithKeys = gradesSortedByGPA.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedByGPAWithKeysReversed = gradesSortedByGPAWithKeys.reverse\n\
    \        val gradesSortedByGPAWithKeysReversedWithKeys = gradesSortedByGPAWithKeysReversed.map(x\
    \ => (x._2, x._1))\n        val gradesSortedByGPAWithKeysReversedWithKeysReversed\
    \ = gradesSortedByGPAWithKeysReversedWithKeys.reverse\n        val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeys\
    \ = gradesSortedByGPAWithKeysReversedWithKeysReversed.map(x => (x._1, x._2))\n\
    \        val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversed\
    \ = gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeys.reverse\n      \
    \  val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeys\
    \ = gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversed.map(x =>\
    \ (x._2, x._1))\n        val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReversed\
    \ = gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeys.reverse\n\
    \        val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReversedWithKeys\
    \ = gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReversed.map(x\
    \ => (x._1, x._2))\n        val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReversed\
    \ = gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReversedWithKeys.reverse\n\
    \        val gradesSortedByGPAWithKeysReversedWithKeysReversedWithKeysReversedWithKeysReverse",
  "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSortedByGrade\
    \ = grades.sortBy(x => x)\n        val gradesSortedByGradeReversed = gradesSortedByGrade.map(x\
    \ => (x.toInt, x)).toMap.reverse\n        val gradesSortedByGradeReversedSortedByGrade\
    \ = gradesSortedByGradeReversed.sortBy(x => x._1)\n        val gradesSortedByGradeReversedSortedByGradeReversed\
    \ = gradesSortedByGradeReversedSortedByGrade.map(x => (x._2, x._1)).toMap.reverse\n\
    \        val gradesSortedByGradeReversedSortedByGradeReversedSortedByGrade = gradesSortedByGradeReversedSortedByGradeReversed.sortBy(x\
    \ => x._1)\n        val gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversed\
    \ = gradesSortedByGradeReversedSortedByGradeReversedSortedByGrade.map(x => (x._2,\
    \ x._1)).toMap.reverse\n        val gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGrade\
    \ = gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGrade.map(x\
    \ => (x._2, x._1)).toMap.reverse\n        val gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversed\
    \ = gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGrade.map(x\
    \ => (x._2, x._1)).toMap.reverse\n        val gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGrade\
    \ = gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGrade.map(x\
    \ => (x._2, x._1)).toMap.reverse\n        val gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversed\
    \ = gradesSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversedSortedByGradeReversed.map(x\
    \ => (x._2, x._1)).to", "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedKeys\
    \ = gradesMapSorted.keys\n        val gradesMapSortedValues = gradesMapSorted.values\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = grades", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedByGPAReversedMapReversed = gradesSortedByGPAReversedMap.reverse\n\
    \        val gradesSortedByGPAReversedMapReversedMap = gradesSortedByGPAReversedMapReversed.toMap\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversed = gradesSortedByGPAReversedMapReversedMap.reverse\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMap = gradesSortedByGPAReversedMapReversedMapReversed.toMap\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMapReversed = gradesSortedByGPAReversedMapReversedMapReversedMap.reverse\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMapReversedMap = gradesSortedByGPAReversedMapReversedMapReversedMapReversed.toMap\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedByGPAReversedMapReversedMapReversedMapReversedMap.reverse\n  \
    \      val gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversed.toMap\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversedMap.reverse\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversedMapReversedMap.reverse\n\
    \        val gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedByGPAReversedMapReversedMapReversedMapReversedMapReverse", " \
    \       val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSortedByGPA\
    \ = grades.sortBy(x => x)\n        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedMapReversed = gradesSortedByGPAReversedMap.map(x\
    \ => (x._2, x._1)).toMap\n        val gradesSortedByGPAReversedMapReversedKeys\
    \ = gradesSortedByGPAReversedMapReversed.keys\n        val gradesSortedByGPAReversedMapReversedValues\
    \ = gradesSortedByGPAReversedMapReversed.values\n        val gradesSortedByGPAReversedMapReversedValuesSortedByGPA\
    \ = gradesSortedByGPAReversedMapReversedValues.sortBy(x => x)\n        val gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversed\
    \ = gradesSortedByGPAReversedMapReversedValuesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMap = gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversed.map(x\
    \ => (x._2, x._1)).toMap\n        val gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversed\
    \ = gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMap.map(x =>\
    \ (x._2, x._1)).toMap\n        val gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversedKeys\
    \ = gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversed.keys\n\
    \        val gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversedValues\
    \ = gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversed.values\n\
    \        val gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversedValuesSortedByGPA\
    \ = gradesSortedByGPAReversedMapReversedValuesSortedByGPAReversedMapReversedValues.sortBy(x\
    \ => x)\n        val gradesSortedByGP", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSorted = grades.sortBy(x => x)\n \
    \       val gradesSortedMap = gradesSorted.map(x => (x.toInt, x)).toMap\n    \
    \    val gradesSortedMapReversed = gradesSortedMap.reverse\n        val gradesSortedMapReversedMap\
    \ = gradesSortedMapReversed.map(x => (x._2, x._1)).toMap\n        val gradesSortedMapReversedMapReversed\
    \ = gradesSortedMapReversedMap.map(x => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n        val\
    \ gradesSortedMapReversedMapReversedMapReversed = gradesSortedMapReversedMapReversedMapReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n\
    \        val gradesSortedMapReversedMapReversedMapReversedMapReversed = gradesSortedMapReversedMapReversedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n\
    \        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMap.map(x => (x._1,\
    \ x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReverse", "        val gradesMap\
    \ = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n     \
    \   val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSorted", "      \
    \  val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt).toMap\n        val\
    \ gradesReverse = grades.reverse\n        val gradesReverseMap = gradesReverse.groupBy(_\
    \ / 10).mapValues(_.toInt).toMap\n        val gradesReverseMap2 = gradesReverse.groupBy(_\
    \ / 10).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).toMap\n       \
    \ val gradesReverseMap3 = gradesReverse.groupBy(_ / 10).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).toMap\n        val\
    \ gradesReverseMap4 = gradesReverse.groupBy(_ / 10).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).toMap\n\
    \        val gradesReverseMap5 = gradesReverse.groupBy(_ / 10).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).toMap\n        val gradesReverseMap6 = gradesReverse.groupBy(_\
    \ / 10).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).toMap\n\
    \        val gradesReverseMap7 = gradesReverse.groupBy(_ / 10).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).toMap\n\
    \        val gradesReverseMap8 = gradesReverse.groupBy(_ / 10).mapValues(_.toInt).filter(_._2\
    \ > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(_.toInt).filter(_._2 > 0).mapValues(",
  "        val gradesMap = grades.toMap\n        val gradesSorted = grades.sortWith(_\
    \ < _)\n        val gradesSortedMap = gradesSorted.toMap\n        val gradesSortedSortedMap\
    \ = gradesSorted.sortWith(_ < _).toMap\n        val gradesSortedSortedMapKeys\
    \ = gradesSortedSortedMap.keys\n        val gradesSortedSortedMapValues = gradesSortedSortedMap.values.toList\n\
    \        val gradesSortedSortedMapValuesSorted = gradesSortedSortedMapValues.sortWith(_\
    \ < _)\n        val gradesSortedSortedMapValuesSortedSortedKeys = gradesSortedSortedMapValuesSorted.keys\n\
    \        val gradesSortedSortedMapValuesSortedSortedValues = gradesSortedSortedMapValuesSorted.values.toList\n\
    \        val gradesSortedSortedMapValuesSortedSortedValuesSorted = gradesSortedSortedMapValuesSortedSortedValues.sortWith(_\
    \ < _)\n        val gradesSortedSortedMapValuesSortedSortedValuesSortedKeys =\
    \ gradesSortedSortedMapValuesSortedSortedValuesSorted.keys\n        val gradesSortedSortedMapValuesSortedSortedValuesSortedValues\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSorted.values.toList\n      \
    \  val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSorted = gradesSortedSortedMapValuesSortedSortedValuesSortedValues.sortWith(_\
    \ < _)\n        val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSorted.keys\n   \
    \     val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValues\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSorted.values.toList\n\
    \        val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedKeys\n    \
    \    val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValues\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSorted\n\
    \        val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSortedKeys\n\
    \        val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSortedValues\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSortedValuesSorted\n\
    \        val gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedSortedMapValuesSortedSortedValuesSortedValuesSortedValuesSorted",
  "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt).toMap\n     \
    \   val gradesMapReverse = gradesMap.map(x => (x._2, x._1)).toMap\n        val\
    \ gradesMapReverse2 = gradesMapReverse.map(x => (x._1, x._2)).toMap\n        val\
    \ gradesMapReverse3 = gradesMapReverse2.map(x => (x._1, x._2)).toMap\n       \
    \ val gradesMapReverse4 = gradesMapReverse3.map(x => (x._1, x._2)).toMap\n   \
    \     val gradesMapReverse5 = gradesMapReverse4.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse6 = gradesMapReverse5.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse7 = gradesMapReverse6.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse8 = gradesMapReverse7.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse9 = gradesMapReverse8.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse10 = gradesMapReverse9.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse11 = gradesMapReverse10.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse12 = gradesMapReverse11.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse13 = gradesMapReverse12.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse14 = gradesMapReverse13.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse15 = gradesMapReverse14.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse16 = gradesMapReverse15.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse17 = gradesMapReverse16.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse18 = gradesMapReverse17.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse19 = gradesMapReverse18.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse20 = gradesMapReverse19.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMap", "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toList).mapValues(_.sortBy(x\
    \ => x))\n        val gradesMapSorted = gradesMap.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted2 = gradesMapSorted.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted3 = gradesMapSorted2.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted4 = gradesMapSorted3.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted5 = gradesMapSorted4.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted6 = gradesMapSorted5.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted7 = gradesMapSorted6.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted8 = gradesMapSorted7.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted9 = gradesMapSorted8.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted10 = gradesMapSorted9.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted11 = gradesMapSorted10.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted12 = gradesMapSorted11.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted13 = gradesMapSorted12.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted14 = gradesMapSorted13.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted15 = gradesMapSorted14.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted16 = gradesMapSorted15.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted17 = gradesMapSorted16.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted18 = gradesMapSorted17.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted19 = gradesMapSorted18.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted20 = gradesMapSorted19.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted21 = gradesMapSorted20.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted22 = gradesMapSorted21.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSorted23 = gradesMapSorted", "        val gradesMap = grades.map(x\
    \ => x.toInt).toMap\n        val gradesKeys = gradesMap.keys\n        val gradesValues\
    \ = gradesMap.values.toList\n        val gradesValuesWithZero = gradesValues.map(_+0.0)\n\
    \        val gradesValuesWithZeroMap = gradesValuesWithZero.toMap\n        val\
    \ gradesValuesWithZeroKeys = gradesValuesWithZeroMap.keys\n        val gradesValuesWithZeroValues\
    \ = gradesValuesWithZeroMap.values.toList\n        val gradesValuesWithZeroValuesWithZero\
    \ = gradesValuesWithZeroValues.map(_+0.0)\n        val gradesValuesWithZeroValuesWithZeroMap\
    \ = gradesValuesWithZeroValuesWithZero.toMap\n        val gradesValuesWithZeroValuesWithZeroKeys\
    \ = gradesValuesWithZeroValuesWithZeroMap.keys\n        val gradesValuesWithZeroValuesWithZeroValues\
    \ = gradesValuesWithZeroValuesWithZeroMap.values.toList\n        val gradesValuesWithZeroValuesWithZeroValuesWithZero\
    \ = gradesValuesWithZeroValuesWithZeroValues.map(_+0.0)\n        val gradesValuesWithZeroValuesWithZeroValuesWithZeroMap\
    \ = gradesValuesWithZeroValuesWithZeroValuesWithZero.toMap\n        val gradesValuesWithZeroValuesWithZeroValuesWithZeroKeys\
    \ = gradesValuesWithZeroValuesWithZeroValuesWithZeroMap.values.toList\n      \
    \  val gradesValuesWithZeroValuesWithZeroValuesWithZeroValues = gradesValuesWithZeroValuesWithZeroValuesWithZeroMap.values.toList\n\
    \        val gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZero =\
    \ gradesValuesWithZeroValuesWithZeroValuesWithZeroValues.map(_+0.0)\n        val\
    \ gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZeroMap = gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZero.toMap\n\
    \        val gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZeroKeys\
    \ = gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZeroMap.values.toList\n\
    \        val gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZeroValues\
    \ = gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZeroMap.values.toList\n\
    \        val gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZero\
    \ = gradesValuesWithZeroValuesWithZeroValuesWithZeroValuesWith", "        val\
    \ gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeys.sortBy(_._1)\n        val gradesMapSortedReversedKeysSortedReversed\
    \ = gradesMapSortedReversedKeysSorted.reverse\n        val gradesMapSortedReversedKeysSortedReversedValues\
    \ = gradesMapSortedReversedKeysSortedReversed.values\n        val gradesMapSortedReversedKeysSortedReversedValuesSorted\
    \ = gradesMapSortedReversedKeysSortedReversedValues.sortBy(_._1)\n        val\
    \ gradesMapSortedReversedKeysSortedReversedValuesSortedReversed = gradesMapSortedReversedKeysSortedReversedValuesSorted.reverse\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeys\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversed.keys\n     \
    \   val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedValuesSorted\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeys.sortBy(_._1)\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSorted.reverse\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValues\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSorted.values\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSortedReversed\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSortedReversed.sortBy(_._1)\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSortedReversedKeys\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSortedReversedKeys.sortBy(_._1)\n\
    \        val gradesMap", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSorted = grades.sortBy(x => x)\n        val gradesSortedMap\
    \ = gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedMap = gradesSorted.sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedMap =\
    \ gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x =>\
    \ x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sort", "        val gradesMap\
    \ : Map[Float, String] = grades.map(x => (x, x.toString match {\n            case\
    \ \"4.0\" => \"A+\"\n            case \"3.7\" => \"A\"\n            case \"3.3\"\
    \ => \"A-\"\n            case \"3.0\" => \"B+\"\n            case \"2.7\" => \"\
    B\"\n            case \"2.3\" => \"B-\"\n            case \"2.0\" => \"C+\"\n\
    \            case \"1.7\" => \"C\"\n            case \"1.3\" => \"C-\"\n     \
    \       case \"1.0\" => \"D+\"\n            case \"0.7\" => \"D\"\n          \
    \  case \"0.0\" => \"D-\"\n            case \"0.0\" => \"E\"\n        })).toMap\n\
    \        val gradesList : List[String] = gradesMap.values\n        val gradesMapList\
    \ : List[Map[Float, String]] = gradesList.map(x => (x, x.toList))\n        val\
    \ gradesMapListSorted : List[Map[Float, String]] = gradesMapList.sortBy(x => x._1)\n\
    \        val gradesMapListSortedWithKey : List[(Map[Float, String], List[Float])]\
    \ = gradesMapListSorted.map(x => (x._1, x._2.sort))\n        val gradesMapListSortedWithKeyAndValues\
    \ : List[(Map[Float, String], List[Float], List[String])] = gradesMapListSortedWithKey.map(x\
    \ => (x._1, x._2, x._2.map(x => x._3)))\n        val gradesMapListSortedWithKeyAndValuesMap\
    \ : Map[Float, List[String]] = gradesMapListSortedWithKeyAndValues.map(x => (x._1,\
    \ x._2.map(x => x._2)))\n        val gradesMapListSortedWithKeyAndValuesMapWithKey\
    \ : Map[Float, List[String]] = gradesMapListSortedWithKeyAndValuesMap.map(x =>\
    \ (x._1, x._2.map(x => x._1)))\n        val gradesMapListSortedWithKeyAndValuesMapWithKeyAndValues\
    \ : Map[Float, List[String]] = gradesMapListSortedWithKeyAndValuesMapWithKey.map(x\
    \ => (x._1, x._2.map(x => x._2)))\n        val gradesMapListSortedWithKeyAndValuesMapWithKeyAndValuesMap\
    \ : Map[Float, List[(String, List[String])]] = gradesMapListSortedWithKeyAndValuesMapWithKeyAndValues.map(x\
    \ => (x._1, x._2.map(x => (x._1, x._2.map(x => x._2)))))\n        val gradesMapListSortedWithKeyAndValues",
  "        val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKey = gradesMapSorted.sortBy(_._2)\n     \
    \   val gradesMapSortedSortedByKeyReversed = gradesMapSortedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKey = gradesMapSortedSortedByKeyReversed.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversed = gradesMapSortedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversed.sortBy(_._2)\n     \
    \   val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._3)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._4)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._5)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed",
  "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt)\n     \
    \   val gradesMap = gradesMap.map(x => (x._1, x._2.toFloat)).toMap\n        val\
    \ gradesMap = gradesMap.map(x => (x._1, x._2.toInt)).toMap\n        val gradesMap\
    \ = gradesMap.map(x => (x._1, x._2.toDouble)).toMap\n        val gradesMap = gradesMap.map(x\
    \ => (x._1, x._2.toFloat)).toMap\n        val gradesMap = gradesMap.map(x => (x._1,\
    \ x._2.toInt)).toMap\n        val gradesMap = gradesMap.map(x => (x._1, x._2.toDouble)).toMap\n\
    \        val gradesMap = gradesMap.map(x => (x._1, x._2.toFloat)).toMap\n    \
    \    val gradesMap = gradesMap.map(x => (x._1, x._2.toInt)).toMap\n        val\
    \ gradesMap = gradesMap.map(x => (x._1, x._2.toDouble)).toMap\n        val gradesMap\
    \ = gradesMap.map(x => (x._1, x._2.toFloat)).toMap\n        val gradesMap = gradesMap.map(x\
    \ => (x._1, x._2.toInt)).toMap\n        val gradesMap = gradesMap.map(x => (x._1,\
    \ x._2.toDouble)).toMap\n        val gradesMap = gradesMap.map(x => (x._1, x._2.toFloat)).toMap\n\
    \        val gradesMap = gradesMap.map(x => (x._1, x._2.toInt)).toMap\n      \
    \  val gradesMap = gradesMap.map(x => (x._1, x._2.toDouble)).toMap\n        val\
    \ gradesMap = gradesMap.map(x => (x._1, x._2.toFloat)).toMap\n        val gradesMap\
    \ = gradesMap.map(x => (x._1, x._2.toInt)).toMap\n        val gradesMap = gradesMap.map(x\
    \ => (x._1, x._2.toDouble)).toMap\n        val gradesMap = gradesMap.map(x =>\
    \ (x._1, x._2.toFloat)).toMap\n        val gradesMap = gradesMap.map(x => (x._1,\
    \ x._2.toInt)).toMap\n        val gradesMap = gradesMap.map(x => (x._1, x._2.toDouble)).toMap\n\
    \        val gradesMap = grades", "        val gradesMap = grades.toMap\n    \
    \    val gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSorted2\
    \ = gradesMapSorted.toSeq.sortBy(_._2)\n        val gradesMapSorted3 = gradesMapSorted2.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted4 = gradesMapSorted3.toSeq.sortBy(_._2)\n        val\
    \ gradesMapSorted5 = gradesMapSorted4.toSeq.sortBy(_._2)\n        val gradesMapSorted6\
    \ = gradesMapSorted5.toSeq.sortBy(_._2)\n        val gradesMapSorted7 = gradesMapSorted6.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted8 = gradesMapSorted7.toSeq.sortBy(_._2)\n        val\
    \ gradesMapSorted9 = gradesMapSorted8.toSeq.sortBy(_._2)\n        val gradesMapSorted10\
    \ = gradesMapSorted9.toSeq.sortBy(_._2)\n        val gradesMapSorted11 = gradesMapSorted10.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted12 = gradesMapSorted11.toSeq.sortBy(_._2)\n      \
    \  val gradesMapSorted13 = gradesMapSorted12.toSeq.sortBy(_._2)\n        val gradesMapSorted14\
    \ = gradesMapSorted13.toSeq.sortBy(_._2)\n        val gradesMapSorted15 = gradesMapSorted14.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted16 = gradesMapSorted15.toSeq.sortBy(_._2)\n      \
    \  val gradesMapSorted17 = gradesMapSorted16.toSeq.sortBy(_._2)\n        val gradesMapSorted18\
    \ = gradesMapSorted17.toSeq.sortBy(_._2)\n        val gradesMapSorted19 = gradesMapSorted18.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted20 = gradesMapSorted19.toSeq.sortBy(_._2)\n      \
    \  val gradesMapSorted21 = gradesMapSorted20.toSeq.sortBy(_._2)\n        val gradesMapSorted22\
    \ = gradesMapSorted21.toSeq.sortBy(_._2)\n        val gradesMapSorted23 = gradesMapSorted22.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted24 = gradesMapSorted23.", "        val gradesMap =\
    \ grades.map(x => (x.toInt, x)).toMap\n        val gradesSorted = grades.sortBy(x\
    \ => x)\n        val gradesSortedMap = gradesSorted.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedMapReversed = gradesSortedMap.reverse\n        val gradesSortedMapReversedMap\
    \ = gradesSortedMapReversed.map(x => (x._2, x._1)).toMap\n        val gradesSortedMapReversedMapReversed\
    \ = gradesSortedMapReversedMap.map(x => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n        val\
    \ gradesSortedMapReversedMapReversedMapReversed = gradesSortedMapReversedMapReversedMapReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n\
    \        val gradesSortedMapReversedMapReversedMapReversedMapReversed = gradesSortedMapReversedMapReversedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversed.map(x => (x._1, x._2)).toMap\n\
    \        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMap.map(x => (x._1,\
    \ x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMap.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedMapReversedMapReversedMapReversedMapReverse", '        grades.map(grade
    => if(grade > 3.0) "B+" else if (grade > 2.7) "B" else if (grade > 2.3) "B-" else
    if (grade > 2.0) "C+" else if (grade > 1.7) "C" else if (grade > 1.3) "C-" else
    if (grade > 1.0) "D+" else if (grade > 0.7) "D" else if (grade > 0.0) "D-" else
    if (grade > 0.0) "E" else "A+" ).reverse', "        val gradesMap = grades.map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedByGPA = grades.sortBy(_.toDouble)\n\
    \        val gradesSortedByGPAWithLetterGrade = gradesSortedByGPA.map(grade =>\
    \ (grade -> grade)).toMap\n        val gradesSortedByGPAWithLetterGradeWithZero\
    \ = gradesSortedByGPAWithLetterGrade.withDefault(0.0f, 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZero.withDefault(0.0f, 0.0f)\n       \
    \ val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero = gradesSortedByGPAWithLetterGradeWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.withDefault(0.0f,\
    \ 0.0f)\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWith",
  "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.map(_ + 0.0).toList)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedKeys\
    \ = gradesMapSorted.keys\n        val gradesMapSortedValues = gradesMapSorted.values\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.length\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.length\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = gradesMapSortedValuesLength\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeysLength\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValuesLength\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = gradesMapSortedValuesLength\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeysLength\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValuesLength\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = gradesMapSortedValuesLength\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeysLength\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValuesLength\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = gradesMapSortedValuesLength\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeysLength\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValuesLength\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = gradesMapSortedValuesLength\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeysLength\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValuesLength\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = gradesMapSortedValuesLength\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeysLength\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValuesLength\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeysLength\n        val gradesMapSortedValuesLength = ", " \
    \       val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues", "     \
    \   val gradesMap = grades.groupBy(_ / 4).mapValues(_.toInt).mapValues(_.toDouble)\n\
    \        val gradesMap2 = gradesMap.mapValues(_.toDouble)\n        val gradesMap3\
    \ = gradesMap2.mapValues(_.toInt)\n        val gradesMap4 = gradesMap3.mapValues(_.toDouble)\n\
    \        val gradesMap5 = gradesMap4.mapValues(_.toInt)\n        val gradesMap6\
    \ = gradesMap5.mapValues(_.toDouble)\n        val gradesMap7 = gradesMap6.mapValues(_.toInt)\n\
    \        val gradesMap8 = gradesMap7.mapValues(_.toDouble)\n        val gradesMap9\
    \ = gradesMap8.mapValues(_.toInt)\n        val gradesMap10 = gradesMap9.mapValues(_.toDouble)\n\
    \        val gradesMap11 = gradesMap10.mapValues(_.toInt)\n        val gradesMap12\
    \ = gradesMap11.mapValues(_.toDouble)\n        val gradesMap13 = gradesMap12.mapValues(_.toInt)\n\
    \        val gradesMap14 = gradesMap13.mapValues(_.toDouble)\n        val gradesMap15\
    \ = gradesMap14.mapValues(_.toInt)\n        val gradesMap16 = gradesMap15.mapValues(_.toDouble)\n\
    \        val gradesMap17 = gradesMap16.mapValues(_.toInt)\n        val gradesMap18\
    \ = gradesMap17.mapValues(_.toDouble)\n        val gradesMap19 = gradesMap18.mapValues(_.toInt)\n\
    \        val gradesMap20 = gradesMap19.mapValues(_.toDouble)\n        val gradesMap21\
    \ = gradesMap20.mapValues(_.toInt)\n        val gradesMap22 = gradesMap21.mapValues(_.toDouble)\n\
    \        val gradesMap23 = gradesMap22.mapValues(_.toInt)\n        val gradesMap24\
    \ = gradesMap23.mapValues(_.toDouble)\n        val gradesMap25 = gradesMap24.mapValues(_.toInt)\n\
    \        val gradesMap26 = gradesMap25.mapValues(_.toDouble)\n        val gradesMap27\
    \ = gradesMap26.mapValues(_.toInt)\n        val gradesMap28 = gradesMap27.mapValues(_.toDouble)\n\
    \        val gradesMap29 = gradesMap28.map", "        val gradesMap : Map[Float,\
    \ String] = grades.map(grade => (grade -> grade match {\n            case 3.0\
    \ => \"B+\"\n            case 2.7 => \"B\"\n            case 2.3 => \"B-\"\n \
    \           case 2.0 => \"C+\"\n            case 1.7 => \"C\"\n            case\
    \ 1.3 => \"C-\"\n            case 1.0 => \"D+\"\n            case 0.7 => \"D\"\
    \n            case 0.0 => \"D-\"\n            case _ => \"E\"\n        })).toMap\n\
    \        val gradesList : List[String] = grades.map(grade => gradesMap(grade))\n\
    \        gradesList", "        val gradesSorted = grades.sortWith(_ < _)\n   \
    \     val gradesSum = gradesSorted.sum\n        val gradesCount = gradesSorted.length\n\
    \        val gradesSumOfSquares = gradesSorted.map(x => x * x).sum\n        val\
    \ gradesSumOfSquaresOf = gradesSorted.map(x => x * x).sum\n        val gradesSumOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x * x).sum\n        val gradesSumOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOf\
    \ = gradesSorted.map(x => x * x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x * x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOf\
    \ = gradesSorted.map(x => x * x * x * x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x * x * x * x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = gradesSorted.map(x => x * x * x * x * x * x * x * x * x).sum\n        val\
    \ gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = gradesSorted.map(x\
    \ => x * x * x * x * x * x * x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = gradesSorted.map(x => x * x * x * x * x * x * x * x * x * x * x).sum\n   \
    \     val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = gradesSorted.map(x\
    \ => x * x * x * x * x * x * x * x * x * x * x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = gradesSorted.map(x => x * x * x * x * x * x * x * x * x * x * x * x * x).sum\n\
    \        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ gradesSorted.map(x => x * x * x * x * x * x * x * x * x * x * x * x * x * x).sum\n\
    \        val gradesSumOfSquaresOfSquaresOfSqu", "        val gradesMap = grades.toMap\n\
    \        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed\
    \ = gradesSortedByGPA.reverse\n        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPA = gradesSortedByGPAReversedValues.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversed = gradesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedMap = gradesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedKeys = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValues = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValues.sortBy(_._1)\n  \
    \      val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedKeys\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedValues\
    \ = grades", "        val gradesMap : Map[Float, String] = grades.map(grade =>\
    \ (grade -> \"E\")).toMap\n        val gradesMapWithZeros : Map[Float, String]\
    \ = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMapWithZeros\
    \ : Map[Float, String] = grades.map(grade => (grade -> \"D\")).toMap\n       \
    \ val gradesMapWithZeros : Map[Float, String] = grades.map(grade => (grade ->\
    \ \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String]\
    \ = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMapWithZeros\
    \ : Map[Float, String] = grades.map(grade => (grade -> \"D\")).toMap\n       \
    \ val gradesMapWithZeros : Map[Float, String] = grades.map(grade => (grade ->\
    \ \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String]\
    \ = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMapWithZeros\
    \ : Map[Float, String] = grades.map(grade => (grade -> \"D\")).toMap\n       \
    \ val gradesMapWithZeros : Map[Float, String] = grades.map(grade => (grade ->\
    \ \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String]\
    \ = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMapWithZeros\
    \ : Map[Float, String] = grades.map(grade => (grade -> \"D\")).toMap\n       \
    \ val gradesMapWithZeros : Map[Float, String] = grades.map(grade => (grade ->\
    \ \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"D\")).toMap\n        val gradesMapWithZeros : Map[Float, String]\
    \ = grades.map(grade => (grade -> \"D\")).toMap\n        val gradesMapWithZeros\
    \ : Map[Float", "        val gradesMap = grades.toMap\n        val gradesSortedByGrade\
    \ = grades.sortBy(_)\n        val gradesSortedByGradeReversed = gradesSortedByGrade.sortBy(-_)\n\
    \        val gradesSortedByGradeReversedMap = gradesSortedByGradeReversed.toMap\n\
    \        val gradesSortedByGradeReversedMapKeys = gradesSortedByGradeReversedMap.keys\n\
    \        val gradesSortedByGradeReversedMapValues = gradesSortedByGradeReversedMap.values.toList\n\
    \        val gradesSortedByGradeReversedMapValuesSum = gradesSortedByGradeReversedMapValues.sum\n\
    \        val gradesSortedByGradeReversedMapValuesSum2 = gradesSortedByGradeReversedMapValuesSum\
    \ * gradesSortedByGradeReversedMapValuesSum\n        val gradesSortedByGradeReversedMapValuesSum3\
    \ = gradesSortedByGradeReversedMapValuesSum2 * gradesSortedByGradeReversedMapValuesSum\n\
    \        val gradesSortedByGradeReversedMapValuesSum4 = gradesSortedByGradeReversedMapValuesSum3\
    \ * gradesSortedByGradeReversedMapValuesSum\n        val gradesSortedByGradeReversedMapValuesSum5\
    \ = gradesSortedByGradeReversedMapValuesSum4 * gradesSortedByGradeReversedMapValuesSum\n\
    \        val gradesSortedByGradeReversedMapValuesSum6 = gradesSortedByGradeReversedMapValuesSum5\
    \ * gradesSortedByGradeReversedMapValuesSum\n        val gradesSortedByGradeReversedMapValuesSum7\
    \ = gradesSortedByGradeReversedMapValuesSum6 * gradesSortedByGradeReversedMapValuesSum\n\
    \        val gradesSortedByGradeReversedMapValuesSum8 = gradesSortedByGradeReversedMapValuesSum7\
    \ * gradesSortedByGradeReversedMapValuesSum\n        val gradesSortedByGradeReversedMapValuesSum9\
    \ = gradesSortedByGradeReversedMapValuesSum8 * gradesSortedByGradeReversedMapValuesSum\n\
    \        val gradesSortedByGradeReversedMapValuesSum10 = gradesSortedByGradeReversedMapValuesSum9\
    \ * gradesSortedByGradeReversedMapValuesSum\n        val gradesSortedByGradeReversedMapValuesSum11\
    \ = gradesSortedByGrade", "        val gradesMap : Map[Float, String] = grades.map(x\
    \ => x -> \"D-\").withDefaultValue(\"E\")\n        val gradesMap2 = grades.map(x\
    \ => x -> \"D+\").withDefaultValue(\"E\")\n        val gradesMap3 = grades.map(x\
    \ => x -> \"D\").withDefaultValue(\"E\")\n        val gradesMap4 = grades.map(x\
    \ => x -> \"C\").withDefaultValue(\"E\")\n        val gradesMap5 = grades.map(x\
    \ => x -> \"B\").withDefaultValue(\"E\")\n        val gradesMap6 = grades.map(x\
    \ => x -> \"B+\").withDefaultValue(\"E\")\n        val gradesMap7 = grades.map(x\
    \ => x -> \"B-\").withDefaultValue(\"E\")\n        val gradesMap8 = grades.map(x\
    \ => x -> \"A\").withDefaultValue(\"E\")\n        val gradesMap9 = grades.map(x\
    \ => x -> \"A+\").withDefaultValue(\"E\")\n        val gradesMap10 = grades.map(x\
    \ => x -> \"A-\").withDefaultValue(\"E\")\n        val gradesMap11 = grades.map(x\
    \ => x -> \"A\").withDefaultValue(\"E\")\n        val gradesMap12 = grades.map(x\
    \ => x -> \"C+\").withDefaultValue(\"E\")\n        val gradesMap13 = grades.map(x\
    \ => x -> \"C\").withDefaultValue(\"E\")\n        val gradesMap14 = grades.map(x\
    \ => x -> \"B-\").withDefaultValue(\"E\")\n        val gradesMap15 = grades.map(x\
    \ => x -> \"B\").withDefaultValue(\"E\")\n        val gradesMap16 = grades.map(x\
    \ => x -> \"A+\").withDefaultValue(\"E\")\n        val gradesMap17 = grades.map(x\
    \ => x -> \"A\").withDefaultValue(\"E\")\n        val gradesMap18 = grades.map(x\
    \ => x -> \"B+\").withDefaultValue(\"E\")\n        val gradesMap19 = grades.map(x\
    \ => x -> \"B-\").withDefaultValue(\"E\")\n        val gradesMap20 = grades.map(x\
    \ => x -> \"B\").withDefaultValue(\"E\")\n        val gradesMap21 = grades.map(x\
    \ => x -> \"A-\").withDefaultValue(\"E\")\n        val gradesMap22 = grades.map(x\
    \ => x -> \"A\").withDefaultValue(\"E\")\n        val gradesMap23", "        val\
    \ gradesMap = grades.map(grade => (grade / 4.0, grade.toString)).toMap\n     \
    \   val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2\
    \ = gradesMapSorted.filter(_._2 != gradesMapSorted.last._2)\n        val gradesMapSorted3\
    \ = gradesMapSorted2.filter(_._2 != gradesMapSorted2.last._2)\n        val gradesMapSorted4\
    \ = gradesMapSorted3.filter(_._2 != gradesMapSorted3.last._2)\n        val gradesMapSorted5\
    \ = gradesMapSorted4.filter(_._2 != gradesMapSorted4.last._2)\n        val gradesMapSorted6\
    \ = gradesMapSorted5.filter(_._2 != gradesMapSorted5.last._2)\n        val gradesMapSorted7\
    \ = gradesMapSorted6.filter(_._2 != gradesMapSorted6.last._2)\n        val gradesMapSorted8\
    \ = gradesMapSorted7.filter(_._2 != gradesMapSorted7.last._2)\n        val gradesMapSorted9\
    \ = gradesMapSorted8.filter(_._2 != gradesMapSorted8.last._2)\n        val gradesMapSorted10\
    \ = gradesMapSorted9.filter(_._2 != gradesMapSorted9.last._2)\n        val gradesMapSorted11\
    \ = gradesMapSorted10.filter(_._2 != gradesMapSorted10.last._2)\n        val gradesMapSorted12\
    \ = gradesMapSorted11.filter(_._2 != gradesMapSorted11.last._2)\n        val gradesMapSorted13\
    \ = gradesMapSorted12.filter(_._2 != gradesMapSorted12.last._2)\n        val gradesMapSorted14\
    \ = gradesMapSorted13.filter(_._2 != gradesMapSorted13.last._2)\n        val gradesMapSorted15\
    \ = gradesMapSorted14.filter(_._2 != gradesMapSorted14.last._2)\n        val gradesMapSorted16\
    \ = gradesMapSorted15.filter(_._2 != gradesMapSorted15.last._2)\n        val gradesMapSorted17\
    \ = gradesMapSorted16.filter(_._2 != gradesMapSorted16.last._2)\n        val gradesMapSorted18\
    \ = gradesMapSorted17.filter(_._2 != gradesMapSorted17.last._2)\n        val gradesMapSorted19\
    \ = gradesMapSorted18.filter(_._2 != gradesMapSorted18.last._", "        val gradesMap\
    \ = new mutable.HashMap[Float, String]()\n        grades.foreach { grade =>\n\
    \            gradesMap(grade) = if (grade > 3.0) \"A+\" else if (grade > 2.7)\
    \ \"B\" else if (grade > 2.3) \"B-\" else if (grade > 2.0) \"C+\" else if (grade\
    \ > 1.7) \"C\" else if (grade > 1.3) \"C-\" else if (grade > 1.0) \"D+\" else\
    \ if (grade > 0.7) \"D\" else if (grade > 0.0) \"D-\" else \"E\"\n        }\n\
    \        gradesMap.values.toList", "        val gradesMap = grades.toMap\n   \
    \     val gradesSortedByGPA = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed\
    \ = gradesSortedByGPA.reverse\n        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues", "     \
    \   val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesMap\
    \ = gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPA", "        val gradesMap : Map[Float,String] =\
    \ grades.map(x => (x,x.toString.toUpperCase)).toMap\n        val gradesList :\
    \ List[String] = grades.map(x => gradesMap.get(x))\n        gradesList", '        grades.map(grade
    => if(grade > 3.0) "B+" else if (grade > 2.7) "B" else if (grade > 2.3) "B-" else
    if (grade > 2.0) "C+" else if (grade > 1.7) "C" else if (grade > 1.3) "C-" else
    if (grade > 1.0) "D+" else if (grade > 0.7) "D" else if (grade > 0.0) "D-" else
    if (grade > 0.0) "E" else "A+" ).filter(_.nonEmpty)', "        val gradesMap =\
    \ grades.map(x => (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x\
    \ => x)\n        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n \
    \       val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedSortedByGPA = gradesSortedByGPAReversed.sortBy(x\
    \ => x)\n        val gradesSortedByGPAReversedSortedByGPAReversed = gradesSortedByGPAReversedSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedSortedByGPAReversedMap = gradesSortedByGPAReversedSortedByGPAReversed.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPA\
    \ = gradesSortedByGPAReversedSortedByGPAReversed.sortBy(x => x)\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedMap = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPA\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed.reverse\n\
    \        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPA\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPA",
  "        grades.sortWith(_ < _)\n        val gradesCount = grades.size\n       \
    \ val gradesSum = grades.sum\n        val gradesAvg = gradesSum / gradesCount\n\
    \        val gradesMin = grades.min\n        val gradesMax = grades.max\n    \
    \    val gradesSumSquare = grades.map(x => x * x).sum\n        val gradesAvgSquare\
    \ = gradesSumSquare / gradesCount\n        val gradesMinSquare = gradesSumSquare\
    \ / gradesCount\n        val gradesMaxSquare = gradesSumSquare / gradesCount\n\
    \        val gradesSumSquareMin = grades.map(x => x * x).sum\n        val gradesAvgSquareMin\
    \ = gradesSumSquareMin / gradesCount\n        val gradesMinSquareMin = gradesSumSquareMin\
    \ / gradesCount\n        val gradesMaxSquareMin = gradesSumSquareMin / gradesCount\n\
    \        val gradesSumSquareMax = grades.map(x => x * x).sum\n        val gradesAvgSquareMax\
    \ = gradesSumSquareMax / gradesCount\n        val gradesMinSquareMax = gradesSumSquareMax\
    \ / gradesCount\n        val gradesMaxSquareMax = gradesSumSquareMax / gradesCount\n\
    \        val gradesSumSquareAvg = grades.map(x => x * x).sum\n        val gradesAvgSquareAvg\
    \ = gradesSumSquareAvg / gradesCount\n        val gradesMinSquareAvg = gradesSumSquareAvg\
    \ / gradesCount\n        val gradesMaxSquareAvg = gradesSumSquareAvg / gradesCount\n\
    \        val gradesSumSquareMinMax = grades.map(x => x * x).sum\n        val gradesAvgSquareMinMax\
    \ = gradesSumSquareMinMax / gradesCount\n        val gradesMinSquareMinMax = gradesSumSquareMinMax\
    \ / gradesCount\n        val gradesMaxSquareMinMax = gradesSumSquareMinMax / gradesCount\n\
    \        val gradesSumSquareAvgMax = grades.map(x => x * x).sum\n        val gradesAvgSquareAvgMax\
    \ = gradesSumSquareAvgMax / gradesCount\n        val gradesMinSquareAvgMax = gradesSumSquareAvgMax\
    \ / gradesCount\n        val gradesMaxSquareAvgMax = gradesSumSquareAvgMax / gradesCount\n\
    \        val gradesSumSquareMinMaxAvg = grades.map(x ", "        val gradesMap\
    \ = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n     \
    \   val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.length\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValue", "        val gradesMap = grades.groupBy(_ /\
    \ 10).mapValues(_.toInt)\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeys.sortBy(_._1)\n        val gradesMapSortedReversedValuesSorted\
    \ = gradesMapSortedReversedValues.sortBy(_._1)\n        val gradesMapSortedReversedKeysSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSorted.reverse\n        val gradesMapSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSorted.reverse\n        val gradesMapSortedReversedKeysSortedSortedReversedKeysSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversed.reverse\n        val gradesMapSortedReversedValuesSortedSortedReversedValuesSortedReversed\
    \ = gradesMapSortedReversedValuesSortedReversed.reverse\n        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed.reverse\n\
    \        val gradesMapSortedReversedValuesSortedSortedReversedValuesSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed.reverse\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed.reverse\n\
    \        val gradesMapSortedReversedValuesSortedSortedReversedValuesSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSortedSortedReversedValues",
  "        val gradesSorted = grades.sortWith(_ < _)\n        val gradesLength = gradesSorted.length\n\
    \        val gradesSum = gradesSorted.sum\n        val gradesAverage = gradesSum\
    \ / gradesLength\n        val gradesSumOfSquares = gradesSorted.map(x => x * x).sum\n\
    \        val gradesAverageOfSquares = gradesSumOfSquares / gradesLength\n    \
    \    val gradesSumOfSquaresOfDifferences = gradesSorted.zip(gradesSorted).map(x\
    \ => x._1 - x._2).sum\n        val gradesAverageOfSquaresOfDifferences = gradesSumOfSquaresOfDifferences\
    \ / gradesLength\n        val gradesSumOfSquaresOfSquaresOfDifferences = gradesSorted.zip(gradesSorted).map(x\
    \ => x._1 * x._1).sum\n        val gradesAverageOfSquaresOfSquaresOfDifferences\
    \ = gradesSumOfSquaresOfSquaresOfDifferences / gradesLength\n        val gradesSumOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.zip(gradesSorted).map(x => x._1 * x._1 * x._1).sum\n        val\
    \ gradesAverageOfSquaresOfSquaresOfSquaresOfDifferences = gradesSumOfSquaresOfSquaresOfSquaresOfDifferences\
    \ / gradesLength\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.zip(gradesSorted).map(x => x._1 * x._1 * x._1 * x._1).sum\n \
    \       val gradesAverageOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences = gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ / gradesLength\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.zip(gradesSorted).map(x => x._1 * x._1 * x._1 * x._1 * x._1).sum\n\
    \        val gradesAverageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences / gradesLength\n\
    \        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = gradesSorted.zip(gradesSorted).map(x => x._1 * x._", "        val gradesMap\
    \ = grades.groupBy(x => x).mapValues(_.size).toMap\n        val sortedGrades =\
    \ grades.sortWith(_ < _)\n        val gradesCount = grades.count\n        val\
    \ gradesSum = grades.sum\n        val gradesAvg = gradesSum / gradesCount\n  \
    \      val gradesMin = grades.min\n        val gradesMax = grades.max\n      \
    \  val gradesMedian = grades.median\n        val gradesStdDev = grades.stdDev\n\
    \        val gradesVariance = grades.variance\n        val gradesMedianOfGrades\
    \ = gradesMedian.map(x => gradesMap.getOrElse(x, 0))\n        val gradesMedianOfGradesSum\
    \ = gradesMedianOfGrades.sum\n        val gradesMedianOfGradesCount = gradesMedianOfGrades.count\n\
    \        val gradesMedianOfGradesAvg = gradesMedianOfGradesSum / gradesMedianOfGradesCount\n\
    \        val gradesMedianOfGradesMin = gradesMedianOfGrades.min\n        val gradesMedianOfGradesMax\
    \ = gradesMedianOfGrades.max\n        val gradesMedianOfGradesMedian = gradesMedianOfGrades.median\n\
    \        val gradesMedianOfGradesStdDev = gradesMedianOfGrades.stdDev\n      \
    \  val gradesMedianOfGradesVariance = gradesMedianOfGrades.variance\n        val\
    \ gradesMedianOfGradesMedianOfGrades = gradesMedianOfGradesMedian.map(x => gradesMap.getOrElse(x,\
    \ 0))\n        val gradesMedianOfGradesMedianOfGradesSum = gradesMedianOfGradesMedianOfGrades.sum\n\
    \        val gradesMedianOfGradesMedianOfGradesCount = gradesMedianOfGradesMedianOfGrades.count\n\
    \        val gradesMedianOfGradesMedianOfGradesAvg = gradesMedianOfGradesMedianOfGradesSum\
    \ / gradesMedianOfGradesMedianOfGradesCount\n        val gradesMedianOfGradesMedianOfGradesMin\
    \ = gradesMedianOfGradesMedianOfGrades.min\n        val gradesMedianOfGradesMedianOf",
  "        val gradesMap : Map[Float, String] = grades.map(x => x -> x.toString.toUpperCase).toMap\n\
    \        val gradesList : List[String] = grades.map(x => gradesMap.get(x))\n \
    \       gradesList", "        val gradesMap = grades.toMap\n        val gradesSortedByGPA\
    \ = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues", "     \
    \   val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSortedByGPA\
    \ = grades.sortBy(x => x)\n        val gradesSortedByGPAWithLetterGrade = gradesSortedByGPA.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPAWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGrade.map(x => (x._2, x._1)).toMap\n        val\
    \ gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGrade = gradesSortedByGPAWithLetterGradeWithLetterGrade.map(x\
    \ => (x._3, x._1)).toMap\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGrade.map(x => (x._4,\
    \ x._1)).toMap\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._5, x._1)).toMap\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._6, x._1)).toMap\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._7, x._1)).toMap\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._8, x._1)).toMap\n        val gradesSortedByGP", "        val gradesMap\
    \ = grades.groupBy(_ / 10).mapValues(_.toInt)\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeys.sortBy(_)\n        val gradesMapSortedReversedValuesSorted\
    \ = gradesMapSortedReversedValues.sortBy(_)\n        val gradesMapSortedReversedKeysSortedSorted:\
    \ Map[String, List[Float]] = gradesMapSortedReversedKeysSorted.zip(gradesMapSortedReversedValuesSorted)\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, List[String]]\
    \ = gradesMapSortedReversedKeysSortedSortedSorted.map(x => (x._1, x._2.sortBy(_)))\n\
    \        val gradesMapSortedReversedKeysSortedSortedSorted: Map[Float, ", "  \
    \      val gradesMap : Map[Float, String] = grades.map(x => x -> \"D-\").withDefault(x\
    \ => \"E\")\n        grades.map(x => if (x < 3.0) \"A+\" else if (x < 3.7) \"\
    A\" else if (x < 3.3) \"A-\" else if (x < 3.0) \"B+\" else if (x < 2.7) \"B\"\
    \ else if (x < 2.3) \"B-\" else if (x < 2.0) \"C+\" else if (x < 1.7) \"C\" else\
    \ if (x < 1.3) \"C-\" else if (x < 1.0) \"D+\" else if (x < 0.7) \"D\" else \"\
    E\")\n            .map(x => gradesMap.getOrElse(x, x))", "        val gradesMap\
    \ = grades.map(x => (x.toInt, x)).toMap\n        val gradesSorted = grades.sortBy(x\
    \ => x)\n        val gradesSortedMap = gradesSorted.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedMapReverse = gradesSortedMap.reverse\n        val gradesSortedMapReverseMap\
    \ = gradesSortedMapReverse.toMap\n        val gradesSortedMapReverseMapKeys =\
    \ gradesSortedMapReverseMap.keys\n        val gradesSortedMapReverseMapValues\
    \ = gradesSortedMapReverseMap.values.toList\n        val gradesSortedMapReverseMapValuesSorted\
    \ = gradesSortedMapReverseMapValues.sortBy(x => x)\n        val gradesSortedMapReverseMapValuesSortedMap\
    \ = gradesSortedMapReverseMapValuesSorted.map(x => (x.toInt, x)).toMap\n     \
    \   val gradesSortedMapReverseMapValuesSortedMapKeys = gradesSortedMapReverseMapValuesSortedMap.keys\n\
    \        val gradesSortedMapReverseMapValuesSortedMapValues = gradesSortedMapReverseMapValuesSortedMap.values.toList\n\
    \        val gradesSortedMapReverseMapValuesSortedMapValuesSorted = gradesSortedMapReverseMapValuesSortedMapValuesSorted.sortBy(x\
    \ => x)\n        val gradesSortedMapReverseMapValuesSortedMapValuesSortedMap =\
    \ gradesSortedMapReverseMapValuesSortedMapValuesSortedMap.toMap\n        val gradesSortedMapReverseMapValuesSortedMapValuesSortedMapKeys\
    \ = gradesSortedMapReverseMapValuesSortedMapValuesSortedMapKeys.keys\n       \
    \ val gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValues = gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValues.toList\n\
    \        val gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSorted\
    \ = gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSorted.sortBy(x\
    \ => x)\n        val gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSortedMap\
    \ = gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSortedMap.toMap\n\
    \        val gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSortedMapKeys\
    \ = gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSortedMapKeys.keys\n\
    \        val gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSortedMapValues\
    \ = gradesSortedMapReverseMapValuesSortedMapValuesSortedMapValuesSortedMapValuesSorted.toList\n\
    \        val gradesSortedMapReverseMap", "        val gradesMap = grades.toMap\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSorted2\
    \ = gradesMapSorted.toList\n        val gradesMapSorted3 = gradesMapSorted2.sortBy(_._2)\n\
    \        val gradesMapSorted4 = gradesMapSorted3.toList\n        val gradesMapSorted5\
    \ = gradesMapSorted4.toList\n        val gradesMapSorted6 = gradesMapSorted5.toList\n\
    \        val gradesMapSorted7 = gradesMapSorted6.toList\n        val gradesMapSorted8\
    \ = gradesMapSorted7.toList\n        val gradesMapSorted9 = gradesMapSorted8.toList\n\
    \        val gradesMapSorted10 = gradesMapSorted9.toList\n        val gradesMapSorted11\
    \ = gradesMapSorted10.toList\n        val gradesMapSorted12 = gradesMapSorted11.toList\n\
    \        val gradesMapSorted13 = gradesMapSorted12.toList\n        val gradesMapSorted14\
    \ = gradesMapSorted13.toList\n        val gradesMapSorted15 = gradesMapSorted14.toList\n\
    \        val gradesMapSorted16 = gradesMapSorted15.toList\n        val gradesMapSorted17\
    \ = gradesMapSorted16.toList\n        val gradesMapSorted18 = gradesMapSorted17.toList\n\
    \        val gradesMapSorted19 = gradesMapSorted18.toList\n        val gradesMapSorted20\
    \ = gradesMapSorted19.toList\n        val gradesMapSorted21 = gradesMapSorted20.toList\n\
    \        val gradesMapSorted22 = gradesMapSorted21.toList\n        val gradesMapSorted23\
    \ = gradesMapSorted22.toList\n        val gradesMapSorted24 = gradesMapSorted23.toList\n\
    \        val gradesMapSorted25 = gradesMapSorted24.toList\n        val gradesMapSorted26\
    \ = gradesMapSorted25.toList\n        val gradesMapSorted27 = gradesMapSorted26.toList\n\
    \        val gradesMapSorted28 = gradesMapSorted27.toList\n        val gradesMapSorted29\
    \ = gradesMapSorted28.toList\n        val gradesMapSorted30 = gradesMapSorted29.toList\n\
    \        val gradesMapSorted31 = gradesMapSorted30.toList\n        val gradesMapSorted32\
    \ = gradesMapSorted31.to", "        val gradesMap = grades.toMap\n        val\
    \ gradesSortedByGrade = gradesMap.sortBy(_._1)\n        val gradesSortedByGradeReversed\
    \ = gradesSortedByGrade.sortBy(_._1).reverse\n        val gradesSortedByGradeReversedMap\
    \ = gradesSortedByGradeReversed.toMap\n        val gradesSortedByGradeReversedKeys\
    \ = gradesSortedByGradeReversedMap.keys\n        val gradesSortedByGradeReversedValues\
    \ = gradesSortedByGradeReversedMap.values.toList\n        val gradesSortedByGradeReversedValuesMap\
    \ = gradesSortedByGradeReversedValues.toMap\n        val gradesSortedByGradeReversedValuesKeys\
    \ = gradesSortedByGradeReversedValuesMap.keys\n        val gradesSortedByGradeReversedValuesValues\
    \ = gradesSortedByGradeReversedValuesMap.values.toList\n        val gradesSortedByGradeReversedValuesValuesMap\
    \ = gradesSortedByGradeReversedValuesValues.toMap\n        val gradesSortedByGradeReversedValuesValuesKeys\
    \ = gradesSortedByGradeReversedValuesValuesMap.keys\n        val gradesSortedByGradeReversedValuesValuesValues\
    \ = gradesSortedByGradeReversedValuesValuesMap.values.toList\n        val gradesSortedByGradeReversedValuesValuesValuesMap\
    \ = gradesSortedByGradeReversedValuesValuesValues.toMap\n        val gradesSortedByGradeReversedValuesValuesValuesKeys\
    \ = gradesSortedByGradeReversedValuesValuesValuesMap.keys\n        val gradesSortedByGradeReversedValuesValuesValuesValues\
    \ = gradesSortedByGradeReversedValuesValuesValuesMap.values.toList\n        val\
    \ gradesSortedByGradeReversedValuesValuesValuesValuesMap = gradesSortedByGradeReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGradeReversedValuesValuesValuesValuesKeys = gradesSortedByGradeReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGradeReversedValuesValuesValuesValuesValues = gradesSortedByGradeReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGradeReversedValuesValuesValuesValuesValuesMap = gradesSortedByGradeReversedValuesValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGradeReverse", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSorted = grades.sortBy(x => x)\n \
    \       val gradesSortedMap = gradesSorted.map(x => (x.toInt, x)).toMap\n    \
    \    val gradesSortedSortedMap = gradesSorted.sortBy(x => x).map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedSortedSortedMap = gradesSorted.sortBy(x =>\
    \ x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedSortedSortedSortedSortedMap = gradesSorted.sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedSortedSortedMap = gradesSorted.sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedMap =\
    \ gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedMap =\
    \ gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x =>\
    \ x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(", "        val gradesMap = grades.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesMapReversed = gradesMap.reverse\n        val gradesMapReversedKeys\
    \ = gradesMapReversed.keys\n        val gradesMapReversedValues = gradesMapReversed.values\n\
    \        val gradesMapReversedValuesSum = gradesMapReversedValues.sum\n      \
    \  val gradesMapReversedValuesSum2 = gradesMapReversedValuesSum * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum3 = gradesMapReversedValuesSum2 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum4 = gradesMapReversedValuesSum3 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum5 = gradesMapReversedValuesSum4 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum6 = gradesMapReversedValuesSum5 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum7 = gradesMapReversedValuesSum6 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum8 = gradesMapReversedValuesSum7 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum9 = gradesMapReversedValuesSum8 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum10 = gradesMapReversedValuesSum9 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum11 = gradesMapReversedValuesSum10 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum12 = gradesMapReversedValuesSum11 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum13 = gradesMapReversedValuesSum12 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum14 = gradesMapReversedValuesSum13 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum15 = gradesMapReversedValuesSum14 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum16 = gradesMapReversedValuesSum15 * gradesMapReversedValuesSum\n\
    \        val gradesMapReversedValuesSum17 = gradesMapReversedValuesSum16 * gradesMapReversedValuesSum\n\
    \        ", "        val gradesMap = grades.toMap\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n    \
    \    val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n    \
    \    val gradesMapSortedReversedValuesSum = gradesMapSortedReversedValues.sum\n\
    \        val gradesMapSortedReversedValuesSum2 = gradesMapSortedReversedValuesSum\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum3\
    \ = gradesMapSortedReversedValuesSum2 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum4 = gradesMapSortedReversedValuesSum3\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum5\
    \ = gradesMapSortedReversedValuesSum4 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum6 = gradesMapSortedReversedValuesSum5\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum7\
    \ = gradesMapSortedReversedValuesSum6 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum8 = gradesMapSortedReversedValuesSum7\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum9\
    \ = gradesMapSortedReversedValuesSum8 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum10 = gradesMapSortedReversedValuesSum9\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum11\
    \ = gradesMapSortedReversedValuesSum10 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum12 = gradesMapSortedReversedValuesSum11\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum13\
    \ = gradesMapSortedReversedValuesSum12 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum14 = gradesMapSortedReversedValuesSum13\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum15\
    \ = gradesMapSortedReversedValuesSum14 * gradesMapSortedReversedValues", "   \
    \     val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversed", "        val gradesMap = grades.toMap\n        val\
    \ gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n\
    \        val gradesMapSortedReversedKeysLength = gradesMapSortedReversedKeys.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedKeysSum = gradesMapSortedReversedKeys.sum\n\
    \        val gradesMapSortedReversedValuesSum = gradesMapSortedReversedValues.sum\n\
    \        val gradesMapSortedReversedKeysProduct = gradesMapSortedReversedKeys.product\n\
    \        val gradesMapSortedReversedValuesProduct = gradesMapSortedReversedValues.product\n\
    \        val gradesMapSortedReversedKeysProductLength = gradesMapSortedReversedKeysProduct.size\n\
    \        val gradesMapSortedReversedValuesProductLength = gradesMapSortedReversedValuesProduct.size\n\
    \        val gradesMapSortedReversedKeysProductSum = gradesMapSortedReversedKeysProduct.sum\n\
    \        val gradesMapSortedReversedValuesProductSum = gradesMapSortedReversedValuesProduct.sum\n\
    \        val gradesMapSortedReversedKeysProductProduct = gradesMapSortedReversedKeysProduct.product\n\
    \        val gradesMapSortedReversedValuesProductProduct = gradesMapSortedReversedValuesProduct.product\n\
    \        val gradesMapSortedReversedKeysProductProductLength = gradesMapSortedReversedKeysProductProduct.size\n\
    \        val gradesMapSortedReversedValuesProductProductLength = gradesMapSortedReversedValuesProductProduct.size\n\
    \        val gradesMapSortedReversedKeysProductProductSum = gradesMapSortedReversedKeysProductProduct.sum\n\
    \        val gradesMapSortedReversedValuesProductProductSum = gradesMapSortedReversedValuesProductProduct.sum\n\
    \        val gradesMapSortedReversedKeysProductProductProduct = gradesMapSortedReversedKeysProductProduct.product\n\
    \        val gradesMapSortedReversedValuesProductProductProduct = gradesMapSortedReversedValuesProductProduct.product\n\
    \        val gradesMapSortedReversedKeysProductProductProductLength = gradesMapSortedReversedKeysProductProductProduct.size\n\
    \        ", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n   \
    \     val gradesSorted = grades.sortBy(x => x)\n        val gradesSortedMap =\
    \ gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMapReversed\
    \ = gradesSortedMap.reverse\n        val gradesSortedMapReversedKeys = gradesSortedMapReversed.keys\n\
    \        val gradesSortedMapReversedValues = gradesSortedMapReversed.values\n\
    \        val gradesSortedMapReversedValuesSorted = gradesSortedMapReversedValues.sortBy(x\
    \ => x)\n        val gradesSortedMapReversedValuesSortedKeys = gradesSortedMapReversedValuesSorted.keys\n\
    \        val gradesSortedMapReversedValuesSortedValues = gradesSortedMapReversedValuesSorted.values\n\
    \        val gradesSortedMapReversedValuesSortedValuesSorted = gradesSortedMapReversedValuesSortedValues.sortBy(x\
    \ => x)\n        val gradesSortedMapReversedValuesSortedValuesSortedKeys = gradesSortedMapReversedValuesSortedValuesSorted.keys\n\
    \        val gradesSortedMapReversedValuesSortedValuesSortedValues = gradesSortedMapReversedValuesSortedValuesSorted.values\n\
    \        val gradesSortedMapReversedValuesSortedValuesSortedValuesSorted = gradesSortedMapReversedValuesSortedValuesSortedValues.sortBy(x\
    \ => x)\n        val gradesSortedMapReversedValuesSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedMapReversedValuesSortedValuesSortedValuesSorted.keys\n       \
    \ val gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValues = gradesSortedMapReversedValuesSortedValuesSortedValuesSorted.values\n\
    \        val gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValues\
    \ = gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValues.sortBy(x\
    \ => x)\n        val gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValuesSortedKeys\n\
    \        val gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValuesSortedValues\
    \ = gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValuesSortedValues.sortBy(x\
    \ => x)\n        val gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValuesSortedValuesSortedKeys\
    \ = gradesSortedMapReversedValuesSortedValuesSortedValuesSortedValuesSortedValuesSortedKeys\n\
    \        val gradesSortedMapReversedValuesSorted", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedByGPAReversedSortedByGPA = gradesSortedByGPAReversed.sortBy(x\
    \ => x)\n        val gradesSortedByGPAReversedSortedByGPAReversed = gradesSortedByGPAReversedSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedSortedByGPAReversedMap = gradesSortedByGPAReversedSortedByGPAReversed.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPA\
    \ = gradesSortedByGPAReversedSortedByGPAReversed.sortBy(x => x)\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedMap = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPA\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed.sortBy(x =>\
    \ x)\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedMap\
    \ = gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPAReversedSortedByGPAReversedSortedByGPAReversed",
  "        val gradesMap = grades.map(grade => (grade -> grade)).toMap\n        val\
    \ gradesSortedByGrade = grades.sortBy(_.toDouble)\n        val gradesSortedByGradeReversed\
    \ = gradesSortedByGrade.map(grade => (grade -> grade)).toMap.reverse\n       \
    \ val gradesSortedByGradeReversedKeys = gradesSortedByGradeReversed.keys\n   \
    \     val gradesSortedByGradeReversedValues = gradesSortedByGradeReversed.values\n\
    \        val gradesSortedByGradeReversedKeysLength = gradesSortedByGradeReversedKeys.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversedValuesLength = gradesSortedByGradeReversedValues.size\n\
    \        val gradesSortedByGradeReversed", "        val gradesMap = grades.groupBy(x\
    \ => math.ceil(x)).mapValues(_.size)\n        val gradesMapSorted = gradesMap.sortBy(_._2).reverse\n\
    \        val gradesMapSortedWithZero = gradesMapSorted.filter(_._2 > 0)\n    \
    \    val gradesMapSortedWithZeroAndOne = gradesMapSorted.filter(_._2 == 1)\n \
    \       val gradesMapSortedWithZeroAndOneAndTwo = gradesMapSorted.filter(_._2\
    \ == 2)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThree = gradesMapSorted.filter(_._2\
    \ == 3)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFour = gradesMapSorted.filter(_._2\
    \ == 4)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFive\
    \ = gradesMapSorted.filter(_._2 == 5)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSix\
    \ = gradesMapSorted.filter(_._2 == 6)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSeven\
    \ = gradesMapSorted.filter(_._2 == 7)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSevenAndEight\
    \ = gradesMapSorted.filter(_._2 == 8)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSevenAndEightAndNine\
    \ = gradesMapSorted.filter(_._2 == 9)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTen\
    \ = gradesMapSorted.filter(_._2 == 10)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndEleven\
    \ = gradesMapSorted.filter(_._2 == 11)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelve\
    \ = gradesMapSorted.filter(_._2 == 12)\n        val gradesMapSortedWithZeroAndOneAndTwoAndThreeAndFourAndFiveAndSixAndSeven",
  "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesKeys\
    \ = gradesMap.keys\n        val gradesValues = gradesMap.values.toList\n     \
    \   val gradesKeysSorted = gradesKeys.sortBy(x => x)\n        val gradesValuesSorted\
    \ = gradesValues.sortBy(x => x)\n        val gradesKeysSortedWithIndex = gradesKeys.zipWithIndex.sortBy(x\
    \ => x._2)\n        val gradesValuesSortedWithIndex = gradesValues.zipWithIndex.sortBy(x\
    \ => x._2)\n        val gradesKeysSortedWithIndexAndGrade = gradesKeysSortedWithIndex.zipWithIndex.map(x\
    \ => (x._2, x._1))\n        val gradesValuesSortedWithIndexAndGrade = gradesValuesSortedWithIndex.zipWithIndex.map(x\
    \ => (x._2, x._1))\n        val gradesKeysSortedWithIndexAndGradeAndGrade = gradesKeysSortedWithIndexAndGrade.map(x\
    \ => (x._1, x._2))\n        val gradesValuesSortedWithIndexAndGradeAndGrade =\
    \ gradesValuesSortedWithIndexAndGrade.map(x => (x._1, x._2))\n        val gradesKeysSortedWithIndexAndGradeAndGradeAndGrade\
    \ = gradesKeysSortedWithIndexAndGrade.map(x => (x._1, x._2, x._3))\n        val\
    \ gradesValuesSortedWithIndexAndGradeAndGradeAndGrade = gradesValuesSortedWithIndexAndGrade.map(x\
    \ => (x._1, x._2, x._3))\n        val gradesKeysSortedWithIndexAndGradeAndGradeAndGradeAndGrade\
    \ = gradesKeysSortedWithIndexAndGrade.map(x => (x._1, x._2, x._3, x._4))\n   \
    \     val gradesValuesSortedWithIndexAndGradeAndGradeAndGradeAndGrade = gradesValuesSortedWithIndexAndGrade.map(x\
    \ => (x._1, x._2, x._3, x._4))\n        val gradesKeysSortedWithIndexAndGradeAndGradeAndGradeAndGradeAndGrade\
    \ = gradesKeysSortedWithIndexAndGrade.map(x => (x._1, x._2, x._3, x._4, x._5))\n\
    \        val gradesValuesSortedWithIndexAndGradeAndGradeAndGradeAndGra", "   \
    \     val gradesMap = grades.toMap\n        val gradesKeys = gradesMap.keys\n\
    \        val gradesValues = gradesMap.values.toList\n        val gradesKeysSorted\
    \ = gradesKeys.sortWith(_ < _)\n        val gradesValuesSorted = gradesValues.sortWith(_\
    \ < _)\n        val gradesKeysSortedWithIndex = gradesKeys.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesValuesSortedWithIndex = gradesValues.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesKeysSortedWithIndexAndIndex = gradesKeysSortedWithIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesValuesSortedWithIndexAndIndex = gradesValuesSortedWithIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesKeysSortedWithIndexAndIndexAndIndex = gradesKeysSortedWithIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesValuesSortedWithIndexAndIndexAndIndex = gradesValuesSortedWithIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesKeysSortedWithIndexAndIndexAndIndexAndIndex = gradesKeysSortedWithIndexAndIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesValuesSortedWithIndexAndIndexAndIndexAndIndex = gradesValuesSortedWithIndexAndIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesKeysSortedWithIndexAndIndexAndIndexAndIndexAndIndex\
    \ = gradesKeysSortedWithIndexAndIndexAndIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesValuesSortedWithIndexAndIndexAndIndexAndIndexAndIndex\
    \ = gradesValuesSortedWithIndexAndIndexAndIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesKeysSortedWithIndexAndIndexAndIndexAndIndexAndIndexAndIndex\
    \ = gradesKeysSortedWithIndexAndIndexAndIndexAndIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        val gradesValuesSortedWithIndexAndIndexAndIndexAndIndexAndIndexAndIndex\
    \ = gradesValuesSortedWithIndexAndIndexAndIndexAndIndexAndIndex.zipWithIndex.sortWith(_._1\
    \ < _._1)\n        ", "        val gradesMap = grades.toMap\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n    \
    \    val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n    \
    \    val gradesMapSortedReversedKeysIterator = gradesMapSortedReversedKeys.iterator\n\
    \        val gradesMapSortedReversedValuesIterator = gradesMapSortedReversedValues.iterator\n\
    \        val gradesMapSortedReversedKeysIteratorValue = gradesMapSortedReversedKeysIterator.next()\n\
    \        val gradesMapSortedReversedValuesIteratorValue = gradesMapSortedReversedValuesIterator.next()\n\
    \        val gradesMapSortedReversedKeysIteratorValueValue = gradesMapSortedReversedKeysIteratorValue._1\n\
    \        val gradesMapSortedReversedValuesIteratorValueValue = gradesMapSortedReversedValuesIteratorValue._1\n\
    \        val gradesMapSortedReversedKeysIteratorValueValueValue = gradesMapSortedReversedKeysIteratorValueValue._1\n\
    \        val gradesMapSortedReversedValuesIteratorValueValueValue = gradesMapSortedReversedValuesIteratorValueValue._1\n\
    \        val gradesMapSortedReversedKeysIteratorValueValueValueValue = gradesMapSortedReversedKeysIteratorValueValueValue._1\n\
    \        val gradesMapSortedReversedValuesIteratorValueValueValueValue = gradesMapSortedReversedValuesIteratorValueValueValue._1\n\
    \        val gradesMapSortedReversedKeysIteratorValueValueValueValueValue = gradesMapSortedReversedKeysIteratorValueValueValueValue._1\n\
    \        val gradesMapSortedReversedValuesIteratorValueValueValueValueValue =\
    \ gradesMapSortedReversedValuesIteratorValueValueValueValue._1\n        val gradesMapSortedReversedKeysIteratorValueValueValueValueValueValue\
    \ = gradesMapSortedReversedKeysIteratorValueValueValueValueValue._1\n        val\
    \ gradesMapSortedReversedValuesIteratorValueValueValueValueValueValue = gradesMapSortedReversedValuesIteratorValueValueValueValueValue._1\n\
    \        val gradesMapSortedReversedKeysIteratorValueValueValueValueValueValueValue\
    \ = gradesMapSortedReversedKeysIteratorValueValueValueValueValueValue._1\n   \
    \     val gradesMapSortedReversedValuesIteratorValueValueValueValueValueValueValueValue\
    \ = gradesMap", "        val gradesMap = grades.toMap\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n    \
    \    val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n    \
    \    val gradesMapSortedReversedKeysLength = gradesMapSortedReversedKeys.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.size\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversed", " \
    \       val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt)\n    \
    \    val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedGrouped\
    \ = gradesMapSorted.groupBy(_._2)\n        val gradesMapSortedGroupedSorted =\
    \ gradesMapSortedGrouped.sortBy(_._1)\n        val gradesMapSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGrouped.sortBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGrouped.sortBy(_._1)\n        val\
    \ gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped = gradesMapSortedGroupedSortedGroupedSortedGroupedSorted.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped.sortBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped.sortBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMap", "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toList).mapValues(_.sortBy(x\
    \ => x))\n        val gradesMap2 = gradesMap.mapValues(_.map(x => x.toDouble))\n\
    \        val gradesMap3 = gradesMap2.mapValues(_.map(x => x.toInt))\n        val\
    \ gradesMap4 = gradesMap3.mapValues(_.map(x => x.toDouble))\n        val gradesMap5\
    \ = gradesMap4.mapValues(_.map(x => x.toInt))\n        val gradesMap6 = gradesMap5.mapValues(_.map(x\
    \ => x.toDouble))\n        val gradesMap7 = gradesMap6.mapValues(_.map(x => x.toInt))\n\
    \        val gradesMap8 = gradesMap7.mapValues(_.map(x => x.toDouble))\n     \
    \   val gradesMap9 = gradesMap8.mapValues(_.map(x => x.toInt))\n        val gradesMap10\
    \ = gradesMap9.mapValues(_.map(x => x.toDouble))\n        val gradesMap11 = gradesMap10.mapValues(_.map(x\
    \ => x.toInt))\n        val gradesMap12 = gradesMap11.mapValues(_.map(x => x.toDouble))\n\
    \        val gradesMap13 = gradesMap12.mapValues(_.map(x => x.toInt))\n      \
    \  val gradesMap14 = gradesMap13.mapValues(_.map(x => x.toDouble))\n        val\
    \ gradesMap15 = gradesMap14.mapValues(_.map(x => x.toInt))\n        val gradesMap16\
    \ = gradesMap15.mapValues(_.map(x => x.toDouble))\n        val gradesMap17 = gradesMap16.mapValues(_.map(x\
    \ => x.toInt))\n        val gradesMap18 = gradesMap17.mapValues(_.map(x => x.toDouble))\n\
    \        val gradesMap19 = gradesMap18.mapValues(_.map(x => x.toInt))\n      \
    \  val gradesMap20 = gradesMap19.mapValues(_.map(x => x.toDouble))\n        val\
    \ gradesMap21 = gradesMap20.mapValues(_.map(x => x.toInt))\n        val gradesMap22\
    \ = gradesMap21.mapValues(_.map(x => x.toDouble))\n        val gradesMap23 = gradesMap22.mapValues(_.map(x\
    \ => x.toInt))\n        val gradesMap24 = gradesMap", "        val gradesMap =\
    \ grades.map(x => (x.toInt, x)).toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n\
    \        val gradesMapSorted2 = gradesMapSorted.filter(_._2 > 0)\n        val\
    \ gradesMapSorted3 = gradesMapSorted2.filter(_._2 > 0)\n        val gradesMapSorted4\
    \ = gradesMapSorted3.filter(_._2 > 0)\n        val gradesMapSorted5 = gradesMapSorted4.filter(_._2\
    \ > 0)\n        val gradesMapSorted6 = gradesMapSorted5.filter(_._2 > 0)\n   \
    \     val gradesMapSorted7 = gradesMapSorted6.filter(_._2 > 0)\n        val gradesMapSorted8\
    \ = gradesMapSorted7.filter(_._2 > 0)\n        val gradesMapSorted9 = gradesMapSorted8.filter(_._2\
    \ > 0)\n        val gradesMapSorted10 = gradesMapSorted9.filter(_._2 > 0)\n  \
    \      val gradesMapSorted11 = gradesMapSorted10.filter(_._2 > 0)\n        val\
    \ gradesMapSorted12 = gradesMapSorted11.filter(_._2 > 0)\n        val gradesMapSorted13\
    \ = gradesMapSorted12.filter(_._2 > 0)\n        val gradesMapSorted14 = gradesMapSorted13.filter(_._2\
    \ > 0)\n        val gradesMapSorted15 = gradesMapSorted14.filter(_._2 > 0)\n \
    \       val gradesMapSorted16 = gradesMapSorted15.filter(_._2 > 0)\n        val\
    \ gradesMapSorted17 = gradesMapSorted16.filter(_._2 > 0)\n        val gradesMapSorted18\
    \ = gradesMapSorted17.filter(_._2 > 0)\n        val gradesMapSorted19 = gradesMapSorted18.filter(_._2\
    \ > 0)\n        val gradesMapSorted20 = gradesMapSorted19.filter(_._2 > 0)\n \
    \       val gradesMapSorted21 = gradesMapSorted20.filter(_._2 > 0)\n        val\
    \ gradesMapSorted22 = gradesMapSorted21.filter(_._2 > 0)\n        val gradesMapSorted23\
    \ = gradesMapSorted22.filter(_._2 > 0)\n        val gradesMapSorted24 = gradesMapSorted23.filter(_._2\
    \ > 0)\n        val gradesMapSorted25 = gradesMapSorted24.filter(_._2 > 0)\n \
    \       val gradesMapSorted26 = ", "        val gradesMap = grades.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesKeys = gradesMap.keys\n        val gradesValues\
    \ = gradesMap.values.toList\n        val gradesSum = gradesValues.sum\n      \
    \  val gradesAvg = gradesSum / gradesKeys.size\n        val gradesDiff = gradesValues.map(x\
    \ => x - gradesAvg).sum\n        val gradesDiffPercent = gradesDiff / gradesSum\
    \ * 100\n        val gradesDiffPercentString = gradesDiffPercent.toString\n  \
    \      val gradesDiffPercentStringWithZeros = gradesDiffPercentString.padTo(gradesKeys.size,\
    \ ' ')\n        val gradesDiffPercentStringWithZerosAndSpaces = gradesDiffPercentStringWithZeros.replaceAll(\"\
    0\", \" \")\n        val gradesDiffPercentStringWithZerosAndSpacesAndNewLines\
    \ = gradesDiffPercentStringWithZerosAndSpaces.replace(\"  \", \" \")\n       \
    \ val gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLines = gradesDiffPercentStringWithZerosAndSpacesAndNewLines.replace(\"\
    \  \", \" \")\n        val gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLines\
    \ = gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLines.replace(\"\
    \  \", \" \")\n        val gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLinesAndNewLines\
    \ = gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLines.replace(\"\
    \  \", \" \")\n        val gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNewLines\
    \ = gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLinesAndNewLines.replace(\"\
    \  \", \" \")\n        val gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNewLines\
    \ = gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNewLines.replace(\"\
    \  \", \" \")\n        val gradesDiffPercentStringWithZerosAndSpacesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNewLinesAndNew",
  "        val gradesMap = grades.map(grade => (grade -> grade)).toMap\n        val\
    \ gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedSortedByKey\
    \ = gradesMapSorted.sortBy(_._1)\n        val gradesMapSortedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKey.reverse\n        val gradesMapSortedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversed.sortBy(_._1)\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKey.reverse\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversed.sortBy(_._1)\n     \
    \   val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKeyReversed", "        val gradesMap = grades.toMap\n\
    \        val gradesMapKeys = gradesMap.keys\n        val gradesMapValues = gradesMap.values.toList\n\
    \        val gradesMapKeysSortedByValues = gradesMapKeys.sortBy(_._2)\n      \
    \  val gradesMapKeysSortedByValuesWithDuplicates = gradesMapKeysSortedByValues.distinct\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversed = gradesMapKeysSortedByValuesWithDuplicates.reverse\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicates =\
    \ gradesMapKeysSortedByValuesWithDuplicatesReversed.distinct\n        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversed\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicates.reverse\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicates\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversed.distinct\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversed\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicates.reverse\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicates\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversed.distinct\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversed\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicates.reverse\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicates\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversed.distinct\n\
    \        val gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversed\
    \ = gradesMapKeysSortedByValuesWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicatesReversedWithDuplicates.",
  "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt)\n     \
    \   val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedGrouped\
    \ = gradesMapSorted.groupBy(_._1).mapValues(_.map(_._2))\n        val gradesMapSortedGroupedWithIndex\
    \ = gradesMapSortedGrouped.mapValues(_.zipWithIndex)\n        val gradesMapSortedGroupedWithIndexSorted\
    \ = gradesMapSortedGroupedWithIndex.sortBy(_._2._1).reverse\n        val gradesMapSortedGroupedWithIndexSortedWithIndex\
    \ = gradesMapSortedGroupedWithIndexSorted.mapValues(_.map(_._2._2))\n        val\
    \ gradesMapSortedGroupedWithIndexSortedWithIndexSorted = gradesMapSortedGroupedWithIndexSortedWithIndex.sortBy(_._2._1).reverse\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndex = gradesMapSortedGroupedWithIndexSortedWithIndexSorted.mapValues(_.map(_._2._2))\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._2._1).reverse\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSorted.mapValues(_.map(_._2._2))\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._2._1).reverse\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex\
    \ = gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndex.sortBy(_._2._1).reverse\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted\
    \ = gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted.mapValues(_.map(_._2._2))\n\
    \        val gradesMapSortedGroupedWithIndexSortedWithIndexSortedWithIndexSortedWithIndexSorted",
  "        val gradesMap : Map[Float, String] = grades.map(x => (x, x.toString.toUpperCase)).toMap\n\
    \        val gradesList : List[String] = grades.map(x => gradesMap.get(x))\n \
    \       gradesList", "        val gradesMap : Map[Float, String] = grades.map(x\
    \ => x -> \"A+\".toUpperCase)\n        val gradesMap2 : Map[Float, String] = grades.map(x\
    \ => x -> \"A\".toUpperCase)\n        val gradesMap3 : Map[Float, String] = grades.map(x\
    \ => x -> \"A-\".toUpperCase)\n        val gradesMap4 : Map[Float, String] = grades.map(x\
    \ => x -> \"B+\".toUpperCase)\n        val gradesMap5 : Map[Float, String] = grades.map(x\
    \ => x -> \"B\".toUpperCase)\n        val gradesMap6 : Map[Float, String] = grades.map(x\
    \ => x -> \"B-\".toUpperCase)\n        val gradesMap7 : Map[Float, String] = grades.map(x\
    \ => x -> \"C+\".toUpperCase)\n        val gradesMap8 : Map[Float, String] = grades.map(x\
    \ => x -> \"C\".toUpperCase)\n        val gradesMap9 : Map[Float, String] = grades.map(x\
    \ => x -> \"C-\".toUpperCase)\n        val gradesMap10 : Map[Float, String] =\
    \ grades.map(x => x -> \"D+\".toUpperCase)\n        val gradesMap11 : Map[Float,\
    \ String] = grades.map(x => x -> \"D\".toUpperCase)\n        val gradesMap12 :\
    \ Map[Float, String] = grades.map(x => x -> \"D-\".toUpperCase)\n        val gradesMap13\
    \ : Map[Float, String] = grades.map(x => x -> \"E\".toUpperCase)\n        val\
    \ gradesMap14 : Map[Float, String] = grades.map(x => x -> \"F\".toUpperCase)\n\
    \        val gradesMap15 : Map[Float, String] = grades.map(x => x -> \"F\".toUpperCase)\n\
    \        val gradesMap16 : Map[Float, String] = grades.map(x => x -> \"F\".toUpperCase)\n\
    \        val gradesMap17 : Map[Float, String] = grades.map(x => x -> \"F\".toUpperCase)\n\
    \        val gradesMap18 : Map[Float, String] = grades.map(x => x -> \"F\".toUpperCase)\n\
    \        val gradesMap19 : Map[Float, String] = grades.map(x => x -> \"F\".toUpperCase)\n\
    \        val gradesMap20 : Map[Float, String] = grades.map(x ", "        val gradesMap\
    \ = grades.toMap\n        val gradesMapKeys = gradesMap.keys\n        val gradesMapValues\
    \ = gradesMap.values.toList\n        val gradesMapValuesSorted = gradesMapValues.sortBy(_)\n\
    \        val gradesMapValuesSortedReversed = gradesMapValuesSorted.reverse\n \
    \       val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversed.length\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        val gradesMapValuesSortedReversedLength = gradesMapValuesSortedReversedLength.toInt\n\
    \        ", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n   \
    \     val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2\
    \ = gradesMapSorted.filter(_._2 > 0.0)\n        val gradesMapSorted3 = gradesMapSorted2.filter(_._2\
    \ > 0.0)\n        val gradesMapSorted4 = gradesMapSorted3.filter(_._2 > 0.0)\n\
    \        val gradesMapSorted5 = gradesMapSorted4.filter(_._2 > 0.0)\n        val\
    \ gradesMapSorted6 = gradesMapSorted5.filter(_._2 > 0.0)\n        val gradesMapSorted7\
    \ = gradesMapSorted6.filter(_._2 > 0.0)\n        val gradesMapSorted8 = gradesMapSorted7.filter(_._2\
    \ > 0.0)\n        val gradesMapSorted9 = gradesMapSorted8.filter(_._2 > 0.0)\n\
    \        val gradesMapSorted10 = gradesMapSorted9.filter(_._2 > 0.0)\n       \
    \ val gradesMapSorted11 = gradesMapSorted10.filter(_._2 > 0.0)\n        val gradesMapSorted12\
    \ = gradesMapSorted11.filter(_._2 > 0.0)\n        val gradesMapSorted13 = gradesMapSorted12.filter(_._2\
    \ > 0.0)\n        val gradesMapSorted14 = gradesMapSorted13.filter(_._2 > 0.0)\n\
    \        val gradesMapSorted15 = gradesMapSorted14.filter(_._2 > 0.0)\n      \
    \  val gradesMapSorted16 = gradesMapSorted15.filter(_._2 > 0.0)\n        val gradesMapSorted17\
    \ = gradesMapSorted16.filter(_._2 > 0.0)\n        val gradesMapSorted18 = gradesMapSorted17.filter(_._2\
    \ > 0.0)\n        val gradesMapSorted19 = gradesMapSorted18.filter(_._2 > 0.0)\n\
    \        val gradesMapSorted20 = gradesMapSorted19.filter(_._2 > 0.0)\n      \
    \  val gradesMapSorted21 = gradesMapSorted20.filter(_._2 > 0.0)\n        val gradesMapSorted22\
    \ = gradesMapSorted21.filter(_._2 > 0.0)\n        val gradesMapSorted23 = gradesMapSorted22.filter(_._2\
    \ > 0.0)\n        val gradesMapSorted24 = gradesMapSorted23.filter(_._2 > 0.0)\n\
    \        val gradesMapSorted25 = gradesMapSorted24.filter(_._2 > 0.0)\n      \
    \  val gradesMapSorted26 = ", "        val gradesMap : Map[Float, String] = grades.map(x\
    \ => (x, \"E\")).toMap\n        val gradesMapWithZero = gradesMap + (0.0 -> \"\
    D\")\n        val gradesMapWithZeroAndNegative = gradesMapWithZero + (-7.0 ->\
    \ \"C\")\n        val gradesMapWithZeroAndNegativeAndPositive = gradesMapWithZeroAndNegative\
    \ + (7.0 -> \"B\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositive + (-3.0 -> \"B-\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegative + (3.0 -> \"B-\")\n   \
    \     val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositive + (-2.0 -> \"\
    B-\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegative +\
    \ (2.0 -> \"B-\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ + (1.0 -> \"B-\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ + (0.0 -> \"B-\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ + (-7.0 -> \"B\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ + (7.0 -> \"B\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ + (-3.0 -> ", "        val gradesMap = grades.toMap\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n    \
    \    val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n    \
    \    val gradesMapSortedReversedValuesSum = gradesMapSortedReversedValues.sum\n\
    \        val gradesMapSortedReversedValuesSum2 = gradesMapSortedReversedValuesSum\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum3\
    \ = gradesMapSortedReversedValuesSum2 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum4 = gradesMapSortedReversedValuesSum3\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum5\
    \ = gradesMapSortedReversedValuesSum4 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum6 = gradesMapSortedReversedValuesSum5\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum7\
    \ = gradesMapSortedReversedValuesSum6 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum8 = gradesMapSortedReversedValuesSum7\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum9\
    \ = gradesMapSortedReversedValuesSum8 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum10 = gradesMapSortedReversedValuesSum9\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum11\
    \ = gradesMapSortedReversedValuesSum10 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum12 = gradesMapSortedReversedValuesSum11\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum13\
    \ = gradesMapSortedReversedValuesSum12 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum14 = gradesMapSortedReversedValuesSum13\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum15\
    \ = gradesMapSortedReversedValuesSum14 * gradesMapSortedReversedValues", "   \
    \     val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt)\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed = gradesMapSorted.reverse\n\
    \        val gradesMapSortedReversedMap = gradesMapSortedReversed.toMap\n    \
    \    val gradesMapSortedReversedMapKeys = gradesMapSortedReversedMap.keys\n  \
    \      val gradesMapSortedReversedMapValues = gradesMapSortedReversedMap.values.toList\n\
    \        val gradesMapSortedReversedMapValuesSorted = gradesMapSortedReversedMapValues.sortBy(_._1)\n\
    \        val gradesMapSortedReversedMapValuesSortedReversed = gradesMapSortedReversedMapValuesSorted.reverse\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMap = gradesMapSortedReversedMapValuesSortedReversed.toMap\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapKeys = gradesMapSortedReversedMapValuesSortedReversedMap.keys\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValues = gradesMapSortedReversedMapValuesSortedReversedMapValues.toList\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSorted = gradesMapSortedReversedMapValuesSortedReversedMapValuesSorted.sortBy(_._1)\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversed\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversed.reverse\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMap\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMap.toMap\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapKeys\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapKeys.toList\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValues\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSorted.toList\n\
    \        val gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSorted\
    \ = gradesMapSortedReversedMapValuesSortedReversedMapValuesSortedReversedMapValuesSortedReversed.sortBy(_._1)\n\
    \        val gradesMapSortedReversedMap", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAWithKey = gradesSortedByGPA.map(x => (x, x))\n \
    \       val gradesSortedByGPAWithKeyAndValues = gradesSortedByGPAWithKey.map(x\
    \ => (x._1, x._2))\n        val gradesSortedByGPAWithKeyAndValuesGrouped = gradesSortedByGPAWithKeyAndValues.groupBy(x\
    \ => x._1)\n        val gradesSortedByGPAWithKeyAndValuesGroupedGrouped = gradesSortedByGPAWithKeyAndValuesGrouped.map(x\
    \ => (x._1, x._2.map(x => x._2)))\n        val gradesSortedByGPAWithKeyAndValuesGroupedGroupedGrouped\
    \ = gradesSortedByGPAWithKeyAndValuesGroupedGrouped.map(x => (x._1, x._2.map(x\
    \ => x._2.map(x => x._2))))\n        val gradesSortedByGPAWithKeyAndValuesGroupedGroupedGroupedGrouped\
    \ = gradesSortedByGPAWithKeyAndValuesGroupedGroupedGrouped.map(x => (x._1, x._2.map(x\
    \ => x._2.map(x => x._2.map(x => x._2)))))\n        val gradesSortedByGPAWithKeyAndValuesGroupedGroupedGroupedGroupedGrouped\
    \ = gradesSortedByGPAWithKeyAndValuesGroupedGroupedGroupedGrouped.map(x => (x._1,\
    \ x._2.map(x => x._2.map(x => x._2.map(x => x._2.map(x => x._2))))))\n       \
    \ val gradesSortedByGPAWithKeyAndValuesGroupedGroupedGroupedGroupedGroupedGrouped\
    \ = gradesSortedByGPAWithKeyAndValuesGroupedGroupedGroupedGroupedGrouped.map(x\
    \ => (x._1, x._2.map(x => x._2.map(x => x._2.map(x => x._2.map(x => x._2.map(x\
    \ => x._2)))))))\n        val gradesSortedByGPAWithKeyAndValuesGroupedGroupedGroupedGroupedGrou",
  "        val gradesMap = grades.map(grade => (grade -> grade)).toMap\n        val\
    \ gradesSorted = grades.sortBy(_)\n        val gradesSortedMap = gradesSorted.map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedMap = gradesSorted.sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedMap = gradesSorted.sortBy(_).sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedMap =\
    \ gradesSorted.sortBy(_).sortBy(_).sortBy(_).map(grade => (grade -> grade)).toMap\n\
    \        val gradesSortedSortedSortedSortedSortedMap = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).map(grade =>\
    \ (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(_).map(grade\
    \ => (grade -> grade)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(_).sortBy(_).sortBy(_).sortBy(_).sortBy(", "        val\
    \ gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toList).mapValues(_.sortBy(x\
    \ => x))\n        val gradesMapSorted = gradesMap.mapValues(_.sortBy(x => x))\n\
    \        val gradesMapSortedSortedByKey = gradesMapSorted.mapValues(_.sortBy(x\
    \ => x._1))\n        val gradesMapSortedSortedByKeyReversed = gradesMapSortedSortedByKey.mapValues(_.sortBy(x\
    \ => x._2))\n        val gradesMapSortedSortedByKeyReversedSortedByKey = gradesMapSortedSortedByKeyReversed.mapValues(_.sortBy(x\
    \ => x._1))\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKey.mapValues(_.sortBy(x => x._2))\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversed.mapValues(_.sortBy(x\
    \ => x._1))\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey.mapValues(_.sortBy(x\
    \ => x._2))\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.mapValues(_.sortBy(x\
    \ => x._1))\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.mapValues(_.sortBy(x\
    \ => x._2))\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.mapValues(_.sortBy(x\
    \ => x._1))\n        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.mapValues(_.sortBy(x\
    \ => x.", "        val gradesMap = grades.toMap\n        val gradesSortedByGPA\
    \ = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPA = gradesSortedByGPAReversedValues.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversed = gradesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedMap = gradesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedKeys = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValues = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValues.sortBy(_._1)\n  \
    \      val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedKeys\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedValues\
    \ = grades", "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt).toMap\n\
    \        val gradesMapReverse = gradesMap.map(x => (x._2, x._1)).toMap\n     \
    \   val gradesMapReverse2 = gradesMapReverse.map(x => (x._1, x._2)).toMap\n  \
    \      val gradesMapReverse3 = gradesMapReverse2.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse4 = gradesMapReverse3.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse5 = gradesMapReverse4.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse6 = gradesMapReverse5.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse7 = gradesMapReverse6.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse8 = gradesMapReverse7.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse9 = gradesMapReverse8.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse10 = gradesMapReverse9.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse11 = gradesMapReverse10.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse12 = gradesMapReverse11.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse13 = gradesMapReverse12.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse14 = gradesMapReverse13.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse15 = gradesMapReverse14.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse16 = gradesMapReverse15.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse17 = gradesMapReverse16.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse18 = gradesMapReverse17.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse19 = gradesMapReverse18.map(x => (x._1, x._2)).toMap\n\
    \        val gradesMapReverse20 = gradesMapReverse19.map(x => (x._1, x._2)).toMap\n\
    \        val ", "        val gradesMap : Map[Float, String] = grades.map(grade\
    \ => (grade -> grade match {\n            case 3.0 => \"B+\"\n            case\
    \ 3.7 => \"B\"\n            case 3.3 => \"B-\"\n            case 3.0 => \"C+\"\
    \n            case 2.7 => \"C\"\n            case 2.3 => \"C-\"\n            case\
    \ 2.0 => \"D+\"\n            case 1.7 => \"D\"\n            case 1.3 => \"D-\"\
    \n            case 1.0 => \"E\"\n            case 0.0 => \"F\"\n            case\
    \ _ => \"F\"\n        })).toMap\n        val gradesList : List[String] = grades.map(grade\
    \ => gradesMap(grade))\n        gradesList", "        val gradesSorted = grades.sortWith(_\
    \ < _)\n        val gradesLength = gradesSorted.length\n        val gradesAverage\
    \ = gradesSorted.sum / gradesLength\n        val gradesSum = gradesSorted.sum\n\
    \        val gradesSumOfSquares = gradesSorted.map(x => x * x).sum\n        val\
    \ gradesSumOfSquaresAverage = gradesSumOfSquares / gradesLength\n        val gradesSumOfSquaresSum\
    \ = gradesSumOfSquares.sum\n        val gradesSumOfSquaresSumOfSquares = gradesSumOfSquaresSum\
    \ * gradesSumOfSquaresSum\n        val gradesSumOfSquaresSumOfSquaresAverage =\
    \ gradesSumOfSquaresSumOfSquares / gradesLength\n        val gradesSumOfSquaresSumOfSquaresSum\
    \ = gradesSumOfSquaresSumOfSquares.sum\n        val gradesSumOfSquaresSumOfSquaresSumOfSquares\
    \ = gradesSumOfSquaresSumOfSquaresSum * gradesSumOfSquaresSumOfSquaresSum\n  \
    \      val gradesSumOfSquaresSumOfSquaresSumOfSquaresAverage = gradesSumOfSquaresSumOfSquaresSumOfSquares\
    \ / gradesLength\n        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSum =\
    \ gradesSumOfSquaresSumOfSquaresSumOfSquares.sum\n        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares\
    \ = gradesSumOfSquaresSumOfSquaresSumOfSquaresSum * gradesSumOfSquaresSumOfSquaresSumOfSquaresSum\n\
    \        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresAverage = gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares\
    \ / gradesLength\n        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum\
    \ = gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares.sum\n        val gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquares\
    \ = gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum * gradesSumOfSquaresSumOfSquaresSumOfSquaresSumOfSquaresSum\n\
    \        val gradesSumOfSqu", "        val gradesMap = grades.groupBy(x => math.floor(x)).mapValues(_.size)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._2).reverse\n        val gradesMapSortedSorted:\
    \ Map[Float, Int] = gradesMapSorted.toSeq.sortBy(_._1).reverse\n        val gradesMapSortedSortedSorted:\
    \ Map[Int, Float] = gradesMapSortedSorted.toSeq.sortBy(_._1).reverse\n       \
    \ val gradesMapSortedSortedSortedSorted: Map[Float, Float] = gradesMapSortedSortedSorted.toSeq.sortBy(_._2).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSorted: Map[Int, Float] = gradesMapSortedSortedSortedSorted.toSeq.sortBy(_._2).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSortedSorted: Map[Float, Float]\
    \ = gradesMapSortedSortedSortedSortedSorted.toSeq.sortBy(_._3).reverse\n     \
    \   val gradesMapSortedSortedSortedSortedSortedSortedSorted: Map[Int, Float] =\
    \ gradesMapSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._3).reverse\n \
    \       val gradesMapSortedSortedSortedSortedSortedSortedSortedSorted: Map[Float,\
    \ Float] = gradesMapSortedSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._4).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Map[Int, Float] = gradesMapSortedSortedSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._4).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Map[Float, Float] = gradesMapSortedSortedSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._5).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Map[Int, Float] = gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._5).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Map[Float, Float] = gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._6).reverse\n\
    \        val gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted:\
    \ Map[Int, Float] = gradesMapSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedSorted.toSeq.sortBy(_._6).reverse\n\
    \        val gradesMap", "        val gradesMap = grades.toMap\n        val gradesMapKeys\
    \ = gradesMap.keys\n        val gradesMapValues = gradesMap.values.toList\n  \
    \      val gradesMapKeysSorted = gradesMapKeys.sortBy(_)\n        val gradesMapValuesSorted\
    \ = gradesMapValues.sortBy(_)\n        val gradesMapKeysSortedWithDuplicates =\
    \ gradesMapKeysSorted.distinct\n        val gradesMapValuesSortedWithDuplicates\
    \ = gradesMapValuesSorted.distinct\n        val gradesMapKeysSortedWithDuplicatesAndDuplicates\
    \ = gradesMapKeysSortedWithDuplicates.zip(gradesMapValuesSortedWithDuplicates)\n\
    \        val gradesMapKeysSortedWithDuplicatesAndDuplicatesSorted = gradesMapKeysSortedWithDuplicatesAndDuplicates.sortBy(_._1)\n\
    \        val gradesMapValuesSortedWithDuplicatesAndDuplicatesSorted = gradesMapValuesSortedWithDuplicatesAndDuplicates.sortBy(_._1)\n\
    \        val gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicates\
    \ = gradesMapKeysSortedWithDuplicatesAndDuplicatesSorted.map(x => x._2)\n    \
    \    val gradesMapValuesSortedWithDuplicatesAndDuplicatesSortedWithDuplicates\
    \ = gradesMapValuesSortedWithDuplicatesAndDuplicatesSorted.map(x => x._2)\n  \
    \      val gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicates\
    \ = gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicates.zip(gradesMapValuesSortedWithDuplicatesAndDuplicatesSortedWithDuplicates)\n\
    \        val gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicatesSorted\
    \ = gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicates.sortBy(_._1)\n\
    \        val gradesMapValuesSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicatesSorted\
    \ = gradesMapValuesSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicates.sortBy(_._1)\n\
    \        val gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicatesSortedWithDuplicates\
    \ = gradesMapKeysSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicatesSorted.map(x\
    \ => x._2)\n        val gradesMapValuesSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicatesSortedWithDuplicates\
    \ = gradesMapValuesSortedWithDuplicatesAndDuplicatesSortedWithDuplicatesAndDuplicatesSorted.map(x\
    \ => x._2)\n        val grade", "        val gradesMap = grades.toMap\n      \
    \  val gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n\
    \        val gradesMapSortedReversedValuesSum = gradesMapSortedReversedValues.sum\n\
    \        val gradesMapSortedReversedValuesSum2 = gradesMapSortedReversedValuesSum\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum3\
    \ = gradesMapSortedReversedValuesSum2 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum4 = gradesMapSortedReversedValuesSum3\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum5\
    \ = gradesMapSortedReversedValuesSum4 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum6 = gradesMapSortedReversedValuesSum5\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum7\
    \ = gradesMapSortedReversedValuesSum6 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum8 = gradesMapSortedReversedValuesSum7\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum9\
    \ = gradesMapSortedReversedValuesSum8 * gradesMapSortedReversedValuesSum\n   \
    \     val gradesMapSortedReversedValuesSum10 = gradesMapSortedReversedValuesSum9\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum11\
    \ = gradesMapSortedReversedValuesSum10 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum12 = gradesMapSortedReversedValuesSum11\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum13\
    \ = gradesMapSortedReversedValuesSum12 * gradesMapSortedReversedValuesSum\n  \
    \      val gradesMapSortedReversedValuesSum14 = gradesMapSortedReversedValuesSum13\
    \ * gradesMapSortedReversedValuesSum\n        val gradesMapSortedReversedValuesSum15\
    \ = gradesMapSortedReversedValuesSum14 * gradesMapSortedReversedValues", "   \
    \     val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toList)\n     \
    \   val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2\
    \ = gradesMapSorted.filter(_._2 > 0)\n        val gradesMapSorted3 = gradesMapSorted2.filter(_._2\
    \ > 0)\n        val gradesMapSorted4 = gradesMapSorted3.filter(_._2 > 0)\n   \
    \     val gradesMapSorted5 = gradesMapSorted4.filter(_._2 > 0)\n        val gradesMapSorted6\
    \ = gradesMapSorted5.filter(_._2 > 0)\n        val gradesMapSorted7 = gradesMapSorted6.filter(_._2\
    \ > 0)\n        val gradesMapSorted8 = gradesMapSorted7.filter(_._2 > 0)\n   \
    \     val gradesMapSorted9 = gradesMapSorted8.filter(_._2 > 0)\n        val gradesMapSorted10\
    \ = gradesMapSorted9.filter(_._2 > 0)\n        val gradesMapSorted11 = gradesMapSorted10.filter(_._2\
    \ > 0)\n        val gradesMapSorted12 = gradesMapSorted11.filter(_._2 > 0)\n \
    \       val gradesMapSorted13 = gradesMapSorted12.filter(_._2 > 0)\n        val\
    \ gradesMapSorted14 = gradesMapSorted13.filter(_._2 > 0)\n        val gradesMapSorted15\
    \ = gradesMapSorted14.filter(_._2 > 0)\n        val gradesMapSorted16 = gradesMapSorted15.filter(_._2\
    \ > 0)\n        val gradesMapSorted17 = gradesMapSorted16.filter(_._2 > 0)\n \
    \       val gradesMapSorted18 = gradesMapSorted17.filter(_._2 > 0)\n        val\
    \ gradesMapSorted19 = gradesMapSorted18.filter(_._2 > 0)\n        val gradesMapSorted20\
    \ = gradesMapSorted19.filter(_._2 > 0)\n        val gradesMapSorted21 = gradesMapSorted20.filter(_._2\
    \ > 0)\n        val gradesMapSorted22 = gradesMapSorted21.filter(_._2 > 0)\n \
    \       val gradesMapSorted23 = gradesMapSorted22.filter(_._2 > 0)\n        val\
    \ gradesMapSorted24 = gradesMapSorted23.filter(_._2 > 0)\n        val gradesMapSorted25\
    \ = gradesMapSorted24.filter(_._2 > 0)\n        val gradesMap", "        val gradesMap\
    \ = grades.map(x => (x.toInt, x)).toMap\n        val gradesSorted = grades.sortBy(x\
    \ => x)\n        val gradesSortedMap = gradesSorted.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedMap2 = gradesSorted.map(x => (x.toInt, x)).toMap\n  \
    \      val gradesSortedMap3 = gradesSorted.map(x => (x.toInt, x)).toMap\n    \
    \    val gradesSortedMap4 = gradesSorted.map(x => (x.toInt, x)).toMap\n      \
    \  val gradesSortedMap5 = gradesSorted.map(x => (x.toInt, x)).toMap\n        val\
    \ gradesSortedMap6 = gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMap7\
    \ = gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMap8 =\
    \ gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMap9 = gradesSorted.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedMap10 = gradesSorted.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedMap11 = gradesSorted.map(x => (x.toInt,\
    \ x)).toMap\n        val gradesSortedMap12 = gradesSorted.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedMap13 = gradesSorted.map(x => (x.toInt, x)).toMap\n \
    \       val gradesSortedMap14 = gradesSorted.map(x => (x.toInt, x)).toMap\n  \
    \      val gradesSortedMap15 = gradesSorted.map(x => (x.toInt, x)).toMap\n   \
    \     val gradesSortedMap16 = gradesSorted.map(x => (x.toInt, x)).toMap\n    \
    \    val gradesSortedMap17 = gradesSorted.map(x => (x.toInt, x)).toMap\n     \
    \   val gradesSortedMap18 = gradesSorted.map(x => (x.toInt, x)).toMap\n      \
    \  val gradesSortedMap19 = gradesSorted.map(x => (x.toInt, x)).toMap\n       \
    \ val gradesSortedMap20 = gradesSorted.map(x => (x.toInt, x)).toMap\n        val\
    \ gradesSortedMap21 = gradesSorted.map(x => (x.toInt, x)).toMap\n        val gradesSortedMap22\
    \ = grades", "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n  \
    \      val gradesSorted = grades.sortWith((a, b) => a.toDouble < b.toDouble)\n\
    \        val gradesSortedMap = gradesSorted.map(x => (x.toInt, x)).toMap\n   \
    \     val gradesSortedMapReversed = gradesSortedMap.reverse\n        val gradesSortedMapReversedMap\
    \ = gradesSortedMapReversed.toMap\n        val gradesSortedMapReversedMapValues\
    \ = gradesSortedMapReversedMap.values.toList\n        val gradesSortedMapReversedMapValuesSorted\
    \ = gradesSortedMapReversedMapValues.sortWith((a, b) => a.toDouble < b.toDouble)\n\
    \        val gradesSortedMapReversedMapValuesSortedMap = gradesSortedMapReversedMapValuesSorted.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedMapReversedMapValuesSortedMapValues\
    \ = gradesSortedMapReversedMapValuesSortedMap.values.toList\n        val gradesSortedMapReversedMapValuesSortedMapValuesSorted\
    \ = gradesSortedMapReversedMapValuesSortedMapValues.sortWith((a, b) => a.toDouble\
    \ < b.toDouble)\n        val gradesSortedMapReversedMapValuesSortedMapValuesSortedMap\
    \ = gradesSortedMapReversedMapValuesSortedMapValuesSorted.map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValues =\
    \ gradesSortedMapReversedMapValuesSortedMapValuesSortedMap.values.toList\n   \
    \     val gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSorted\
    \ = gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValues.sortWith((a,\
    \ b) => a.toDouble < b.toDouble)\n        val gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSortedMap\
    \ = gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSorted.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSortedMapValues\
    \ = gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSortedMapValuesSorted.values.toList\n\
    \        val gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSortedMapValuesSorted\
    \ = gradesSortedMapReversedMapValuesSortedMapValuesSortedMapValuesSortedMapValuesSortedMapValues.sortWith((",
  "        val gradesMap = grades.groupBy(x => x.toInt).mapValues(_.toInt)\n     \
    \   val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedGrouped\
    \ = gradesMapSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSorted =\
    \ gradesMapSortedGrouped.sortBy(_._2.last)\n        val gradesMapSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGrouped.sortBy(_._2.last)\n        val gradesMapSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGrouped.sortBy(_._2.last)\n     \
    \   val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped.sortBy(_._2.last)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped.sortBy(_._2.last)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped", " \
    \       val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues", "     \
    \   val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSorted\
    \ = grades.sortBy(x => x)\n        val gradesSortedMap = gradesSorted.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedMapReversed = gradesSortedMap.reverse\n\
    \        val gradesSortedMapReversedMap = gradesSortedMapReversed.map(x => (x._2,\
    \ x._1)).toMap\n        val gradesSortedMapReversedMapWithKeys = gradesSortedMapReversedMap.mapValues(x\
    \ => x._1)\n        val gradesSortedMapReversedMapWithKeysReversed = gradesSortedMapReversedMapWithKeys.reverse\n\
    \        val gradesSortedMapReversedMapWithKeysReversedMap = gradesSortedMapReversedMapWithKeysReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapWithKeysReversedMapWithKeys\
    \ = gradesSortedMapReversedMapWithKeysReversedMap.mapValues(x => x._1)\n     \
    \   val gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversed = gradesSortedMapReversedMapWithKeysReversedMapWithKeys.reverse\n\
    \        val gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMap\
    \ = gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversed.map(x => (x._1,\
    \ x._2)).toMap\n        val gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeys\
    \ = gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeys.mapValues(x\
    \ => x._1)\n        val gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeysReversed\
    \ = gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeys.reverse\n\
    \        val gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeysReversedMap\
    \ = gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeysReversed.map(x\
    \ => (x._1, x._2)).toMap\n        val gradesSortedMapReversedMapWithKeysReversedMapWithKeysReversedMapWithKeysReversedMapWithKeys\
    \ = gradesSortedMapReverse", "        val gradesMap = grades.groupBy(x => math.floor(x\
    \ * 10).toInt).mapValues(_.map(_ / 10).sum).toMap\n        val gradesSorted =\
    \ grades.sortBy(x => math.floor(x * 10).toInt)\n        val gradesSortedMap =\
    \ gradesSorted.groupBy(x => math.floor(x * 10).toInt).mapValues(_.map(_ / 10).sum).toMap\n\
    \        val gradesSortedReversed = gradesSorted.reverse\n        val gradesSortedMapReversed\
    \ = gradesSortedMap.mapValues(_.map(_ / 10).sum).toMap\n        val gradesSortedReversedMap\
    \ = gradesSortedReversed.groupBy(x => math.floor(x * 10).toInt).mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversed = gradesSortedReversedMap.mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversedMap = gradesSortedReversedMapReversed.mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversedMapReversed = gradesSortedReversedMapReversedMap.mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversedMapReversedMap\
    \ = gradesSortedReversedMapReversedMapReversed.mapValues(_.map(_ / 10).sum).toMap\n\
    \        val gradesSortedReversedMapReversedMapReversedMapReversed = gradesSortedReversedMapReversedMapReversedMap.mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedReversedMapReversedMapReversedMapReversed.mapValues(_.map(_ /\
    \ 10).sum).toMap\n        val gradesSortedReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedReversedMapReversedMapReversedMapReversedMap.mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversedMapReversedMapReversedMapReversedMap\
    \ = gradesSortedReversedMapReversedMapReversedMapReversedMapReversed.mapValues(_.map(_\
    \ / 10).sum).toMap\n        val gradesSortedReversedMapReversedMapReversedMapReversedMapReversedMapReversed\
    \ = gradesSortedReversedMapReversedMapReversedMapReversedMapReversedMap.mapValues(_.map",
  "        val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKey = gradesMapSorted.sortBy(_._2)\n     \
    \   val gradesMapSortedSortedByKeyReversed = gradesMapSortedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKey = gradesMapSortedSortedByKeyReversed.sortBy(_._1)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversed = gradesMapSortedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversed.sortBy(_._2)\n     \
    \   val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._3)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._4)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey.reverse\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKey\
    \ = gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed.sortBy(_._5)\n\
    \        val gradesMapSortedSortedByKeyReversedSortedByKeyReversedSortedByKeyReversed",
  '        grades.toList.sortWith((x,y) => x.toDouble > y.toDouble).reverse.map(x
    => if (x < 3.0) "A+" else if (x < 3.7) "A" else if (x < 3.3) "A-" else if (x <
    3.0) "B+" else if (x < 2.7) "B" else if (x < 2.3) "B-" else if (x < 2.0) "C+"
    else if (x < 1.7) "C" else if (x < 1.3) "C-" else if (x < 1.0) "D+" else if (x
    < 0.7) "D" else if (x < 0.0) "D-" else "E")', "        val gradesMap = grades.groupBy(x\
    \ => x.toInt).mapValues(_.toList.sortBy(x => x))\n        val gradesMapSorted\
    \ = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedKeys = gradesMapSorted.keys\n\
    \        val gradesMapSortedValues = gradesMapSorted.values\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMapSortedKeysLength\
    \ = gradesMapSortedKeys.size\n        val gradesMapSortedValuesLength = gradesMapSortedValues.size\n\
    \        val gradesMapSortedKeysLength = gradesMapSortedKeys.size\n        val\
    \ gradesMapSortedValuesLength = gradesMapSortedValues.size\n        val gradesMap",
  "        val gradesMap = grades.toMap\n        val gradesArray = grades.toArray\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grades.iterator\n        val gradesMap = grades.toMap\n\
    \        val gradesSet = grades.toSet\n        val gradesSeq = grades.toSeq\n\
    \        val gradesIter = grade", "        val gradesMap : Map[Float,String] =\
    \ grades.map(x => (x,x.toString.toUpperCase)).toMap\n        val gradesList :\
    \ List[(Float,String)] = gradesMap.filter(_._2 != \"E\").sortBy(_._1).reverse\n\
    \        val gradesMapList : List[(Float,String)] = gradesList.filter(_._2 !=\
    \ \"E\").sortBy(_._1).reverse\n        val gradesMapList1 : List[(Float,String)]\
    \ = gradesMapList.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val gradesMapList2\
    \ : List[(Float,String)] = gradesMapList1.filter(_._2 != \"E\").sortBy(_._1).reverse\n\
    \        val gradesMapList3 : List[(Float,String)] = gradesMapList2.filter(_._2\
    \ != \"E\").sortBy(_._1).reverse\n        val gradesMapList4 : List[(Float,String)]\
    \ = gradesMapList3.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val gradesMapList5\
    \ : List[(Float,String)] = gradesMapList4.filter(_._2 != \"E\").sortBy(_._1).reverse\n\
    \        val gradesMapList6 : List[(Float,String)] = gradesMapList5.filter(_._2\
    \ != \"E\").sortBy(_._1).reverse\n        val gradesMapList7 : List[(Float,String)]\
    \ = gradesMapList6.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val gradesMapList8\
    \ : List[(Float,String)] = gradesMapList7.filter(_._2 != \"E\").sortBy(_._1).reverse\n\
    \        val gradesMapList9 : List[(Float,String)] = gradesMapList8.filter(_._2\
    \ != \"E\").sortBy(_._1).reverse\n        val gradesMapList10 : List[(Float,String)]\
    \ = gradesMapList9.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val gradesMapList11\
    \ : List[(Float,String)] = gradesMapList10.filter(_._2 != \"E\").sortBy(_._1).reverse\n\
    \        val gradesMapList12 : List[(Float,String)] = gradesMapList11.filter(_._2\
    \ != \"E\").sortBy(_._1).reverse\n        val gradesMapList13 : List[(Float,String)]\
    \ = gradesMapList12.filter(_._2 != \"E\").sortBy(_._1).reverse\n        val gradesMapList",
  '        grades.map(grade => if (grade > 3.0) "B+" else if (grade > 2.7) "B" else
    if (grade > 2.3) "B-" else if (grade > 2.0) "C+" else if (grade > 1.7) "C" else
    if (grade > 1.3) "C-" else if (grade > 1.0) "D+" else if (grade > 0.7) "D" else
    if (grade > 0.0) "D-" else if (grade > 0.0) "E" else "A+" else if (grade > 3.0)
    "A" else if (grade > 3.0) "A" else "A")', "        val gradesMap = grades.groupBy(_\
    \ / 4).mapValues(_.toInt).mapValues(_.toDouble).mapValues(_.toString.toUpperCase)\n\
    \        val gradesMapReverse = gradesMap.mapValues(_.swap)\n        val gradesMapReverse2\
    \ = gradesMapReverse.mapValues(_.swap)\n        val gradesMapReverse3 = gradesMapReverse2.mapValues(_.swap)\n\
    \        val gradesMapReverse4 = gradesMapReverse3.mapValues(_.swap)\n       \
    \ val gradesMapReverse5 = gradesMapReverse4.mapValues(_.swap)\n        val gradesMapReverse6\
    \ = gradesMapReverse5.mapValues(_.swap)\n        val gradesMapReverse7 = gradesMapReverse6.mapValues(_.swap)\n\
    \        val gradesMapReverse8 = gradesMapReverse7.mapValues(_.swap)\n       \
    \ val gradesMapReverse9 = gradesMapReverse8.mapValues(_.swap)\n        val gradesMapReverse10\
    \ = gradesMapReverse9.mapValues(_.swap)\n        val gradesMapReverse11 = gradesMapReverse10.mapValues(_.swap)\n\
    \        val gradesMapReverse12 = gradesMapReverse11.mapValues(_.swap)\n     \
    \   val gradesMapReverse13 = gradesMapReverse12.mapValues(_.swap)\n        val\
    \ gradesMapReverse14 = gradesMapReverse13.mapValues(_.swap)\n        val gradesMapReverse15\
    \ = gradesMapReverse14.mapValues(_.swap)\n        val gradesMapReverse16 = gradesMapReverse15.mapValues(_.swap)\n\
    \        val gradesMapReverse17 = gradesMapReverse16.mapValues(_.swap)\n     \
    \   val gradesMapReverse18 = gradesMapReverse17.mapValues(_.swap)\n        val\
    \ gradesMapReverse19 = gradesMapReverse18.mapValues(_.swap)\n        val gradesMapReverse20\
    \ = gradesMapReverse19.mapValues(_.swap)\n        val gradesMapReverse21 = gradesMapReverse20.mapValues(_.swap)\n\
    \        val gradesMapReverse22 = gradesMapReverse21.mapValues(_.swap)\n     \
    \   val gradesMapReverse23 = gradesMapReverse22.mapValues(_.swap)\n        val\
    \ gradesMapReverse24 = gradesMapReverse23.mapValues(_.swap)\n        val gradesMapReverse25\
    \ = gradesMapReverse24.mapValues(_.swap)\n        val gradesMapReverse26 = gradesMapReverse25.mapValues(_.swap",
  "        val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSorted\
    \ = grades.sortBy(x => x)\n        val gradesSortedMap = gradesSorted.map(x =>\
    \ (x.toInt, x)).toMap\n        val gradesSortedSortedMap = gradesSorted.sortBy(x\
    \ => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedMap = gradesSorted.sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n\
    \        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedMap =\
    \ gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x =>\
    \ x).sortBy(x => x).map(x => (x.toInt, x)).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x => x).sortBy(x\
    \ => x).sortBy(x => x).sortBy(x => x).sort", "        val gradesMap = grades.map(x\
    \ => (x.toInt, x)).toMap\n        val gradesSortedByGPA = grades.sortBy(x => x)\n\
    \        val gradesSortedByGPAWithLetterGrade = gradesSortedByGPA.map(x => (x.toInt,\
    \ x))\n        val gradesSortedByGPAWithLetterGradeWithLetterGrade = gradesSortedByGPAWithLetterGrade.map(x\
    \ => (x._1, x._2.toChar))\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGrade.map(x => (x._1, x._2.toChar,\
    \ x._3))\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGrade.map(x => (x._1,\
    \ x._2.toChar, x._3, x._4))\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._1, x._2.toChar, x._3, x._4, x._5))\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._1, x._2.toChar, x._3, x._4, x._5, x._6))\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade.map(x\
    \ => (x._1, x._2.toChar, x._3, x._4, x._5, x._6, x._7))\n        val gradesSortedByGPAWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGradeWithLetterGrade\
    \ = gradesSortedBy", "        val gradesMap = grades.groupBy(x => math.floor(x)).mapValues(_.size)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2\
    \ = gradesMapSorted.filter(_._2 > 1)\n        val gradesMapSorted3 = gradesMapSorted2.filter(_._2\
    \ > 2)\n        val gradesMapSorted4 = gradesMapSorted3.filter(_._2 > 3)\n   \
    \     val gradesMapSorted5 = gradesMapSorted4.filter(_._2 > 4)\n        val gradesMapSorted6\
    \ = gradesMapSorted5.filter(_._2 > 5)\n        val gradesMapSorted7 = gradesMapSorted6.filter(_._2\
    \ > 6)\n        val gradesMapSorted8 = gradesMapSorted7.filter(_._2 > 7)\n   \
    \     val gradesMapSorted9 = gradesMapSorted8.filter(_._2 > 8)\n        val gradesMapSorted10\
    \ = gradesMapSorted9.filter(_._2 > 9)\n        val gradesMapSorted11 = gradesMapSorted10.filter(_._2\
    \ > 10)\n        val gradesMapSorted12 = gradesMapSorted11.filter(_._2 > 11)\n\
    \        val gradesMapSorted13 = gradesMapSorted12.filter(_._2 > 12)\n       \
    \ val gradesMapSorted14 = gradesMapSorted13.filter(_._2 > 13)\n        val gradesMapSorted15\
    \ = gradesMapSorted14.filter(_._2 > 14)\n        val gradesMapSorted16 = gradesMapSorted15.filter(_._2\
    \ > 15)\n        val gradesMapSorted17 = gradesMapSorted16.filter(_._2 > 16)\n\
    \        val gradesMapSorted18 = gradesMapSorted17.filter(_._2 > 17)\n       \
    \ val gradesMapSorted19 = gradesMapSorted18.filter(_._2 > 18)\n        val gradesMapSorted20\
    \ = gradesMapSorted19.filter(_._2 > 19)\n        val gradesMapSorted21 = gradesMapSorted20.filter(_._2\
    \ > 20)\n        val gradesMapSorted22 = gradesMapSorted21.filter(_._2 > 21)\n\
    \        val gradesMapSorted23 = gradesMapSorted22.filter(_._2 > 22)\n       \
    \ val gradesMapSorted24 = gradesMapSorted23.filter(_._2 > 23)\n        val gradesMapSorted25\
    \ = gradesMapSorted24.filter(_._2 > 24)\n        val grades", "        val gradesMap\
    \ = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n     \
    \   val gradesMapSorted2 = gradesMapSorted.toSeq.sortBy(_._2)\n        val gradesMapSorted3\
    \ = gradesMapSorted2.toSeq.sortBy(_._1)\n        val gradesMapSorted4 = gradesMapSorted3.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted5 = gradesMapSorted4.toSeq.sortBy(_._1)\n        val\
    \ gradesMapSorted6 = gradesMapSorted5.toSeq.sortBy(_._2)\n        val gradesMapSorted7\
    \ = gradesMapSorted6.toSeq.sortBy(_._1)\n        val gradesMapSorted8 = gradesMapSorted7.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted9 = gradesMapSorted8.toSeq.sortBy(_._1)\n        val\
    \ gradesMapSorted10 = gradesMapSorted9.toSeq.sortBy(_._2)\n        val gradesMapSorted11\
    \ = gradesMapSorted10.toSeq.sortBy(_._1)\n        val gradesMapSorted12 = gradesMapSorted11.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted13 = gradesMapSorted12.toSeq.sortBy(_._1)\n      \
    \  val gradesMapSorted14 = gradesMapSorted13.toSeq.sortBy(_._2)\n        val gradesMapSorted15\
    \ = gradesMapSorted14.toSeq.sortBy(_._1)\n        val gradesMapSorted16 = gradesMapSorted15.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted17 = gradesMapSorted16.toSeq.sortBy(_._1)\n      \
    \  val gradesMapSorted18 = gradesMapSorted17.toSeq.sortBy(_._2)\n        val gradesMapSorted19\
    \ = gradesMapSorted18.toSeq.sortBy(_._1)\n        val gradesMapSorted20 = gradesMapSorted19.toSeq.sortBy(_._2)\n\
    \        val gradesMapSorted21 = gradesMapSorted20.toSeq.sortBy(_._1)\n      \
    \  val gradesMapSorted22 = gradesMapSorted21.toSeq.sortBy(_._2)\n        val gradesMapSorted23\
    \ = gradesMapSorted22.toSeq.sortBy(_._1)\n        val gradesMapSorted24 = gradesMapSorted23.",
  "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt)\n        val\
    \ gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSortedGrouped\
    \ = gradesMapSorted.groupBy(_._2)\n        val gradesMapSortedGroupedSorted =\
    \ gradesMapSortedGrouped.sortBy(_._1).reverse\n        val gradesMapSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGrouped.sortBy(_._1).reverse\n        val gradesMapSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSorted.groupBy(_._1)\n        val gradesMapSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGrouped.sortBy(_._1).reverse\n  \
    \      val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped = gradesMapSortedGroupedSortedGroupedSortedGroupedSorted.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGrouped.sortBy(_._1).reverse\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped.sortBy(_._1).reverse\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGroupedSorted\
    \ = gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped.groupBy(_._1)\n\
    \        val gradesMapSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGroupedSortedGrouped\
    \ = ", "        val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSorted", "      \
    \  val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSortedReversedKeysLength\
    \ = gradesMapSortedReversedKeys.size\n        val gradesMapSortedReversedValuesLength\
    \ = gradesMapSortedReversedValues.size\n        val gradesMapSorted", "      \
    \  val gradesMap = grades.toMap\n        val gradesSortedByGPA = gradesMap.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n        val\
    \ gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n        val\
    \ gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n        val\
    \ gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesMap = gradesSortedByGPAReversedValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesKeys = gradesSortedByGPAReversedValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValues = gradesSortedByGPAReversedValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesMap = gradesSortedByGPAReversedValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesKeys = gradesSortedByGPAReversedValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValues = gradesSortedByGPAReversedValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesMap = gradesSortedByGPAReversedValuesValuesValuesValues.toMap\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesKeys = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.keys\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValues = gradesSortedByGPAReversedValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesMap\
    \ = gradesSortedByGPAReversedValuesValuesValuesValuesValuesValuesValuesMap.values.toList\n\
    \        val gradesSortedByGPA", "        val gradesMap : Map[Float, String] =\
    \ grades.map(grade => (grade -> grade < 3.0 ? \"A+\" :\n            grade < 3.7\
    \ ? \"A\" :\n            grade < 3.3 ? \"A-\" :\n            grade < 3.0 ? \"\
    B+\" :\n            grade < 2.7 ? \"B\" :\n            grade < 2.3 ? \"B-\" :\n\
    \            grade < 2.0 ? \"C+\" :\n            grade < 1.7 ? \"C\" :\n     \
    \       grade < 1.3 ? \"C-\" :\n            grade < 1.0 ? \"D+\" :\n         \
    \   grade < 0.7 ? \"D\" :\n            grade < 0.0 ? \"D-\" :\n            \"\
    E\")).toMap\n        val gradesList : List[String] = grades.map(grade => gradesMap(grade))\n\
    \        gradesList", "        val gradesMap : Map[Float, String] = grades.map(x\
    \ => x -> \"D-\").withDefaultValue(\"E\")\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeys.sortBy(_._1)\n        val gradesMapSortedReversedKeysSortedReversed\
    \ = gradesMapSortedReversedKeysSorted.reverse\n        val gradesMapSortedReversedKeysSortedReversedValues\
    \ = gradesMapSortedReversedKeysSortedReversed.map(x => gradesMapSortedReversedValues.indexOf(x))\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSorted = gradesMapSortedReversedKeysSortedReversedValues.sortBy(_._1)\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversed = gradesMapSortedReversedKeysSortedReversedValuesSortedReversed.reverse\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeys\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeys.map(x =>\
    \ gradesMapSortedReversedKeysSortedReversedValuesSortedReversed.indexOf(x))\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSorted.sortBy(_._1)\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversed\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversed.reverse\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValues\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSorted.map(x\
    \ => gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSorted.indexOf(x))\n\
    \        val gradesMapSortedReversedKeysSortedReversedValuesSortedReversedKeysSortedReversedValuesSorted\
    \ = gradesMapSortedReversedKeysSortedReversedValuesSortedReversed", "        val\
    \ gradesMap = grades.map(x => x -> x).toMap\n        val gradesSorted = grades.sortWith((x,y)\
    \ => x.toDouble < y.toDouble)\n        val gradesSortedMap = gradesSorted.map(x\
    \ => x -> x).toMap\n        val gradesSortedSortedMap = gradesSorted.sortWith((x,y)\
    \ => x.toDouble < y.toDouble).map(x => x -> x).toMap\n        val gradesSortedSortedSortedMap\
    \ = gradesSorted.sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y) =>\
    \ x.toDouble < y.toDouble).map(x => x -> x).toMap\n        val gradesSortedSortedSortedSortedMap\
    \ = gradesSorted.sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y) =>\
    \ x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).map(x =>\
    \ x -> x).toMap\n        val gradesSortedSortedSortedSortedSortedMap = gradesSorted.sortWith((x,y)\
    \ => x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y)\
    \ => x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).map(x\
    \ => x -> x).toMap\n        val gradesSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y) =>\
    \ x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y)\
    \ => x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y)\
    \ => x.toDouble < y.toDouble).map(x => x -> x).toMap\n        val gradesSortedSortedSortedSortedSortedSortedSortedMap\
    \ = gradesSorted.sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y) =>\
    \ x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y)\
    \ => x.toDouble < y.toDouble).sortWith((x,y) => x.toDouble < y.toDouble).sortWith((x,y)\
    \ => x.toDouble < y.", "        val gradesMap = grades.toMap\n        val gradesKeys\
    \ = gradesMap.keys\n        val gradesValues = gradesMap.values.toList\n     \
    \   val gradesValuesWithZero = gradesValues.map(_ + 0.0)\n        val gradesValuesWithZeroMap\
    \ = gradesValuesWithZero.toMap\n        val gradesKeysWithZero = gradesKeys.map(_\
    \ + 0.0)\n        val gradesKeysWithZeroMap = gradesKeysWithZero.toMap\n     \
    \   val gradesKeysWithZeroKeys = gradesKeysWithZeroMap.keys\n        val gradesKeysWithZeroValues\
    \ = gradesKeysWithZeroMap.values.toList\n        val gradesKeysWithZeroValuesWithZero\
    \ = gradesKeysWithZeroValues.map(_ + 0.0)\n        val gradesKeysWithZeroValuesWithZeroMap\
    \ = gradesKeysWithZeroValuesWithZero.toMap\n        val gradesKeysWithZeroValuesWithZeroKeys\
    \ = gradesKeysWithZeroValuesWithZeroMap.keys\n        val gradesKeysWithZeroValuesWithZeroValues\
    \ = gradesKeysWithZeroValuesWithZeroMap.values.toList\n        val gradesKeysWithZeroValuesWithZeroValuesWithZero\
    \ = gradesKeysWithZeroValuesWithZeroValues.map(_ + 0.0)\n        val gradesKeysWithZeroValuesWithZeroValuesWithZeroMap\
    \ = gradesKeysWithZeroValuesWithZeroValuesWithZero.toMap\n        val gradesKeysWithZeroValuesWithZeroValuesWithZeroKeys\
    \ = gradesKeysWithZeroValuesWithZeroValuesWithZeroMap.keys\n        val gradesKeysWithZeroValuesWithZeroValuesWithZeroValues\
    \ = gradesKeysWithZeroValuesWithZeroValuesWithZeroMap.values.toList\n        val\
    \ gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZero = gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZero.toMap\n\
    \        val gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZeroKeys\
    \ = gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZeroMap.keys\n   \
    \     val gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZeroValues =\
    \ gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZeroMap.values.toList\n\
    \        val gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZero\
    \ = gradesKeysWithZeroValuesWithZeroValuesWithZeroValuesWithZeroValuesWithZero.toMap\n\
    \        val grades", "        val gradesMap : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"D-\")).toMap\n        val gradesMapWithZero = gradesMap.updated(0.0,\
    \ \"E\")\n        val gradesMapWithZeroAndNegative = gradesMapWithZero.updated(-4.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositive = gradesMapWithZeroAndNegative.updated(3.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegative = gradesMapWithZeroAndNegativeAndPositive.updated(-2.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegative.updated(-1.0, \"F\")\n\
    \        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositive.updated(0.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive.updated(1.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive.updated(2.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive.updated(3.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative.updated(4.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive\
    \ = gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositive.updated(5.0,\
    \ \"F\")\n        val gradesMapWithZeroAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegativeAndPositiveAndNegative\
    \ = grades", "        val gradesMap = grades.toMap\n        val gradesSortedByGPA\
    \ = gradesMap.sortBy(_._1)\n        val gradesSortedByGPAReversed = gradesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedMap = gradesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedKeys = gradesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValues = gradesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPA = gradesSortedByGPAReversedValues.sortBy(_._1)\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversed = gradesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedMap = gradesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedKeys = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValues = gradesSortedByGPAReversedValuesSortedByGPAReversedMap.values.toList\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValues.sortBy(_._1)\n  \
    \      val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPA.reverse\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversed.toMap\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedKeys\
    \ = gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedMap.keys\n\
    \        val gradesSortedByGPAReversedValuesSortedByGPAReversedValuesSortedByGPAReversedValues\
    \ = grades", "        val gradesMap = grades.groupBy(_ / 10).mapValues(_.toInt)\n\
    \        val gradesMapSorted = gradesMap.sortBy(_._1).reverse\n        val gradesMapSorted2\
    \ = gradesMapSorted.filter(_._2 > 0)\n        val gradesMapSorted3 = gradesMapSorted2.map(_._1)\n\
    \        val gradesMapSorted4 = gradesMapSorted3.map(_ + 48)\n        val gradesMapSorted5\
    \ = gradesMapSorted4.map(_ + 64)\n        val gradesMapSorted6 = gradesMapSorted5.map(_\
    \ + 80)\n        val gradesMapSorted7 = gradesMapSorted6.map(_ + 96)\n       \
    \ val gradesMapSorted8 = gradesMapSorted7.map(_ + 112)\n        val gradesMapSorted9\
    \ = gradesMapSorted8.map(_ + 128)\n        val gradesMapSorted10 = gradesMapSorted9.map(_\
    \ + 144)\n        val gradesMapSorted11 = gradesMapSorted10.map(_ + 160)\n   \
    \     val gradesMapSorted12 = gradesMapSorted11.map(_ + 176)\n        val gradesMapSorted13\
    \ = gradesMapSorted12.map(_ + 192)\n        val gradesMapSorted14 = gradesMapSorted13.map(_\
    \ + 208)\n        val gradesMapSorted15 = gradesMapSorted14.map(_ + 224)\n   \
    \     val gradesMapSorted16 = gradesMapSorted15.map(_ + 240)\n        val gradesMapSorted17\
    \ = gradesMapSorted16.map(_ + 256)\n        val gradesMapSorted18 = gradesMapSorted17.map(_\
    \ + 272)\n        val gradesMapSorted19 = gradesMapSorted18.map(_ + 288)\n   \
    \     val gradesMapSorted20 = gradesMapSorted19.map(_ + 304)\n        val gradesMapSorted21\
    \ = gradesMapSorted20.map(_ + 320)\n        val gradesMapSorted22 = gradesMapSorted21.map(_\
    \ + 336)\n        val gradesMapSorted23 = gradesMapSorted22.map(_ + 352)\n   \
    \     val gradesMapSorted24 = gradesMapSorted23.map(_ + 368)\n        val gradesMapSorted25\
    \ = gradesMapSorted24.map(_ + 384)\n        val gradesMapSorted26 = gradesMapSorted25.map(_\
    \ + 400)\n        val gradesMapSorted27 = gradesMapSorted26.map(_ + 4", "    \
    \    val gradesMap = grades.groupBy(x => math.floor(x)).mapValues(_.size)\n  \
    \      val gradesMapSorted = gradesMap.sortBy(_._2).reverse\n        val gradesMapSortedWithMax\
    \ = gradesMapSorted.take(gradesMapSorted.size - 1)\n        val gradesMapSortedWithMaxWithMax\
    \ = gradesMapSortedWithMax.map(_._1)\n        val gradesMapSortedWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMax.map(_._2)\n        val gradesMapSortedWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMax.map(_._3)\n        val gradesMapSortedWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMax.map(_._4)\n        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMax.map(_._5)\n        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMax.map(_._6)\n        val\
    \ gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.map(_._7)\n\
    \        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.map(_._8)\n\
    \        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.map(_._9)\n\
    \        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.map(_._10)\n\
    \        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.map(_._11)\n\
    \        val gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax\
    \ = gradesMapSortedWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMaxWithMax.",
  "        val gradesMap : Map[Float, String] = grades.map(grade => (grade -> grade\
    \ < 3.0 ? \"A+\" :\n            grade < 3.7 ? \"A\" :\n            grade < 3.3\
    \ ? \"A-\" :\n            grade < 3.0 ? \"B+\" :\n            grade < 2.7 ? \"\
    B\" :\n            grade < 2.3 ? \"B-\" :\n            grade < 2.0 ? \"C+\" :\n\
    \            grade < 1.7 ? \"C\" :\n            grade < 1.3 ? \"C-\" :\n     \
    \       grade < 1.0 ? \"D+\" :\n            grade < 0.7 ? \"D\" :\n          \
    \  grade < 0.0 ? \"D-\" :\n            \"E\")).toMap\n        val gradesList :\
    \ List[String] = grades.map(grade => gradesMap(grade))\n        gradesList", " \
    \       val gradesMap = grades.toMap\n        val gradesMapSorted = gradesMap.sortBy(_._1)\n\
    \        val gradesMapSortedReversed = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys\
    \ = gradesMapSortedReversed.keys\n        val gradesMapSortedReversedValues =\
    \ gradesMapSortedReversed.values\n        val gradesMapSortedReversedKeysSorted\
    \ = gradesMapSortedReversedKeys.sortBy(_._1)\n        val gradesMapSortedReversedValuesSorted\
    \ = gradesMapSortedReversedValues.sortBy(_._1)\n        val gradesMapSortedReversedKeysSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSorted.reverse\n        val gradesMapSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedValuesSorted.reverse\n        val gradesMapSortedReversedKeysSortedSortedReversedKeys\
    \ = gradesMapSortedReversedKeysSortedSortedReversed.keys\n        val gradesMapSortedReversedValuesSortedSortedReversedValues\
    \ = gradesMapSortedReversedValuesSortedReversed.values\n        val gradesMapSortedReversedKeysSortedSortedReversedValuesSorted\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValues.sortBy(_._1)\n     \
    \   val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversed\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedReversed.reverse\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeys\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeys.keys\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedValues\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedReversedValues.sortBy(_._1)\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedValuesSorted\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedValuesSorted.reverse\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedSortedReversedKeys\
    \ = gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedReversedKeysSorted.keys\n\
    \        val gradesMapSortedReversedKeysSortedSortedReversedValuesSortedSortedSortedReversedValuesSorted\
    \ = gradesMapSortedReversed", "        val gradesSorted = grades.sortBy(_.toDouble)\n\
    \        val gradesSum = gradesSorted.sum\n        val gradesCount = gradesSorted.length\n\
    \        val gradesSumOfSquares = gradesSorted.map(x => x * x).sum\n        val\
    \ gradesSumOfSquaresOfSquares = gradesSorted.map(x => x * x).map(x => x * x).sum\n\
    \        val gradesSumOfSquaresOfSquaresOfSquares = gradesSorted.map(x => x *\
    \ x).map(x => x * x).map(x => x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x).map(x => x * x).map(x => x * x).map(x => x *\
    \ x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ gradesSorted.map(x => x * x).map(x => x * x).map(x => x * x).map(x => x * x).map(x\
    \ => x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x).map(x => x * x).map(x => x * x).map(x => x *\
    \ x).map(x => x * x).map(x => x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x).map(x => x * x).map(x => x * x).map(x => x *\
    \ x).map(x => x * x).map(x => x * x).map(x => x * x).sum\n        val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x).map(x => x * x).map(x => x * x).map(x => x *\
    \ x).map(x => x * x).map(x => x * x).map(x => x * x).map(x => x * x).sum\n   \
    \     val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = gradesSorted.map(x => x * x).map(x => x * x).map(x => x * x).map(x => x *\
    \ x).map(x => x * x).map(x => x * x).map(x => x * x).map(x => x * x).sum\n   \
    \     val gradesSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares", " \
    \       val gradesMap = grades.map(x => (x.toInt, x)).toMap\n        val gradesSortedByGPA\
    \ = grades.sortBy(x => x)\n        val gradesSortedByGPAWithLetterGrade = gradesSortedByGPA.map(x\
    \ => (x, gradesMap.get(x)))\n        val gradesSortedByGPAWithLetterGradeWithZero\
    \ = gradesSortedByGPAWithLetterGrade.map(x => (x._1, x._2._1, x._2._2))\n    \
    \    val gradesSortedByGPAWithLetterGradeWithZeroWithZero = gradesSortedByGPAWithLetterGradeWithZero.map(x\
    \ => (x._1, x._2._1, x._2._2, x._2._3))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZero.map(x => (x._1, x._2._1,\
    \ x._2._2, x._2._3, x._2._4))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZero.map(x => (x._1, x._2._1,\
    \ x._2._2, x._2._3, x._2._4, x._2._5))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._1, x._2._2, x._2._3, x._2._4, x._2._5, x._2._6))\n        val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZero\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZero.map(x =>\
    \ (x._1, x._2._1, x._2._2, x._2._3, x._2._4, x._2._5, x._2._6, x._2._7))\n   \
    \     val gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZeroWithZeroWith\
    \ = gradesSortedByGPAWithLetterGradeWithZeroWithZeroWithZeroWithZeroWithZero.map(x\
    \ => (x._1, ", "        val gradesMap : Map[Float, String] = grades.map(grade\
    \ => (grade -> \"E\")).toMap\n        val gradesList : List[String] = grades.map(grade\
    \ => gradesMap(grade))\n        gradesList", "        val gradesMap = grades.toMap\n\
    \        val gradesMapKeys = gradesMap.keys\n        val gradesMapValues = gradesMap.values.toList\n\
    \        val gradesMapValuesSortedByKey = gradesMapValues.sortBy(_)\n        val\
    \ gradesMapValuesSortedByKeyReversed = gradesMapValuesSortedByKey.reverse\n  \
    \      val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversed.length\n\
    \        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMapValuesSortedByKeyReversedLength = gradesMapValuesSortedByKeyReversedLength\
    \ - 1\n        val gradesMap", "        val gradesMap = grades.toMap\n       \
    \ val gradesMapSorted = gradesMap.sortBy(_._1)\n        val gradesMapSortedReversed\
    \ = gradesMapSorted.reverse\n        val gradesMapSortedReversedKeys = gradesMapSortedReversed.keys\n\
    \        val gradesMapSortedReversedValues = gradesMapSortedReversed.values\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValues.length\n\
    \        val gradesMapSortedReversedValuesLength = gradesMapSortedReversedValue"]
stop_tokens:
- "\n    }\n"

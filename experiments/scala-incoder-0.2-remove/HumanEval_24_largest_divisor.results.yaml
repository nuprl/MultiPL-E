language: scala
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d % 2 == 0){\n                d /= 2\n            }\n       \
    \     divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyx3k12m6.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyx3k12m6.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyx3k12m6.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            if((n % i) ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd_38rikv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpd_38rikv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors.add(2)\n        divisors.add(3)\n  \
    \      divisors.add(5)\n        divisors.add(7)\n        divisors.add(11)\n  \
    \      divisors.add(13)\n        divisors.add(17)\n        divisors.add(19)\n\
    \        divisors.add(23)\n        divisors.add(29)\n        divisors.add(31)\n\
    \        divisors.add(37)\n        divisors.add(43)\n        divisors.add(49)\n\
    \        divisors.add(61)\n        divisors.add(67)\n        divisors.add(73)\n\
    \        divisors.add(79)\n        divisors.add(83)\n        divisors.add(89)\n\
    \        divisors.add(97)\n        divisors.add(101)\n        divisors.add(107)\n\
    \        divisors.add(113)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(143)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(423)\n        divisors.add(427)\n\
    \        divisors.add(429)\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk_z8yx1b.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer(n)\n        for(i <- 1 to n by 2){\n            val d\
    \ = i\n            while(d > 1){\n                if(n % d == 0){\n          \
    \          divisors += d\n                    d /= 2\n                }\n    \
    \            else{\n                    break\n                }\n           \
    \ }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8q12vvng.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp8q12vvng.scala:7:22 ---------------------\e[0m\e[0m\n\e[31m7\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e[0m){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8q12vvng.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8q12vvng.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    break\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var largestDivisor\
    \ = 0L\n        var divisor = 0L\n        var currentDivisor = 0L\n        var\
    \ currentDivisor2 = 0L\n        var currentDivisor3 = 0L\n        var currentDivisor4\
    \ = 0L\n        var currentDivisor5 = 0L\n        var currentDivisor6 = 0L\n \
    \       var currentDivisor7 = 0L\n        var currentDivisor8 = 0L\n        var\
    \ currentDivisor9 = 0L\n        var currentDivisor10 = 0L\n        var currentDivisor11\
    \ = 0L\n        var currentDivisor12 = 0L\n        var currentDivisor13 = 0L\n\
    \        var currentDivisor14 = 0L\n        var currentDivisor15 = 0L\n      \
    \  var currentDivisor16 = 0L\n        var currentDivisor17 = 0L\n        var currentDivisor18\
    \ = 0L\n        var currentDivisor19 = 0L\n        var currentDivisor20 = 0L\n\
    \        var currentDivisor21 = 0L\n        var currentDivisor22 = 0L\n      \
    \  var currentDivisor23 = 0L\n        var currentDivisor24 = 0L\n        var currentDivisor25\
    \ = 0L\n        var currentDivisor26 = 0L\n        var currentDivisor27 = 0L\n\
    \        var currentDivisor28 = 0L\n        var currentDivisor29 = 0L\n      \
    \  var currentDivisor30 = 0L\n        var currentDivisor31 = 0L\n        var currentDivisor32\
    \ = 0L\n        var currentDivisor33 = 0L\n        var currentDivisor34 = 0L\n\
    \        var currentDivisor35 = 0L\n        var currentDivisor36 = 0L\n      \
    \  var currentDivisor37 = 0L\n        var currentDivisor38 = 0L\n        var currentDivisor39\
    \ = 0L\n        var currentDivisor40 = 0L\n        var currentDivisor41 = 0L\n\
    \        var currentDivisor42 = 0L\n        var currentDivisor43 = 0L\n      \
    \  var currentDivisor44 = 0L\n        var currentDivisor45 = 0L\n        var currentDivisor46\
    \ = 0L\n        var currentDivisor47 = 0L\n        var currentDivisor48 = 0L\n\
    \        var currentDivisor49 = 0L\n        var currentDivisor50 = 0L\n      \
    \  var currentDivisor51 = 0L\n        var currentDivisor52 = 0L\n        var currentDivisor53\
    \ = 0L\n        var currentDivisor54 = 0L\n        var currentDivisor55 = 0L\n\
    \        var currentDivisor56 = 0L\n        var currentDivisor57 = 0L\n      \
    \  var currentDivisor58 = 0L\n        var currentDivisor59 = 0L\n        var currentDivisor60\
    \ = 0L\n        var currentDivisor61 = 0L\n        var currentDivisor62 = 0L\n\
    \        var currentDivisor\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfbzhu403.scala:71:4 ----------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpfbzhu403.scala:71:5 ---------------------\e[0m\e[0m\n\e[31m71 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n\
    \        val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n \
    \       val maxDivisorIndex = mutable.Set[Long]()\n        val maxDivisorIndex\
    \ = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiu2ut633.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpiu2ut633.scala:9:12 ----------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpiu2ut633.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpiu2ut633.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpiu2ut633.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same gr"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.update(0, n)\n        divisors.update(1,\
    \ n-1)\n        divisors.update(n/2, n-1)\n        divisors.update(n/3, n-1)\n\
    \        divisors.update(n/4, n-1)\n        divisors.update(n/5, n-1)\n      \
    \  divisors.update(n/6, n-1)\n        divisors.update(n/7, n-1)\n        divisors.update(n/8,\
    \ n-1)\n        divisors.update(n/9, n-1)\n        divisors.update(n/10, n-1)\n\
    \        divisors.update(n/11, n-1)\n        divisors.update(n/12, n-1)\n    \
    \    divisors.update(n/13, n-1)\n        divisors.update(n/14, n-1)\n        divisors.update(n/15,\
    \ n-1)\n        divisors.update(n/16, n-1)\n        divisors.update(n/17, n-1)\n\
    \        divisors.update(n/18, n-1)\n        divisors.update(n/19, n-1)\n    \
    \    divisors.update(n/20, n-1)\n        divisors.update(n/21, n-1)\n        divisors.update(n/22,\
    \ n-1)\n        divisors.update(n/23, n-1)\n        divisors.update(n/24, n-1)\n\
    \        divisors.update(n/25, n-1)\n        divisors.update(n/26, n-1)\n    \
    \    divisors.update(n/27, n-1)\n        divisors.update(n/28, n-1)\n        divisors.update(n/29,\
    \ n-1)\n        divisors.update(n/30, n-1)\n        divisors.update(n/31, n-1)\n\
    \        divisors.update(n/32, n-1)\n        divisors.update(n/33, n-1)\n    \
    \    divisors.update(n/34, n-1)\n        divisors.update(n/35, n-1)\n        divisors.update(n/36,\
    \ n-1)\n        divisors.update(n/37, n-1)\n        divisors.update(n/38, n-1)\n\
    \        divisors.update(n/39, n-1)\n        divisors.update(n/40, n-1)\n    \
    \    divisors.update(n/41, n-1)\n        divisors.update(n/42, n-1)\n        divisors.update(n/43,\
    \ n-1)\n        divisors.update(n/44, n-1)\n        divisors.update(n/45, n-1)\n\
    \        divisors.update(n/46, n-1)\n        divisors.update(n/47, n-1)\n    \
    \    divisors.update(n/48, n-1)\n        divisors.update(n/49, n-1)\n        divisors.update\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3h29zx8o.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorNum = 0\n        var maxDivisorNumNum = 0\n     \
    \   var maxDivisorNumNumNum = 0\n        var maxDivisorNumNumNumNum = 0\n    \
    \    var maxDivisorNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n      \
    \  var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n      \
    \  var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0\n   \
    \     var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0\n   \
    \     var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDi\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr48is2j6.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr48is2j6.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr48is2j6.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr48is2j6.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNumNum is already defined as \e\
    [33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpr48is2j6.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var largestDivisor\
    \ = 0L\n        var currentDivisor = 0L\n        var currentDivisorRemainder =\
    \ 0L\n        var currentDivisorRemainderRemainder = 0L\n        var currentDivisorRemainderRemainder2\
    \ = 0L\n        var currentDivisorRemainderRemainder3 = 0L\n        var currentDivisorRemainderRemainder4\
    \ = 0L\n        var currentDivisorRemainderRemainder5 = 0L\n        var currentDivisorRemainderRemainder6\
    \ = 0L\n        var currentDivisorRemainderRemainder7 = 0L\n        var currentDivisorRemainderRemainder8\
    \ = 0L\n        var currentDivisorRemainderRemainder9 = 0L\n        var currentDivisorRemainderRemainder10\
    \ = 0L\n        var currentDivisorRemainderRemainder11 = 0L\n        var currentDivisorRemainderRemainder12\
    \ = 0L\n        var currentDivisorRemainderRemainder13 = 0L\n        var currentDivisorRemainderRemainder14\
    \ = 0L\n        var currentDivisorRemainderRemainder15 = 0L\n        var currentDivisorRemainderRemainder16\
    \ = 0L\n        var currentDivisorRemainderRemainder17 = 0L\n        var currentDivisorRemainderRemainder18\
    \ = 0L\n        var currentDivisorRemainderRemainder19 = 0L\n        var currentDivisorRemainderRemainder20\
    \ = 0L\n        var currentDivisorRemainderRemainder21 = 0L\n        var currentDivisorRemainderRemainder22\
    \ = 0L\n        var currentDivisorRemainderRemainder23 = 0L\n        var currentDivisorRemainderRemainder24\
    \ = 0L\n        var currentDivisorRemainderRemainder25 = 0L\n        var currentDivisorRemainderRemainder26\
    \ = 0L\n        var currentDivisorRemainderRemainder27 = 0L\n        var currentDivisorRemainderRemainder28\
    \ = 0L\n        var currentDivisorRemainderRemainder29 = 0L\n        var currentDivisorRemainderRemainder30\
    \ = 0L\n        var currentDivisorRemainderRemainder31 = 0L\n        var currentDivisorRemainderRemainder32\
    \ = 0L\n        var currentDivisorRemainderRemainder33 = 0L\n        var currentDivisorRemainderRemainder34\
    \ = 0L\n        var currentDivisorRemainderRemainder35 = 0L\n        var currentDivisorRemainderRemainder36\
    \ = 0L\n        var currentDivisorRemainderRemainder37 = 0L\n        var currentDivisorRemainderRemainder38\
    \ = 0L\n        var currentDivisorRemainderRemainder39 = 0L\n        var currentDivisorRemainderRemainder40\
    \ = 0L\n        var currentDivisorRemainderRemainder41\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4i2q6fnn.scala:50:4 ----------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp4i2q6fnn.scala:50:5 ---------------------\e[0m\e[0m\n\e[31m50 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 149\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 403\n        divisors += 407\n        divisors\
    \ += 411\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 419\n        divisors += 421\n        divisors += 423\n        divisors += 4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm90w0we1.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors.add(1)\n        divisors.add(2)\n  \
    \      divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n   \
    \     divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n \
    \       divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(111)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(421)\n\
    \        divisors.add(423)\n        divisors.add(427\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphjqs3cyj.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphjqs3cyj.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            divisors\
    \ += i\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wla63sp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1wla63sp.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 319\n        divisors += 323\n        divisors += 327\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 393\n        divisors += 397\n        divisors\
    \ += 401\n        divisors += 407\n        divisors += 411\n        divisors +=\
    \ 413\n        divisors += 417\n        divisors += 419\n        divisors += 423\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm8ck9l7u.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if((n % i)\
    \ == 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppzj_ypv9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppzj_ypv9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            divisors\
    \ += i\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wla63sp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1wla63sp.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if((n % i)\
    \ == 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppzj_ypv9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppzj_ypv9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(297)\n        divisors.add(301)\n\
    \        divisors.add(303)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(323)\n\
    \        divisors.add(329)\n        divisors.add(337)\n        divisors.add(341)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(365)\n        divisors.add(367)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(38\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptstqp0lg.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptstqp0lg.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = Long.MaxValue\n        for(i\
    \ <- 1 to n){\n            val divisor = i / maxDivisor\n            if(divisors.contains(divisor)){\n\
    \                divisors += divisor\n            }else{\n                divisors\
    \ += divisor\n                if(divisor > maxDivisor){\n                    maxDivisor\
    \ = divisor\n                }\n            }\n        }\n        maxDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi4qj_f39.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi4qj_f39.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpi4qj_f39.scala:15:31 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    maxDivisor = divisor\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \               Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) divisors += i\n\
    \        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpary9uhsc.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpary9uhsc.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 1 to n by 2)\n            if\
    \ (n % i == 0)\n                divisors += i\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_qyrlomj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_qyrlomj.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val div = i /\
    \ 2\n            if(div % 2 == 0){\n                divisors += div\n        \
    \    }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj72rlfnd.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpj72rlfnd.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n by 2) {\n      \
    \      if (n % i == 0) {\n                divisors += i\n            }\n     \
    \   }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6ico4_3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpi6ico4_3.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Set[Long]()\n  \
    \      for(i <- 1 to n){\n            val divisor = i / 2\n            if(divisor\
    \ % 2 == 0){\n                divisors += divisor\n            }\n        }\n\
    \        divisors.toList.sortWith(_ < _).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi5jvs15d.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpi5jvs15d.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi5jvs15d.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0L\n        var maxDivisorFactor = 0L\n        var divisor = 0L\n        var\
    \ divisorFactor = 0L\n        var currentDivisor = 0L\n        var currentDivisorFactor\
    \ = 0L\n        var currentDivisorFactor2 = 0L\n        var currentDivisorFactor3\
    \ = 0L\n        var currentDivisorFactor4 = 0L\n        var currentDivisorFactor5\
    \ = 0L\n        var currentDivisorFactor6 = 0L\n        var currentDivisorFactor7\
    \ = 0L\n        var currentDivisorFactor8 = 0L\n        var currentDivisorFactor9\
    \ = 0L\n        var currentDivisorFactor10 = 0L\n        var currentDivisorFactor11\
    \ = 0L\n        var currentDivisorFactor12 = 0L\n        var currentDivisorFactor13\
    \ = 0L\n        var currentDivisorFactor14 = 0L\n        var currentDivisorFactor15\
    \ = 0L\n        var currentDivisorFactor16 = 0L\n        var currentDivisorFactor17\
    \ = 0L\n        var currentDivisorFactor18 = 0L\n        var currentDivisorFactor19\
    \ = 0L\n        var currentDivisorFactor20 = 0L\n        var currentDivisorFactor21\
    \ = 0L\n        var currentDivisorFactor22 = 0L\n        var currentDivisorFactor23\
    \ = 0L\n        var currentDivisorFactor24 = 0L\n        var currentDivisorFactor25\
    \ = 0L\n        var currentDivisorFactor26 = 0L\n        var currentDivisorFactor27\
    \ = 0L\n        var currentDivisorFactor28 = 0L\n        var currentDivisorFactor29\
    \ = 0L\n        var currentDivisorFactor30 = 0L\n        var currentDivisorFactor31\
    \ = 0L\n        var currentDivisorFactor32 = 0L\n        var currentDivisorFactor33\
    \ = 0L\n        var currentDivisorFactor34 = 0L\n        var currentDivisorFactor35\
    \ = 0L\n        var currentDivisorFactor36 = 0L\n        var currentDivisorFactor37\
    \ = 0L\n        var currentDivisorFactor38 = 0L\n        var currentDivisorFactor39\
    \ = 0L\n        var currentDivisorFactor40 = 0L\n        var currentDivisorFactor41\
    \ = 0L\n        var currentDivisorFactor42 = 0L\n        var currentDivisorFactor43\
    \ = 0L\n        var currentDivisorFactor44 = 0L\n        var currentDivisorFactor45\
    \ = 0L\n        var currentDivisorFactor46 = 0L\n        var currentDivisorFactor47\
    \ = 0L\n        var currentDivisorFactor48 = 0L\n        var currentDivisorFactor49\
    \ = 0L\n        var currentDivisorFactor50 = 0L\n        var currentDivisorFactor51\
    \ = 0L\n        var currentDivisorFactor52 = 0L\n        var currentDivisorFactor53\
    \ = 0L\n        var currentDi\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp54ypw76s.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp54ypw76s.scala:65:5 ---------------------\e[0m\e[0m\n\e[31m65 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp37z_ggxn.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp37z_ggxn.scala:9:12 ----------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp37z_ggxn.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp37z_ggxn.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp37z_ggxn.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of t"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(d <- 1 to n by 2)\n            if(n % d ==\
    \ 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3v_2kt1d.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3v_2kt1d.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 347\n        divisors += 349\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 393\n       \
    \ divisors += 397\n        divisors += 401\n        divisors += 407\n        divisors\
    \ += 411\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 419\n        divisors += 421\n        divisors += 423\n        divisors += 4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpniicjq80.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n by 2){\n            val div = i / 2\n            if(divisors.contains(div))\
    \ maxDivisor.add(div)\n            else divisors.add(div)\n        }\n       \
    \ divisors.toList.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4xkoty_.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4xkoty_.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpv4xkoty_.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(2)\n        divisors.add(4)\n\
    \        divisors.add(6)\n        divisors.add(8)\n        divisors.add(10)\n\
    \        divisors.add(12)\n        divisors.add(14)\n        divisors.add(16)\n\
    \        divisors.add(18)\n        divisors.add(20)\n        divisors.add(24)\n\
    \        divisors.add(28)\n        divisors.add(32)\n        divisors.add(36)\n\
    \        divisors.add(40)\n        divisors.add(48)\n        divisors.add(52)\n\
    \        divisors.add(56)\n        divisors.add(60)\n        divisors.add(64)\n\
    \        divisors.add(72)\n        divisors.add(76)\n        divisors.add(80)\n\
    \        divisors.add(84)\n        divisors.add(88)\n        divisors.add(92)\n\
    \        divisors.add(96)\n        divisors.add(100)\n        divisors.add(104)\n\
    \        divisors.add(108)\n        divisors.add(112)\n        divisors.add(116)\n\
    \        divisors.add(120)\n        divisors.add(124)\n        divisors.add(128)\n\
    \        divisors.add(132)\n        divisors.add(136)\n        divisors.add(140)\n\
    \        divisors.add(144)\n        divisors.add(148)\n        divisors.add(152)\n\
    \        divisors.add(156)\n        divisors.add(160)\n        divisors.add(164)\n\
    \        divisors.add(168)\n        divisors.add(172)\n        divisors.add(176)\n\
    \        divisors.add(180)\n        divisors.add(184)\n        divisors.add(188)\n\
    \        divisors.add(192)\n        divisors.add(196)\n        divisors.add(200)\n\
    \        divisors.add(204)\n        divisors.add(208)\n        divisors.add(212)\n\
    \        divisors.add(216)\n        divisors.add(220)\n        divisors.add(224)\n\
    \        divisors.add(228)\n        divisors.add(232)\n        divisors.add(236)\n\
    \        divisors.add(240)\n        divisors.add(244)\n        divisors.add(248)\n\
    \        divisors.add(252)\n        divisors.add(256)\n        divisors.add(260)\n\
    \        divisors.add(264)\n        divisors.add(268)\n        divisors.add(272)\n\
    \        divisors.add(276)\n        divisors.add(280)\n        divisors.add(284)\n\
    \        divisors.add(288)\n        divisors.add(292)\n        divisors.add(296)\n\
    \        divisors.add(300)\n        divisors.add(304)\n        divisors.add(308)\n\
    \        divisors.add(312)\n        divisors.add(316)\n        divisors.add(320)\n\
    \        divisors.add(324)\n        divisors.add(328)\n        divisors.add(332)\n\
    \        divisors.add(336)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzss4cfes.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp37z_ggxn.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp37z_ggxn.scala:9:12 ----------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp37z_ggxn.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp37z_ggxn.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp37z_ggxn.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of t"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Set[Long]()\n  \
    \      for(i <- 1 to n){\n            val divisor = i\n            while(divisor\
    \ > 1){\n                if(n % divisor == 0){\n                    divisors +=\
    \ divisor\n                    largestDivisor += divisor\n                   \
    \ break\n                }\n                divisor -= 1\n            }\n    \
    \    }\n        largestDivisor.max\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjgx6ds1g.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpjgx6ds1g.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjgx6ds1g.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjgx6ds1g.scala:14:20\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                    break\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpjgx6ds1g.scala:16:24 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m                divisor -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            \
    \    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value -= is not a member of\
    \ Int - did you mean divisor.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val remainder\
    \ = n % i\n            if(remainder == 0){\n                divisors += i\n  \
    \          }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp172n_9v7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp172n_9v7.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 413\n        divisors\
    \ += 421\n        divisors += 423\n        divisors += 429\n        divisors +=\
    \ 433\n        divisors += 439\n        divisors += 443\n        divisors += 44\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwliqirj_.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n by 2)\n        \
    \    if (n % i == 0)\n                divisors += i\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpte25ro8h.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpte25ro8h.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            if((n % i) ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd_38rikv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpd_38rikv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0L\n        var maxDivisorNum = 0L\n        var maxDivisorNumNum = 0L\n  \
    \      var maxDivisorNumNumNum = 0L\n        var maxDivisorNumNumNumNum = 0L\n\
    \        var maxDivisorNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0L\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0L\n       \
    \ var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0L\n       \
    \ var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n    \
    \    var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n    \
    \    var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n \
    \       var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0L\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0L\n \
    \       var maxDivisorNumNumNum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph_l6stbz.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph_l6stbz.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0L\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph_l6stbz.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0L\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNumNum is already defined as \e\
    [33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmph_l6stbz.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0L\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNumNum is already defined\
    \ as \e[33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmph_l6stbz.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0L\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = Long.MaxValue\n        for(i\
    \ <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.foreach(divisor\
    \ => {\n            val remainder = n % divisor\n            if(remainder == 0){\n\
    \                maxDivisor = divisor\n            }\n        })\n        maxDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb7clwg_q.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpb7clwg_q.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            val d = i\n\
    \            while(d % 2 == 0){\n                d /= 2\n            }\n     \
    \       divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp81ak9_3t.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp81ak9_3t.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ak9_3t.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            divisors\
    \ += i\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wla63sp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1wla63sp.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Long.MinValue\n\
    \        for(i <- 1 to n by 2){\n            divisors += i\n            if(divisors.contains(n%i)){\n\
    \                largestDivisor = i\n            }\n        }\n        largestDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzszu5t72.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzszu5t72.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpzszu5t72.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpzszu5t72.scala:11:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                largestDivisor\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Reassignment to val largestDivisor\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorFactor = 0\n        var currentDivisor = 1\n    \
    \    for(i <- 1 to n) {\n            currentDivisor *= i\n            if(currentDivisor\
    \ > maxDivisor) {\n                maxDivisor = currentDivisor\n             \
    \   maxDivisorFactor = i\n            }\n        }\n        maxDivisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw8glhzzf.scala:9:22\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        val maxDivisor = mutable.Long.MaxValue\n\
    \        for(i <- 1 to n by 2){\n            val divisor = i / 2\n           \
    \ if(divisors.contains(divisor)){\n                if(divisor > maxDivisor){\n\
    \                    maxDivisor = divisor\n                }\n            }\n\
    \            divisors += divisor\n        }\n        maxDivisor\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6h8ibvj1.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp6h8ibvj1.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp6h8ibvj1.scala:8:22 ---------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp6h8ibvj1.scala:12:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                   \
    \ maxDivisor = divisor\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val maxDivisor\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n){\n            val divisor = i / 2\n            divisors +=\
    \ divisor\n            if(divisor > maxDivisor){\n                maxDivisor +=\
    \ divisor\n            }\n        }\n        maxDivisor.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz2rdigdu.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpz2rdigdu.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpz2rdigdu.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Set[Long]()\n  \
    \      for (i <- 1 to n) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n                if (divisors.size == 1) {\n                    largestDivisor\
    \ += i\n                }\n            }\n        }\n        largestDivisor.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphio9adtq.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphio9adtq.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphio9adtq.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        val maxDivisor = Long.MinValue\n        for(i\
    \ <- 1 to n by 2){\n            val divisor = i / 2\n            if(divisors.contains(divisor)){\n\
    \                maxDivisor = divisor\n            }\n            divisors +=\
    \ divisor\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2s8qgg0j.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2s8qgg0j.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp2s8qgg0j.scala:11:27\
    \ -----------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                maxDivisor\
    \ = divisor\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxDivisor = mutable.Long.MinValue\n\
    \        for(i <- 1 to n by 2){\n            val d = i\n            while(d >\
    \ 0){\n                if(n % d == 0){\n                    divisors += d\n  \
    \                  maxDivisor = math.max(maxDivisor, d)\n                }\n \
    \               d /= 2\n            }\n        }\n        maxDivisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphm4cpdop.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphm4cpdop.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmphm4cpdop.scala:8:22 ---------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmphm4cpdop.scala:13:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m                   \
    \ maxDivisor = math.max(maxDivisor, d)\n\e[31m\e[31m   |\e[0m                \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \      Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmphm4cpdop.scala:15:18 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m                d /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m \
    \               ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Int - did you mean d.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 319\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 423\n        divisors += 4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_tbqwgjf.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer(n)\n        var largestDivisor = 0L\n        var divisor\
    \ = 0L\n        while(divisors.nonEmpty) {\n            divisor = divisors.last\n\
    \            divisors = divisors.dropRight(1)\n            if(divisor % 2 == 0)\
    \ {\n                largestDivisor = divisor\n            }\n        }\n    \
    \    largestDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqcyfkwvn.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpqcyfkwvn.scala:11:21 -----------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m            divisors = divisors.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \           Reassignment to val divisors\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 4\n      \
    \  divisors += 8\n        divisors += 16\n        divisors += 32\n        divisors\
    \ += 64\n        divisors += 128\n        divisors += 256\n        divisors +=\
    \ 512\n        divisors += 1024\n        divisors += 2048\n        divisors +=\
    \ 4096\n        divisors += 8192\n        divisors += 16384\n        divisors\
    \ += 32768\n        divisors += 65536\n        divisors += 131072\n        divisors\
    \ += 262144\n        divisors += 524288\n        divisors += 1048576\n       \
    \ divisors += 2097152\n        divisors += 4194304\n        divisors += 8388608\n\
    \        divisors += 16777216\n        divisors += 33554432\n        divisors\
    \ += 67108864\n        divisors += 134217728\n        divisors += 268435456\n\
    \        divisors += 536870912\n        divisors += 1073741824\n        divisors\
    \ += 2147483648\n        divisors += 4294967296\n        divisors += 8589934592\n\
    \        divisors += 17179869184\n        divisors += 34359738368\n        divisors\
    \ += 68719476736\n        divisors += 137438953472\n        divisors += 274877906944\n\
    \        divisors += 549755813888\n        divisors += 1099511627776\n       \
    \ divisors += 2199023255552\n        divisors += 4398046511104\n        divisors\
    \ += 8796093022208\n        divisors += 17592186044416\n        divisors += 35184372088832\n\
    \        divisors += 70368744177664\n        divisors += 140737488355328\n   \
    \     divisors += 281474976710656\n        divisors += 562949953421312\n     \
    \   divisors += 1125899906842624\n        divisors += 2251799813685248\n     \
    \   divisors += 4503599627370496\n        divisors += 9007199254740992\n     \
    \   divisors += 18014398509481984\n        divisors += 36028797018963968\n   \
    \     divisors += 72057594037927936\n        divisors += 144115188075855872\n\
    \        divisors += 288230376151711744\n        divisors += 576460752303423488\n\
    \        divisors += 1152921504606846976\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplilybtua.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = Long.MaxValue\n        for(i\
    \ <- 1 to n by 2){\n            val div = i / 2\n            if(div % 2 == 0){\n\
    \                divisors += div\n                if(div > maxDivisor){\n    \
    \                maxDivisor = div\n                }\n            }\n        }\n\
    \        maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2ca4ww60.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2ca4ww60.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp2ca4ww60.scala:13:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m                   \
    \ maxDivisor = div\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val maxDivisor\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp92925q0j.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp92925q0j.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors.add(1)\n        divisors.add(2)\n  \
    \      divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n   \
    \     divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n \
    \       divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(297)\n        divisors.add(301)\n\
    \        divisors.add(303)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(323)\n\
    \        divisors.add(329)\n        divisors.add(337)\n        divisors.add(341)\n\
    \        divisors.add(343)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(369)\n        divisors.add(373)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpejsabrrm.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(421)\n\
    \        divisors.add(423)\n        divisors.add(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4_p93z0e.scala:91:21 ---------------------------\e\
    [0m\e[0m\n\e[31m91 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp4_p93z0e.scala:6:23 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 1 to n by 2)\n            if\
    \ (n % i == 0)\n                divisors += i\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_qyrlomj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_qyrlomj.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorFactor = 0\n        var maxDivisorFactor2 = 0\n \
    \       var maxDivisorFactor3 = 0\n        var maxDivisorFactor4 = 0\n       \
    \ var maxDivisorFactor5 = 0\n        var maxDivisorFactor6 = 0\n        var maxDivisorFactor7\
    \ = 0\n        var maxDivisorFactor8 = 0\n        var maxDivisorFactor9 = 0\n\
    \        var maxDivisorFactor10 = 0\n        var maxDivisorFactor11 = 0\n    \
    \    var maxDivisorFactor12 = 0\n        var maxDivisorFactor13 = 0\n        var\
    \ maxDivisorFactor14 = 0\n        var maxDivisorFactor15 = 0\n        var maxDivisorFactor16\
    \ = 0\n        var maxDivisorFactor17 = 0\n        var maxDivisorFactor18 = 0\n\
    \        var maxDivisorFactor19 = 0\n        var maxDivisorFactor20 = 0\n    \
    \    var maxDivisorFactor21 = 0\n        var maxDivisorFactor22 = 0\n        var\
    \ maxDivisorFactor23 = 0\n        var maxDivisorFactor24 = 0\n        var maxDivisorFactor25\
    \ = 0\n        var maxDivisorFactor26 = 0\n        var maxDivisorFactor27 = 0\n\
    \        var maxDivisorFactor28 = 0\n        var maxDivisorFactor29 = 0\n    \
    \    var maxDivisorFactor30 = 0\n        var maxDivisorFactor31 = 0\n        var\
    \ maxDivisorFactor32 = 0\n        var maxDivisorFactor33 = 0\n        var maxDivisorFactor34\
    \ = 0\n        var maxDivisorFactor35 = 0\n        var maxDivisorFactor36 = 0\n\
    \        var maxDivisorFactor37 = 0\n        var maxDivisorFactor38 = 0\n    \
    \    var maxDivisorFactor39 = 0\n        var maxDivisorFactor40 = 0\n        var\
    \ maxDivisorFactor41 = 0\n        var maxDivisorFactor42 = 0\n        var maxDivisorFactor43\
    \ = 0\n        var maxDivisorFactor44 = 0\n        var maxDivisorFactor45 = 0\n\
    \        var maxDivisorFactor46 = 0\n        var maxDivisorFactor47 = 0\n    \
    \    var maxDivisorFactor48 = 0\n        var maxDivisorFactor49 = 0\n        var\
    \ maxDivisorFactor50 = 0\n        var maxDivisorFactor51 = 0\n        var maxDivisorFactor52\
    \ = 0\n        var maxDivisorFactor53 = 0\n        var maxDivisorFactor54 = 0\n\
    \        var maxDivisorFactor55 = 0\n        var maxDivisorFactor56 = 0\n    \
    \    var maxDivisorFactor57 = 0\n        var maxDivisorFactor58 = 0\n        var\
    \ maxDivisorFactor59 = 0\n        var maxDivisorFactor60 = 0\n        var maxDivisorFactor61\
    \ = 0\n        var maxDivisorFactor62 = 0\n        var maxDivisorFactor63 = 0\n\
    \        var maxDi\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjc45x8zr.scala:71:4 ----------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjc45x8zr.scala:71:5 ---------------------\e[0m\e[0m\n\e[31m71 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2) {\n            if (n %\
    \ d == 0) {\n                divisors += d\n            }\n        }\n       \
    \ divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprkjwmq1w.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprkjwmq1w.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            if(n%i == 0){\n\
    \                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzl7zukuz.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzl7zukuz.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n                if (divisors.size > maxDivisor.size) {\n             \
    \       maxDivisor = divisors\n                }\n            }\n        }\n \
    \       maxDivisor.last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v96bj1k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2v96bj1k.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2v96bj1k.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp2v96bj1k.scala:12:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                   \
    \ maxDivisor = divisors\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val maxDivisor\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Set[Long]()\n  \
    \      for(i <- 1 to n){\n            divisors += i\n            if(divisors.contains(n%i)){\n\
    \                largestDivisor += n%i\n            }\n        }\n        largestDivisor.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqf9uvz8c.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqf9uvz8c.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqf9uvz8c.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 197\n    \
    \    divisors += 199\n        divisors += 211\n        divisors += 223\n     \
    \   divisors += 227\n        divisors += 229\n        divisors += 233\n      \
    \  divisors += 239\n        divisors += 241\n        divisors += 243\n       \
    \ divisors += 247\n        divisors += 251\n        divisors += 257\n        divisors\
    \ += 263\n        divisors += 269\n        divisors += 271\n        divisors +=\
    \ 277\n        divisors += 281\n        divisors += 283\n        divisors += 293\n\
    \        divisors += 307\n        divisors += 311\n        divisors += 313\n \
    \       divisors += 317\n        divisors += 323\n        divisors += 329\n  \
    \      divisors += 331\n        divisors += 337\n        divisors += 341\n   \
    \     divisors += 347\n        divisors += 353\n        divisors += 359\n    \
    \    divisors += 363\n        divisors += 369\n        divisors += 373\n     \
    \   divisors += 379\n        divisors += 383\n        divisors += 389\n      \
    \  divisors += 397\n        divisors += 401\n        divisors += 407\n       \
    \ divisors += 413\n        divisors += 421\n        divisors += 423\n        divisors\
    \ += 431\n        divisors += 437\n        divisors += 443\n        divisors +=\
    \ 449\n        divisors += 457\n        divisors += 461\n        divisors += \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpumsivvfs.scala:100:19 --------------------------\e\
    [0m\e[0m\n\e[31m100 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpumsivvfs.scala:6:23 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if(n%i ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8b_gbse.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps8b_gbse.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d % 2 == 0){\n                d /= 2\n            }\n       \
    \     divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyx3k12m6.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyx3k12m6.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyx3k12m6.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var largestDivisor\
    \ = 0\n        var currentDivisor = 1\n        var currentDivisor2 = 0\n     \
    \   var currentDivisor3 = 0\n        var currentDivisor4 = 0\n        var currentDivisor5\
    \ = 0\n        var currentDivisor6 = 0\n        var currentDivisor7 = 0\n    \
    \    var currentDivisor8 = 0\n        var currentDivisor9 = 0\n        var currentDivisor10\
    \ = 0\n        var currentDivisor11 = 0\n        var currentDivisor12 = 0\n  \
    \      var currentDivisor13 = 0\n        var currentDivisor14 = 0\n        var\
    \ currentDivisor15 = 0\n        var currentDivisor16 = 0\n        var currentDivisor17\
    \ = 0\n        var currentDivisor18 = 0\n        var currentDivisor19 = 0\n  \
    \      var currentDivisor20 = 0\n        var currentDivisor21 = 0\n        var\
    \ currentDivisor22 = 0\n        var currentDivisor23 = 0\n        var currentDivisor24\
    \ = 0\n        var currentDivisor25 = 0\n        var currentDivisor26 = 0\n  \
    \      var currentDivisor27 = 0\n        var currentDivisor28 = 0\n        var\
    \ currentDivisor29 = 0\n        var currentDivisor30 = 0\n        var currentDivisor31\
    \ = 0\n        var currentDivisor32 = 0\n        var currentDivisor33 = 0\n  \
    \      var currentDivisor34 = 0\n        var currentDivisor35 = 0\n        var\
    \ currentDivisor36 = 0\n        var currentDivisor37 = 0\n        var currentDivisor38\
    \ = 0\n        var currentDivisor39 = 0\n        var currentDivisor40 = 0\n  \
    \      var currentDivisor41 = 0\n        var currentDivisor42 = 0\n        var\
    \ currentDivisor43 = 0\n        var currentDivisor44 = 0\n        var currentDivisor45\
    \ = 0\n        var currentDivisor46 = 0\n        var currentDivisor47 = 0\n  \
    \      var currentDivisor48 = 0\n        var currentDivisor49 = 0\n        var\
    \ currentDivisor50 = 0\n        var currentDivisor51 = 0\n        var currentDivisor52\
    \ = 0\n        var currentDivisor53 = 0\n        var currentDivisor54 = 0\n  \
    \      var currentDivisor55 = 0\n        var currentDivisor56 = 0\n        var\
    \ currentDivisor57 = 0\n        var currentDivisor58 = 0\n        var currentDivisor59\
    \ = 0\n        var currentDivisor60 = 0\n        var currentDivisor61 = 0\n  \
    \      var currentDivisor62 = 0\n        var currentDivisor63 = 0\n        var\
    \ currentDivisor64 = 0\n        var currentDivisor65 = 0\n        var currentDivisor66\
    \ = 0\n        var currentDivisor67 = 0\n        var currentDivisor68 = 0\n  \
    \      var currentDivisor69 = 0\n        var currentDivisor70 = 0\n        var\
    \ currentDivisor71 = 0\n        var currentDivisor72 = 0\n        var current\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptginn0ut.scala:80:4 ----------------------------\e\
    [0m\e[0m\n\e[31m80 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmptginn0ut.scala:80:5 ---------------------\e[0m\e[0m\n\e[31m80 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if(n%i ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8b_gbse.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps8b_gbse.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val div = i.toLong\
    \ / i\n            if(divisors.contains(div)) continue\n            divisors +=\
    \ div\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpka8c93jx.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpka8c93jx.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpka8c93jx.scala:9:39\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m            \e[33mif\e[0m(divisors.contains(div))\
    \ continue\n\e[31m\e[31m  |\e[0m                                       ^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                       Not found: continue\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 403\n        divisors += 407\n        divisors\
    \ += 411\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 433\n        divisors += 439\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplnt003k3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 351\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 395\n       \
    \ divisors += 401\n        divisors += 409\n        divisors += 419\n        divisors\
    \ += 421\n        divisors += 431\n        divisors += 433\n        divisors +=\
    \ 439\n        divisors += 443\n        divisors += 449\n        divisors += 45\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp50b4kik.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d > 1){\n                if(d % 2 == 0){\n                  \
    \  divisors += d\n                    d /= 2\n                }\n            \
    \    else{\n                    d /= 2\n                }\n            }\n   \
    \     }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqf5uo_p.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjqf5uo_p.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjqf5uo_p.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpjqf5uo_p.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    d /= \e[31m2\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ /= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 197\n    \
    \    divisors += 199\n        divisors += 211\n        divisors += 223\n     \
    \   divisors += 227\n        divisors += 229\n        divisors += 233\n      \
    \  divisors += 239\n        divisors += 241\n        divisors += 247\n       \
    \ divisors += 251\n        divisors += 257\n        divisors += 263\n        divisors\
    \ += 269\n        divisors += 271\n        divisors += 277\n        divisors +=\
    \ 281\n        divisors += 283\n        divisors += 293\n        divisors += 307\n\
    \        divisors += 311\n        divisors += 317\n        divisors += 323\n \
    \       divisors += 329\n        divisors += 337\n        divisors += 341\n  \
    \      divisors += 347\n        divisors += 353\n        divisors += 359\n   \
    \     divisors += 367\n        divisors += 373\n        divisors += 379\n    \
    \    divisors += 383\n        divisors += 389\n        divisors += 397\n     \
    \   divisors += 401\n        divisors += 409\n        divisors += 419\n      \
    \  divisors += 421\n        divisors += 431\n        divisors += 433\n       \
    \ divisors += 443\n        divisors += 449\n        divisors += 457\n        divisors\
    \ += 461\n        divisors += 463\n        divisors += 467\n        divisors +=\
    \ 479\n        divisors += 481\n        divisors += 483\n        divisors += 485\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx3dsdx_v.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Set[Long]()\n  \
    \      for(i <- 1 to n){\n            val divisor = i / 2\n            if(divisors.contains(divisor)){\n\
    \                largestDivisor.add(divisor)\n            }\n            divisors\
    \ += divisor\n        }\n        largestDivisor.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1oz41j03.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1oz41j03.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1oz41j03.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n                if (divisors.size < maxDivisor.size) {\n             \
    \       maxDivisor += divisors.toSet\n                }\n            }\n     \
    \   }\n        maxDivisor.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyr1p6dwk.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpyr1p6dwk.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyr1p6dwk.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp200t86kf.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp200t86kf.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 351\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 413\n        divisors\
    \ += 417\n        divisors += 423\n        divisors += 429\n        divisors +=\
    \ 433\n        divisors += 439\n        divisors += 443\n        divisors += 44\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd4ova_qg.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp200t86kf.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp200t86kf.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.foreach(divisor\
    \ => {\n            val divisorCount = divisors.count(divisor => divisor < divisor)\n\
    \            if(divisorCount > maxDivisor.size){\n                maxDivisor.clear()\n\
    \                maxDivisor += divisor\n            }\n        })\n        maxDivisor.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph_boz1oz.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmph_boz1oz.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph_boz1oz.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp37z_ggxn.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp37z_ggxn.scala:9:12 ----------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp37z_ggxn.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp37z_ggxn.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp37z_ggxn.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of t"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val div = i /\
    \ 2\n            if(div % 2 == 0){\n                divisors += div\n        \
    \    }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj72rlfnd.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpj72rlfnd.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(265)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(289)\n        divisors.add(293)\n        divisors.add(295)\n\
    \        divisors.add(297)\n        divisors.add(301)\n        divisors.add(303)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(323)\n        divisors.add(325)\n\
    \        divisors.add(327)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(355)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(36\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpe122k75h.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe122k75h.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n){\n            val\
    \ divisor = i\n            while(divisor > 1){\n                if(n % divisor\
    \ == 0){\n                    divisors += divisor\n                    break\n\
    \                }\n                divisor -= 1\n            }\n        }\n \
    \       divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_yn58jw5.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp_yn58jw5.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_yn58jw5.scala:12:20\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    break\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp_yn58jw5.scala:14:24 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m                divisor -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            \
    \    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value -= is not a member of\
    \ Int - did you mean divisor.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010504
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n by 2){\n        \
    \    val d = i\n            while(d % 2 == 0){\n                d /= 2\n     \
    \       }\n            divisors += d\n        }\n        divisors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7v8hngh6.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7v8hngh6.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7v8hngh6.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010503
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 313\n        divisors += 317\n        divisors += 323\n  \
    \      divisors += 329\n        divisors += 331\n        divisors += 337\n   \
    \     divisors += 343\n        divisors += 349\n        divisors += 353\n    \
    \    divisors += 359\n        divisors += 363\n        divisors += 369\n     \
    \   divisors += 373\n        divisors += 379\n        divisors += 383\n      \
    \  divisors += 389\n        divisors += 393\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 411\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 419\n        divisors +=\
    \ 421\n        divisors += 423\n        divisors += 427\n        divisors += 43\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ae801on.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010501
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n by 2)\n         \
    \   divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptgw7r4qq.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmptgw7r4qq.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val divisor =\
    \ i / 2\n            if(divisor % 2 == 0){\n                divisors += divisor\n\
    \            }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptoy2r863.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptoy2r863.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010506
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Set[Long]()\n  \
    \      for (i <- 1 to n) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n                if (divisors.size >= largestDivisor.size) {\n        \
    \            largestDivisor += divisors.toList\n                }\n          \
    \  }\n        }\n        largestDivisor.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmg9k8h8f.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmg9k8h8f.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmg9k8h8f.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010506
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(297)\n        divisors.add(301)\n\
    \        divisors.add(309)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(323)\n        divisors.add(327)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(365)\n        divisors.add(367)\n        divisors.add(369)\n\
    \        divisors.add(371)\n        divisors.add(37\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu72_u61e.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu72_u61e.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010502
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorFactor = 0\n        var maxDivisorFactorIndex = 0\n\
    \        var maxDivisorFactorIndex2 = 0\n        var maxDivisorFactorIndex3 =\
    \ 0\n        var maxDivisorFactorIndex4 = 0\n        var maxDivisorFactorIndex5\
    \ = 0\n        var maxDivisorFactorIndex6 = 0\n        var maxDivisorFactorIndex7\
    \ = 0\n        var maxDivisorFactorIndex8 = 0\n        var maxDivisorFactorIndex9\
    \ = 0\n        var maxDivisorFactorIndex10 = 0\n        var maxDivisorFactorIndex11\
    \ = 0\n        var maxDivisorFactorIndex12 = 0\n        var maxDivisorFactorIndex13\
    \ = 0\n        var maxDivisorFactorIndex14 = 0\n        var maxDivisorFactorIndex15\
    \ = 0\n        var maxDivisorFactorIndex16 = 0\n        var maxDivisorFactorIndex17\
    \ = 0\n        var maxDivisorFactorIndex18 = 0\n        var maxDivisorFactorIndex19\
    \ = 0\n        var maxDivisorFactorIndex20 = 0\n        var maxDivisorFactorIndex21\
    \ = 0\n        var maxDivisorFactorIndex22 = 0\n        var maxDivisorFactorIndex23\
    \ = 0\n        var maxDivisorFactorIndex24 = 0\n        var maxDivisorFactorIndex25\
    \ = 0\n        var maxDivisorFactorIndex26 = 0\n        var maxDivisorFactorIndex27\
    \ = 0\n        var maxDivisorFactorIndex28 = 0\n        var maxDivisorFactorIndex29\
    \ = 0\n        var maxDivisorFactorIndex30 = 0\n        var maxDivisorFactorIndex31\
    \ = 0\n        var maxDivisorFactorIndex32 = 0\n        var maxDivisorFactorIndex33\
    \ = 0\n        var maxDivisorFactorIndex34 = 0\n        var maxDivisorFactorIndex35\
    \ = 0\n        var maxDivisorFactorIndex36 = 0\n        var maxDivisorFactorIndex37\
    \ = 0\n        var maxDivisorFactorIndex38 = 0\n        var maxDivisorFactorIndex39\
    \ = 0\n        var maxDivisorFactorIndex40 = 0\n        var maxDivisorFactorIndex41\
    \ = 0\n        var maxDivisorFactorIndex42 = 0\n        var maxDivisorFactorIndex43\
    \ = 0\n        var maxDivisorFactorIndex44 = 0\n        var maxDivisorFactorIndex45\
    \ = 0\n        var maxDivisorFactorIndex46 = 0\n        var maxDivisorFactorIndex47\
    \ = 0\n        var maxDivisorFactorIndex48 = 0\n        var maxDivisorFactorIndex49\
    \ = 0\n        var maxDivisorFactorIndex50 = 0\n        var maxDivisorFactorIndex51\
    \ = 0\n        var maxDivisorFactorIndex52 = 0\n        var maxDivisorFactorIndex53\
    \ = 0\n        var maxDivisorFactorIndex54 = 0\n        var maxDivisorFactorIndex55\
    \ = 0\n        var maxDivisorFactor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpem8a9nf_.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpem8a9nf_.scala:64:5 ---------------------\e[0m\e[0m\n\e[31m64 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d > 1){\n                if(n % d == 0){\n                  \
    \  divisors += d\n                    d /= 2\n                }\n            \
    \    else{\n                    d -= 1\n                }\n            }\n   \
    \     }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5490u9x2.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5490u9x2.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5490u9x2.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp5490u9x2.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    d -= \e[31m1\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ -= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorIndex = 0\n        for (i <- 1 to n) {\n        \
    \    if (n % i == 0) {\n                if (maxDivisor < i) {\n              \
    \      maxDivisor = i\n                    maxDivisorIndex = i\n             \
    \   }\n            }\n        }\n        maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqma22sd0.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        for(i <- 1 to n){\n            val div =\
    \ i / 2\n            if(divisors.contains(div)) divisors.remove(div)\n       \
    \     else divisors += div\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxzmlviit.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpxzmlviit.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010508
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        for (d <- divisors)\n            if (d > maxDivisor.max)\n   \
    \             maxDivisor.max = d\n        maxDivisor.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpipfglf00.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpipfglf00.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpipfglf00.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n by 2){\n            val div = i / 2\n            if(divisors.contains(div))\
    \ maxDivisor.add(div)\n            divisors += div\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplbb8lfbi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplbb8lfbi.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplbb8lfbi.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010508
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val divisor =\
    \ i\n            while(divisor > 1){\n                if(n % divisor == 0){\n\
    \                    divisors += divisor\n                    break\n        \
    \        }\n                divisor -= 1\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4_vwm_ip.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4_vwm_ip.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4_vwm_ip.scala:12:20\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    break\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp4_vwm_ip.scala:14:24 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m                divisor -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            \
    \    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value -= is not a member of\
    \ Int - did you mean divisor.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzb604wm.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvzb604wm.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.toList.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplg7l5fjy.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplg7l5fjy.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val div = i /\
    \ 2\n            if(div % 2 == 0){\n                divisors += div\n        \
    \    }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj72rlfnd.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpj72rlfnd.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var largestDivisor\
    \ = 0L\n        var divisor = 0L\n        for(i <- 0 until n) {\n            divisor\
    \ = i + 1\n            if(n % divisor == 0) {\n                if(divisor > largestDivisor)\
    \ {\n                    largestDivisor = divisor\n                }\n       \
    \     }\n        }\n        largestDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdj_fo_3u.scala:8:25\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m  |\e[0m                         ^\e[0m\n\e\
    [31m  |\e[0m                         Found:    (n : Long)\n\e[31m  |\e[0m    \
    \                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            val div =\
    \ i / 2\n            if(div % 2 == 0){\n                divisors += div\n    \
    \        }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv33od5fv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpv33od5fv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010511
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Long.MinValue\n\
    \        for(i <- 1 to n by 2){\n            val divisor = i / 2\n           \
    \ if(divisors.contains(divisor)){\n                largestDivisor = divisor\n\
    \            }\n            divisors += divisor\n        }\n        largestDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnxwr2fan.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpnxwr2fan.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpnxwr2fan.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpnxwr2fan.scala:11:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                largestDivisor\
    \ = divisor\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val largestDivisor\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d > 1){\n                if(d % 2 == 0){\n                  \
    \  divisors += d\n                    d /= 2\n                }\n            \
    \    else{\n                    d /= 2\n                }\n            }\n   \
    \     }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqf5uo_p.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjqf5uo_p.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjqf5uo_p.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpjqf5uo_p.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    d /= \e[31m2\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ /= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex\
    \ = 0\n        for(i <- 1 to n){\n            divisor = i\n            divisorIndex\
    \ = 0\n            for(j <- 1 to n){\n                if(j % divisor == 0){\n\
    \                    divisorIndex += 1\n                }\n            }\n   \
    \         if(divisorIndex > maxDivisorIndex){\n                maxDivisor = divisor\n\
    \                maxDivisorIndex = divisorIndex\n            }\n        }\n  \
    \      return maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy5x7q6jl.scala:10:22\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpy5x7q6jl.scala:13:26 --------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010511
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 351\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 411\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 419\n        divisors +=\
    \ 421\n        divisors += 423\n        divisors += 427\n        divisors += 43\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_t9ayo46.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010508
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(10)\n\
    \        divisors.add(20)\n        divisors.add(50)\n        divisors.add(100)\n\
    \        divisors.add(1000)\n        divisors.add(10000)\n        divisors.add(100000)\n\
    \        divisors.add(1000000)\n        divisors.add(10000000)\n        divisors.add(100000000)\n\
    \        divisors.add(1000000000)\n        divisors.add(10000000000)\n       \
    \ divisors.add(100000000000)\n        divisors.add(1000000000000)\n        divisors.add(10000000000000)\n\
    \        divisors.add(100000000000000)\n        divisors.add(1000000000000000)\n\
    \        divisors.add(10000000000000000)\n        divisors.add(100000000000000000)\n\
    \        divisors.add(1000000000000000000)\n        divisors.add(10000000000000000000)\n\
    \        divisors.add(100000000000000000000)\n        divisors.add(1000000000000000000000)\n\
    \        divisors.add(10000000000000000000000)\n        divisors.add(100000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000)\n        divisors.add(10000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000)\n        divisors.add(1000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000)\n        divisors.add(100000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000000000000)\n       \
    \ divisors.add(1000000000000000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000000000000000)\n    \
    \    divisors.add(1000000000000000000000000000000000000000000000000)\n       \
    \ divisors.add(100000000000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000000000)\n      \
    \  divisors.add(10000000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpl1jsh3fn.scala:69:4 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl1jsh3fn.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010508
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n by 2) {\n      \
    \      if (n % i == 0) {\n                divisors += i\n            }\n     \
    \   }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6ico4_3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpi6ico4_3.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(111)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(273)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(365)\n        divisors.add(367)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(381)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(383)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffrfn74c.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 403\n        divisors += 407\n        divisors\
    \ += 411\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 433\n        divisors += 439\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplnt003k3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(d <- 1 to n by 2)\n            if(n % d ==\
    \ 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3v_2kt1d.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3v_2kt1d.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Int]()\n        divisors += 2\n        divisors\
    \ += 3\n        divisors += 5\n        divisors += 7\n        divisors += 11\n\
    \        divisors += 13\n        divisors += 17\n        divisors += 19\n    \
    \    divisors += 23\n        divisors += 29\n        divisors += 31\n        divisors\
    \ += 37\n        divisors += 41\n        divisors += 43\n        divisors += 47\n\
    \        divisors += 53\n        divisors += 59\n        divisors += 61\n    \
    \    divisors += 67\n        divisors += 71\n        divisors += 73\n        divisors\
    \ += 79\n        divisors += 83\n        divisors += 89\n        divisors += 97\n\
    \        divisors += 101\n        divisors += 103\n        divisors += 107\n \
    \       divisors += 109\n        divisors += 113\n        divisors += 127\n  \
    \      divisors += 131\n        divisors += 137\n        divisors += 139\n   \
    \     divisors += 147\n        divisors += 151\n        divisors += 157\n    \
    \    divisors += 163\n        divisors += 167\n        divisors += 173\n     \
    \   divisors += 179\n        divisors += 181\n        divisors += 191\n      \
    \  divisors += 197\n        divisors += 199\n        divisors += 211\n       \
    \ divisors += 223\n        divisors += 227\n        divisors += 229\n        divisors\
    \ += 233\n        divisors += 239\n        divisors += 241\n        divisors +=\
    \ 243\n        divisors += 247\n        divisors += 251\n        divisors += 257\n\
    \        divisors += 263\n        divisors += 269\n        divisors += 271\n \
    \       divisors += 277\n        divisors += 281\n        divisors += 283\n  \
    \      divisors += 293\n        divisors += 307\n        divisors += 311\n   \
    \     divisors += 313\n        divisors += 317\n        divisors += 323\n    \
    \    divisors += 329\n        divisors += 331\n        divisors += 337\n     \
    \   divisors += 343\n        divisors += 349\n        divisors += 351\n      \
    \  divisors += 359\n        divisors += 363\n        divisors += 369\n       \
    \ divisors += 373\n        divisors += 379\n        divisors += 383\n        divisors\
    \ += 389\n        divisors += 397\n        divisors += 401\n        divisors +=\
    \ 407\n        divisors += 411\n        divisors += 419\n        divisors += 421\n\
    \        divisors += 423\n        divisors += 427\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp56ym2dyk.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp56ym2dyk.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp56ym2dyk.scala:8:30 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                              ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                              Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n3\
    \ errors found\n"
  stdout: ''
  timestamp: 1660010510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex\
    \ = 0\n        for(i <- 0 until n) {\n            divisor = i\n            divisorIndex\
    \ = 0\n            for(j <- 0 until n) {\n                if(j != i) {\n     \
    \               if(n % j == 0) {\n                        divisor = j\n      \
    \                  divisorIndex = j\n                        break\n         \
    \           }\n                }\n            }\n            if(divisor > maxDivisor)\
    \ {\n                maxDivisor = divisor\n                maxDivisorIndex = divisorIndex\n\
    \            }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppqn2upoo.scala:10:25\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmppqn2upoo.scala:13:29 --------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m            \e[33mfor\e[0m(j <- \e[31m0\e[0m until n) {\n\e\
    [31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m      \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmppqn2upoo.scala:18:24 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m                        break\n\e[31m\e[31m   |\e[0m                      \
    \  ^^^^^\e[0m\n\e[31m   |\e[0m                        Not found: break\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            if((n % i) ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd_38rikv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpd_38rikv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largest = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.foreach(divisor\
    \ => {\n            if(n % divisor == 0){\n                largest += divisor\n\
    \            }\n        })\n        largest.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp22qzxkg0.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp22qzxkg0.scala:7:22 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargest\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp22qzxkg0.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 4\n      \
    \  divisors += 8\n        divisors += 16\n        divisors += 32\n        divisors\
    \ += 64\n        divisors += 128\n        divisors += 256\n        divisors +=\
    \ 512\n        divisors += 1024\n        divisors += 2048\n        divisors +=\
    \ 4096\n        divisors += 8192\n        divisors += 16384\n        divisors\
    \ += 32768\n        divisors += 65536\n        divisors += 131072\n        divisors\
    \ += 262144\n        divisors += 524288\n        divisors += 1048576\n       \
    \ divisors += 2097152\n        divisors += 4194304\n        divisors += 8388608\n\
    \        divisors += 16777216\n        divisors += 33554432\n        divisors\
    \ += 67108864\n        divisors += 134217728\n        divisors += 268435456\n\
    \        divisors += 536870912\n        divisors += 1073741824\n        divisors\
    \ += 2147483648\n        divisors += 4294967296\n        divisors += 8589934592\n\
    \        divisors += 17179869184\n        divisors += 34359738368\n        divisors\
    \ += 68719476736\n        divisors += 137438953472\n        divisors += 274877906944\n\
    \        divisors += 549755813888\n        divisors += 1099511627776\n       \
    \ divisors += 2199023255552\n        divisors += 4398046511104\n        divisors\
    \ += 8796093022208\n        divisors += 17592186044416\n        divisors += 35184372088832\n\
    \        divisors += 70368744177664\n        divisors += 140737488355328\n   \
    \     divisors += 281474976710656\n        divisors += 562949953421312\n     \
    \   divisors += 1125899906842624\n        divisors += 2251799813685248\n     \
    \   divisors += 4503599627370496\n        divisors += 9007199254740992\n     \
    \   divisors += 18014398509481984\n        divisors += 36028797018963968\n   \
    \     divisors += 72057594037927936\n        divisors += 144115188075855872\n\
    \        divisors += 288230376151711744\n        divisors += 576460752303423488\n\
    \        divisors += 1152921504606846976\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplilybtua.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzb604wm.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvzb604wm.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 395\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 413\n        divisors\
    \ += 417\n        divisors += 423\n        divisors += 429\n        divisors +=\
    \ 431\n        divisors += 437\n        divisors += 443\n        divisors += \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5m_ynv1l.scala:100:19 --------------------------\e\
    [0m\e[0m\n\e[31m100 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp5m_ynv1l.scala:6:23 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorNum = 0\n        var divisor = 0\n        var divisorNum\
    \ = 0\n        for (i <- 1 to n) {\n            divisor = i\n            divisorNum\
    \ = i\n            while (divisor != 1) {\n                divisor = divisor /\
    \ 2\n                divisorNum = divisorNum * 2\n            }\n            if\
    \ (divisorNum > maxDivisorNum) {\n                maxDivisorNum = divisorNum\n\
    \                maxDivisor = divisor\n            }\n        }\n        return\
    \ maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp73x79kpp.scala:10:23\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 1 to n) divisors += i\n     \
    \   divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaebnumvy.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpaebnumvy.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp200t86kf.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp200t86kf.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 149\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 197\n    \
    \    divisors += 199\n        divisors += 211\n        divisors += 223\n     \
    \   divisors += 227\n        divisors += 229\n        divisors += 233\n      \
    \  divisors += 239\n        divisors += 241\n        divisors += 247\n       \
    \ divisors += 251\n        divisors += 257\n        divisors += 263\n        divisors\
    \ += 269\n        divisors += 271\n        divisors += 277\n        divisors +=\
    \ 283\n        divisors += 289\n        divisors += 291\n        divisors += 297\n\
    \        divisors += 303\n        divisors += 309\n        divisors += 311\n \
    \       divisors += 317\n        divisors += 323\n        divisors += 329\n  \
    \      divisors += 331\n        divisors += 337\n        divisors += 343\n   \
    \     divisors += 349\n        divisors += 351\n        divisors += 359\n    \
    \    divisors += 363\n        divisors += 369\n        divisors += 373\n     \
    \   divisors += 379\n        divisors += 383\n        divisors += 389\n      \
    \  divisors += 395\n        divisors += 401\n        divisors += 407\n       \
    \ divisors += 413\n        divisors += 417\n        divisors += 423\n        divisors\
    \ += 429\n        divisors += 431\n        divisors += 437\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 451\n        divisors += 457\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx9fcpi8q.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            val div =\
    \ i / 2\n            if(div % 2 == 0){\n                divisors += div\n    \
    \        }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv33od5fv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpv33od5fv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010511
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 1 to n by 2){\n            if(n%i\
    \ == 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0808cgua.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0808cgua.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndexCount\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount2 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount3 = mutable.Set[Int]()\n        val maxDivisorIndexCount4\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount5 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount6 = mutable.Set[Int]()\n        val maxDivisorIndexCount7\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount8 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount9 = mutable.Set[Int]()\n        val maxDivisorIndexCount10\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount11 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount12 = mutable.Set[Int]()\n        val maxDivisorIndexCount13\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount14 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount15 = mutable.Set[Int]()\n        val maxDivisorIndexCount16\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount17 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount18 = mutable.Set[Int]()\n        val maxDivisorIndexCount19\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount20 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount21 = mutable.Set[Int]()\n        val maxDivisorIndexCount22\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount23 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount24 = mutable.Set[Int]()\n        val maxDivisorIndexCount25\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount26 = mutable.Set[Int]()\n\
    \        val maxDivisorIndexCount27 = mutable.Set[Int]()\n        val maxDivisorIndexCount28\
    \ = mutable.Set[Int]()\n        val maxDivisorIndexCount29 = \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpz710h5bk.scala:37:36 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndexCount29\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m\
    \   |\e[0m                                    expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz710h5bk.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz710h5bk.scala:7:25\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxDivisor\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz710h5bk.scala:8:30\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                              ^^^^^^^\e[0m\n\e[31m  |\e[0m                  \
    \            Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpz710h5bk.scala:9:35 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mmaxDivisorIndexCount\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                                   ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                                   Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz710h5bk.scala:10:36 ---------------------"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 1 to n by 2)\n            if\
    \ (n % i == 0)\n                divisors += i\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_qyrlomj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_qyrlomj.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0L\n        var maxDivisorFactor = 0L\n        var maxDivisorFactorIndex =\
    \ 0L\n        var maxDivisorFactorIndex2 = 0L\n        var maxDivisorFactorIndex3\
    \ = 0L\n        var maxDivisorFactorIndex4 = 0L\n        var maxDivisorFactorIndex5\
    \ = 0L\n        var maxDivisorFactorIndex6 = 0L\n        var maxDivisorFactorIndex7\
    \ = 0L\n        var maxDivisorFactorIndex8 = 0L\n        var maxDivisorFactorIndex9\
    \ = 0L\n        var maxDivisorFactorIndex10 = 0L\n        var maxDivisorFactorIndex11\
    \ = 0L\n        var maxDivisorFactorIndex12 = 0L\n        var maxDivisorFactorIndex13\
    \ = 0L\n        var maxDivisorFactorIndex14 = 0L\n        var maxDivisorFactorIndex15\
    \ = 0L\n        var maxDivisorFactorIndex16 = 0L\n        var maxDivisorFactorIndex17\
    \ = 0L\n        var maxDivisorFactorIndex18 = 0L\n        var maxDivisorFactorIndex19\
    \ = 0L\n        var maxDivisorFactorIndex20 = 0L\n        var maxDivisorFactorIndex21\
    \ = 0L\n        var maxDivisorFactorIndex22 = 0L\n        var maxDivisorFactorIndex23\
    \ = 0L\n        var maxDivisorFactorIndex24 = 0L\n        var maxDivisorFactorIndex25\
    \ = 0L\n        var maxDivisorFactorIndex26 = 0L\n        var maxDivisorFactorIndex27\
    \ = 0L\n        var maxDivisorFactorIndex28 = 0L\n        var maxDivisorFactorIndex29\
    \ = 0L\n        var maxDivisorFactorIndex30 = 0L\n        var maxDivisorFactorIndex31\
    \ = 0L\n        var maxDivisorFactorIndex32 = 0L\n        var maxDivisorFactorIndex33\
    \ = 0L\n        var maxDivisorFactorIndex34 = 0L\n        var maxDivisorFactorIndex35\
    \ = 0L\n        var maxDivisorFactorIndex36 = 0L\n        var maxDivisorFactorIndex37\
    \ = 0L\n        var maxDivisorFactorIndex38 = 0L\n        var maxDivisorFactorIndex39\
    \ = 0L\n        var maxDivisorFactorIndex40 = 0L\n        var maxDivisorFactorIndex41\
    \ = 0L\n        var maxDivisorFactorIndex42 = 0L\n        var maxDivisorFactorIndex43\
    \ = 0L\n        var maxDivisorFactorIndex44 = 0L\n        var maxDivisorFactorIndex45\
    \ = 0L\n        var maxDivisorFactorIndex46 = 0L\n        var maxDivisorFactorIndex47\
    \ = 0L\n        var maxDivisorFactorIndex48 = 0L\n        var maxDivisorFactorIndex49\
    \ = 0L\n        var maxDivisorFactorIndex50 = 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp56psl41x.scala:58:5\
    \ ---------------------\e[0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 149\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 197\n    \
    \    divisors += 199\n        divisors += 211\n        divisors += 223\n     \
    \   divisors += 227\n        divisors += 229\n        divisors += 233\n      \
    \  divisors += 239\n        divisors += 241\n        divisors += 247\n       \
    \ divisors += 251\n        divisors += 257\n        divisors += 263\n        divisors\
    \ += 269\n        divisors += 271\n        divisors += 277\n        divisors +=\
    \ 281\n        divisors += 283\n        divisors += 293\n        divisors += 307\n\
    \        divisors += 311\n        divisors += 313\n        divisors += 317\n \
    \       divisors += 323\n        divisors += 329\n        divisors += 331\n  \
    \      divisors += 337\n        divisors += 343\n        divisors += 349\n   \
    \     divisors += 351\n        divisors += 359\n        divisors += 363\n    \
    \    divisors += 369\n        divisors += 373\n        divisors += 379\n     \
    \   divisors += 383\n        divisors += 389\n        divisors += 397\n      \
    \  divisors += 401\n        divisors += 409\n        divisors += 419\n       \
    \ divisors += 421\n        divisors += 431\n        divisors += 433\n        divisors\
    \ += 439\n        divisors += 443\n        divisors += 449\n        divisors +=\
    \ 451\n        divisors += 457\n        divisors += 461\n        divisors += 463\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp05mxf5h7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n by 2){\n        \
    \    val d = i\n            while(n % d == 0){\n                divisors += d\n\
    \                n /= d\n            }\n        }\n        divisors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxdl9antj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpxdl9antj.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxdl9antj.scala:11:18\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                n /= d\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        for(i <- 1 to n){\n            if(n%i ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbcccu0zd.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbcccu0zd.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if(n%i ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8b_gbse.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps8b_gbse.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val div = i.toLong\
    \ / 2\n            if(divisors.contains(div)) divisors.remove(div)\n         \
    \   else divisors += div\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi1r_6u8s.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi1r_6u8s.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 1 to n){\n            val d =\
    \ i\n            while(d % 2 == 0){\n                d /= 2\n            }\n \
    \           divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8j0yscq2.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8j0yscq2.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8j0yscq2.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n){\n            val divisor = i / 2\n            if(divisors.contains(divisor)){\n\
    \                divisors += divisor\n                maxDivisor += divisor\n\
    \            }\n        }\n        divisors.toList.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyozgoi_c.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpyozgoi_c.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyozgoi_c.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d % 2 == 0){\n                d /= 2\n            }\n       \
    \     divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyx3k12m6.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyx3k12m6.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyx3k12m6.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n){\n            val div = i / 2\n            if(divisors.contains(div))\
    \ maxDivisor.add(div)\n            divisors += div\n        }\n        divisors.toList.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphh7q53mh.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphh7q53mh.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphh7q53mh.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = -1\n        for(i <- 1 to n by 2){\n            val divisor\
    \ = i\n            val isDivisor = divisors.contains(divisor)\n            if(isDivisor){\n\
    \                divisors += divisor\n                maxDivisor += divisor\n\
    \                if(divisor > maxDivisor.get){\n                    maxDivisorIndex\
    \ = divisors.size - 1\n                }\n            }\n        }\n        maxDivisorIndex\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwisjme7e.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwisjme7e.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwisjme7e.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpwisjme7e.scala:16:36\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                   \
    \ maxDivisorIndex = divisors.size - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m      \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \               Reassignment to val maxDivisorIndex\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var largestDivisor\
    \ = 0L\n        var currentDivisor = 0L\n        var currentDivisorRemainder =\
    \ 0L\n        var currentDivisorDivisor = 0L\n        var currentDivisorDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainder = 0L\n        var currentDivisorRemainderDivisor\
    \ = 0L\n        var currentDivisorRemainderRemainder = 0L\n        var currentDivisorRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisor = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var\
    \ currentDivisorRemainderRemainderDivisorRemainder = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder\
    \ = 0L\n        var currentDivisorRemainderRemainderDivisorRemainder = 0L\n  \
    \      var currentDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo29g5hqp.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo29g5hqp.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorRemainderRemainder\e[0m = \e[31m0L\e[0m\n\e[31m\e[31m  \
    \ |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mcurrentDivisorRemainderRemainder\
    \ is already defined as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderRemainder\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo29g5hqp.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderRemainderDivisorRemainder\e\
    [0m = \e[31m0L\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorRemainderRemainderDivisorRemainder is already\
    \ defined as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderRemainderDivisorRemainder\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo29g5hqp.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderRemainderDivisorRemainder\e\
    [0m = \e[31m0L\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorRemainderRemainderDivisorRemainder is already\
    \ defined as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderRemainderDivisorRemainder\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo29g5hqp.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderRemainderDivisorRemainder\e\
    [0m = \e[31m0L\e[0m\n\e[3"
  stdout: ''
  timestamp: 1660010521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 1 to n) divisors += i\n     \
    \   divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaebnumvy.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpaebnumvy.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val divisor =\
    \ i\n            while(divisor > 1){\n                if(n % divisor == 0){\n\
    \                    divisors += divisor\n                    divisor -= 1\n \
    \               }\n                divisor -= 1\n            }\n        }\n  \
    \      divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_u7p91ua.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_u7p91ua.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_u7p91ua.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    divisor\
    \ -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m              value -= is not a member of Int - did you mean divisor.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_u7p91ua.scala:14:24 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                divisor -= \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value\
    \ -= is not a member of Int - did you mean divisor.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largestDivisor = mutable.Long.MinValue\n\
    \        for(i <- 1 to n by 2){\n            divisors += i\n            if(divisors.contains(n%i)){\n\
    \                largestDivisor = i\n            }\n        }\n        largestDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzszu5t72.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzszu5t72.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpzszu5t72.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpzszu5t72.scala:11:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                largestDivisor\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Reassignment to val largestDivisor\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 4\n  \
    \      divisors += 8\n        divisors += 16\n        divisors += 32\n       \
    \ divisors += 64\n        divisors += 128\n        divisors += 256\n        divisors\
    \ += 512\n        divisors += 1024\n        divisors += 2048\n        divisors\
    \ += 4096\n        divisors += 8192\n        divisors += 16384\n        divisors\
    \ += 32768\n        divisors += 65536\n        divisors += 131072\n        divisors\
    \ += 262144\n        divisors += 524288\n        divisors += 1048576\n       \
    \ divisors += 2097152\n        divisors += 4194304\n        divisors += 8388608\n\
    \        divisors += 16777216\n        divisors += 33554432\n        divisors\
    \ += 67108864\n        divisors += 134217728\n        divisors += 268435456\n\
    \        divisors += 536870912\n        divisors += 1073741824\n        divisors\
    \ += 2147483648\n        divisors += 4294967296\n        divisors += 8589934592\n\
    \        divisors += 17179869184\n        divisors += 34359738368\n        divisors\
    \ += 68719476736\n        divisors += 137438953472\n        divisors += 274877906944\n\
    \        divisors += 549755813888\n        divisors += 1099511627776\n       \
    \ divisors += 2199023255552\n        divisors += 4398046511104\n        divisors\
    \ += 8796093022208\n        divisors += 17592186044416\n        divisors += 35184372088832\n\
    \        divisors += 70368744177664\n        divisors += 140737488355328\n   \
    \     divisors += 281474976710656\n        divisors += 562949953421312\n     \
    \   divisors += 1125899906842624\n        divisors += 2251799813685248\n     \
    \   divisors += 4503599627370496\n        divisors += 9007199254740992\n     \
    \   divisors += 18014398509481984\n        divisors += 36028797018963968\n   \
    \     divisors += 72057594037927936\n        divisors += 144115188075855872\n\
    \        divisors += 288230376151711744\n        divisors += 576460752303423488\n\
    \        divisors += 1152921504606846976\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8rk5u3dl.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010517
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer(n)\n        val largestDivisor = mutable.Long.MinValue\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(d % 2 == 0) {\n                largestDivisor\
    \ = d if (d > largestDivisor)\n            }\n        }\n        largestDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpacehwg74.scala:12:35 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                largestDivisor = d \e[33mif\e[0m (d >\
    \ largestDivisor)\n\e[31m\e[31m   |\e[0m                                   ^^\e\
    [0m\n\e[31m   |\e[0m                                end of statement expected\
    \ but 'if' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpacehwg74.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.ArrayBuffer(n)\n\e[31m\e[31m  |\e[0m             \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpacehwg74.scala:7:29\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mlargestDivisor\e[0m = mutable.Long.MinValue\n\e[31m\e[31m  |\e[0m        \
    \                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                           \
    \  Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpacehwg74.scala:12:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                largestDivisor\
    \ = d \e[33mif\e[0m (d > largestDivisor)\n\e[31m\e[31m   |\e[0m              \
    \  ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ largestDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            divisors\
    \ += i\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wla63sp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1wla63sp.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            if(n%i == 0){\n\
    \                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzl7zukuz.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzl7zukuz.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 297\n \
    \       divisors += 303\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 395\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 433\n        divisors += 4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp59otg0k1.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val divisor =\
    \ i / 2\n            if(i % 2 == 0){\n                divisors += divisor\n  \
    \          }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuv8ig41k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpuv8ig41k.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n by 2){\n            val divisor = i\n            while(divisor\
    \ > 0){\n                if(divisors.contains(divisor) && divisor < maxDivisor.last){\n\
    \                    maxDivisor.add(divisor)\n                }\n            \
    \    divisor = divisor / 2\n            }\n        }\n        maxDivisor.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnvllbjj5.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpnvllbjj5.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnvllbjj5.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpnvllbjj5.scala:14:24\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                divisor\
    \ = divisor / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val divisor\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if(n%i ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8b_gbse.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps8b_gbse.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val remainder\
    \ = n % i\n            if(remainder == 0){\n                divisors += i\n  \
    \          }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp172n_9v7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp172n_9v7.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 319\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 395\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 423\n        divisors += \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmparbssu90.scala:100:19 --------------------------\e\
    [0m\e[0m\n\e[31m100 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmparbssu90.scala:6:23 -------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        var maxDivisor\
    \ = 0\n        var maxDivisorFactor = 0\n        var divisor = 0\n        var\
    \ divisorFactor = 0\n        var divisorFactor2 = 0\n        var divisorFactor3\
    \ = 0\n        var divisorFactor4 = 0\n        var divisorFactor5 = 0\n      \
    \  var divisorFactor6 = 0\n        var divisorFactor7 = 0\n        var divisorFactor8\
    \ = 0\n        var divisorFactor9 = 0\n        var divisorFactor10 = 0\n     \
    \   var divisorFactor11 = 0\n        var divisorFactor12 = 0\n        var divisorFactor13\
    \ = 0\n        var divisorFactor14 = 0\n        var divisorFactor15 = 0\n    \
    \    var divisorFactor16 = 0\n        var divisorFactor17 = 0\n        var divisorFactor18\
    \ = 0\n        var divisorFactor19 = 0\n        var divisorFactor20 = 0\n    \
    \    var divisorFactor21 = 0\n        var divisorFactor22 = 0\n        var divisorFactor23\
    \ = 0\n        var divisorFactor24 = 0\n        var divisorFactor25 = 0\n    \
    \    var divisorFactor26 = 0\n        var divisorFactor27 = 0\n        var divisorFactor28\
    \ = 0\n        var divisorFactor29 = 0\n        var divisorFactor30 = 0\n    \
    \    var divisorFactor31 = 0\n        var divisorFactor32 = 0\n        var divisorFactor33\
    \ = 0\n        var divisorFactor34 = 0\n        var divisorFactor35 = 0\n    \
    \    var divisorFactor36 = 0\n        var divisorFactor37 = 0\n        var divisorFactor38\
    \ = 0\n        var divisorFactor39 = 0\n        var divisorFactor40 = 0\n    \
    \    var divisorFactor41 = 0\n        var divisorFactor42 = 0\n        var divisorFactor43\
    \ = 0\n        var divisorFactor44 = 0\n        var divisorFactor45 = 0\n    \
    \    var divisorFactor46 = 0\n        var divisorFactor47 = 0\n        var divisorFactor48\
    \ = 0\n        var divisorFactor49 = 0\n        var divisorFactor50 = 0\n    \
    \    var divisorFactor51 = 0\n        var divisorFactor52 = 0\n        var divisorFactor53\
    \ = 0\n        var divisorFactor54 = 0\n        var divisorFactor55 = 0\n    \
    \    var divisorFactor56 = 0\n        var divisorFactor57 = 0\n        var divisorFactor58\
    \ = 0\n        var divisorFactor59 = 0\n        var divisorFactor60 = 0\n    \
    \    var divisorFactor61 = 0\n        var divisorFactor62 = 0\n        var divisorFactor63\
    \ = 0\n        var divisorFactor64 = 0\n        var divisorFactor65 = 0\n    \
    \    var divisorFactor66 = 0\n        var divisorFactor67 = 0\n        var divisorFactor68\
    \ = 0\n        var divisorFactor69 = 0\n        var divisorFactor70 = 0\n    \
    \    var divisorFactor71 = 0\n        var divisorFactor72 = 0\n        var divisorFactor73\
    \ = 0\n        var divisorFactor74 = 0\n        var divisorFactor75 = 0\n    \
    \    var divisorFactor76 = 0\n        var divisorFactor77 = 0\n        var divisorFactor78\
    \ = 0\n        var divisorFactor79 = 0\n        var divisorFactor80 = 0\n    \
    \    var divisorFactor81 = 0\n        var divisorFactor82 = 0\n        var divisorFactor83\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn0ze9uyh.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpn0ze9uyh.scala:92:5 ---------------------\e[0m\e[0m\n\e[31m92 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(381)\n        divisors.add(383)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(383)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(38\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpodx36c82.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpodx36c82.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors.add(1)\n        while(divisors.size\
    \ < n) {\n            val nextDivisor = divisors.last\n            divisors.add(nextDivisor\
    \ + 1)\n            divisors.filter(_ % nextDivisor == 0).lastOption.getOrElse(nextDivisor)\n\
    \        }\n        divisors.last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfx4nlkv4.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val largest = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val divisor = i\n            while(divisor > 1){\n\
    \                if(n % divisor == 0){\n                    divisors += divisor\n\
    \                    largest += divisor\n                }\n                divisor\
    \ -= 1\n            }\n        }\n        largest.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzq5og0kn.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzq5og0kn.scala:7:22 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargest\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpzq5og0kn.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzq5og0kn.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                divisor -=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m              value -= is not a member of Int - did you mean divisor.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n) divisors += i\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzb604wm.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvzb604wm.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d % 2 == 0){\n                d /= 2\n            }\n       \
    \     divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyx3k12m6.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyx3k12m6.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyx3k12m6.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (d <- 1 to n by 2)\n            if (n % d\
    \ == 0)\n                divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6_n94fi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpn6_n94fi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (i <- 1 to n by 2)\n            if (n % i\
    \ == 0)\n                divisors += i\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpews4vq43.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpews4vq43.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val div = i /\
    \ 2\n            if(div % 2 == 0){\n                divisors += div\n        \
    \    }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj72rlfnd.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpj72rlfnd.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors.add(1)\n        divisors.add(2)\n  \
    \      divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n   \
    \     divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n \
    \       divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(111)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(273)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpofd_urag.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 1 to n){\n            val d =\
    \ i\n            while(d > 1){\n                val t = d % 2\n              \
    \  d /= 2\n                divisors += t\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply7j78dp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmply7j78dp.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmply7j78dp.scala:11:18\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        divisors += 2\n        divisors += 3\n  \
    \      divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 193\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 243\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 253\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 403\n        divisors += 407\n        divisors\
    \ += 411\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 419\n        divisors += 423\n        divisors += 429\n        divisors += 433\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwfl1ap1u.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        val largestDivisor = mutable.Long.MaxValue\n\
    \        for(i <- 1 to n by 2){\n            if(n%i == 0){\n                divisors\
    \ += i\n                if(divisors.size > largestDivisor){\n                \
    \    largestDivisor = divisors.last\n                }\n            }\n      \
    \  }\n        largestDivisor\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp51h8wftv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp51h8wftv.scala:7:29 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp51h8wftv.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp51h8wftv.scala:12:35\
    \ -----------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                   \
    \ largestDivisor = divisors.last\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val largestDivisor\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2)\n            divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp20s60va9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp20s60va9.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.HashSet[Long]()\n        for (i <- 2 to n) divisors += i\n       \
    \ divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpex5rs69e.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpex5rs69e.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n\
    \            val divisor = i / 2\n            divisors += divisor\n          \
    \  if(divisors.contains(divisor)){\n                maxDivisor += divisor\n  \
    \              maxDivisorIndex += i\n            }\n        }\n        maxDivisorIndex.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuy8xlx7p.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuy8xlx7p.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuy8xlx7p.scala:8:30 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                              Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuy8xlx7p.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        val maxDivisor = mutable.Long.MinValue\n\
    \        for(i <- 1 to n){\n            val divisor = i / maxDivisor\n       \
    \     if(divisor == 0){\n                divisors += maxDivisor\n            }\n\
    \            else if(divisor > maxDivisor){\n                maxDivisor = divisor\n\
    \            }\n        }\n        divisors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn0ffs_yl.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpn0ffs_yl.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpn0ffs_yl.scala:8:22 ---------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e[31m\
    \  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                      Found:\
    \    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpn0ffs_yl.scala:14:27 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                maxDivisor = divisor\n\e[31m\e[31m  \
    \ |\e[0m                ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            val d = i\n\
    \            while(d % 2 == 0){\n                d /= 2\n            }\n     \
    \       divisors += d\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp81ak9_3t.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp81ak9_3t.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81ak9_3t.scala:10:18\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        divisors += 2\n        divisors +=\
    \ 3\n        divisors += 5\n        divisors += 7\n        divisors += 11\n  \
    \      divisors += 13\n        divisors += 17\n        divisors += 19\n      \
    \  divisors += 23\n        divisors += 29\n        divisors += 31\n        divisors\
    \ += 37\n        divisors += 41\n        divisors += 43\n        divisors += 47\n\
    \        divisors += 53\n        divisors += 59\n        divisors += 61\n    \
    \    divisors += 67\n        divisors += 71\n        divisors += 73\n        divisors\
    \ += 79\n        divisors += 83\n        divisors += 89\n        divisors += 97\n\
    \        divisors += 101\n        divisors += 103\n        divisors += 107\n \
    \       divisors += 109\n        divisors += 113\n        divisors += 127\n  \
    \      divisors += 131\n        divisors += 137\n        divisors += 139\n   \
    \     divisors += 147\n        divisors += 151\n        divisors += 157\n    \
    \    divisors += 163\n        divisors += 167\n        divisors += 173\n     \
    \   divisors += 179\n        divisors += 181\n        divisors += 191\n      \
    \  divisors += 193\n        divisors += 197\n        divisors += 199\n       \
    \ divisors += 211\n        divisors += 223\n        divisors += 227\n        divisors\
    \ += 229\n        divisors += 233\n        divisors += 239\n        divisors +=\
    \ 241\n        divisors += 243\n        divisors += 247\n        divisors += 251\n\
    \        divisors += 253\n        divisors += 257\n        divisors += 263\n \
    \       divisors += 269\n        divisors += 271\n        divisors += 277\n  \
    \      divisors += 281\n        divisors += 283\n        divisors += 293\n   \
    \     divisors += 307\n        divisors += 311\n        divisors += 313\n    \
    \    divisors += 317\n        divisors += 319\n        divisors += 323\n     \
    \   divisors += 327\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 341\n        divisors += 343\n        divisors += 347\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 397\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 411\n        divisors += 413\n \
    \       divisors += 417\n        divisors += 419\n        divisors += 423\n  \
    \      divisors += 4\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7w674tf6.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010526
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            divisors\
    \ += i\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wla63sp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1wla63sp.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val remainder\
    \ = n % i\n            if(remainder == 0){\n                divisors += i\n  \
    \          }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp172n_9v7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp172n_9v7.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for (d <- 1 to n by 2) {\n           \
    \ if (n % d == 0) {\n                divisors += d\n            }\n        }\n\
    \        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzgl2eos3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzgl2eos3.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  val maxDivisorIndex = mutable.Set[Int]()\n        for(i <- 1 to n){\n     \
    \       val divisor = i\n            while(divisor != 1){\n                if(divisors.contains(divisor)){\n\
    \                    divisor = divisor * divisor\n                }else{\n   \
    \                 divisors.add(divisor)\n                    maxDivisor.add(divisor)\n\
    \                    maxDivisorIndex.add(divisors.size - 1)\n                }\n\
    \            }\n        }\n        val maxDivisorIndex = maxDivisorIndex.toArray\n\
    \        val maxDivisor = maxDivisor.toArray\n        val maxDivisorIndex = maxDivisorIndex.sortWith(_\
    \ < _)\n        val maxDivisorIndex = maxDivisorIndex.last\n        val maxDivisor\
    \ = maxDivisor(maxDivisorIndex)\n        return maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5suzv0kt.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = maxDivisorIndex.toArray\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5suzv0kt.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = maxDivisor.toArray\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxDivisor is already defined as \e[33mvalue\e[0m \e[35mmaxDivisor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5suzv0kt.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = maxDivisorIndex.sortWith(_\
    \ < _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp5suzv0kt.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = maxDivisorIndex.last\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5suzv0kt.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = maxDivisor(maxDivisorIndex)\n\
    \e[31m\e[31"
  stdout: ''
  timestamp: 1660010528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val d = i\n  \
    \          while(d > 1){\n                if(d % 2 == 0){\n                  \
    \  divisors += d\n                    d /= 2\n                }\n            \
    \    else{\n                    d /= 2\n                }\n            }\n   \
    \     }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqf5uo_p.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjqf5uo_p.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjqf5uo_p.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpjqf5uo_p.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    d /= \e[31m2\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ /= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n by 2){\n            val div = i / 2\n            if(divisors.contains(div)){\n\
    \                divisors += div\n            } else {\n                maxDivisor\
    \ += div\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpews8cxkk.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpews8cxkk.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpews8cxkk.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for(i <- 1 to n by 2){\n            if(n%i ==\
    \ 0){\n                divisors += i\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8b_gbse.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps8b_gbse.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        val maxDivisor = mutable.Set[Long]()\n      \
    \  for(i <- 1 to n by 2){\n            val d = i\n            while(d % 2 == 0){\n\
    \                divisors += d\n                d /= 2\n            }\n      \
    \      if(divisors.contains(d)){\n                maxDivisor += d\n          \
    \  }\n        }\n        divisors.toList.sortWith(_ < _).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ivvtsg3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3ivvtsg3.scala:7:25 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3ivvtsg3.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3ivvtsg3.scala:12:18\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2)\n        \
    \    if (n % d == 0)\n                divisors += d\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqmjuali8.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqmjuali8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    def largestDivisor(n : Long) : Long = {\n        val divisors\
    \ = mutable.Set[Long]()\n        for (i <- 1 to n by 2)\n            if (n % i\
    \ == 0)\n                divisors += i\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpews4vq43.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpews4vq43.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010527

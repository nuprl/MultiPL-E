language: scala
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ArrayBuffer.empty[String]\n\
    \        var sum = 0\n        for(i <- 0 until N) {\n            val digit = math.floor(math.abs(N\
    \ % math.pow(2, i)))\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse\n        binary.mkString(\"\")\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2gcw38zv.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp2gcw38zv.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmp2gcw38zv.scala:17:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            binary.append(digit)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the\
    \ overloaded alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e\
    [0m \e[35mBuffer\e[0m with types\n\e[31m   |\e[0m (elems: String*): (binary :\
    \ scala.collection.mutable.ArrayBuffer[String])\n\e[31m   |\e[0m (elem: String):\
    \ (binary : scala.collection.mutable.ArrayBuffer[String])\n\e[31m   |\e[0mmatch\
    \ arguments ((digit : Double))\n3 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        for(i <- 0 until N) {\n            val digit = math.floor(math.pow(10,\
    \ i) / math.pow(10, N - i - 1))\n            sum += digit\n            binary\
    \ += digit.toBinaryString\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4brcierh.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp4brcierh.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4brcierh.scala:17:19\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            binary += digit.toBinaryString\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of String - did you mean String.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp4brcierh.scala:17:28 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            binary += digit.toBinaryString\n\e[31m\e[31m \
    \  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                  value toBinaryString is not a member of Double\n4 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        while(N !=0){\n     \
    \       remainder = N % 2\n            sum = sum + remainder\n            N =\
    \ N / 2\n        }\n        binary.append(sum.toString)\n        binary.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi1p3sx9j.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            remainder = N % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpi1p3sx9j.scala:18:14 -----------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            N = N / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi1p3sx9j.scala:21:15 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        binary.reverse\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    scala.collection.mutable.ListBuffer[String]\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4vo3i14x.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ digit = binary.charAt(i)\n            sum += digit.toInt\n        }\n      \
    \  binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpky8_x4vw.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        var sum = 0\n        var remainder = 0\n        var i = 0\n        while\
    \ (i < N) {\n            val remainder = N % 2\n            sum += remainder\n\
    \            N /= 2\n            binary.append(remainder)\n            i += 1\n\
    \        }\n        val result = sum.toBinaryString\n        binary.reverse.foreach(x\
    \ => result += x)\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt9r4kl0l.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt9r4kl0l.scala:19:14\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmpt9r4kl0l.scala:20:19 -----------------------------\e[0m\e[0m\n\
    \e[31m20 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Long))\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpt9r4kl0l.scala:24:43 ------------------------\e[0m\e[0m\n\
    \e[31m24 |\e[0m        binary.reverse.foreach(\e[36mx\e[0m => result += x)\n\e\
    [31m\e[31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of String - did you mean result.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4vo3i14x.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer(N.toInt)\n        var\
    \ sum = 0\n        var carry = 0\n        while(digits.length > 0) {\n       \
    \     val digit = digits.head\n            digits = digits.tail\n            sum\
    \ = sum + digit + carry\n            carry = sum / 2\n            sum = sum %\
    \ 2\n            binary.append(digit)\n        }\n        if(carry != 0) {\n \
    \           binary.append(carry)\n        }\n        binary.toString()\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpmtv8d4op.scala:18:19 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            digits = digits.tail\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val digits\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val s = N.toBinaryString\n    \
    \    val l = s.length\n        val result = new StringBuilder\n        val binary\
    \ = new mutable.MutableList[String]()\n        var i = 0\n        while (i < l)\
    \ {\n            val c = s(i)\n            if (c == '1') {\n                binary.append(s(i))\n\
    \                i += 1\n            } else {\n                val x = binary.last\n\
    \                val y = s(i)\n                val z = s(i + 1)\n            \
    \    val z = z.toInt\n                val z = z.toBinaryString\n             \
    \   val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n                val z = z.reverse\n      \
    \          val z = z.reverse\n                val z = z.reverse\n            \
    \    val z = z.reverse\n                val z = z.reverse\n                val\
    \ z = z.reverse\n                val z = z.reverse\n                val z = z.reverse\n\
    \                val z = z.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2k2n97go.scala:107:0 ---------------------------\e\
    [0m\e[0m\n\e[31m107 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2k2n97go.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mbinary\e[0m = \e[33mnew\e[0m mutable.MutableList[\e[35mString\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E161]\
    \ Naming Error: /tmp/tmp2k2n97go.scala:26:20 ---------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                \e[33mval\e[0m \e[36mz\e[0m = z.toInt\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mz is already\
    \ defined as \e[33mvalue\e[0m \e[35mz\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k2n97go.scala:27:20 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                \e[33mval\e[0m \e[36mz\e[0m = z.toBinaryString\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mz is already defined as \e[33mvalue\e[0m \e[35mz\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k2n97go.scala:28:20\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m                \e[33mval\e\
    [0m \e[36mz\e[0m = z.reverse\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mz is already defined as \e[33mvalue\e[0m \e[35mz\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp2k2n97go.scala:29:20 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m                \e[33mval\e[0m \e[36mz\e[0m = z.reverse\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mz is already\
    \ defin"
  stdout: ''
  timestamp: 1660010336
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        while(N /= 10) {\n            val\
    \ remainder = N % 10\n            sum += remainder\n            binary.append(remainder)\n\
    \            N /= 10\n        }\n        binary.reverse.foldLeft(\"\")(_ + _ +\
    \ _)\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6e4xavhm.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6e4xavhm.scala:14:16\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N\
    \ /= \e[31m10\e[0m) {\n\e[31m\e[31m   |\e[0m              ^^^^\e[0m\n\e[31m  \
    \ |\e[0m              value /= is not a member of Long - did you mean N.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp6e4xavhm.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6e4xavhm.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            val digit\
    \ = binary.charAt(i)\n            sum += digit.toInt\n        }\n        binary.reverse.foldLeft(\"\
    \")(_ + _ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8k5rh9xh.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp8k5rh9xh.scala:18:36\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        binary.reverse.foldLeft(\e\
    [31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e[31m   |\e[0m                             \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 2\n2 errors found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = N\n        while(true){\n            val remainder2\
    \ = remainder % 2\n            val remainder3 = remainder2 / 2\n            val\
    \ remainder4 = remainder3 / 2\n            val remainder5 = remainder4 / 2\n \
    \           val remainder6 = remainder5 / 2\n            val remainder7 = remainder6\
    \ / 2\n            val remainder8 = remainder7 / 2\n            val remainder9\
    \ = remainder8 / 2\n            val remainder10 = remainder9 / 2\n           \
    \ val remainder11 = remainder10 / 2\n            val remainder12 = remainder11\
    \ / 2\n            val remainder13 = remainder12 / 2\n            val remainder14\
    \ = remainder13 / 2\n            val remainder15 = remainder14 / 2\n         \
    \   val remainder16 = remainder15 / 2\n            val remainder17 = remainder16\
    \ / 2\n            val remainder18 = remainder17 / 2\n            val remainder19\
    \ = remainder18 / 2\n            val remainder20 = remainder19 / 2\n         \
    \   val remainder21 = remainder20 / 2\n            val remainder22 = remainder21\
    \ / 2\n            val remainder23 = remainder22 / 2\n            val remainder24\
    \ = remainder23 / 2\n            val remainder25 = remainder24 / 2\n         \
    \   val remainder26 = remainder25 / 2\n            val remainder27 = remainder26\
    \ / 2\n            val remainder28 = remainder27 / 2\n            val remainder29\
    \ = remainder28 / 2\n            val remainder30 = remainder29 / 2\n         \
    \   val remainder31 = remainder30 / 2\n            val remainder32 = remainder31\
    \ / 2\n            val remainder33 = remainder32 / 2\n            val remainder34\
    \ = remainder33 / 2\n            val remainder35 = remainder34 / 2\n         \
    \   val remainder36 = remainder35 / 2\n            val remainder37 = remainder36\
    \ / 2\n            val remainder38 = remainder37 / 2\n            val remainder39\
    \ = remainder38 / 2\n            val remainder40 = remainder39 / 2\n         \
    \   val remainder41 = remainder40 / 2\n            val remainder42 = remainder41\
    \ / 2\n            val remainder43 = remainder42 / 2\n            val \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpgjc5o9za.scala:58:15 ---------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m            \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m  \
    \             ^\e[0m\n\e[31m   |\e[0m               pattern expected\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgjc5o9za.scala:69:0 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgjc5o9za.scala:68:1\
    \ ---------------------\e[0m\e[0m\n\e[31m68 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmpgjc5o9za.scala:60:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m60 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n3 errors found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sum = 0\n        for (i <- 0 until digits.length)\n            sum\
    \ += digits(i).toLong * 2\n        sum.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcw03yru6.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcw03yru6.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += digits(i).toLong * \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        var sum = 0\n        while(N >=0){\n            val remainder = N % 2\n\
    \            sum += remainder\n            N /= 2\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjf2vw1pi.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjf2vw1pi.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmpjf2vw1pi.scala:18:19 -----------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Long))\n3 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            val digit\
    \ = binary.charAt(i)\n            sum += digit.toInt\n        }\n        binary.reverse.foldLeft(\"\
    \")(_ + _ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8k5rh9xh.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp8k5rh9xh.scala:18:36\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        binary.reverse.foldLeft(\e\
    [31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e[31m   |\e[0m                             \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 2\n2 errors found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ remainder = N % 2\n        val remainderDigit = remainder / 2\n        val remainderDigits\
    \ = remainderDigit.toString.toInt\n        val remainderDigits = remainderDigits\
    \ + 1\n        val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val remainderDigits = remainderDigits + 1\n        val remainderDigits\
    \ = remainderDigits + 1\n        val remainderDigits = remainderDigits + 1\n \
    \       val \n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpp3wwmuo0.scala:54:11 ---------------------------\e\
    [0m\e[0m\n\e[31m54 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpp3wwmuo0.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpp3wwmuo0.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpp3wwmuo0.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpp3wwmuo0.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainde"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        for(i <- 0 until N) {\n            val digit = math.pow(10,\
    \ i).toInt\n            sum += digit\n            binary.append(digit)\n     \
    \   }\n        binary.reverse.foldLeft(\"\")(_ + _ + _)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3mrl5gf9.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E134]\
    \ Type Error: /tmp/tmp3mrl5gf9.scala:17:19 -----------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            binary.append(digit)\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((digit : Int))\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmp3mrl5gf9.scala:19:36 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        binary.reverse.foldLeft(\e[31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 Wrong number of parameters, expected: 2\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0opnv3qq.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0opnv3qq.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0opnv3qq.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0opnv3qq.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp0opnv3qq.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = N\n        while (remainder > 0)\
    \ {\n            val digit = remainder % 2\n            binary.append(digit)\n\
    \            sum += digit\n            remainder = remainder / 2\n        }\n\
    \        binary.reverse\n        sum.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8ukj79cb.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = mutable.StringBuilder()\n\
    \        val remainder = N % 2\n        val remainderAsString = remainder.toString\n\
    \        val remainderAsLong = remainder.toLong\n        val remainderAsInt =\
    \ remainder.toInt\n        val remainderAsDouble = remainder.toDouble\n      \
    \  val remainderAsFloat = remainder.toFloat\n        val remainderAsBigDecimal\
    \ = remainder.toBigDecimal\n        val remainderAsBigInteger = remainder.toBigInteger\n\
    \        val remainderAsInt = remainder.toInt\n        val remainderAsLong = remainder.toLong\n\
    \        val remainderAsDouble = remainder.toDouble\n        val remainderAsFloat\
    \ = remainder.toFloat\n        val remainderAsBigDecimal = remainder.toBigDecimal\n\
    \        val remainderAsBigInteger = remainder.toBigInteger\n        val remainderAsInt\
    \ = remainder.toInt\n        val remainderAsLong = remainder.toLong\n        val\
    \ remainderAsDouble = remainder.toDouble\n        val remainderAsFloat = remainder.toFloat\n\
    \        val remainderAsBigDecimal = remainder.toBigDecimal\n        val remainderAsBigInteger\
    \ = remainder.toBigInteger\n        val remainderAsInt = remainder.toInt\n   \
    \     val remainderAsLong = remainder.toLong\n        val remainderAsDouble =\
    \ remainder.toDouble\n        val remainderAsFloat = remainder.toFloat\n     \
    \   val remainderAsBigDecimal = remainder.toBigDecimal\n        val remainderAsBigInteger\
    \ = remainder.toBigInteger\n        val remainderAsInt = remainder.toInt\n   \
    \     val remainderAsLong = remainder.toLong\n        val remainderAsDouble =\
    \ remainder.toDouble\n        val remainderAsFloat = remainder.toFloat\n     \
    \   val remainderAsBigDecimal = remainder.toBigDecimal\n        val remainderAsBigInteger\
    \ = remainder.toBigInteger\n        val remainderAsInt = remainder.toInt\n   \
    \     val remainderAsLong = remainder.toLong\n        val remainderAsDouble =\
    \ remainder.toDouble\n        val remainderAsFloat = remainder.toFloat\n     \
    \   val remainderAsBigDecimal = remainder.toBigDecimal\n        val remainderAsBigInteger\
    \ = remainder.toBigInteger\n        val remainderAsInt = remainder.toInt\n   \
    \     val remainderAsLong = remainder.toLong\n        val remainderAs\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcsb6og6p.scala:54:4 ----------------------------\e\
    [0m\e[0m\n\e[31m54 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcsb6og6p.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mremainderAsInt\e[0m = remainder.toInt\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderAsInt is already defined as \e[33mvalue\e[0m \e[35mremainderAsInt\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcsb6og6p.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mremainderAsLong\e[0m = remainder.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mremainderAsLong is already defined as \e[33mvalue\e[0m \e[35mremainderAsLong\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcsb6og6p.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mremainderAsDouble\e[0m = remainder.toDouble\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mremainderAsDouble is already defined as \e[33mvalue\e[0m \e[35mremainderAsDouble\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcsb6og6p.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mremainderAsFloat\e[0m = remainder.toFloat\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mremainderAsFloat is already defined as \e[33mvalue\e[0m \e[35mremainderAsFloat\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Namin"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i).toInt\n\
    \        }\n        binary.reverse.foldLeft(\"\")(_ + _ + _)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2qr7ucwx.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i).toInt\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmp2qr7ucwx.scala:17:36 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        binary.reverse.foldLeft(\e[31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 Wrong number of parameters, expected: 2\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = N\n        var remainder3\
    \ = N\n        var remainder4 = N\n        var remainder5 = N\n        var remainder6\
    \ = N\n        var remainder7 = N\n        var remainder8 = N\n        var remainder9\
    \ = N\n        var remainder10 = N\n        var remainder11 = N\n        var remainder12\
    \ = N\n        var remainder13 = N\n        var remainder14 = N\n        var remainder15\
    \ = N\n        var remainder16 = N\n        var remainder17 = N\n        var remainder18\
    \ = N\n        var remainder19 = N\n        var remainder20 = N\n        var remainder21\
    \ = N\n        var remainder22 = N\n        var remainder23 = N\n        var remainder24\
    \ = N\n        var remainder25 = N\n        var remainder26 = N\n        var remainder27\
    \ = N\n        var remainder28 = N\n        var remainder29 = N\n        var remainder30\
    \ = N\n        var remainder31 = N\n        var remainder32 = N\n        var remainder33\
    \ = N\n        var remainder34 = N\n        var remainder35 = N\n        var remainder36\
    \ = N\n        var remainder37 = N\n        var remainder38 = N\n        var remainder39\
    \ = N\n        var remainder40 = N\n        var remainder41 = N\n        var remainder42\
    \ = N\n        var remainder43 = N\n        var remainder44 = N\n        var remainder45\
    \ = N\n        var remainder46 = N\n        var remainder47 = N\n        var remainder48\
    \ = N\n        var remainder49 = N\n        var remainder50 = N\n        var remainder51\
    \ = N\n        var remainder52 = N\n        var remainder53 = N\n        var remainder54\
    \ = N\n        var remainder55 = N\n        var remainder56 = N\n        var remainder57\
    \ = N\n        var remainder58 = N\n        var remainder59 = N\n        var remainder60\
    \ = N\n        var remainder61 = N\n        var remainder62 = N\n        var remainder63\
    \ = N\n        var remainder64 = N\n        var remainder65 = N\n        var remainder66\
    \ = N\n        var remainder67 = N\n        var remainder68 = N\n        var remainder69\
    \ = N\n        var remainder70 = N\n        var remainder71 = N\n        var remainder72\
    \ = N\n        var remainder73 = N\n        var remainder74 = \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5_dofios.scala:87:25 ---------------------------\e\
    [0m\e[0m\n\e[31m87 |\e[0m        \e[33mvar\e[0m \e[36mremainder74\e[0m = \n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dofios.scala:88:5 ---------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            remainder = N % 2\n            sum += remainder\n           \
    \ N /= 2\n            i += 1\n        }\n        binary = sum.toBinaryString\n\
    \        binary\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptiwsrx15.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            remainder = N % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmptiwsrx15.scala:19:14 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m            N /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value /= is not a member of Long - did you mean N.!=?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sums = digits.map(_.toInt)\n        val sumsSum = sums.sum\n    \
    \    val result = sums.map(_.toBinaryString).mkString\n        val resultSum =\
    \ result.sum\n        val resultSumAsString = resultSum.toBinaryString\n     \
    \   val resultSumAsStringAsLong = resultSumAsString.toLong\n        val resultSumAsStringAsLongAsString\
    \ = resultSumAsStringAsLong.toBinaryString\n        val resultSumAsStringAsLongAsStringAsLong\
    \ = resultSumAsStringAsLongAsString.toLong\n        val resultSumAsStringAsLongAsStringAsLongAsString\
    \ = resultSumAsStringAsLongAsStringAsLong.toBinaryString\n        val resultSumAsStringAsLongAsStringAsLongAsStringAsLong\
    \ = resultSumAsStringAsLongAsStringAsLongAsString.toLong\n        val resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsString\
    \ = resultSumAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n     \
    \   val resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n\
    \        val resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\
    \ = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n\
    \        val resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\
    \ = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n\
    \        val resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\
    \ = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n\
    \        val resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\
    \ = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5c8e9clu.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp5c8e9clu.scala:24:80 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mresultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\e\
    [0m = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e\
    [35mresultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp5c8e9clu.scala:25:94\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mresultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\e\
    [0m = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong.toBinaryString\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                      ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e\
    [0m \e[35m\n\e[31m   |\e[0m  resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\n\
    \e[31m   |\e[0m\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmp5c8e9clu.scala:26:108 --------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mresultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong\e\
    [0m = resultSumAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLongAsStringAsLong."
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val result = mutable.ListBuffer.empty[String]\n        val len = binary.length\n\
    \        val digits = binary.toCharArray\n        var sum = 0\n        var i =\
    \ 0\n        while (i < len) {\n            val d = digits(i)\n            sum\
    \ += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n        while (i < len) {\n            val d = digits(i)\n\
    \            sum += d\n            i += 1\n        }\n        val bin = sum.toBinaryString\n\
    \        val len = bin.length\n        val digits = bin.toCharArray\n        var\
    \ sum = 0\n        var i = 0\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4be6h3x_.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = bin.length\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mlen is already\
    \ defined as \e[33mvalue\e[0m \e[35mlen\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4be6h3x_.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = bin.toCharArray\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdigits\
    \ is already defined as \e[33mvalue\e[0m \e[35mdigits\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4be6h3x_.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mvar\e[0m\
    \ \e[36msum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0msum is already defined as \e[33mvariable\e[0m \e[35msum\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp4be6h3x_.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mvar\e[0m \e[36mi\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is already defined as \e[33mvariable\e\
    [0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp4be6h3x_.scala:33:12 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36mbin\e[0m = sum.toBinaryString\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbin\
    \ is already defined as \e[33mvalue\e[0m \e[35mbin\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4be6h3x_.scal"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length-1){\n            sum\
    \ += binary(i).toInt\n        }\n        sum.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbmgcpo_7.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i).toInt\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010354
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = binary.toInt\n        val binary = binary.reverse\n       \
    \ val result = binary.foldLeft(\"\")(_ + _)\n        result + sum.toString\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjymq2xjo.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1660010352
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.MutableList[String]()\n        while(N /= 10) {\n            val\
    \ remainder = N % 10\n            sum += remainder\n            binary.append(remainder)\n\
    \            N = (N - remainder) / 10\n        }\n        binary.reverse.foldLeft(\"\
    \")(_ + _ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdp4p6g8o.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdp4p6g8o.scala:14:16\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N\
    \ /= \e[31m10\e[0m) {\n\e[31m\e[31m   |\e[0m              ^^^^\e[0m\n\e[31m  \
    \ |\e[0m              value /= is not a member of Long - did you mean N.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpdp4p6g8o.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpdp4p6g8o.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = (N -\
    \ remainder) / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        for(i <- 0 until N) {\n\
    \            sum += i\n            remainder = sum % 2\n            result +=\
    \ (if (remainder == 0) \"0\" else \"1\")\n            sum = (sum - remainder)\
    \ / 2\n        }\n        result.reverse.mkString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpne2387ss.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpne2387ss.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = N\n        while (remainder > 0)\
    \ {\n            val remainderDigit = remainder % 10\n            sum += remainderDigit\n\
    \            binary.append(remainderDigit.toString)\n            remainder = remainder\
    \ / 10\n        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx39zf_gr.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += remainderDigit\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        while(N /= 10) {\n            sum += N % 10\n            N =\
    \ (N - N / 10).toInt\n        }\n        while(sum > 0) {\n            binary\
    \ += sum % 2\n            sum = (sum - sum / 2).toInt\n        }\n        return\
    \ binary\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8_9o5vgg.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp8_9o5vgg.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp8_9o5vgg.scala:16:14 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            N = (N - N / \e[31m10\e[0m).toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \    Reassignment to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val bin = binary.toList\n        for(i <- 0 until\
    \ bin.length)\n            sum += bin(i).toInt\n        binary.toString + sum.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1_ivxsm2.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i).toInt\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzq0w37p9.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i).toInt\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            sum = sum + i.toBinaryString\n            i = i + 1\n       \
    \ }\n        binary = sum.toBinaryString\n        remainder = N - sum.toBinaryString.length\n\
    \        while (binary.length < remainder) {\n            binary = \"0\" + binary\n\
    \        }\n        binary\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpney8yya3.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum = sum + i.toBinaryString\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                  Found:    String\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpney8yya3.scala:21:20\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m        remainder = N - sum.toBinaryString.length\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                    Found:    Long\n\e[31m   |\e[0m             \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sums = digits.map(_.toInt)\n        val sum = sums.sum\n        val\
    \ binary = digits.map(_.toBinaryString).mkString(\"\")\n        val result = binary.padRight(sum,\
    \ \"0\")\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg2ctx4f3.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            sum = sum + i.toBinaryString().charAt(0)\n            i = i +\
    \ 1\n        }\n        while (sum > 0) {\n            binary = binary + sum.toBinaryString().charAt(0)\n\
    \            sum = sum - i.toBinaryString().charAt(0)\n            i = i + 1\n\
    \        }\n        return binary\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmph9hn3xjr.scala:17:40 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum = sum + i.toBinaryString().charAt(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmissing argument for parameter i of \e[33mmethod\e[0m \e[35mapply\e\
    [0m in \e[33mclass\e[0m \e[35mStringOps\e[0m: (i: Int): Char\n\e[31m\e[31m-- Error:\
    \ /tmp/tmph9hn3xjr.scala:21:48 -----------------------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m            binary = binary + sum.toBinaryString().charAt(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                              ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmissing argument for parameter i of \e[33mmethod\e[0m \e[35mapply\e\
    [0m in \e[33mclass\e[0m \e[35mStringOps\e[0m: (i: Int): Char\n\e[31m\e[31m-- Error:\
    \ /tmp/tmph9hn3xjr.scala:22:40 -----------------------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m            sum = sum - i.toBinaryString().charAt(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmissing argument for parameter i of \e[33mmethod\e[0m \e[35mapply\e\
    [0m in \e[33mclass\e[0m \e[35mStringOps\e[0m: (i: Int): Char\n3 errors found\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toString).reverse\n\
    \        val sum = 0\n        for (i <- 0 until digits.length) {\n           \
    \ sum += digits(i).toLong\n        }\n        sum.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps7cinfz0.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.toString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps7cinfz0.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += digits(i).toLong\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n\
    \        val binary = digits.foldLeft(\"\")(_ + _)\n        binary.reverse\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwzx4t_js.scala:17)\n\tat Problem.main(tmpwzx4t_js.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        for(i <- 0 until N) {\n            val digit = N % 2\n     \
    \       sum += digit\n            binary += digit.toString\n            N /= 2\n\
    \        }\n        binary = binary.reverse\n        binary.reverse\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj7yx_iuz.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpj7yx_iuz.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj7yx_iuz.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i)\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmlrqwz31.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sumOfDigits = digits.foldLeft(0)(_ + _)\n        val binaryDigits\
    \ = digits.map(x => if (x == 1) \"1\" else \"0\").reverse.mkString\n        val\
    \ binarySum = binaryDigits + binaryDigits.reverse\n        val result = binarySum\
    \ + binaryDigits.reverse\n        result + binaryDigits.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjplm6o7g.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        while(N /= 10) {\n            sum += N % 10\n  \
    \          N /= 10\n        }\n        while(sum > 0) {\n            val remainder\
    \ = sum % 2\n            sum += remainder\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmplksrh90d.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmplksrh90d.scala:21:19 -----------------------------\e[0m\e[0m\n\
    \e[31m21 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Int))\n4 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            remainder = N % 2\n            sum += remainder\n           \
    \ N = N / 2\n            i += 1\n        }\n        binary = sum.toBinaryString\n\
    \        if (binary.length < 8) {\n            while (binary.length < 8) {\n \
    \               binary += \"0\"\n            }\n        }\n        return binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjiq9n6b1.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            remainder = N % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpjiq9n6b1.scala:19:14 -----------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            N = N / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val remainder = N % 2\n        val digits = N / 2\n        val currentBinary\
    \ = scala.collection.mutable.ListBuffer[String]()\n        while(digits > 0) {\n\
    \            val remainderDigit = digits % 10\n            currentBinary.append(remainderDigit)\n\
    \            digits /= 10\n        }\n        val currentBinaryString = currentBinary.mkString(\"\
    \")\n        binary.append(currentBinaryString)\n        binary.append(remainder)\n\
    \        binary.mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpq_t0u782.scala:18:26 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            currentBinary.append(remainderDigit)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e\
    [33mtrait\e[0m \e[35mBuffer\e[0m with types\n\e[31m   |\e[0m (elems: String*):\
    \ (currentBinary : scala.collection.mutable.ListBuffer[String])\n\e[31m   |\e\
    [0m (elem: String): (currentBinary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainderDigit : Long))\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpq_t0u782.scala:19:19 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            digits /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member\
    \ of Long - did you mean digits.!=?\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpq_t0u782.scala:23:15\
    \ -----------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        binary.append(remainder)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e\
    [0m with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Long))\n3 errors found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ temp = binary.charAt(i).toInt\n            sum += temp * Math.pow(2,i)\n   \
    \     }\n        binary.reverse\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_uqx1wrp.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += temp * Math.pow(\e[31m2\e[0m,i)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length-1){\n            val\
    \ digit = binary.charAt(i).toInt\n            sum += digit\n        }\n      \
    \  binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyx3gytxd.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.MutableList[String]()\n        while(N >=0){\n            val\
    \ remainder = N % 2\n            sum += remainder\n            N /= 2\n      \
    \      binary.append(remainder)\n        }\n        binary.reverse.mkString(\"\
    \")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjmad83fs.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjmad83fs.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpjmad83fs.scala:17:14 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m            N /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean N.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.substring(binary.length - 1)\n        val binary\
    \ = binary.substring(0, binary.length - 1)\n        val binary = binary.toCharArray\n\
    \        val binary = binary.map(x => if (x == '1') '0' else '1')\n        val\
    \ binary = binary.toList\n        val binary = binary.foldLeft(0)((acc, x) =>\
    \ acc + x)\n        binary.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo5qahcy1.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(binary.length\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo5qahcy1.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(\e[31m0\e\
    [0m, binary.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo5qahcy1.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.toCharArray\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo5qahcy1.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.map(\e[36mx\e[0m => \e[33mif\e[0m (x == \e[31m'1'\e\
    [0m) \e[31m'0'\e[0m \e[33melse\e[0m \e[31m'1'\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpo5qahcy1.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = "
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ sum = 0\n        while(N /= 10) {\n            digits += N % 10\n          \
    \  sum += N % 10\n            N /= 10\n        }\n        while(sum > 0) {\n \
    \           binary += digits.takeWhile(_ < 2).mkString(\"\") + digits.dropWhile(_\
    \ < 2).mkString(\"\")\n            sum -= digits.takeWhile(_ < 2).sum\n      \
    \      digits -= digits.takeWhile(_ < 2).dropWhile(_ < 2).sum\n        }\n   \
    \     binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0gxuwld5.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp0gxuwld5.scala:16:22 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m            digits += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m       \
    \               ^^^^^^\e[0m\n\e[31m   |\e[0m                      Found:    Long\n\
    \e[31m   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp0gxuwld5.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp0gxuwld5.scala:18:14 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            N /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value /= is not a member of Long - did you mean N.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0gxuwld5.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            sum -= digits.takeWhile(_ < \e[31m2\e[0m).sum\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp0gxuwld5.scala:25:15 --------------------\e[0m\e[0m\n\
    \e[31m25 |\e[0m        binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    scala.collection.mutable.ListBuffer[String]\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n6 errors found\n"
  stdout: ''
  timestamp: 1660010379
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n   \
    \     val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = bin\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj69muc3v.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpj69muc3v.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj69muc3v.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpj69muc3v.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj69muc3v.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is "
  stdout: ''
  timestamp: 1660010378
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        while(N /= 10) {\n            sum += N % 10\n  \
    \          N /= 10\n        }\n        while(sum > 0) {\n            val remainder\
    \ = sum % 2\n            sum += remainder\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmplksrh90d.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmplksrh90d.scala:21:19 -----------------------------\e[0m\e[0m\n\
    \e[31m21 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Int))\n4 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder1 = 0\n        var remainder2\
    \ = 0\n        var remainder3 = 0\n        var remainder4 = 0\n        var remainder5\
    \ = 0\n        var remainder6 = 0\n        var remainder7 = 0\n        var remainder8\
    \ = 0\n        var remainder9 = 0\n        var remainder10 = 0\n        var remainder11\
    \ = 0\n        var remainder12 = 0\n        var remainder13 = 0\n        var remainder14\
    \ = 0\n        var remainder15 = 0\n        var remainder16 = 0\n        var remainder17\
    \ = 0\n        var remainder18 = 0\n        var remainder19 = 0\n        var remainder20\
    \ = 0\n        var remainder21 = 0\n        var remainder22 = 0\n        var remainder23\
    \ = 0\n        var remainder24 = 0\n        var remainder25 = 0\n        var remainder26\
    \ = 0\n        var remainder27 = 0\n        var remainder28 = 0\n        var remainder29\
    \ = 0\n        var remainder30 = 0\n        var remainder31 = 0\n        var remainder32\
    \ = 0\n        var remainder33 = 0\n        var remainder34 = 0\n        var remainder35\
    \ = 0\n        var remainder36 = 0\n        var remainder37 = 0\n        var remainder38\
    \ = 0\n        var remainder39 = 0\n        var remainder40 = 0\n        var remainder41\
    \ = 0\n        var remainder42 = 0\n        var remainder43 = 0\n        var remainder44\
    \ = 0\n        var remainder45 = 0\n        var remainder46 = 0\n        var remainder47\
    \ = 0\n        var remainder48 = 0\n        var remainder49 = 0\n        var remainder50\
    \ = 0\n        var remainder51 = 0\n        var remainder52 = 0\n        var remainder53\
    \ = 0\n        var remainder54 = 0\n        var remainder55 = 0\n        var remainder56\
    \ = 0\n        var remainder57 = 0\n        var remainder58 = 0\n        var remainder59\
    \ = 0\n        var remainder60 = 0\n        var remainder61 = 0\n        var remainder62\
    \ = 0\n        var remainder63 = 0\n        var remainder64 = 0\n        var remainder65\
    \ = 0\n        var remainder66 = 0\n        var remainder67 = 0\n        var remainder68\
    \ = 0\n        var remainder69 = 0\n        var remainder70 = 0\n        var remainder71\
    \ = 0\n        var remainder72 = 0\n        var remainder73 = 0\n        var remainder74\
    \ = 0\n        var remainder75 = 0\n        var remainder76 = 0\n        var remainder77\
    \ = 0\n        var remainder78 = 0\n        var remainder79 = 0\n        var remainder80\
    \ = 0\n        var remainder81 = 0\n        var remainder82 = 0\n        var remainder83\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc48kclyq.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010380
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val binary = binary.reverse\n        for(i <- 0\
    \ until binary.length) {\n            val temp = binary(i)\n            sum +=\
    \ temp.charAt(0).toInt * Math.pow(2,binary.length - i - 1)\n        }\n      \
    \  binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp34buu5m_.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp34buu5m_.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum += temp.charAt(\e\
    [31m0\e[0m).toInt * Math.pow(\e[31m2\e[0m,binary.length - i - \e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp34buu5m_.scala:17:24 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            sum += temp.charAt(\e[31m0\e[0m).toInt * Math.pow(\e[31m2\e\
    [0m,binary.length - i - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   value charAt is not a member\
    \ of Char\n3 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = scala.collection.mutable.ListBuffer[String]()\n        while(N >=0){\n   \
    \         val digit = N % 2\n            sum += digit\n            binary.append(digit.toString)\n\
    \            N = (N - digit) / 2\n        }\n        binary.reverse.mkString(\"\
    \")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk18_phud.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpk18_phud.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = (N -\
    \ digit) / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sumOfDigits = digits.foldLeft(0)((sum, digit) => sum + digit.toInt)\n\
    \        val binaryDigits = digits.map(digit => if (digit == 1) \"1\" else \"\
    0\").reverse\n        val binarySum = binaryDigits.foldLeft(0)((sum, digit) =>\
    \ sum + digit.toInt)\n        val binarySumString = binarySum.toString.reverse\n\
    \        val binarySumStringWithZeros = binarySumStringWithZeros.padTo(binarySumString.length,\
    \ \"0\")\n        val binarySumStringWithOnes = binarySumStringWithZeros.padTo(binarySumString.length,\
    \ \"1\")\n        val binarySumStringWithOnesAndZeros = binarySumStringWithOnes\
    \ + binarySumStringWithZeros\n        val binarySumStringWithOnesAndOnes = binarySumStringWithOnesAndZeros\
    \ + binarySumStringWithOnes\n        val binarySumStringWithOnesAndZerosAndOnes\
    \ = binarySumStringWithOnesAndOnes + binarySumStringWithOnesAndZeros\n       \
    \ val binarySumStringWithOnesAndZerosAndOnesAndZeros = binarySumStringWithOnesAndZerosAndOnes\
    \ + binarySumStringWithOnesAndOnesAndZeros\n        val binarySumStringWithOnesAndZerosAndOnesAndOnesAndZeros\
    \ = binarySumStringWithOnesAndZerosAndOnesAndOnes + binarySumStringWithOnesAndZerosAndOnesAndOnes\n\
    \        val binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnes = binarySumStringWithOnesAndZerosAndOnesAndOnesAndZeros\
    \ + binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnes\n        val binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndZeros\
    \ = binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndZeros + binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnes\n\
    \        val binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndZeros + binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\n\
    \        val binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ + binarySumStringWithOnesAndZerosAndOnesAndOne\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi4romfog.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpi4romfog.scala:17:39 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mbinarySumStringWithZeros\e\
    [0m = binarySumStringWithZeros.padTo(binarySumString.length, \e[31m\"0\"\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e\
    [0m                     Recursive \e[33mvalue\e[0m \e[35mbinarySumStringWithZeros\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi4romfog.scala:23:68\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mbinarySumStringWithOnesAndZerosAndOnesAndOnesAndZeros\e[0m = binarySumStringWithOnesAndZerosAndOnesAndOnes\
    \ + binarySumStringWithOnesAndZerosAndOnesAndOnes\n\e[31m\e[31m   |\e[0m     \
    \                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: binarySumStringWithOnesAndZerosAndOnesAndOnes\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpi4romfog.scala:25:75\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndZeros\e[0m = binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndZeros\
    \ + binarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndOnes\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \        ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mbinarySumStringWithOnesAndZerosAndOnesAndOnesAndOnesAndZeros\e\
    [0m ne"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]\n        while(N >0) {\n            val remainder\
    \ = N % 2\n            N /= 2\n            sum += remainder\n            binary\
    \ += remainder.toString\n        }\n        binary.reverse.mkString(\"\")\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9f2ssfcw.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9f2ssfcw.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp9f2ssfcw.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ remainder = N % 2\n        val remainderDigit = remainder % 10\n        val\
    \ remainderDigits = remainderDigit :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = \n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpplbiavmr.scala:51:29 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = \n\
    \e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m    \
    \                         expression expected but \e[31m'}'\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            sum = sum + N % 10\n            N = N / 10\n            binary\
    \ = binary + Integer.toBinaryString(N % 2)\n            N = N / 2\n          \
    \  i = i + 1\n        }\n        remainder = sum % 10\n        binary = binary\
    \ + Integer.toBinaryString(remainder)\n        binary\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp_y6ec1g.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum = sum + N % \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Found:    Long\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpp_y6ec1g.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = N /\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpp_y6ec1g.scala:19:53 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            binary = binary + Integer.toBinaryString(N % \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                                           \
    \          ^^^^^\e[0m\n\e[31m   |\e[0m                                       \
    \              Found:    Long\n\e[31m   |\e[0m                               \
    \                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpp_y6ec1g.scala:20:14 -----------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            N = N / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val N\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val bin = binary.toCharArray\n        for(i <- 0\
    \ until bin.length){\n            sum += bin(i).toInt\n        }\n        val\
    \ result = sum.toBinaryString\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4mxo0sk7.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n\
    \        val sum = 0\n        for(i <- 0 until digits.size) {\n            val\
    \ d = digits(i)\n            val s = d.toString.reverse.grouped(2).map(_.toInt)\n\
    \            sum += s.sum\n        }\n        sum.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpss2n6rsf.scala:15:20 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36md\e[0m = digits(i)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \            \e[33mvalue\e[0m \e[35mdigits\e[0m does not take parameters\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpss2n6rsf.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.sum\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n\
    \        val sums = digits.foldLeft(0)((sum, digit) => sum + digit)\n        val\
    \ result = sums.toBinaryString\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuhq11nue.scala:20)\n\tat Problem.main(tmpuhq11nue.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length-1){\n            val\
    \ digit = binary.charAt(i)\n            sum += digit.toInt\n        }\n      \
    \  val result = sum.toBinaryString\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5rwjnl28.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ sum = 0L\n        while(N /= 10) {\n            digits += N % 10\n         \
    \   sum += N % 10\n            N = (N / 10).toLong\n        }\n        while(sum\
    \ > 0) {\n            binary.append(digits(sum % 10).asInstanceOf[Char])\n   \
    \         sum += digits(sum % 10).asInstanceOf[Long]\n        }\n        binary.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwhh1mbed.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpwhh1mbed.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Long - did you mean\
    \ sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpwhh1mbed.scala:18:14 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            N = (N / \e[31m10\e[0m).toLong\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \ Reassignment to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwhh1mbed.scala:21:33\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m            binary.append(digits(sum\
    \ % \e[31m10\e[0m).asInstanceOf[\e[35mChar\e[0m])\n\e[31m\e[31m   |\e[0m     \
    \                            ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \               Found:    Long\n\e[31m   |\e[0m                              \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwhh1mbed.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            sum += digits(sum\
    \ % \e[31m10\e[0m).asInstanceOf[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwhh1mbed.scala:22:26\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            sum += digits(sum\
    \ % \e[31m10\e[0m).asInstanceOf[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m                          Found:\
    \    Long\n\e[31m   |\e[0m                          Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer exp"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphr19h916.scala:98:5\
    \ ---------------------\e[0m\e[0m\n\e[31m98 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val bin = binary.toList\n        val sum = 0\n        for(i <- 0 until\
    \ bin.length){\n            sum += bin(i).toInt\n        }\n        val result\
    \ = sum.toBinaryString\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcgor5rco.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            val digit = N % 10\n            sum += digit\n            binary\
    \ = digit + binary\n            N /= 10\n            i += 1\n        }\n     \
    \   while (sum > 0) {\n            val digit = sum % 10\n            sum += digit\n\
    \            binary = digit + binary\n            sum /= 10\n        }\n     \
    \   remainder = N\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.reverse\n        binary = binary.reverse\n\
    \        binary = binary.reverse\n        binary = binary.reverse\n        binary\
    \ = binary.reverse\n        binary = binary.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp24aosd59.scala:91:4 ----------------------------\e\
    [0m\e[0m\n\e[31m91 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp24aosd59.scala:18:16 ------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\
    \e[31m   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp24aosd59.scala:20:14 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            N /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean N.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp24aosd59.scala:29:20\
    \ --------------------\e[0m\e[0m\n\e[31m29 |\e[0m        remainder = N\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Found:\
    \    (N : Long)\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp24aosd59.scala:90:15 --------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m        binary = binary.\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Unit\n\e[31m   |\e\
    [0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        var index = 0\n     \
    \   while(index<N) {\n            sum = sum + N % 10\n            remainder =\
    \ N / 10\n            N = (N - remainder) / 10\n            index += 1\n     \
    \   }\n        while(sum>0) {\n            val temp = sum % 2\n            sum\
    \ = sum / 2\n            if(temp == 1) {\n                result += \"1\"\n  \
    \          } else {\n                result += \"0\"\n            }\n        }\n\
    \        return result.toString()\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61zq0dnd.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp61zq0dnd.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum = sum + N % \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Found:    Long\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp61zq0dnd.scala:18:24\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            remainder = N / \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                        Found:    Long\n\e[31m   |\e[0m            \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp61zq0dnd.scala:19:14 -----------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            N = (N - remainder) / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer(N.toInt)\n        val\
    \ sum = 0\n        while(digits.length > 0) {\n            val digit = digits.head\n\
    \            digits -= digit\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse\n        binary.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp26_tha0.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = 0\n        while (i < N)\
    \ {\n            sum = sum + N % 10\n            N = N / 10\n            i +=\
    \ 1\n        }\n        while (sum > 0) {\n            remainder = sum % 2\n \
    \           binary = remainder + binary\n            sum = sum / 2\n        }\n\
    \        binary\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxll81jmv.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum = sum + N % \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Found:    Long\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpxll81jmv.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = N /\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = new mutable.ArrayBuffer[String]()\n\
    \        var sum = 0\n        var i = N\n        while(i > 0) {\n            val\
    \ remainder = i % 2\n            binary.append(remainder)\n            sum +=\
    \ remainder\n            i /= 2\n        }\n        binary.reverse.mkString(\"\
    \")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck8pazdi.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpck8pazdi.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += remainder\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean Int.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer(N.toInt)\n        val\
    \ sum = 0\n        while(digits.hasNext) {\n            val d = digits.next\n\
    \            sum += d * 2\n        }\n        binary.append(sum.toBinaryString).reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfcaq17yj.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(digits.hasNext) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue hasNext is\
    \ not a member of scala.collection.mutable.ArrayBuffer[Int]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpfcaq17yj.scala:16:27 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36md\e[0m = digits.next\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ next is not a member of scala.collection.mutable.ArrayBuffer[Int] - did you\
    \ mean digits.head?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfcaq17yj.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum += d * \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \        value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfcaq17yj.scala:19:42 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        binary.append(sum.toBinaryString).reverse\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m        Found:    StringBuilder\n\e[31m   |\e[0m        Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = mutable.StringBuilder()\n\
    \        val digits = N.toString.reverse.grouped(2).map(_.mkString).toList\n \
    \       val sum = 0\n        for (i <- 0 until digits.size) {\n            sum\
    \ += digits(i).toLong\n        }\n        val binary = sum.toBinaryString\n  \
    \      result ++= binary.reverse\n        result.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpue1bin_i.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.StringBuilder()\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpue1bin_i.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            sum += digits(i).toLong\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = new mutable.ListBuffer[String]\n\
    \        val remainder = N % 2\n        val quotient = N / 2\n        val remainderString\
    \ = remainder.toString\n        val quotientString = quotient.toString\n     \
    \   val quotientLength = quotientString.length\n        val remainderLength =\
    \ remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotientStringLength = quotientString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotientStringLength = quotientString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotientStringLength = quotientString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotientStringLength = quotientString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotientStringLength = quotientString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotientStringLength = quotientString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val quotientStringLength = quotientString.length\n\
    \        val remainderStringLength = remainderString.length\n        val quotientStringLength\
    \ = quotientString.length\n        val remainderStringLength = remainderString.length\n\
    \        val quotient\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwn9li_cw.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwn9li_cw.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mquotientStringLength\e[0m = quotientString.length\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mquotientStringLength is already defined as \e[33mvalue\e[0m \e[35mquotientStringLength\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwn9li_cw.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mremainderStringLength\e[0m = remainderString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mremainderStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwn9li_cw.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mquotientStringLength\e[0m\
    \ = quotientString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mquotientStringLength is already defined as \e[33mvalue\e[0m\
    \ \e[35mquotientStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpwn9li_cw.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mremainderStringLength\e\
    [0m = remainderString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mremainderStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1660010400
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer(N.toInt)\n        val\
    \ sum = 0\n        while (digits.nonEmpty) {\n            val digit = digits.head\n\
    \            digits.remove(digit)\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7h1uu22w.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7h1uu22w.scala:21:15\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m        binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    StringBuilder\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = N\n        while (remainder > 0) {\n       \
    \     val remainderDigit = remainder % 10\n            binary = remainderDigit\
    \ + binary\n            sum += remainderDigit\n            remainder = remainder\
    \ / 10\n        }\n        binary = binary.reverse\n        sum.toString\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv8u6wti5.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += remainderDigit\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010401
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.StringBuilder\n\
    \        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n        val\
    \ sumOfDigits = digits.foldLeft(0)(_ + _)\n        val digitsInBinary = digits.map(x\
    \ => Integer.toBinaryString(x))\n        val digitsInBinaryString = digitsInBinary.mkString(\"\
    \")\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n  \
    \      val digitsInBinaryStringLength = digitsInBinaryString.length\n        val\
    \ digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digitsInBinaryString.length\n      \
    \  val digitsInBinaryStringLength = digitsInBinaryString.length\n        val digitsInBinaryStringLength\
    \ = digitsInBinaryString.length\n        val digitsInBinaryStringLength = digitsInBinaryString.length\n\
    \        val digitsInBinaryStringLength = digit\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdq5tbqu4.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mdigitsInBinaryStringLength\e\
    [0m = digitsInBinaryString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigitsInBinaryStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mdigitsInBinaryStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdq5tbqu4.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mdigitsInBinaryStringLength\e\
    [0m = digitsInBinaryString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigitsInBinaryStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mdigitsInBinaryStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdq5tbqu4.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mdigitsInBinaryStringLength\e\
    [0m = digitsInBinaryString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigitsInBinaryStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mdigitsInBinaryStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdq5tbqu4.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mdigitsInBinaryStringLength\e\
    [0m = digitsInBinaryString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigitsInBinaryStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mdigitsInBinaryStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the"
  stdout: ''
  timestamp: 1660010405
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = new mutable.ArrayBuffer[String]()\n\
    \        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sum = 0\n        for (i <- 0 until digits.length) {\n           \
    \ val digit = digits(i)\n            val bin = digit.charAt(0).toString + digit.charAt(1).toString\n\
    \            sum += Integer.parseInt(bin, 2)\n            binary.append(bin)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplphlxq9e.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplphlxq9e.scala:13:67\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mdigits\e[0m = N.toString.reverse.grouped(\e[31m2\e[0m).map(_.mkString).reverse\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue reverse is not a member of Iterator[String] - did you\
    \ mean Iterator[String].reversed?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplphlxq9e.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += Integer.parseInt(bin,\
    \ \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean sum.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010405
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val bin = binary.toList\n        for(i <- 0 until\
    \ bin.length){\n            sum += bin(i).toInt\n        }\n        binary.toString.reverse.foldLeft(\"\
    \"){(acc, x) =>\n            acc + (if (x == '1') \"1\" else \"0\") + x\n    \
    \    }\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppi2xh4uy.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length - 1)\n        val binary\
    \ = binary.reverse\n        val binary = binary.drop(binary.length - 1)\n    \
    \    val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwc9p0h2d.scala:61:4 ----------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwc9p0h2d.scala:13:12 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwc9p0h2d.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwc9p0h2d.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.drop(binary.length - \e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwc9p0h2d.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwc9p0h2d.scala:17:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1660010409
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        while(N >0) {\n            val remainder = N % 2\n\
    \            sum += remainder\n            N /= 2\n        }\n        val bin\
    \ = scala.collection.mutable.StringBuilder()\n        while(sum > 0) {\n     \
    \       val remainder = sum % 10\n            bin.append(remainder)\n        \
    \    sum /= 10\n        }\n        binary.append(bin)\n        binary.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpunehhx71.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpunehhx71.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010408
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = 0\n        for(i <- 0 until N) {\n\
    \            sum += i\n            remainder = sum % 2\n            binary.append(remainder)\n\
    \            sum = sum / 2\n        }\n        binary.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzezgjc3h.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010406
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.MutableList[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        var i = 0\n        while(i\
    \ < N) {\n            sum = sum + N % 10\n            remainder = N / 10\n   \
    \         N = (N - remainder) / 10\n            i = i + 1\n        }\n       \
    \ val binary = sum.toBinaryString\n        val reversed = binary.reverse\n   \
    \     val reversedString = reversed.toUpperCase\n        val reversedStringArray\
    \ = reversedString.toCharArray\n        var j = 0\n        while(j < reversedStringArray.length)\
    \ {\n            val currentChar = reversedStringArray(j)\n            if(currentChar\
    \ == '1') {\n                result.add(\"1\")\n            } else {\n       \
    \         result.add(\"0\")\n            }\n            j = j + 1\n        }\n\
    \        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp721ucc0v.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp721ucc0v.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum = sum + N % \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Found:    Long\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp721ucc0v.scala:18:24\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            remainder = N / \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                        Found:    Long\n\e[31m   |\e[0m            \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp721ucc0v.scala:19:14 -----------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            N = (N - remainder) / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010409
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n\
    \        val sum = 0\n        digits.foreach(sum ++= _)\n        val binary =\
    \ digits(0).toString + digits(1).toString + digits(2).toString + digits(3).toString\
    \ + digits(4).toString + digits(5).toString + digits(6).toString + digits(7).toString\
    \ + digits(8).toString + digits(9).toString + digits(10).toString + digits(11).toString\
    \ + digits(12).toString + digits(13).toString + digits(14).toString + digits(15).toString\
    \ + digits(16).toString + digits(17).toString + digits(18).toString + digits(19).toString\
    \ + digits(20).toString + digits(21).toString + digits(22).toString + digits(23).toString\
    \ + digits(24).toString + digits(25).toString + digits(26).toString + digits(27).toString\
    \ + digits(28).toString + digits(29).toString + digits(30).toString + digits(31).toString\
    \ + digits(32).toString + digits(33).toString + digits(34).toString + digits(35).toString\
    \ + digits(36).toString + digits(37).toString + digits(38).toString + digits(39).toString\
    \ + digits(40).toString + digits(41).toString + digits(42).toString + digits(43).toString\
    \ + digits(44).toString + digits(45).toString + digits(46).toString + digits(47).toString\
    \ + digits(48).toString + digits(49).toString + digits(50).toString + digits(51).toString\
    \ + digits(52).toString + digits(53).toString + digits(54).toString + digits(55).toString\
    \ + digits(56).toString + digits(57).toString + digits(58).toString + digits(59).toString\
    \ + digits(60).toString + digits(61).toString + digits(62).toString + digits(63).toString\
    \ + digits(64).toString + digits(65).toString + digits(66).toString + digits(67).toString\
    \ + digits(68).toString + digits(69).toString + digits(70).toString + digits(71).toString\
    \ + digits(72).toString + digits(73).toString + digits(74).toString + digits(75).toString\
    \ + digits(76).toString + digits(77).toString + digits(78).toString + \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdgnmdtxw.scala:15:1748 -------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = digits(\e\
    [31m0\e[0m).toString + digits(\e[31m1\e[0m).toString + digits(\e[31m2\e[0m).toString\
    \ + digits(\e[31m3\e[0m).toString + digits(\e[31m4\e[0m).toString + digits(\e\
    [31m5\e[0m).toString + digits(\e[31m6\e[0m).toString + digits(\e[31m7\e[0m).toString\
    \ + digits(\e[31m8\e[0m).toString + digits(\e[31m9\e[0m).toString + digits(\e\
    [31m10\e[0m).toString + digits(\e[31m11\e[0m).toString + digits(\e[31m12\e[0m).toString\
    \ + digits(\e[31m13\e[0m).toString + digits(\e[31m14\e[0m).toString + digits(\e\
    [31m15\e[0m).toString + digits(\e[31m16\e[0m).toString + digits(\e[31m17\e[0m).toString\
    \ + digits(\e[31m18\e[0m).toString + digits(\e[31m19\e[0m).toString + digits(\e\
    [31m20\e[0m).toString + digits(\e[31m21\e[0m).toString + digits(\e[31m22\e[0m).toString\
    \ + digits(\e[31m23\e[0m).toString + digits(\e[31m24\e[0m).toString + digits(\e\
    [31m25\e[0m).toString + digits(\e[31m26\e[0m).toString + digits(\e[31m27\e[0m).toString\
    \ + digits(\e[31m28\e[0m).toString + digits(\e[31m29\e[0m).toString + digits(\e\
    [31m30\e[0m).toString + digits(\e[31m31\e[0m).toString + digits(\e[31m32\e[0m).toString\
    \ + digits(\e[31m33\e[0m).toString + digits(\e[31m34\e[0m).toString + digits(\e\
    [31m35\e[0m).toString + digits(\e[31m36\e[0m).toString + digits(\e[31m37\e[0m).toString\
    \ + digits(\e[31m38\e[0m).toString + digits(\e[31m39\e[0m).toString + digits(\e\
    [31m40\e[0m).toString + digits(\e[31m41\e[0m).toString + digits(\e[31m42\e[0m).toString\
    \ + digits(\e[31m43\e[0m).toString + digits(\e[31m44\e[0m).toString + digits(\e\
    [31m45\e[0m).toString + digits(\e[31m46\e[0m).toString + digits(\e[31m47\e[0m).toString\
    \ + digits(\e[31m48\e[0m).toString + digits(\e[31m49\e[0m).toString + digits(\e\
    [31m50\e[0m).toString + digits(\e[31m51\e[0m).toString + digits(\e[31m52\e[0m).toString\
    \ + digits(\e[31m53\e[0m).toString + digits(\e[31m54\e[0m).toString + digits(\e\
    [31m55\e[0m).toString + digits(\e[31m56\e[0m).toString + digits(\e[31m57\e[0m).toString\
    \ + digits(\e[31m58\e[0m).toString + digits(\e[31m59\e[0m).toString + digits(\e\
    [31m60\e[0m).toString + digits(\e[31m61\e["
  stdout: ''
  timestamp: 1660010409
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var i = 0\n        while (i < N) {\n           \
    \ val digit = math.pow(2, i)\n            sum += digit\n            binary.append(digit.toString)\n\
    \            i += 1\n        }\n        val result = sum.toString\n        binary.reverse.mkString(\"\
    \") + result\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplnt4tu6t.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length - 1) {\n           \
    \ val digit = binary.charAt(i)\n            sum += digit.toInt\n        }\n  \
    \      binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwlrq9fqo.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val s = mutable.StringBuilder()\n\
    \        var sum = 0\n        while(N /= 10) {\n            sum += N % 10\n  \
    \          N /= 10\n        }\n        s += sum.toString\n        while(s.size\
    \ > 1) {\n            s += \"0\"\n        }\n        s\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp645znfw9.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36ms\e[0m = mutable.StringBuilder()\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp645znfw9.scala:14:16 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e[31m   |\e[0m     \
    \         ^^^^\e[0m\n\e[31m   |\e[0m              value /= is not a member of\
    \ Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp645znfw9.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += N % \e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \         value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp645znfw9.scala:16:14 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean N.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer(N.toInt)\n        val\
    \ sum = 0\n        while(digits.length > 0) {\n            val digit = digits.head\n\
    \            digits -= digit\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7uev8gyz.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010408
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sum = 0\n        for(i <- 0 until digits.length)\n            sum\
    \ += digits(i).toLong * 2\n        sum.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjwywt2zs.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjwywt2zs.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += digits(i).toLong * \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i)\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmlrqwz31.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ remainder = N.toInt\n        val remainderDigits = remainder % 2\n        val\
    \ digit = remainder / 2\n        val digitString = digit.toString\n        val\
    \ digitStrings = digitString.split(\"0\")\n        digitStrings.foreach(x => digits\
    \ += x.toInt)\n        digits.foreach(x => binary += x.toString)\n        binary\
    \ += digitStrings.last\n        binary.toList.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpi60j92zc.scala:25)\n\tat Problem.main(tmpi60j92zc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010412
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4vo3i14x.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        for(i <- 0 until N) {\n            val remainder = N % 2\n \
    \           val digit = N / 2\n            sum += digit\n            binary =\
    \ remainder + binary\n            N = digit\n        }\n        binary = binary.reverse\n\
    \        binary = binary.dropRight(1)\n        binary = binary.reverse\n     \
    \   binary = binary.dropRight(1)\n        binary = binary.reverse\n        binary\
    \ = binary.dropRight(1)\n        binary = binary.reverse\n        binary = binary.dropRight(1)\n\
    \        binary = binary.reverse\n        binary = binary.dropRight(1)\n     \
    \   binary = binary.reverse\n        binary = binary.dropRight(1)\n        binary\
    \ = binary.reverse\n        binary = binary.dropRight(1)\n        binary = binary.reverse\n\
    \        binary = binary.dropRight(1)\n        binary = binary.reverse\n     \
    \   binary = binary.dropRight(1)\n        binary = binary.reverse\n        binary\
    \ = binary.dropRight(1)\n        binary = binary.reverse\n        binary = binary.dropRight(1)\n\
    \        binary = binary.reverse\n        binary = binary.dropRight(1)\n     \
    \   binary = binary.reverse\n        binary = binary.dropRight(1)\n        binary\
    \ = binary.reverse\n        binary = binary.dropRight(1)\n        binary = binary.reverse\n\
    \        binary = binary.dropRight(1)\n        binary = binary.reverse\n     \
    \   binary = binary.dropRight(1)\n        binary = binary.reverse\n        binary\
    \ = binary.dropRight(1)\n        binary = binary.reverse\n        binary = binary.dropRight(1)\n\
    \        binary = binary.reverse\n        binary = binary.dropRight(1)\n     \
    \   binary = binary.reverse\n        binary = binary.dropRight(1)\n        binary\
    \ = binary.reverse\n        binary = binary.dropRight(1)\n        binary = binary.reverse\n\
    \        binary = binary.dropRight(1)\n        binary = binary.reverse\n     \
    \   binary = binary.dropRight(1)\n        binary = binary.reverse\n        binary\
    \ = binary.dropRight(1)\n        binary = binary.reverse\n        binary = binary.dropRight(1)\n\
    \        binary = binary.reverse\n        binary = binary.dropRight(1)\n     \
    \   binary = binary.reverse\n        binary = binary.dropRight(1)\n        binary\
    \ = binary.reverse\n        binary = binary.dropRight(1)\n        binary = binary.reverse\n\
    \        binary = binary.\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcb0jymdz.scala:79:4 ----------------------------\e\
    [0m\e[0m\n\e[31m79 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpcb0jymdz.scala:14:25 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until N) {\n\e[31m\e[31m   |\e\
    [0m                         ^\e[0m\n\e[31m   |\e[0m                         Found:\
    \    (N : Long)\n\e[31m   |\e[0m                         Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcb0jymdz.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpcb0jymdz.scala:19:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            N = digit\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcb0jymdz.scala:78:15\
    \ --------------------\e[0m\e[0m\n\e[31m78 |\e[0m        binary = binary.\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:\
    \    Unit\n\e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010411
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        var remainder = N\n        while(true){\n\
    \            val remainderToBinary = remainder % 2\n            binary.append(remainderToBinary)\n\
    \            remainder = remainder / 2\n            if(remainder == 0){\n    \
    \            sum += binary.mkString\n                binary.clear()\n        \
    \        break\n            }\n        }\n        sum.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa4xwea_t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa4xwea_t.scala:20:20\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                sum += binary.mkString\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpa4xwea_t.scala:22:16 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m                break\n\e[31m\e[31m   |\e[0m             \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val binNum = binary.toList\n        binNum.foreach(x\
    \ => {\n            val y = x.toInt\n            sum += y\n        })\n      \
    \  val binStr = sum.toBinaryString\n        binStr\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy8fc7w9u.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += y\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = 0\n        while(N !=0){\n     \
    \       remainder = N % 2\n            sum = sum + remainder\n            N =\
    \ N / 2\n        }\n        binary.append(sum)\n        return binary.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw18t3bn4.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            remainder = N % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpw18t3bn4.scala:18:14 -----------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            N = N / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        for(i <- 0 until N) {\n        \
    \    val remainder = N % 2\n            val digit = N / 2\n            sum +=\
    \ digit\n            binary.append(remainder)\n            N = digit\n       \
    \ }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0fdbj17j.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0fdbj17j.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp0fdbj17j.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0fdbj17j.scala:19:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            N = digit\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010413
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = new mutable.ListBuffer[String]()\n\
    \        val remainder = N % 2\n        val remainder2 = N / 2\n        val remainder3\
    \ = N / 3\n        val remainder4 = N / 4\n        val remainder5 = N / 5\n  \
    \      val remainder6 = N / 6\n        val remainder7 = N / 7\n        val remainder8\
    \ = N / 8\n        val remainder9 = N / 9\n        val remainder10 = N / 10\n\
    \        val remainder11 = N / 11\n        val remainder12 = N / 12\n        val\
    \ remainder13 = N / 13\n        val remainder14 = N / 14\n        val remainder15\
    \ = N / 15\n        val remainder16 = N / 16\n        val remainder17 = N / 17\n\
    \        val remainder18 = N / 18\n        val remainder19 = N / 19\n        val\
    \ remainder20 = N / 20\n        val remainder21 = N / 21\n        val remainder22\
    \ = N / 22\n        val remainder23 = N / 23\n        val remainder24 = N / 24\n\
    \        val remainder25 = N / 25\n        val remainder26 = N / 26\n        val\
    \ remainder27 = N / 27\n        val remainder28 = N / 28\n        val remainder29\
    \ = N / 29\n        val remainder30 = N / 30\n        val remainder31 = N / 31\n\
    \        val remainder32 = N / 32\n        val remainder33 = N / 33\n        val\
    \ remainder34 = N / 34\n        val remainder35 = N / 35\n        val remainder36\
    \ = N / 36\n        val remainder37 = N / 37\n        val remainder38 = N / 38\n\
    \        val remainder39 = N / 39\n        val remainder40 = N / 40\n        val\
    \ remainder41 = N / 41\n        val remainder42 = N / 42\n        val remainder43\
    \ = N / 43\n        val remainder44 = N / 44\n        val remainder45 = N / 45\n\
    \        val remainder46 = N / 46\n        val remainder47 = N / 47\n        val\
    \ remainder48 = N / 48\n        val remainder49 = N / 49\n        val remainder50\
    \ = N / 50\n        val remainder51 = N / 51\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp16cr1vjo.scala:64:11 ---------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp16cr1vjo.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp16cr1vjo.scala:65:5\
    \ ---------------------\e[0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010412
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ c = binary.charAt(i)\n            val d = c.toInt\n            sum += d\n  \
    \      }\n        binary.toString + sum.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppype53cw.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += d\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010422
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i).toInt\n\
    \        }\n        binary.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpayds65nj.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i).toInt\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010422
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ sum = 0\n        while(N /= 10) {\n            digits += N % 10\n          \
    \  sum += N % 10\n            N /= 10\n        }\n        while(sum > 0) {\n \
    \           binary += digits.toString.reverse.takeWhile(_ != '0').mkString(\"\"\
    )\n            digits -= digits.toString.reverse.takeWhile(_ != '0').mkString(\"\
    \")\n            sum -= digits.toString.reverse.takeWhile(_ != '0').mkString(\"\
    \")\n        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuvvb6r7a.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpuvvb6r7a.scala:16:22 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m            digits += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m       \
    \               ^^^^^^\e[0m\n\e[31m   |\e[0m                      Found:    Long\n\
    \e[31m   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuvvb6r7a.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpuvvb6r7a.scala:18:14 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            N /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value /= is not a member of Long - did you mean N.!=?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuvvb6r7a.scala:22:74 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            digits -= digits.toString.reverse.takeWhile(_\
    \ != \e[31m'0'\e[0m).mkString(\e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m        \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Found:    String\n\e[31m   |\e[0m       \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpuvvb6r7a.scala:23:16 ------------------------\e[0m\e[0m\n\e[31m23 |\e\
    [0m            sum -= digits.toString.reverse.takeWhile(_ != \e[31m'0'\e[0m).mkString(\e\
    [31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Int - did you mean sum.!=?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ remainder = N / 2\n        val digit = remainder % 2\n        val remainder2\
    \ = (remainder - digit) / 2\n        val digit2 = remainder2 % 2\n        val\
    \ remainder3 = (remainder2 - digit2) / 2\n        val digit3 = remainder3 % 2\n\
    \        val remainder4 = (remainder3 - digit3) / 2\n        val digit4 = remainder4\
    \ % 2\n        val remainder5 = (remainder4 - digit4) / 2\n        val digit5\
    \ = remainder5 % 2\n        val remainder6 = (remainder5 - digit5) / 2\n     \
    \   val digit6 = remainder6 % 2\n        val remainder7 = (remainder6 - digit6)\
    \ / 2\n        val digit7 = remainder7 % 2\n        val remainder8 = (remainder7\
    \ - digit7) / 2\n        val digit8 = remainder8 % 2\n        val remainder9 =\
    \ (remainder8 - digit8) / 2\n        val digit9 = remainder9 % 2\n        val\
    \ remainder10 = (remainder9 - digit9) / 2\n        val digit10 = remainder10 %\
    \ 2\n        val remainder11 = (remainder10 - digit10) / 2\n        val digit11\
    \ = remainder11 % 2\n        val remainder12 = (remainder11 - digit11) / 2\n \
    \       val digit12 = remainder12 % 2\n        val remainder13 = (remainder12\
    \ - digit12) / 2\n        val digit13 = remainder13 % 2\n        val remainder14\
    \ = (remainder13 - digit13) / 2\n        val digit14 = remainder14 % 2\n     \
    \   val remainder15 = (remainder14 - digit14) / 2\n        val digit15 = remainder15\
    \ % 2\n        val remainder16 = (remainder15 - digit15) / 2\n        val digit16\
    \ = remainder16 % 2\n        val remainder17 = (remainder16 - digit16) / 2\n \
    \       val digit17 = remainder17 % 2\n        val remainder18 = (remainder17\
    \ - digit17) / 2\n        val digit18 = remainder18 % 2\n        val remainder19\
    \ = (remainder18 - digit18) / 2\n        val digit19 = remainder19 % 2\n     \
    \   val remainder20 = (remainder19 - digit19) / 2\n        val digit20 = remainder20\
    \ % 2\n        val remainder\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjf14z3me.scala:55:4 ----------------------------\e\
    [0m\e[0m\n\e[31m55 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjf14z3me.scala:55:5 ---------------------\e[0m\e[0m\n\e[31m55 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        while(N /= 10) {\n  \
    \          sum += N % 10\n            N /= 10\n        }\n        while(sum >\
    \ 0) {\n            val remainder = sum % 2\n            sum += remainder\n  \
    \          binary.append(remainder)\n        }\n        binary.reverse.mkString(\"\
    \")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp86wvz1qi.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp86wvz1qi.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp86wvz1qi.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmp86wvz1qi.scala:22:19 -----------------------------\e[0m\e[0m\n\
    \e[31m22 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Int))\n4 errors found\n"
  stdout: ''
  timestamp: 1660010428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val result = mutable.ListBuffer.empty[String]\n        var sum = 0\n\
    \        for(i <- 0 until binary.length){\n            sum += binary.charAt(i).toInt\n\
    \        }\n        result += \"0\"\n        while(sum > 0){\n            result\
    \ += \"1\"\n            sum -= 1\n        }\n        result.toString\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyo7i0w21.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010419
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4vo3i14x.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.ListBuffer[String]\n\
    \        val remainder = N % 2\n        val remainders = N / 2\n        val remaindersString\
    \ = remainders.toString\n        val remaindersString2 = remaindersString.reverse\n\
    \        val remaindersString3 = remaindersString2.reverse\n        val remaindersString4\
    \ = remaindersString3.reverse\n        val remaindersString5 = remaindersString4.reverse\n\
    \        val remaindersString6 = remaindersString5.reverse\n        val remaindersString7\
    \ = remaindersString6.reverse\n        val remaindersString8 = remaindersString7.reverse\n\
    \        val remaindersString9 = remaindersString8.reverse\n        val remaindersString10\
    \ = remaindersString9.reverse\n        val remaindersString11 = remaindersString10.reverse\n\
    \        val remaindersString12 = remaindersString11.reverse\n        val remaindersString13\
    \ = remaindersString12.reverse\n        val remaindersString14 = remaindersString13.reverse\n\
    \        val remaindersString15 = remaindersString14.reverse\n        val remaindersString16\
    \ = remaindersString15.reverse\n        val remaindersString17 = remaindersString16.reverse\n\
    \        val remaindersString18 = remaindersString17.reverse\n        val remaindersString19\
    \ = remaindersString18.reverse\n        val remaindersString20 = remaindersString19.reverse\n\
    \        val remaindersString21 = remaindersString20.reverse\n        val remaindersString22\
    \ = remaindersString21.reverse\n        val remaindersString23 = remaindersString22.reverse\n\
    \        val remaindersString24 = remaindersString23.reverse\n        val remaindersString25\
    \ = remaindersString24.reverse\n        val remaindersString26 = remaindersString25.reverse\n\
    \        val remaindersString27 = remaindersString26.reverse\n        val remaindersString28\
    \ = remaindersString27.reverse\n        val remaindersString29 = remaindersString28.reverse\n\
    \        val remaindersString30 = remaindersString29.reverse\n        val remaindersString31\
    \ = remaindersString30.reverse\n        val remaindersString32 = remaindersString31.reverse\n\
    \        val remaindersString33 = remaindersString32.reverse\n        val remainder\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpg5poaf4n.scala:49:4 ----------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg5poaf4n.scala:12:25\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = \e[33mnew\e[0m mutable.ListBuffer[\e[35mString\e[0m]\n\e[31m\e\
    [31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpg5poaf4n.scala:49:5 ---------------------\e[0m\e[0m\n\e[31m49\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010427
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ c = binary.charAt(i)\n            val d = c.toInt\n            sum += d\n  \
    \      }\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        binary.reverse\n\
    \        binary.reverse\n        binary.reverse\n        binary.reverse\n    \
    \    binary.reverse\n        binary.reverse\n        binary.reverse\n        \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnfvmf2m2.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += d\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        while(N /= 10) {\n            sum += N % 10\n  \
    \          N /= 10\n        }\n        while(sum > 0) {\n            val remainder\
    \ = sum % 2\n            sum += remainder\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmplksrh90d.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmplksrh90d.scala:21:19 -----------------------------\e[0m\e[0m\n\
    \e[31m21 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Int))\n4 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        val remainder3 = N - sum\n        while\
    \ (remainder3 > 0) {\n            binary += \"1\"\n            remainder3 = (remainder3\
    \ / 2)\n        }\n        binary += sum.toString\n        binary\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7dak9sdm.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += remainder2 % \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp7dak9sdm.scala:23:23\
    \ -----------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            remainder3\
    \ = (remainder3 / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val remainder3\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        for(i <- 0 until N) {\n            val digit = math.floor(math.abs(N\
    \ % math.pow(2, i)))\n            sum += digit\n            binary += digit.toBinaryString\n\
    \        }\n        binary.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdk9y9q_j.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpdk9y9q_j.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdk9y9q_j.scala:17:19\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            binary += digit.toBinaryString\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of String - did you mean String.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpdk9y9q_j.scala:17:28 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            binary += digit.toBinaryString\n\e[31m\e[31m \
    \  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                  value toBinaryString is not a member of Double\n4 errors found\n"
  stdout: ''
  timestamp: 1660010432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        for(i <- 0 until N) {\n            val digit = math.floor(math.abs(N\
    \ % 10) / 2)\n            binary.append(digit)\n            sum += digit\n   \
    \         N /= 10\n        }\n        binary.append(sum)\n        binary.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59kzhc_6.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp59kzhc_6.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp59kzhc_6.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.ListBuffer[String]()\n\
    \        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n        val\
    \ sum = 0\n        for (i <- 0 until digits.size) {\n            sum += digits(i)\n\
    \            if (sum > 9) {\n                result += \"1\"\n               \
    \ sum -= 10\n            } else {\n                result += \"0\"\n         \
    \   }\n        }\n        result.reverse.mkString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl5vvvxvc.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl5vvvxvc.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += digits(i)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E050] Type\
    \ Error: /tmp/tmpl5vvvxvc.scala:16:19 -----------------------------\e[0m\e[0m\n\
    \e[31m16 |\e[0m            sum += digits(i)\n\e[31m\e[31m   |\e[0m           \
    \        ^^^^^^\e[0m\n\e[31m   |\e[0m                   \e[33mvalue\e[0m \e[35mdigits\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpl5vvvxvc.scala:19:20 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m                sum -= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m               \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m                value -= is not a member of Int\
    \ - did you mean sum.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010433
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val s = N.toBinaryString\n    \
    \    val sum = 0\n        for(i <- 0 until s.length) sum += s.charAt(i) - '0'\n\
    \        sum.toBinaryString\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbamtfuwj.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until s.length)\
    \ sum += s.charAt(i) - \e[31m'0'\e[0m\n\e[31m\e[31m   |\e[0m                 \
    \                  ^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        while(N !=0){\n            val digit = N % 10\n\
    \            sum += digit\n            binary.append(digit)\n            N /=\
    \ 10\n        }\n        val result = sum.toBinaryString\n        binary.reverse.foreach(x\
    \ => result += x)\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsbi3_qus.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpsbi3_qus.scala:17:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            binary.append(digit)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the\
    \ overloaded alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e\
    [0m \e[35mBuffer\e[0m with types\n\e[31m   |\e[0m (elems: String*): (binary :\
    \ scala.collection.mutable.ListBuffer[String])\n\e[31m   |\e[0m (elem: String):\
    \ (binary : scala.collection.mutable.ListBuffer[String])\n\e[31m   |\e[0mmatch\
    \ arguments ((digit : Long))\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsbi3_qus.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpsbi3_qus.scala:21:43 ------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        binary.reverse.foreach(\e[36mx\e[0m => result += x)\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            value += is not a member of String - did you mean result.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010433
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary(i)\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6pesbg7j.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sumOfDigits = digits.foldLeft(0)(_ + _)\n        val binaryDigits\
    \ = digits.map(x => if (x % 2 == 0) \"1\" + \"0\"\n        else \"0\" + \"1\"\
    )\n        val result = binaryDigits.take(digits.length).mkString(\"\")\n    \
    \    result + sumOfDigits.toString\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8v7ucuu7.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var i = N\n        while(i > 0) {\n\
    \            remainder = i % 2\n            sum = sum + remainder\n          \
    \  i = i / 2\n        }\n        while(sum > 0) {\n            binary = binary\
    \ + Integer.toBinaryString(sum % 10)\n            sum = sum / 10\n        }\n\
    \        binary\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7szl5j9e.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            remainder = i % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        binary = Integer.toBinaryString(sum)\n\
    \        remainder2 = N\n        while (remainder2 > 0) {\n            sum +=\
    \ remainder2 % 2\n            remainder2 = (remainder2 / 2)\n        }\n     \
    \   binary = Integer.toBinaryString(sum)\n        remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        binary = Integer.toBinaryString(sum)\n\
    \        remainder2 = N\n        while (remainder2 > 0) {\n            sum +=\
    \ remainder2 % 2\n            remainder2 = (remainder2 / 2)\n        }\n     \
    \   binary = Integer.toBinaryString(sum)\n        remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        binary = Integer.toBinaryString(sum)\n\
    \        remainder2 = N\n        while (remainder2 > 0) {\n            sum +=\
    \ remainder2 % 2\n            remainder2 = (remainder2 / 2)\n        }\n     \
    \   binary = Integer.toBinaryString(sum)\n        remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        binary = Integer.toBinaryString(sum)\n\
    \        remainder2 = N\n        while (remainder2 > 0) {\n            sum +=\
    \ remainder2 % 2\n            remainder2 = (remainder2 / 2)\n        }\n     \
    \   binary = Integer.toBinaryString(sum)\n        remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        binary = Integer.toBinaryString(sum)\n\
    \        remainder2 = N\n        while (remainder2 > 0) {\n            sum +=\
    \ remainder2 % 2\n            remainder2 = (remainder2 / 2)\n        }\n     \
    \   binary = Integer.toBinaryString(sum)\n        remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            sum += remainder2 % 2\n            remainder2\
    \ = (remainder2 / 2)\n        }\n        binary = Integer.toBinaryString(sum)\n\
    \        remainder2 = N\n        while (remainder2 > 0) {\n            sum +=\
    \ remainder2 % 2\n            remainder\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9urc404c.scala:95:0 ----------------------------\e\
    [0m\e[0m\n\e[31m95 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9urc404c.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum += remainder2\
    \ % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9urc404c.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += remainder2 % \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9urc404c.scala:29:16 ------------------------\e[0m\e[0m\n\e[31m29 |\e\
    [0m            sum += remainder2 % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m       \
    \     ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9urc404c.scala:35:16\
    \ ------------------------\e[0m\e[0m\n\e[31m35 |\e[0m            sum += remainder2\
    \ % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9urc404c.scala:41:16 ------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m            sum += remainder2 % \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9urc404c.scala:47:16 ------------------------\e[0m\e[0m\n\e[31m47 |\e\
    [0m            sum += remainder2 % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m       \
    \     ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9urc404c.scala:53:16\
    \ ------------------------\e[0m\e[0m\n\e[31m53 |\e[0m            sum += remainder2\
    \ % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \     "
  stdout: ''
  timestamp: 1660010437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.reverse\n        val sum = 0\n        val result\
    \ = new mutable.ListBuffer[String]()\n        for(i <- 0 until binary.length){\n\
    \            val c = binary(i)\n            val n = c.toInt\n            sum +=\
    \ n\n            val s = n.toBinaryString\n            val s = s.reverse\n   \
    \         result += s\n        }\n        val s = sum.toBinaryString\n       \
    \ val s = s.reverse\n        result += s\n        result.mkString(\"\")\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpentr8mhj.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpentr8mhj.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36ms\e[0m = s.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ms is already defined as \e[33mvalue\e[0m \e[35ms\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpentr8mhj.scala:15:25 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e[0m mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpentr8mhj.scala:21:16 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mval\e[0m \e[36ms\e[0m = s.reverse\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ms is already\
    \ defined as \e[33mvalue\e[0m \e[35ms\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpentr8mhj.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += n\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.reverse\n        val sum = 0\n        var i = 0\n\
    \        while (i < binary.length) {\n            val digit = binary.charAt(i)\n\
    \            sum += digit.toInt\n            i += 1\n        }\n        val result\
    \ = sum.toBinaryString\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpe302opl_.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe302opl_.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += digit.toInt\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010433
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        for(i <- 0 until N) {\n         \
    \   remainder = i % 2\n            sum = sum + remainder\n            binary =\
    \ binary + remainder\n            i = i / 2\n        }\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = binary.reverse\n\
    \        binary = binary.dropWhile(_ == '0').reverse\n        binary = bin\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp68m1kg24.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp68m1kg24.scala:19:14 -----------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            i = i / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val i\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp68m1kg24.scala:69:17\
    \ ------------------------\e[0m\e[0m\n\e[31m69 |\e[0m        binary = bin\n\e\
    [31m\e[31m   |\e[0m                 ^^^\e[0m\n\e[31m   |\e[0m                \
    \ Not found: bin\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcuzyy4a6.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcuzyy4a6.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcuzyy4a6.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcuzyy4a6.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcuzyy4a6.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1660010436
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        while(N /= 10) {\n            val\
    \ digit = N % 10\n            sum += digit\n            binary.append(digit)\n\
    \            N = (N - digit) / 10\n        }\n        binary.reverse.mkString(\"\
    \") + sum.toString\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj0k7f83k.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj0k7f83k.scala:14:16\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N\
    \ /= \e[31m10\e[0m) {\n\e[31m\e[31m   |\e[0m              ^^^^\e[0m\n\e[31m  \
    \ |\e[0m              value /= is not a member of Long - did you mean N.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpj0k7f83k.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpj0k7f83k.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = (N -\
    \ digit) / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ c = binary(i)\n            val n = c.toInt\n            sum += n\n        }\n\
    \        val result = sum.toBinaryString\n        result + \" \"\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_a8trvcn.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += n\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ total = 0L\n        val remainder = N % 2\n        val remainderDigit = remainder\
    \ / 2\n        val remainderDigitString = remainderDigit.toString\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n        val remainderDigitString\
    \ = remainderDigitString.reverse\n        val remainderDigitString = remainderDigitString.reverse\n\
    \        val remainderDigitString = remainderDigitString.reverse\n        val\
    \ remainderDigitString = remainderDigitString.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6qx36iy0.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mremainderDigitString\e[0m\
    \ = remainderDigitString.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigitString is already defined as \e[33mvalue\e[0m\
    \ \e[35mremainderDigitString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp6qx36iy0.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mremainderDigitString\e[0m\
    \ = remainderDigitString.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigitString is already defined as \e[33mvalue\e[0m\
    \ \e[35mremainderDigitString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp6qx36iy0.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mremainderDigitString\e[0m\
    \ = remainderDigitString.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigitString is already defined as \e[33mvalue\e[0m\
    \ \e[35mremainderDigitString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp6qx36iy0.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mremainderDigitString\e[0m\
    \ = remainderDigitString.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigitString is already defined as \e[33mvalue\e[0m\
    \ \e[35mremainderDigitString\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp6qx36iy0.s"
  stdout: ''
  timestamp: 1660010444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4vo3i14x.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ArrayBuffer[String]()\n        while(N >0) {\n            val\
    \ remainder = N % 2\n            N /= 2\n            sum += remainder\n      \
    \      binary.append(remainder)\n        }\n        binary.reverse.mkString(\"\
    \")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6msdrq_r.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6msdrq_r.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp6msdrq_r.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010447
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val binSum = mutable.ArrayBuffer.empty[String]\n\
    \        for (i <- 0 until binary.length) {\n            val bin = binary.charAt(i)\n\
    \            if (bin == '1') {\n                sum += i.toLong\n            \
    \    binSum += i.toString + \" \"\n            }\n        }\n        binSum.mkString(\"\
    \ \")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwqc04fe.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpvwqc04fe.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += i.toLong\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary(i)\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6pesbg7j.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length-1){\n            val\
    \ digit = binary.charAt(i)\n            sum += digit.toInt\n        }\n      \
    \  binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        binary.padTo(binary.length, \"0\")\n        binary.reverse\n        binary.padTo(binary.length,\
    \ \"0\")\n        binary.reverse\n        binary.padTo(binary.length, \"0\")\n\
    \        binary.reverse\n        binary.padTo(binary.length, \"0\")\n        binary.reverse\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpw7g5n_eg.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        for(i <- 0 until N) {\n         \
    \   val temp = N % 10\n            sum += temp\n            N = (N - temp) / 10\n\
    \            binary += temp\n        }\n        while(sum > 0) {\n           \
    \ remainder = sum % 2\n            sum = sum / 2\n            binary += remainder\n\
    \        }\n        binary\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp62r2e5ny.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp62r2e5ny.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            sum += temp\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp62r2e5ny.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = (N -\
    \ temp) / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i)\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmlrqwz31.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = mutable.StringBuilder()\n\
    \        val digits = N.toString.reverse.grouped(2).map(_.mkString).toList\n \
    \       val sum = 0\n        for (i <- 0 until digits.size) {\n            sum\
    \ += digits(i).toLong\n        }\n        val binary = sum.toBinaryString\n  \
    \      result += binary.reverse\n        result.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp13r8jutx.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.StringBuilder()\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp13r8jutx.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            sum += digits(i).toLong\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length-1){\n            sum\
    \ += binary(i).toInt\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp75ff6gd8.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i).toInt\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010450
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        var i = 0\n\
    \        while(i < N) {\n            val temp = N % 2\n            sum += temp\n\
    \            N = N / 2\n            i += 1\n        }\n        val result = sum.toBinaryString\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwmchn40d.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += temp\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpwmchn40d.scala:17:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            N = N /\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010450
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = 0\n        var remainder3\
    \ = 0\n        var remainder4 = 0\n        var remainder5 = 0\n        var remainder6\
    \ = 0\n        var remainder7 = 0\n        var remainder8 = 0\n        var remainder9\
    \ = 0\n        var remainder10 = 0\n        var remainder11 = 0\n        var remainder12\
    \ = 0\n        var remainder13 = 0\n        var remainder14 = 0\n        var remainder15\
    \ = 0\n        var remainder16 = 0\n        var remainder17 = 0\n        var remainder18\
    \ = 0\n        var remainder19 = 0\n        var remainder20 = 0\n        var remainder21\
    \ = 0\n        var remainder22 = 0\n        var remainder23 = 0\n        var remainder24\
    \ = 0\n        var remainder25 = 0\n        var remainder26 = 0\n        var remainder27\
    \ = 0\n        var remainder28 = 0\n        var remainder29 = 0\n        var remainder30\
    \ = 0\n        var remainder31 = 0\n        var remainder32 = 0\n        var remainder33\
    \ = 0\n        var remainder34 = 0\n        var remainder35 = 0\n        var remainder36\
    \ = 0\n        var remainder37 = 0\n        var remainder38 = 0\n        var remainder39\
    \ = 0\n        var remainder40 = 0\n        var remainder41 = 0\n        var remainder42\
    \ = 0\n        var remainder43 = 0\n        var remainder44 = 0\n        var remainder45\
    \ = 0\n        var remainder46 = 0\n        var remainder47 = 0\n        var remainder48\
    \ = 0\n        var remainder49 = 0\n        var remainder50 = 0\n        var remainder51\
    \ = 0\n        var remainder52 = 0\n        var remainder53 = 0\n        var remainder54\
    \ = 0\n        var remainder55 = 0\n        var remainder56 = 0\n        var remainder57\
    \ = 0\n        var remainder58 = 0\n        var remainder59 = 0\n        var remainder60\
    \ = 0\n        var remainder61 = 0\n        var remainder62 = 0\n        var remainder63\
    \ = 0\n        var remainder64 = 0\n        var remainder65 = 0\n        var remainder66\
    \ = 0\n        var remainder67 = 0\n        var remainder68 = 0\n        var remainder69\
    \ = 0\n        var remainder70 = 0\n        var remainder71 = 0\n        var remainder72\
    \ = 0\n        var remainder73 = 0\n        var remainder74 = 0\n        var remainder75\
    \ = 0\n        var remainder76 = 0\n        var remainder77 = 0\n        var remainder78\
    \ = 0\n        var remainder79 = 0\n        var remainder80 = 0\n        var remainder81\
    \ = 0\n        var remainder82 = 0\n        var remainder83 = 0\n        var remainder84\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4vo3i14x.scala:99:5\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ sum = 0\n        while(N /= 10) {\n            digits += N % 10\n          \
    \  sum += N % 10\n            N = (N / 10).toInt\n        }\n        binary.append(digits.reverse.mkString(\"\
    \"))\n        while(sum > 0) {\n            binary.append(digits(sum % 10).reverse.mkString(\"\
    \"))\n            sum = (sum / 10).toInt\n        }\n        binary.toString()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m8vu4y7.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp6m8vu4y7.scala:16:22 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m            digits += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m       \
    \               ^^^^^^\e[0m\n\e[31m   |\e[0m                      Found:    Long\n\
    \e[31m   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6m8vu4y7.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp6m8vu4y7.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = (N /\
    \ \e[31m10\e[0m).toInt\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6m8vu4y7.scala:22:43 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            binary.append(digits(sum % \e[31m10\e[0m).reverse.mkString(\e\
    [31m\"\"\e[0m))\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value reverse is not a member of\
    \ Int\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp6m8vu4y7.scala:23:16 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum = (sum / \e[31m10\e[0m).toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \    Reassignment to val sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n6 errors found\n"
  stdout: ''
  timestamp: 1660010454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        for(i <- 0 until N) {\n        \
    \    val digit = i % 10\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzk0mc5nv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzk0mc5nv.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpzk0mc5nv.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary(i)\n\
    \        }\n        binary.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpykog9hg5.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = new mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        while(N /= 10) {\n  \
    \          sum += N % 10\n            N /= 10\n        }\n        while(sum >\
    \ 0) {\n            val remainder = sum % 2\n            sum += remainder\n  \
    \          binary.append(remainder)\n        }\n        binary.reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbx6id_r4.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbx6id_r4.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N\
    \ /= \e[31m10\e[0m) {\n\e[31m\e[31m   |\e[0m              ^^^^\e[0m\n\e[31m  \
    \ |\e[0m              value /= is not a member of Long - did you mean N.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpbx6id_r4.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpbx6id_r4.scala:17:14 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m            N /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value /= is not a member of Long - did you mean N.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = N\n        while(true){\n      \
    \      sum += remainder\n            binary.append(remainder % 2)\n          \
    \  remainder = remainder / 2\n            if(remainder == 0){\n              \
    \  break\n            }\n        }\n        binary.reverse\n        binary.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprk5l2ldo.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean Int.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprk5l2ldo.scala:20:16\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val bin = binary.toList\n        val sum = 0\n        for(i <- 0 until\
    \ bin.length) sum += bin(i).toInt\n        binary.toString.reverse.foldLeft(\"\
    \")(_ + _ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy28vzgdt.scala:15:41 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until bin.length)\
    \ sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m                                 \
    \    ^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not a member of\
    \ Int - did you mean sum.!=?\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpy28vzgdt.scala:16:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        binary.toString.reverse.foldLeft(\e\
    [31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e[31m   |\e[0m                             \
    \                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \    Wrong number of parameters, expected: 2\n2 errors found\n"
  stdout: ''
  timestamp: 1660010455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer(N.toInt)\n        val\
    \ sum = 0\n        while (digits.nonEmpty) {\n            val digit = digits.head\n\
    \            digits.remove(digit)\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7h1uu22w.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7h1uu22w.scala:21:15\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m        binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    StringBuilder\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        while(N !=0){\n            remainder\
    \ = N % 2\n            N = N / 2\n            sum = sum + remainder\n        \
    \    binary = binary + remainder\n        }\n        binary = binary.reverse\n\
    \        sum.toString\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9q7_c0oj.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            remainder = N % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp9q7_c0oj.scala:17:14 -----------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            N = N / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length) sum += binary(i).toInt\n\
    \        binary.reverse.foldLeft(\"\")(_ + _ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu1q2d4rc.scala:14:44 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until binary.length)\
    \ sum += binary(i).toInt\n\e[31m\e[31m   |\e[0m                              \
    \          ^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpu1q2d4rc.scala:15:36\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        binary.reverse.foldLeft(\e\
    [31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e[31m   |\e[0m                             \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 2\n2 errors found\n"
  stdout: ''
  timestamp: 1660010457
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer.empty[Int]\n      \
    \  val sum = 0\n        while(N /= 10) {\n            digits += N % 10\n     \
    \       sum += N % 10\n            N /= 10\n        }\n        val digit = digits.reverse\n\
    \        while(digit.length > 0) {\n            binary.append(digit.head)\n  \
    \          digit = digit.tail\n        }\n        binary.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprk0z4fco.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmprk0z4fco.scala:16:22 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m            digits += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m       \
    \               ^^^^^^\e[0m\n\e[31m   |\e[0m                      Found:    Long\n\
    \e[31m   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmprk0z4fco.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmprk0z4fco.scala:18:14 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            N /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value /= is not a member of Long - did you mean N.!=?\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmprk0z4fco.scala:23:18 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            digit = digit.tail\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val digit\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprk0z4fco.scala:25:15\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m        binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    StringBuilder\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n6 errors found\n"
  stdout: ''
  timestamp: 1660010457
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val binary = binary.reverse\n        for(i <- 0\
    \ until binary.length){\n            sum += binary(i).toInt\n        }\n     \
    \   binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpf09ty3rl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf09ty3rl.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += binary(i).toInt\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010456
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        for(i <- 0 until N) {\n            val digit = math.pow(2, i)\n\
    \            sum += digit\n            binary += digit.toBinaryString\n      \
    \  }\n        binary.toUpperCase\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7s134xbj.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp7s134xbj.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7s134xbj.scala:17:19\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            binary += digit.toBinaryString\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of String - did you mean String.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp7s134xbj.scala:17:28 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            binary += digit.toBinaryString\n\e[31m\e[31m \
    \  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                  value toBinaryString is not a member of Double\n4 errors found\n"
  stdout: ''
  timestamp: 1660010459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkyd_bc5u.scala:59:4 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkyd_bc5u.scala:13:12 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkyd_bc5u.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkyd_bc5u.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkyd_bc5u.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkyd_bc5u.scala:17:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1660010460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        while(N /= 10) {\n  \
    \          val digit = N % 10\n            sum += digit\n            binary.append(digit)\n\
    \            N = (N - digit) / 10\n        }\n        while(sum > 0) {\n     \
    \       val digit = sum % 10\n            sum += digit\n            binary.append(digit)\n\
    \            sum = (sum - digit) / 10\n        }\n        binary.reverse\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmmo1fbn_.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpmmo1fbn_.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m            sum += digit\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    \e[31m\e[31m-- [E134] Type Error: /tmp/tmpmmo1fbn_.scala:18:19 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            binary.append(digit)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((digit : Long))\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpmmo1fbn_.scala:19:14 -----------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            N = (N - digit) / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpmmo1fbn_.scala:24:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            binary.append(digit)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the\
    \ overloaded alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e\
    [0m \e[35mBuffer\e[0m with types\n\e[31m   |\e[0m (elems: String*): (binary :\
    \ scala.collection.mutable.ListBuffer[String])\n\e[31m   |\e[0m (elem: String):\
    \ (binary : scala.collection.mutable.ListBuffer[String])\n\e[31m   |\e[0mmatch\
    \ arguments ((digit : Int))\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmmo1fbn_.scala:27:15\
    \ --------------------"
  stdout: ''
  timestamp: 1660010461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sum = 0\n        digits.foreach(x => sum += x.toInt)\n        val\
    \ result = sum.toBinaryString\n        result + \" \"\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppzq3jbqj.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val bin = binary.toList\n        bin.foreach(x =>\
    \ {\n            sum += x.toInt\n        })\n        binary.toString.reverse.foldLeft(\"\
    \")(_ + _ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3xni87gw.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += x.toInt\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp3xni87gw.scala:18:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        binary.toString.reverse.foldLeft(\e\
    [31m\"\"\e[0m)(_ + _ + _)\n\e[31m\e[31m   |\e[0m                             \
    \                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \    Wrong number of parameters, expected: 2\n2 errors found\n"
  stdout: ''
  timestamp: 1660010464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ digit = binary.charAt(i)\n            sum += digit.toInt\n        }\n      \
    \  binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpky8_x4vw.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i)\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmlrqwz31.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = N\n        while\
    \ (remainder2 > 0) {\n            val remainder3 = remainder2 % 2\n          \
    \  binary = remainder3 + binary\n            remainder2 = remainder2 / 2\n   \
    \     }\n        while (remainder > 0) {\n            val remainder3 = remainder\
    \ % 2\n            binary = remainder3 + binary\n            remainder = remainder\
    \ / 2\n        }\n        sum.toBinaryString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_dkh1lin.scala:29)\n\tat Problem.main(tmp_dkh1lin.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = 0\n        var i = 0\n        while\
    \ (i < N) {\n            sum += N % 2\n            N = (N / 2)\n            i\
    \ += 1\n        }\n        while (sum > 0) {\n            binary.append((sum %\
    \ 2).toString())\n            sum = (sum / 2)\n        }\n        return binary.toString()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphairyci8.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += N % \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmphairyci8.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N = (N /\
    \ \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val N\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val s = mutable.StringBuilder()\n\
    \        var sum = 0\n        var i = 0\n        while (i < N) {\n           \
    \ val x = math.pow(10, i)\n            sum += x\n            s += x.toBinaryString\n\
    \            i += 1\n        }\n        s += sum.toString\n        s\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbn4qjlcl.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36ms\e[0m = mutable.StringBuilder()\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpbn4qjlcl.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m            sum += x\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ bin = binary.charAt(i)\n            val val = if(bin=='1') 1 else 0\n      \
    \      sum += val\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpgbwzbnoz.scala:16:16 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[33mval\e[0m = \e[33mif\e\
    [0m(bin==\e[31m'1'\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m                pattern expected\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgbwzbnoz.scala:17:19\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum += \e\
    [33mval\e[0m\n\e[31m\e[31m   |\e[0m                   ^^^\e[0m\n\e[31m   |\e[0m\
    \                   expression expected but \e[31mval\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgbwzbnoz.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += \e[33mval\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        while(N >0) {\n            val remainder\
    \ = N % 2\n            sum += remainder\n            N /= 2\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9wmx0gi0.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9wmx0gi0.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmp9wmx0gi0.scala:17:14 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m            N /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean N.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        while(N >0) {\n            val remainder\
    \ = N % 2\n            sum += remainder\n            N /= 2\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9wmx0gi0.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9wmx0gi0.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmp9wmx0gi0.scala:17:14 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m            N /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean N.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpconwyl7y.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpconwyl7y.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpconwyl7y.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpconwyl7y.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpconwyl7y.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpconwyl7y.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e"
  stdout: ''
  timestamp: 1660010473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        while(N /= 10) {\n            sum += N % 10\n  \
    \          N /= 10\n        }\n        while(sum > 0) {\n            val remainder\
    \ = sum % 2\n            sum += remainder\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmplksrh90d.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmplksrh90d.scala:21:19 -----------------------------\e[0m\e[0m\n\
    \e[31m21 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Int))\n4 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        var i = 0\n        while (i < binary.length) {\n\
    \            val digit = binary.charAt(i)\n            sum += digit.toInt\n  \
    \          i += 1\n        }\n        val result = sum.toBinaryString\n      \
    \  return result\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzqx46evp.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        while(N !=0){\n            val remainder\
    \ = N % 2\n            sum += remainder\n            binary.append(remainder)\n\
    \            N=N/2\n        }\n        val result = sum.toBinaryString\n     \
    \   binary.reverse.foreach(x => result += x)\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo40wo0ev.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpo40wo0ev.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += remainder\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type\
    \ Error: /tmp/tmpo40wo0ev.scala:18:13 -----------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m            N=N/\e[31m2\e[0m\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val N\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ remainder = N % 2\n        val remainderDigit = remainder % 10\n        val\
    \ remainderDigits = remainderDigit :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = remainderDigits :: digits\n        val remainderDigits = remainderDigits\
    \ :: digits\n        val remainderDigits = remainderDigits :: digits\n       \
    \ val remainderDigits = remainderDigits :: digits\n        val remainderDigits\
    \ = remainderDigits :: digits\n        val remainderDigits = remainderDigits ::\
    \ digits\n        val remainderDigits = remainderDigits :: digits\n        val\
    \ remainderDigits = \n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpplbiavmr.scala:51:29 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = \n\
    \e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m    \
    \                         expression expected but \e[31m'}'\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderDigits is already defined as \e[33mvalue\e[0m \e\
    [35mremainderDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpplbiavmr.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mremainderDigits\e[0m = remainderDigits\
    \ :: digits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length - 1) {\n           \
    \ sum += binary(i).toInt\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy91kx78d.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i).toInt\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val result = new mutable.StringBuilder\n\
    \        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        digits.foreach(x => result.append(x))\n        result.toString\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsvggp8_8.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsvggp8_8.scala:13:67 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010474
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val bin = binary.toList\n        val binSum = bin.foldLeft(0)(_ + _)\n\
    \        val binSumString = binSum.toBinaryString\n        binSumString\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpa2yyu22j.scala:19)\n\tat Problem.main(tmpa2yyu22j.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val s = mutable.StringBuilder()\n\
    \        var sum = 0\n        for(i <- 0 until N.toInt){\n            sum += i.toBinaryString().length\n\
    \        }\n        s += sum.toString\n        return s\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9tea7cdn.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36ms\e[0m = mutable.StringBuilder()\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9tea7cdn.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += i.toBinaryString().length\n\e[31m\e[31m   |\e[0m       \
    \     ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- Error: /tmp/tmp9tea7cdn.scala:15:35 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += i.toBinaryString().length\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing\
    \ argument for parameter i of \e[33mmethod\e[0m \e[35mapply\e[0m in \e[33mclass\e\
    [0m \e[35mStringOps\e[0m: (i: Int): Char\n3 errors found\n"
  stdout: ''
  timestamp: 1660010475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val binSum = binary.toInt\n        val binSumList\
    \ = binSum.toList\n        binSumList.foreach(x => sum += x)\n        val binSumString\
    \ = sum.toBinaryString\n        binSumString.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxyt2z4nf.scala:15:32 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinSumList\e[0m = binSum.toList\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        value toList is not a member of Int - did you mean binSum.toInt?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = 0\n        var i = 0\n        while(i\
    \ < N) {\n            remainder = N % 2\n            sum += remainder\n      \
    \      N /= 2\n            i += 1\n        }\n        binary.append(sum.toString)\n\
    \        binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp4ssl6an.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            remainder = N % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        Found:    Long\n\e[31m   |\e[0m              \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpp4ssl6an.scala:19:14 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m            N /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value /= is not a member of Long - did you mean N.!=?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp4ssl6an.scala:23:15 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        binary.reverse\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    StringBuilder\n\e[31m\
    \   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var i = 0\n        while (i < N) {\n           \
    \ val digit = math.pow(10, i)\n            sum += digit\n            binary.append(digit.toString)\n\
    \            i += 1\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7s45d_ge.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7s45d_ge.scala:21:15\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m        binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    StringBuilder\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toString).map(_.toInt)\n\
    \        val sum = 0\n        digits.foreach(sum ++= _)\n        sum.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpq3cod5g7.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        digits.foreach(sum ++= _)\n\e[31m\e[31m   |\e\
    [0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \ value ++= is not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1660010477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = scala.collection.mutable.ListBuffer[String]()\n        for(i <- 0 until N)\
    \ {\n            val remainder = i rem 2\n            val digit = i / 2\n    \
    \        val bin = if (remainder == 0) \"0\" else \"1\"\n            binary.append(bin)\n\
    \            sum += digit\n        }\n        binary.reverse.mkString(\"\")\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx4deffzn.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpx4deffzn.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mremainder\e[0m = i rem \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                            ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            value rem is not a member of Int\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpx4deffzn.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        var sum = 0\n        for(i <- 0 until N) {\n            val digit = math.pow(10,\
    \ i).toInt\n            sum += digit\n            binary.append(digit.toString)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfnd6y8x5.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        var sum = 0\n        var binary\
    \ = \"\"\n        var remainder = 0\n        var remainder2 = N\n        while(true){\n\
    \            sum += remainder2\n            binary = remainder + binary\n    \
    \        remainder2 = remainder\n            remainder = remainder % 10\n    \
    \        if(sum == 0){\n                break\n            }\n        }\n    \
    \    return binary\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp01m_cvcz.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += remainder2\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp01m_cvcz.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val sums = digits.map(_.toInt).sum\n        val binary = digits.map(_.toInt).map(_.toBinaryString).mkString\n\
    \        val result = binary.padTo(sums.length, \"0\")\n        binary.padTo(sums.length,\
    \ \"0\")\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphzwn3smh.scala:12:67 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = N.toString.reverse.grouped(\e\
    [31m2\e[0m).map(_.mkString).reverse\n\e[31m\e[31m   |\e[0m                   \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ reverse is not a member of Iterator[String] - did you mean Iterator[String].reversed?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 until binary.length){\n            val\
    \ bin = binary.charAt(i)\n            val val = if (bin=='1') 1 else 0\n     \
    \       sum += val\n        }\n        binary.toString + sum.toString\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\"\
    )));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp3_hczvdp.scala:16:16 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[33mval\e[0m = \e[33mif\e\
    [0m (bin==\e[31m'1'\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m                pattern\
    \ expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3_hczvdp.scala:17:19\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            sum += \e\
    [33mval\e[0m\n\e[31m\e[31m   |\e[0m                   ^^^\e[0m\n\e[31m   |\e[0m\
    \                   expression expected but \e[31mval\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3_hczvdp.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += \e[33mval\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        while(N /= 10) {\n            sum += N % 10\n  \
    \          N /= 10\n        }\n        while(sum > 0) {\n            val remainder\
    \ = sum % 2\n            sum += remainder\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m(N /= \e[31m10\e[0m) {\n\e[31m\e\
    [31m   |\e[0m              ^^^^\e[0m\n\e[31m   |\e[0m              value /= is\
    \ not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmplksrh90d.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            sum += N % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplksrh90d.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E134] Type\
    \ Error: /tmp/tmplksrh90d.scala:21:19 -----------------------------\e[0m\e[0m\n\
    \e[31m21 |\e[0m            binary.append(remainder)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m\
    \ with types\n\e[31m   |\e[0m (elems: String*): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0m (elem: String): (binary : scala.collection.mutable.ListBuffer[String])\n\
    \e[31m   |\e[0mmatch arguments ((remainder : Int))\n4 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ sum = 0\n        val N = N.toInt\n        val maxDigit = math.pow(10, math.ceil(math.log(N)\
    \ / math.log(2)))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigit)\
    \ / math.log(2))))\n        val maxDigit = math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2)))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigit)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits)\
    \ / math.log(2))))\n        val maxDigits = math.ceil(math.pow(10, math.ceil(math.log(maxDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjzl0mkqa.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjzl0mkqa.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxDigit\e[0m = math.pow(\e[31m10\e[0m, math.ceil(math.log(maxDigits)\
    \ / math.log(\e[31m2\e[0m)))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDigit is already defined as \e[33mvalue\e[0m \e[35mmaxDigit\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjzl0mkqa.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mmaxDigits\e[0m = math.ceil(math.pow(\e\
    [31m10\e[0m, math.ceil(math.log(maxDigit) / math.log(\e[31m2\e[0m))))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDigits is already defined as \e[33mvalue\e[0m \e[35mmaxDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjzl0mkqa.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxDigits\e[0m = math.ceil(math.pow(\e\
    [31m10\e[0m, math.ceil(math.log(maxDigits) / math.log(\e[31m2\e[0m))))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDigits is already defined as \e[33mvalue\e[0m \e[35mmaxDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjzl0mkqa.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxDigits\e[0m = math.ceil(math.pow(\e\
    [31m10\e[0m, math.ceil(math.log(maxDigits) / ma"
  stdout: ''
  timestamp: 1660010483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary.charAt(i).toInt\n\
    \        }\n        sum.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzq0w37p9.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary.charAt(i).toInt\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        var i = 0\n        while (i < binary.length) {\n\
    \            val c = binary.charAt(i)\n            val d = c.toInt\n         \
    \   sum += d\n            i += 1\n        }\n        val result = sum.toBinaryString\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpthcg979c.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum += d\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val bin = binary.toCharArray\n        for(i <- 0\
    \ until bin.length){\n            sum += bin(i).toInt\n        }\n        binary.toCharArray.mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxqtr0ooe.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ArrayBuffer.empty[String]\n\
    \        var sum = 0\n        var i = 0\n        while (i < N) {\n           \
    \ val digit = N % 10\n            sum += digit\n            binary.append(digit.toString)\n\
    \            N /= 10\n            i += 1\n        }\n        val result = sum.toBinaryString\n\
    \        binary.reverse.foreach(x => result += x)\n        result\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfnik1c5x.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfnik1c5x.scala:19:14\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            N /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpfnik1c5x.scala:23:43 ------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        binary.reverse.foreach(\e[36mx\e[0m => result += x)\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            value += is not a member of String - did you mean result.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val bin = binary.toCharArray\n        var i = 0\n\
    \        while (i < bin.length) {\n            sum += bin(i).toInt\n         \
    \   i += 1\n        }\n        sum.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4ew98jfc.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += bin(i).toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        while(N !=0){\n            val temp = N % 2\n  \
    \          sum += temp\n            N /= 2\n        }\n        val temp = sum\n\
    \        while(temp != 0){\n            val temp = temp % 2\n            binary.append(temp.toString)\n\
    \            sum /= 2\n        }\n        binary.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0jtz80rz.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += temp\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0jtz80rz.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp0jtz80rz.scala:21:23 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m            \e[33mval\e[0m \e[36mtemp\e[0m = temp % \e[31m2\e[0m\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             Recursive \e[33mvalue\e[0m \e[35mtemp\e[0m needs type\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        val digits = scala.collection.mutable.ArrayBuffer.empty[Int]\n      \
    \  val digitSum = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ digitSums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val digitSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw63k9s3o.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpw63k9s3o.scala:33:5 ---------------------\e[0m\e[0m\n\e[31m33 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.StringBuilder()\n\
    \        var sum = 0\n        var remainder = N\n        while (remainder > 0)\
    \ {\n            sum += remainder % 2\n            remainder = remainder / 2\n\
    \        }\n        binary.append(sum)\n        binary.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n\
    \    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvj8csa70.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += remainder % \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n   \
    \     val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = bin\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj69muc3v.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpj69muc3v.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj69muc3v.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpj69muc3v.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj69muc3v.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is "
  stdout: ''
  timestamp: 1660010378
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- binary.indices) {\n            sum += binary(i)\n\
    \        }\n        binary.reverse.foldLeft(\"\")(_ + _)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb9zl9i9_.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += binary(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n\
    \        val sum = 0\n        for(i <- 0 until digits.length) sum += digits(i)\n\
    \        sum.toString.reverse\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr8gmo79b.scala:14:44 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until digits.length)\
    \ sum += digits(i)\n\e[31m\e[31m   |\e[0m                                    \
    \    ^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not a member of\
    \ Int - did you mean sum.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpr8gmo79b.scala:14:47\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e\
    [0m(i <- \e[31m0\e[0m until digits.length) sum += digits(i)\n\e[31m\e[31m   |\e\
    [0m                                               ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                   \e[33mvalue\e[0m \e[35mdigits\e[0m does not\
    \ take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]\n        for(i <- 0 until N) {\n          \
    \  val digit = i % 10\n            sum += digit\n            binary.append(digit)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_8gc2ztv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_8gc2ztv.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until N) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (N : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_8gc2ztv.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = scala.collection.mutable.StringBuilder()\n        for(i <- 0 until N.toInt){\n\
    \            val digit = N % 2\n            sum += digit\n            binary.append(digit)\n\
    \            N /= 2\n        }\n        binary.reverse\n        binary.toString\
    \ + sum.toString\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphood6xtt.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphood6xtt.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        var sum = 0\n        var remainder = 0\n        var remainderSum = 0\n\
    \        var remainderSum2 = 0\n        var remainderSum3 = 0\n        var remainderSum4\
    \ = 0\n        var remainderSum5 = 0\n        var remainderSum6 = 0\n        var\
    \ remainderSum7 = 0\n        var remainderSum8 = 0\n        var remainderSum9\
    \ = 0\n        var remainderSum10 = 0\n        var remainderSum11 = 0\n      \
    \  var remainderSum12 = 0\n        var remainderSum13 = 0\n        var remainderSum14\
    \ = 0\n        var remainderSum15 = 0\n        var remainderSum16 = 0\n      \
    \  var remainderSum17 = 0\n        var remainderSum18 = 0\n        var remainderSum19\
    \ = 0\n        var remainderSum20 = 0\n        var remainderSum21 = 0\n      \
    \  var remainderSum22 = 0\n        var remainderSum23 = 0\n        var remainderSum24\
    \ = 0\n        var remainderSum25 = 0\n        var remainderSum26 = 0\n      \
    \  var remainderSum27 = 0\n        var remainderSum28 = 0\n        var remainderSum29\
    \ = 0\n        var remainderSum30 = 0\n        var remainderSum31 = 0\n      \
    \  var remainderSum32 = 0\n        var remainderSum33 = 0\n        var remainderSum34\
    \ = 0\n        var remainderSum35 = 0\n        var remainderSum36 = 0\n      \
    \  var remainderSum37 = 0\n        var remainderSum38 = 0\n        var remainderSum39\
    \ = 0\n        var remainderSum40 = 0\n        var remainderSum41 = 0\n      \
    \  var remainderSum42 = 0\n        var remainderSum43 = 0\n        var remainderSum44\
    \ = 0\n        var remainderSum45 = 0\n        var remainderSum46 = 0\n      \
    \  var remainderSum47 = 0\n        var remainderSum48 = 0\n        var remainderSum49\
    \ = 0\n        var remainderSum50 = 0\n        var remainderSum51 = 0\n      \
    \  var remainderSum52 = 0\n        var remainderSum53 = 0\n        var remainderSum54\
    \ = 0\n        var remainderSum55 = 0\n        var remainderSum56 = 0\n      \
    \  var remainderSum57 = 0\n        var remainderSum58 = 0\n        var remainderSum59\
    \ = 0\n        var remainderSum60 = 0\n        var remainderSum61 = 0\n      \
    \  var remainderSum62 = 0\n        var remainderSum63 = 0\n        var remainderSum64\
    \ = 0\n        var remainderSum65 = 0\n        var remainderSum66 = 0\n      \
    \  var remainderSum67 = 0\n        var remainderSum68 = 0\n        var remainderSum69\
    \ = 0\n        var remainderSum70\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9jv_cpgz.scala:85:4 ----------------------------\e\
    [0m\e[0m\n\e[31m85 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp9jv_cpgz.scala:85:5 ---------------------\e[0m\e[0m\n\e[31m85 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val digits = N.toString.reverse.grouped(2).map(_.toInt)\n\
    \        val sum = 0\n        for (i <- 0 until digits.length) {\n           \
    \ sum += digits(i)\n        }\n        sum.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpacyy386j.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            sum += digits(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean sum.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpacyy386j.scala:15:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += digits(i)\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \          \e[33mvalue\e[0m \e[35mdigits\e[0m does not take parameters\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length - 1)\n        val sum = 0\n\
    \        for(i <- binary.indices) {\n            sum += binary(i)\n        }\n\
    \        binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp91q_qcep.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmp91q_qcep.scala:16:16 ------------------------\e[0m\e[0m\n\
    \e[31m16 |\e[0m            sum += binary(i)\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int - did\
    \ you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = scala.collection.mutable.ListBuffer[String]()\n\
    \        val digits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ remainder = N % 2\n        val quotient = N / 2\n        while (quotient > 0)\
    \ {\n            digits += quotient\n            quotient = quotient / 2\n   \
    \     }\n        digits += remainder\n        digits.reverse.foreach(x => binary\
    \ += x.toString)\n        binary.reverse.mkString(\"\")\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl4euaypm.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            digits += quotient\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (quotient : Long)\n\e[31m   |\e[0m              \
    \        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpl4euaypm.scala:18:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            quotient\
    \ = quotient / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val quotient\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl4euaypm.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        digits += remainder\n\e[31m\e[31m   |\e[0m  \
    \                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (remainder\
    \ : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.reverse\n        val binary = binary.toCharArray\n        val binary\
    \ = binary.map(x => if (x == '1') '0' else '1')\n        val binary = binary.mkString\n\
    \        binary.toUpperCase\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqfru_yl8.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqfru_yl8.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqfru_yl8.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.toCharArray\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqfru_yl8.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.map(\e[36mx\e[0m\
    \ => \e[33mif\e[0m (x == \e[31m'1'\e[0m) \e[31m'0'\e[0m \e[33melse\e[0m \e[31m'1'\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqfru_yl8.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.mkString\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        for(i <- 0 to binary.length - 1) {\n           \
    \ val digit = binary.charAt(i)\n            sum += digit.toInt\n        }\n  \
    \      val result = sum.toBinaryString\n        result + (if (result.length <\
    \ 8) \"0\" * (8 - result.length) else \"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnv89dqn6.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += digit.toInt\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val sum = 0\n        val binary\
    \ = new mutable.ListBuffer[String]()\n        while(N >=0){\n            val remainder\
    \ = N % 2\n            N /= 2\n            sum += remainder\n            binary.append(remainder)\n\
    \        }\n        binary.reverse.mkString(\"\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(solve((1000l)).equals((\"1\")));\n    assert(solve((150l)).equals((\"\
    110\")));\n    assert(solve((147l)).equals((\"1100\")));\n    assert(solve((333l)).equals((\"\
    1001\")));\n    assert(solve((963l)).equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpca0_gfjy.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpca0_gfjy.scala:16:14\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            N /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean N.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpca0_gfjy.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            sum += remainder\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    // Example\n    // Variables:\n    // @N integer\n    // Constraints:\
    \ 0 \u2264 N \u2264 10000.\n    // Output:\n    // a string of binary number\n\
    \    def solve(N : Long) : String = {\n        val binary = N.toBinaryString\n\
    \        val sum = 0\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.reverse\n        val binary\
    \ = \n    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
    1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
    1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpk3fpus48.scala:69:20 ---------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk3fpus48.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk3fpus48.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk3fpus48.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpk3fpus48.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel de"
  stdout: ''
  timestamp: 1660010495

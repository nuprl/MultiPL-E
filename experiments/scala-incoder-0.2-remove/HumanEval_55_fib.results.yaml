language: scala
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxcx8238t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4wahke0.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.head\n   \
    \     fibs += fibs.tail.head\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzwaf0x2.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqud5enca.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5vxp91zz.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        for(i <- 1 to n) {\n   \
    \         fibs += fibs.head\n        }\n        fibs.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphxud7l1l.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphxud7l1l.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foldLeft(fibs.head) {\
    \ (acc, x) => acc + x }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8lzbw3zf.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh9e9014.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpon5ivia_.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(n) { fibs(n-1)\
    \ + fibs(n-2)}\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcrrym60j.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9j5yhqj9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh9e9014.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4wahke0.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6gvxv0vy.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) {\n            return n\n        }\n        else\
    \ {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n     \
    \   fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n     \
    \   fibs += 9\n        fibs += 10\n        fibs += 11\n        fibs += 12\n  \
    \      fibs += 13\n        fibs += 14\n        fibs += 15\n        fibs += 16\n\
    \        fibs += 17\n        fibs += 18\n        fibs += 19\n        fibs += 20\n\
    \        fibs += 21\n        fibs += 22\n        fibs += 23\n        fibs += 24\n\
    \        fibs += 25\n        fibs += 26\n        fibs += 27\n        fibs += 28\n\
    \        fibs += 29\n        fibs += 30\n        fibs += 31\n        fibs += 32\n\
    \        fibs += 33\n        fibs += 34\n        fibs += 35\n        fibs += 36\n\
    \        fibs += 37\n        fibs += 38\n        fibs += 39\n        fibs += 40\n\
    \        fibs += 41\n        fibs += 42\n        fibs += 43\n        fibs += 44\n\
    \        fibs += 45\n        fibs += 46\n        fibs += 47\n        fibs += 48\n\
    \        fibs += 49\n        fibs += 50\n        fibs += 51\n        fibs += 52\n\
    \        fibs += 53\n        fibs += 54\n        fibs += 55\n        fibs += 56\n\
    \        fibs += 57\n        fibs += 58\n        fibs += 59\n        fibs += 60\n\
    \        fibs += 61\n        fibs += 62\n        fibs += 63\n        fibs += 64\n\
    \        fibs += 65\n        fibs += 66\n        fibs += 67\n        fibs += 68\n\
    \        fibs += 69\n        fibs += 70\n        fibs += 71\n        fibs += 72\n\
    \        fibs += 73\n        fibs += 74\n        fibs += 75\n        fibs += 76\n\
    \        fibs += 77\n        fibs += 78\n        fibs += 79\n        fibs += 80\n\
    \        fibs += 81\n        fibs += 82\n        fibs += 83\n        fibs += 84\n\
    \        fibs += 85\n        fibs += 86\n        fibs += 87\n        fibs += 88\n\
    \        fibs += 89\n        fibs += 90\n        fibs += 91\n        fibs += 92\n\
    \        fibs += 93\n        fibs += 94\n        fibs += 95\n        fibs += 96\n\
    \        fibs += 97\n        fibs += 98\n        fibs += 99\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_au9awc7.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foldLeft(fibs.head) {\
    \ (acc, x) => acc + x }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8lzbw3zf.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs ::: fibs.tail.takeWhile(_\
    \ < n).map(x => fibs.last + fibs.last)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppjr_1h4k.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs(0) + 1\n  \
    \      fibs += fibs(1) + 1\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhbuv5v1.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_4qq2e76.scala:10)\n\tat Problem.main(tmp_4qq2e76.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh9e9014.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(n,fibs(n-1)+fibs(n-2))\
    \ \n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8mtmj0d3.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs(0) + 1\n  \
    \      fibs += fibs(0) + 1\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps4lqqcyn.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs += fibs.tail.head\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl2up8o9x.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz29665qw.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978619
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsoftci74.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh9e9014.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size < n) {\n\
    \            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpft_ldqb5.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length < n)\
    \ {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpodcqlpof.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpttcn_6bl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size < n) {\n\
    \            fibs += fibs.head + fibs.tail.head\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzv8lknf9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsoftci74.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2k300hxs.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqud5enca.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwzmxrv5a.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs take n foreach fibs.+=\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv42wse42.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz6h1ulvd.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += fibs.last\n        fibs.drop(1).dropRight(1).foldLeft(fibs.last)\
    \ { case (acc, x) => acc + x }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzy88lg_e.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs += fibs.last\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpng22y0an.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37q_ri5f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz1wwv7_m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        while(fibs.length < n) {\n\
    \            fibs += fibs.head + fibs.last\n        }\n        fibs(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfx18stzd.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs += fibs(n - 1) + fibs(n - 2)\n\
    \        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2zsaade6.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs += fibs.last\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8kmccelb.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs take n foreach { x => fibs += fibs.last\
    \ + fibs.last }\n        fibs last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpfv1v1fjw.scala:11:17 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfv1v1fjw.scala:6:19\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m  \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37q_ri5f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(0, 1)\n        fibs += fibs.head\n    \
    \    fibs += fibs.tail.head\n        fibs.drop(n - 1).head\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzi5etkfy.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs take n foreach { x => fibs += fibs.last\
    \ + fibs.last }\n        fibs last + 1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_i9eibg.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsoftci74.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh9e9014.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs(0) + 1\n  \
    \      fibs += fibs(1) + 1\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhbuv5v1.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo_mytswr.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978625
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_4qq2e76.scala:10)\n\tat Problem.main(tmp_4qq2e76.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length < n)\
    \ {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpodcqlpof.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptilpwwot.scala:10)\n\tat Problem.main(tmptilpwwot.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n - 1) + fib(n - 2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n     \
    \   fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n     \
    \   fibs += 9\n        fibs += 10\n        fibs += 11\n        fibs += 12\n  \
    \      fibs += 13\n        fibs += 14\n        fibs += 15\n        fibs += 16\n\
    \        fibs += 17\n        fibs += 18\n        fibs += 19\n        fibs += 20\n\
    \        fibs += 21\n        fibs += 22\n        fibs += 23\n        fibs += 24\n\
    \        fibs += 25\n        fibs += 26\n        fibs += 27\n        fibs += 28\n\
    \        fibs += 29\n        fibs += 30\n        fibs += 31\n        fibs += 32\n\
    \        fibs += 33\n        fibs += 34\n        fibs += 35\n        fibs += 36\n\
    \        fibs += 37\n        fibs += 38\n        fibs += 39\n        fibs += 40\n\
    \        fibs += 41\n        fibs += 42\n        fibs += 43\n        fibs += 44\n\
    \        fibs += 45\n        fibs += 46\n        fibs += 47\n        fibs += 48\n\
    \        fibs += 49\n        fibs += 50\n        fibs += 51\n        fibs += 52\n\
    \        fibs += 53\n        fibs += 54\n        fibs += 55\n        fibs += 56\n\
    \        fibs += 57\n        fibs += 58\n        fibs += 59\n        fibs += 60\n\
    \        fibs += 61\n        fibs += 62\n        fibs += 63\n        fibs += 64\n\
    \        fibs += 65\n        fibs += 66\n        fibs += 67\n        fibs += 68\n\
    \        fibs += 69\n        fibs += 70\n        fibs += 71\n        fibs += 72\n\
    \        fibs += 73\n        fibs += 74\n        fibs += 75\n        fibs += 76\n\
    \        fibs += 77\n        fibs += 78\n        fibs += 79\n        fibs += 80\n\
    \        fibs += 81\n        fibs += 82\n        fibs += 83\n        fibs += 84\n\
    \        fibs += 85\n        fibs += 86\n        fibs += 87\n        fibs += 88\n\
    \        fibs += 89\n        fibs += 90\n        fibs += 91\n        fibs += 92\n\
    \        fibs += 93\n        fibs += 94\n        fibs += 95\n        fibs += 96\n\
    \        fibs += 97\n        fibs += 98\n        fibs += 99\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_au9awc7.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.drop(n - 1).head\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp94js779x.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9j5yhqj9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs take n foreach { x => fibs += fibs(x\
    \ - 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpahyca2k2.scala:11:17 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpahyca2k2.scala:6:19\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74ejr1km.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqud5enca.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs += fibs.tail.head\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdlop1n4p.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foreach(fibs.head)\n \
    \       fibs.take(n).last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxwh9ikm.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz29665qw.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978619
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs(0) + 1\n \
    \       fibs += fibs(1) + 1\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkg_9yo8e.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += fibs(0) + 1\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfgo0xnyl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxcx8238t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxcx8238t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.drop(1).foldLeft(0)((acc, x) => acc +\
    \ x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vncjaov.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0,1)\n        for(i <- 1 to n) {\n   \
    \         fibs += fibs(i-1) + fibs(i-2)\n        }\n        fibs(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp71l26rbq.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp71l26rbq.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length < n)\
    \ {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpodcqlpof.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foreach(fibs.head)\n \
    \       fibs.take(n).sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_qt_kfo.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqud5enca.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length < n)\
    \ {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpodcqlpof.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs.take(n).foldLeft(0)((acc,\
    \ x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0f1jw7vh.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(1).head\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0utngh5t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(n,fibs(n+1))\n\
    \        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo4kr6xpu.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978628
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsoftci74.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs take n foreach fibs.+=\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv42wse42.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo_mytswr.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978625
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        while(fibs.length < n)\
    \ {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpexf9jbxm.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz1wwv7_m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz1wwv7_m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsuwa7bui.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978628
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz1wwv7_m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs.take(n).foldLeft(0)((x,y)\
    \ => x+y)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk0l1u30g.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978628
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length < n)\
    \ {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpodcqlpof.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) {\n            return n\n        }\n        else\
    \ {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9j5yhqj9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxcx8238t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs take n foreach { fibs =>\n    \
    \        fibs -= 2\n            fibs -= 1 \n            fibs -= 1\n        }\n\
    \        fibs last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_u98mvmg.scala:15:17 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_u98mvmg.scala:6:19\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foldLeft(fibs.head) {\
    \ (a, b) => a + b }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnsxetoqz.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.last\n        fibs.drop(1).foldLeft(fibs.last) {\
    \ case (acc, n) => acc + n }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpix4g7afk.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_kz6t4v.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz1wwv7_m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxcx8238t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size < n) {\n\
    \            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpft_ldqb5.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(0, 1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnjxvn_sp.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(1).head\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0utngh5t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foreach(fibs.head)\n \
    \       fibs.take(n).sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_qt_kfo.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs.take(n).foldLeft(0)((acc,\
    \ x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0f1jw7vh.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(1).head\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0utngh5t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978627
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptilpwwot.scala:10)\n\tat Problem.main(tmptilpwwot.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_kz6t4v.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37q_ri5f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.tail.scanLeft(0)(_\
    \ + _)\n            .takeWhile(_ < n)\n            .last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppolmpbb_.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += fibs(0) + 1\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfgo0xnyl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs.drop(n - 1).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeqoyysvj.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsoftci74.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        for (i <- 1 to n) {\n  \
    \          fibs += fibs.last\n        }\n        fibs.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2jfudwsp.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2jfudwsp.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz1wwv7_m.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978622
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs.update(_+_))\n\
    \        fibs.take(n).last\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprfzwqiq2.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(n) {fibs(n-1)\
    \ + fibs(n-2)}\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq0osso_e.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).head\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfceb_odm.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foldLeft(fibs.head)((a,\
    \ b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmple1dm6ur.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs.drop(1).foldLeft(fibs.head)((a,\
    \ b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmple1dm6ur.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz6h1ulvd.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.last\n        fibs.drop(1).foreach(fibs.updated)\n\
    \        fibs.take(n).last\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjkt3n544.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs ::: fibs.tail.takeWhile(_\
    \ < n).map(x => fibs.last + fibs.last)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppjr_1h4k.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs take n foreach { x => fibs += fibs(x\
    \ - 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpahyca2k2.scala:11:17 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpahyca2k2.scala:6:19\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.head\n   \
    \     fibs += fibs.tail\n        fibs.take(n).sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw018u0mq.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxcx8238t.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.head\n   \
    \     fibs += fibs.tail\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3xwabub9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs take n foreach { x => fibs += fibs(x\
    \ - 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpahyca2k2.scala:11:17 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpahyca2k2.scala:6:19\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs += 2\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf_jijgtq.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n   \
    \     fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9j5yhqj9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(n,fibs(n-1)+fibs(n-2))\
    \ \n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8mtmj0d3.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size < n) {\n\
    \            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpft_ldqb5.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978620
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) n\n        else fib(n - 1) + fib(n - 2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978628
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_4qq2e76.scala:10)\n\tat Problem.main(tmp_4qq2e76.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptilpwwot.scala:10)\n\tat Problem.main(tmptilpwwot.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_kz6t4v.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978629
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0 || n == 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqgxwh9kb.scala:10)\n\tat Problem.main(tmpqgxwh9kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.take(n).drop(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gsmxc6l.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs =>\
    \ fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz6h1ulvd.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += 2\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37q_ri5f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer(1,1)\n        fibs += fibs.last\n     \
    \   fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9hkjgexo.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978632
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n        fibs\
    \ += 1\n        fibs += fibs.head\n        fibs += fibs.tail.head\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdlop1n4p.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978626
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) +\
    \ fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n    \
    \    fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh9e9014.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n\
    \        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkx3wi0wm.scala:10)\n\tat Problem.main(tmpkx3wi0wm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978617

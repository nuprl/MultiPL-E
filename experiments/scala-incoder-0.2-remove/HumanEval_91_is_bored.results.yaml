language: scala
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhl_fa5v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\"\\\\W+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.toList.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr5t2rbgg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp528962yk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size + 1\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo31j6y5j.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1105s7ji.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp13v1rtr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0j3h3rum.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vnlgl15.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vnlgl15.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        for (sentence\
    \ <- sentences) {\n            if (sentence.startsWith(\"i\")) {\n           \
    \     boredoms += sentence\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphrjw3_u2.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy85mss3t.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphzgpz18s.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            val boredomStart = sentence.indexOf(\"I\")\n            if (boredomStart\
    \ != -1) {\n                boredoms += sentence\n            }\n        }\n \
    \       boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphv25shgw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredomWords.foreach(word => boredoms += word)\n        })\n    \
    \    boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpit8gqdrf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            val boredom = (sentence startsWith \"I\")\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u9jybbr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredoms = sentence.startsWith(\"I\") match {\n      \
    \          case true => boredoms += sentence\n                case false => boredoms\
    \ += \"I\"\n            }\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph3acnt3b.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n   \
    \     })\n        boredoms.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp48qaxn10.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredom = \"I\" in sentence\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp959uq542.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp959uq542.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mboredom\e[0m = \e[31m\"\
    I\"\e[0m in sentence\n\e[31m\e[31m   |\e[0m                          ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value in is not a member of String\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978789
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  val boredomWord = word.substring(0,1)\n            if(boredomWord.equals(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq72_kcok.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vnlgl15.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for (word <- words) {\n         \
    \   if (word.startsWith(\"I\")) {\n                boredoms += word\n        \
    \    }\n        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8u2rnmzq.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       val boredomWord = word.startsWith(\"I\")\n            if(boredomWord)\
    \ {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0m1pv4bv.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb6_wdo3v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp13v1rtr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnulnfm6k.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1105s7ji.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence)\n \
    \           }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt31wsgx2.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp13v1rtr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence.substring(0,boredomStart))\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6j9oi3l_.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\W+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mugb4if.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            val boredomStart = sentence.indexOf(\"I\")\n            if (boredomStart\
    \ != -1) {\n                boredoms += sentence\n            }\n        }\n \
    \       boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzba8ngd9.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"[.?!]\").foreach(s => if (s.startsWith(\"I\")) boredoms +=\
    \ s)\n        boredoms.count(_ == \"I\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpponbmbrw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.count(_ == \"I\")\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwmttvhrg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for (word <- words) {\n         \
    \   if (word.startsWith(\"I\")) {\n                boredoms += word\n        \
    \    }\n        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8u2rnmzq.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvu5p1e0i.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredom = \"I\" in sentence\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp959uq542.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp959uq542.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mboredom\e[0m = \e[31m\"\
    I\"\e[0m in sentence\n\e[31m\e[31m   |\e[0m                          ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value in is not a member of String\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978789
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for (word <- words) {\n    \
    \        if (word.startsWith(\"I\")) {\n                boredoms += word\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoww65q4c.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhl_fa5v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd4ro8vjf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp13v1rtr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2c0ls94o.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy85mss3t.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp13v1rtr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart >= 0) {\n                boredoms += sentence\n    \
    \        }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnbgq_5_l.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.count\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptoskl0ox.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7onkcyky.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6gptno93.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredom = \"I\" in sentence\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp959uq542.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp959uq542.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mboredom\e[0m = \e[31m\"\
    I\"\e[0m in sentence\n\e[31m\e[31m   |\e[0m                          ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value in is not a member of String\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978789
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.toList.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2zvx2mf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(w <- words) {\n        \
    \    if(w.startsWith(\"I\")) {\n                boredoms += w\n            }\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19ghog5y.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            val boredom = \"I\".equals(sentence.substring(0, 1))\n     \
    \       if (boredom) boredoms += sentence\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp92clfw5r.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomIndex = sentence.indexOf(\"i\")\n    \
    \        if (boredomIndex > 0) {\n                boredoms += sentence\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpojfz0y14.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"\\\\.\")\n        sentences.foreach(sentence\
    \ => {\n            val boredoms = sentence.split(\"\\\\?\").length\n        \
    \    boredoms += \"?\"\n            boredoms += \"!\"\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbl7dtjs9.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbl7dtjs9.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            boredoms += \e[31m\"?\"\e[0m\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean boredoms.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpbl7dtjs9.scala:14:21 ------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m            boredoms += \e[31m\"!\"\e[0m\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean boredoms.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659978800
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredom = \"I\" in sentence\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp959uq542.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp959uq542.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mboredom\e[0m = \e[31m\"\
    I\"\e[0m in sentence\n\e[31m\e[31m   |\e[0m                          ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value in is not a member of String\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978789
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi5ccpose.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcyk_5mlk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomIndex = sentence.indexOf(\"i\")\n    \
    \        if (boredomIndex > 0) {\n                boredoms += sentence\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpojfz0y14.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp528962yk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhl_fa5v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence.substring(0,boredomStart))\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6j9oi3l_.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1105s7ji.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vnlgl15.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.count(_ == \"I\")\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwmttvhrg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzip_tzc5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\"\\\\s+\")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq2ur9q1c.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp34lw8stj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp528962yk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredomWords.foreach(word => {\n                if (boredoms.contains(word))\
    \ {\n                    boredoms += word\n                }\n            })\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph_vxl5a_.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        words.foreach(w => if (w.startsWith(\"\
    I\")) boredoms += w)\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmrbm1di0.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvu5p1e0i.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            if\
    \ (boredomStart != -1) {\n                boredoms.add(sentence.substring(0,boredomStart))\n\
    \            }\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i_9t009.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp528962yk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzip_tzc5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy85mss3t.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        words.foreach(w => if (w.startsWith(\"\
    I\")) boredoms += w)\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmlmrokcp.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4d1z04e.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.toList.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2zvx2mf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            val boredomStart = sentence.indexOf(\"I\")\n            if (boredomStart\
    \ != -1) {\n                boredoms += sentence\n            }\n        }\n \
    \       boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzba8ngd9.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomIndex = sentence.indexOf(\"i\")\n    \
    \        if (boredomIndex >= 0) {\n                boredoms += sentence\n    \
    \        }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8zn5h5z.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.toList.size\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuaalaadp.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms.add(sentence.substring(0,boredomStart))\n\
    \            }\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9tll8e_f.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqp9grc72.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4d1z04e.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy1ews9_1.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart >= 0) {\n                boredoms += sentence\n    \
    \        }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnbgq_5_l.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp528962yk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4d1z04e.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredom = \"I\" in sentence\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp959uq542.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp959uq542.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mboredom\e[0m = \e[31m\"\
    I\"\e[0m in sentence\n\e[31m\e[31m   |\e[0m                          ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value in is not a member of String\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978789
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredom = \"I\".equals(sentence(0))\n       \
    \     boredoms += sentence if boredom\n        }\n        boredoms.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"))\
    \ == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpefje5930.scala:13:33 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            boredoms += sentence \e[33mif\e[0m boredom\n\
    \e[31m\e[31m   |\e[0m                                 ^^\e[0m\n\e[31m   |\e[0m\
    \                                end of statement expected but 'if' found\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpefje5930.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp13v1rtr.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4d1z04e.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            val boredom = sentence.startsWith(\"I\")\n            if (boredom)\
    \ boredoms += sentence\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx5kmr4qk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmwtjwjmz.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb6_wdo3v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        words.foreach(w => if (w.startsWith(\"\
    I\")) boredoms += w)\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzldve2s3.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnulnfm6k.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"I\")\n            boredomWords.foreach(boredomWord\
    \ => {\n                boredoms += boredomWord\n            })\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1l3ltzma.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyaw1z43u.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\"\\\\W+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx2piqrds.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd4ro8vjf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredom = sentence.startsWith(\"I\")\n            if (boredom)\
    \ boredoms += sentence\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyhf744lf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978805
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy85mss3t.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"\\\\.|\\\\?|\\\\!\")\n        for (sentence\
    \ <- sentences) {\n            if (sentence.startsWith(\"I\")) {\n           \
    \     boredoms += sentence\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5d0n76zo.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"I\")\n            boredomWords.foreach(boredomWord\
    \ => {\n                boredoms.add(boredomWord)\n            })\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp71yuwc55.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            val\
    \ boredomEnd = sentence.indexOf(\"I\", boredomStart + 1)\n            if (boredomStart\
    \ != -1 && boredomEnd != -1) {\n                boredoms += sentence\n       \
    \     }\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy40tjc_4.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_d417d5.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnulnfm6k.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vnlgl15.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.toList.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2zvx2mf.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb6_wdo3v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9tq68q12.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(w <- words) {\n        \
    \    if(w.startsWith(\"I\")) {\n                boredoms += w\n            }\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5lbjl2jx.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqp9grc72.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2c0ls94o.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4d1z04e.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        }\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm3xq2gr9.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqp9grc72.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp528962yk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn7286pnm.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.count\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2jsad73i.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8vnlgl15.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9tq68q12.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence.substring(boredomStart))\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2ni5g5xu.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\"\\\\s+\")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq2ur9q1c.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5biqcy9h.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978795
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4d1z04e.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\s+\")\n        for(word <- words) {\n     \
    \       if(word.startsWith(\"I\")) {\n                boredoms += word\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqp9grc72.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978803
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val boredoms = sentence.startsWith(\"I\")\n            boredoms\
    \ += sentence\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppmbvy0jc.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmppmbvy0jc.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            boredoms += sentence\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         value += is not a member\
    \ of Boolean - did you mean boredoms.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978808
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakhwyryw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978796
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcyk_5mlk.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978802
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy85mss3t.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhl_fa5v.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.Set[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\"\\\\s+\")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj02oz4a.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += word\n      \
    \      }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg_uqrpeg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ def isBored(S : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz3su_2fj.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978788

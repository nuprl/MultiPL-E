name: HumanEval_135_can_arrange
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function which returns the largest index of an element which\n\
  \    // is not greater than or equal to the element immediately preceding it. If\n\
  \    // no such element exists then return -1. The given array will not contain\n\
  \    // duplicate values.\n    // Examples:\n    def canArrange(arr : List[Long])\
  \ : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))) == (3l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 5l.toLong))) == (-1l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 4l.toLong, 2l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong, 10l.toLong)))\
  \ == (2l));\n    assert(canArrange((List[Long](4l.toLong, 8l.toLong, 5l.toLong,\
  \ 7l.toLong, 3l.toLong))) == (4l));\n    assert(canArrange((List[Long]())) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        val maxIndex = arr.indexWhere(x => x < arr(0))\n        if\
    \ (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) >= maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1) {\n            return -1\n        }\n        return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val maxIndex2\
    \ = arr.indexOfMax(x => x <= maxValue)\n        if (maxIndex2 == -1) {\n     \
    \       return -1\n        }\n        if (maxIndex2 > maxIndex) {\n          \
    \  return maxIndex2\n        }\n        return maxIndex", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i<-0 until arr.length) {\n\
    \            if (arr(i) <= maxValue) {\n                maxValue = arr(i)\n  \
    \              maxIndex = i\n            }\n        }\n        return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 1\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) <= maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = index\n       \
    \     }\n            index += 1\n        }\n        return maxIndex", "      \
    \  val m = arr.head\n        val n = arr.last\n        var maxIndex = -1\n   \
    \     var maxVal = m\n        var index = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) < maxVal) {\n                maxVal = arr(i)\n   \
    \             index = i\n            }\n        }\n        if (maxVal > m) {\n\
    \            maxIndex = index\n        }\n        maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex - 1",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) return -1\n\
    \        if (maxIndex == 0) return 0\n        val maxValue = arr(maxIndex)\n \
    \       val maxIndex2 = arr.lastIndexWhere(x => x <= maxValue)\n        if (maxIndex2\
    \ == -1) return -1\n        if (maxIndex2 == 0) return 0\n        val maxValue2\
    \ = arr(maxIndex2)\n        val maxIndex3 = arr.lastIndexWhere(x => x <= maxValue2)\n\
    \        if (maxIndex3 == -1) return -1\n        if (maxIndex3 == 0) return 0\n\
    \        val maxValue3 = arr(maxIndex3)\n        val maxIndex4 = arr.lastIndexWhere(x\
    \ => x <= maxValue3)\n        if (maxIndex4 == -1) return -1\n        if (maxIndex4\
    \ == 0) return 0\n        val maxValue4 = arr(maxIndex4)\n        val maxIndex5\
    \ = arr.lastIndexWhere(x => x <= maxValue4)\n        if (maxIndex5 == -1) return\
    \ -1\n        if (maxIndex5 == 0) return 0\n        val maxValue5 = arr(maxIndex5)\n\
    \        val maxIndex6 = arr.lastIndexWhere(x => x <= maxValue5)\n        if (maxIndex6\
    \ == -1) return -1\n        if (maxIndex6 == 0) return 0\n        val maxValue6\
    \ = arr(maxIndex6)\n        val maxIndex7 = arr.lastIndexWhere(x => x <= maxValue6)\n\
    \        if (maxIndex7 == -1) return -1\n        if (maxIndex7 == 0) return 0\n\
    \        val maxValue7 = arr(maxIndex7)\n        val maxIndex8 = arr.lastIndexWhere(x\
    \ => x <= maxValue7)\n        if (maxIndex8 == -1) return -1\n        if (maxIndex8\
    \ == 0) return 0\n        val maxValue8 = arr(maxIndex8)\n        val maxIndex9\
    \ = arr.lastIndexWhere(x => x <= maxValue8)\n        if (maxIndex9 == -1) return\
    \ -1\n        if (maxIndex9 == 0) return 0\n        val maxValue9 = arr(maxIndex9)\n\
    \        val maxIndex10 = arr.lastIndexWhere(x => x <= maxValue9)\n        if\
    \ (maxIndex10 == -1) return -1\n        if (maxIndex10 == 0) return 0\n      \
    \  val maxValue10 = arr(maxIndex10)\n        val maxIndex11 = arr.lastIndexWhere(x\
    \ => x <= maxValue10)\n        if (maxIndex11 == -1) return -1\n        if (maxIndex11\
    \ == 0) return 0\n        val maxValue11 = arr(maxIndex11)\n        val maxIndex12\
    \ = arr.lastIndexWhere(x => x <= maxValue11)\n        if (maxIndex12 == -1) return\
    \ -1\n        if (maxIndex12 == 0) return 0\n", "        var maxIndex = 0\n  \
    \      var maxValue = arr(0)\n        for (i <- 1 until arr.length) {\n      \
    \      if (arr(i) > maxValue) {\n                maxValue = arr(i)\n         \
    \       maxIndex = i\n            }\n        }\n        maxIndex", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val maxIndex2\
    \ = arr.lastIndexWhere(x => x >= maxValue)\n        if (maxIndex2 == -1) {\n \
    \           return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n   \
    \     if (maxValue > maxValue2) {\n            return maxIndex\n        } else\
    \ {\n            return maxIndex2\n        }", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) return -1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val ", "        val maxIndex = 0\n        var maxValue =\
    \ arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        maxIndex", "        val max = arr.max\n        val\
    \ maxIndex = arr.indexWhere(x => x <= max)\n        if (maxIndex == -1) {\n  \
    \          return -1\n        }\n        val maxPrev = arr.indexWhere(x => x >\
    \ max)\n        if (maxPrev == -1) {\n            return -1\n        }\n     \
    \   if (maxIndex == maxPrev) {\n            return maxIndex\n        }\n     \
    \   val maxNext = arr.indexWhere(x => x < max)\n        if (maxNext == -1) {\n\
    \            return -1\n        }\n        if (maxIndex == maxNext) {\n      \
    \      return maxIndex\n        }\n        val maxNextPrev = arr.indexWhere(x\
    \ => x > max)\n        if (maxNextPrev == -1) {\n            return -1\n     \
    \   }\n        if (maxIndex == maxNextPrev) {\n            return maxIndex\n \
    \       }\n        val maxNextNext = arr.indexWhere(x => x < max)\n        if\
    \ (maxNextNext == -1) {\n            return -1\n        }\n        if (maxIndex\
    \ == maxNextNext) {\n            return maxIndex\n        }\n        val maxNextNextPrev\
    \ = arr.indexWhere(x => x > max)\n        if (maxNextNextPrev == -1) {\n     \
    \       return -1\n        }\n        if (maxIndex == maxNextNextPrev) {\n   \
    \         return maxIndex\n        }\n        val maxNextNextNext = arr.indexWhere(x\
    \ => x < max)\n        if (maxNextNextNext == -1) {\n            return -1\n \
    \       }\n        if (maxIndex == maxNextNextNext) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextPrev = arr.indexWhere(x => x > max)\n \
    \       if (maxNextNextNextPrev == -1) {\n            return -1\n        }\n \
    \       if (maxIndex == maxNextNextNextPrev) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNext = arr.indexWhere(x => x < max)\n \
    \       if (maxNextNextNextNext == -1) {\n            return -1\n        }\n \
    \       if (maxIndex == maxNextNextNextNext) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextPrev = arr.indexWhere(x => x > max)\n\
    \        if (maxNextNextNextNextPrev == -1) {\n            return -1\n       \
    \ }\n        if (maxIndex == maxNextNextNextNextPrev) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNext = arr.indexWhere(x => x < max)\n\
    \        if (maxNextNextNextNextNext == -1) {\n            return -1\n       \
    \ }\n        if (maxIndex == maxNextNextNextNextNext) {\n            return maxIndex\n\
    \        }\n        val maxNextNextNextNextNextPrev = arr.indexWhere(x => x >\
    \ max)\n        if (maxNextNextNextNextNextPrev == -1) {\n            return -1",
  "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ < 0) -1 else maxIndex", "        var maxIndex : Long = -1\n        var maxValue\
    \ : Long = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ i\n            }\n        }\n        if (maxIndex == -1) {\n            return\
    \ -1\n        }\n        return maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) return -1\n        if (maxIndex == 0) return 0\n\
    \        val maxValue = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(x\
    \ => x <= maxValue)\n        if (maxIndex2 == -1) return -1\n        if (maxIndex2\
    \ == 0) return 0\n        val maxValue2 = arr(maxIndex2)\n        if (maxValue\
    \ > maxValue2) return maxIndex\n        else return maxIndex2", "        val maxIndex\
    \ = arr.indexWhere(x => x < arr(0))\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax(x => x >= arr(arr.indexOf(x)\
    \ - 1))\n        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.indexOfMax(arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) return -1\n\
    \        if (maxIndex == 0) return 0\n        val maxValue = arr(maxIndex)\n \
    \       val maxIndex2 = arr.lastIndexWhere(x => x <= maxValue)\n        if (maxIndex2\
    \ == -1) return -1\n        if (maxIndex2 == 0) return 0\n        val maxValue2\
    \ = arr(maxIndex2)\n        val maxIndex3 = arr.lastIndexWhere(x => x <= maxValue2)\n\
    \        if (maxIndex3 == -1) return -1\n        if (maxIndex3 == 0) return 0\n\
    \        val maxValue3 = arr(maxIndex3)\n        val maxIndex4 = arr.lastIndexWhere(x\
    \ => x <= maxValue3)\n        if (maxIndex4 == -1) return -1\n        if (maxIndex4\
    \ == 0) return 0\n        val maxValue4 = arr(maxIndex4)\n        val maxIndex5\
    \ = arr.lastIndexWhere(x => x <= maxValue4)\n        if (maxIndex5 == -1) return\
    \ -1\n        if (maxIndex5 == 0) return 0\n        val maxValue5 = arr(maxIndex5)\n\
    \        val maxIndex6 = arr.lastIndexWhere(x => x <= maxValue5)\n        if (maxIndex6\
    \ == -1) return -1\n        if (maxIndex6 == 0) return 0\n        val maxValue6\
    \ = arr(maxIndex6)\n        val maxIndex7 = arr.lastIndexWhere(x => x <= maxValue6)\n\
    \        if (maxIndex7 == -1) return -1\n        if (maxIndex7 == 0) return 0\n\
    \        val maxValue7 = arr(maxIndex7)\n        val maxIndex8 = arr.lastIndexWhere(x\
    \ => x <= maxValue7)\n        if (maxIndex8 == -1) return -1\n        if (maxIndex8\
    \ == 0) return 0\n        val maxValue8 = arr(maxIndex8)\n        val maxIndex9\
    \ = arr.lastIndexWhere(x => x <= maxValue8)\n        if (maxIndex9 == -1) return\
    \ -1\n        if (maxIndex9 == 0) return 0\n        val maxValue9 = arr(maxIndex9)\n\
    \        val maxIndex10 = arr.lastIndexWhere(x => x <= maxValue9)\n        if\
    \ (maxIndex10 == -1) return -1\n        if (maxIndex10 == 0) return 0\n      \
    \  val maxValue10 = arr(maxIndex10)\n        val maxIndex11 = arr.lastIndexWhere(x\
    \ => x <= maxValue10)\n        if (maxIndex11 == -1) return -1\n        if (maxIndex11\
    \ == 0) return 0\n        val maxValue11 = arr(maxIndex11)\n        val maxIndex12\
    \ = arr.lastIndexWhere(x => x <= maxValue11)\n        if (maxIndex12 == -1) return\
    \ -1\n        if (maxIndex12 == 0) return 0\n", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex <\
    \ 0) -1 else maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        var largest\
    \ = -1\n        var index = 0\n        for (i <- 0 until arr.length) {\n     \
    \       if (arr(i) > arr(largest)) {\n                largest = i\n          \
    \  }\n        }\n        if (largest == -1) {\n            return -1\n       \
    \ }\n        for (i <- 0 until arr.length) {\n            if (arr(i) != arr(largest)\
    \ && arr(i) > arr(largest)) {\n                index = i\n            }\n    \
    \    }\n        index", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex == -1) -1\n        else maxIndex - 1", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) >= maxValue) {\n                maxValue = arr(i)\n  \
    \              maxIndex = i\n            }\n        }\n        maxIndex", "  \
    \      var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.lastIndexWhere(x => x >= arr(arr.length-1))\n      \
    \  if (maxIndex < 0) -1\n        else maxIndex", "        val m = arr.head\n \
    \       val n = arr.last\n        val i = arr.indexOf(m) + 1\n        val j =\
    \ arr.indexOf(n) + 1\n        if (i <= j) {\n            if (m > n) {\n      \
    \          arr.indexOf(m) + 1\n            } else {\n                arr.indexOf(n)\
    \ + 1\n            }\n        } else {\n            -1\n        }", "        val\
    \ maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex < 0) -1 else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex - 1", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var index = 1\n        for (i <- arr.indices) {\n        \
    \    if (arr(i) < maxValue) {\n                maxValue = arr(i)\n           \
    \     maxIndex = i\n            }\n        }\n        if (maxIndex == arr.size\
    \ - 1) {\n            return -1\n        } else {\n            return maxIndex\n\
    \        }", "        val maxIndex = 0\n        val maxValue = arr(0)\n      \
    \  val maxIndexInArray = 0\n        for(i <- 0 until arr.length) {\n         \
    \   if(arr(i) > maxValue) {\n                maxValue = arr(i)\n             \
    \   maxIndex = i\n                maxIndexInArray = i\n            }\n       \
    \ }\n        if(maxIndexInArray == arr.length-1)\n            return -1\n    \
    \    return maxIndex", "        val maxIndex = 0\n        var maxValue = arr(0)\n\
    \        var index = 1\n        for(i <- 1 to arr.length) {\n            if(arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ index\n            }\n            index += 1\n        }\n        return maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex - 1", "        var maxIndex = 0\n        var maxValue = arr(0)\n  \
    \      var index = 0\n        for (i <- 0 until arr.length) {\n            if\
    \ (arr(i) <= maxValue) {\n                maxValue = arr(i)\n                index\
    \ = i\n            }\n        }\n        if (maxValue == arr(index)) {\n     \
    \       return -1\n        }\n        maxIndex", "        var maxIndex = 0\n \
    \       var maxVal = arr(0)\n        var index = 1\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = index\n            }\n            index +=\
    \ 1\n        }\n        if (maxIndex == arr.length) {\n            return -1\n\
    \        }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex < 0) -1\n        else maxIndex", "    \
    \    val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax(x =>\
    \ x >= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndexes = mutable.ArrayBuffer.empty[Long]\n        var maxIndex\
    \ = 0\n        var currentIndex = 0\n        var currentMax = 0\n        for (i\
    \ <- 0 until arr.length) {\n            if (arr(i) > arr(currentIndex)) {\n  \
    \              currentMax = arr(currentIndex)\n                currentIndex =\
    \ i\n            }\n            if (arr(i) > currentMax) {\n                maxIndexes\
    \ += currentIndex\n                currentMax = arr(i)\n            }\n      \
    \  }\n        if (maxIndexes.isEmpty) {\n            return -1\n        }\n  \
    \      maxIndexes.max", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex - 1", "        val maxIndexes = mutable.HashMap[Long,\
    \ Int]()\n        val maxIndex = -1\n        for (i <- 0 until arr.length) {\n\
    \            if (maxIndexes.getOrElse(arr(i), -1) < 0) {\n                maxIndexes.put(arr(i),\
    \ i)\n            }\n        }\n        maxIndexes.values.max", "        val maxIndex\
    \ = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex < 0) -1\n       \
    \ else maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr(0))\n \
    \       if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = 0\n        val maxValue = arr(0)\n        val maxIndexInArray = 0\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n   \
    \             maxValue = arr(i)\n                maxIndex = i\n              \
    \  maxIndexInArray = i\n            }\n        }\n        if (maxIndexInArray\
    \ == arr.length - 1) {\n            return -1\n        }\n        return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i<-0 until\
    \ arr.length) {\n            if (arr(i) >= maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        return\
    \ maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n   \
    \             maxIndex = i\n                maxValue = arr(i)\n            }\n\
    \        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x <\
    \ arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "        var\
    \ maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) <= maxValue) {\n                maxIndex = i\n   \
    \             maxValue = arr(i)\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val maxIndex2\
    \ = arr.lastIndexWhere(_ > maxValue)\n        if (maxIndex2 == -1) {\n       \
    \     return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n        if\
    \ (maxValue > maxValue2) {\n            return maxIndex\n        } else {\n  \
    \          return maxIndex2\n        }", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex <\
    \ 0) -1 else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue)\
    \ {\n                maxIndex = i\n                maxValue = arr(i)\n       \
    \     }\n        }\n        if (maxIndex == arr.length) -1\n        else maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n       \
    \ else maxIndex - 1", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        val maxIndexInd = 0\n        for (i <- 0 until arr.length) {\n      \
    \      if (arr(i) >= maxValue) {\n                maxValue = arr(i)\n        \
    \        maxIndexInd = i\n            }\n        }\n        if (maxIndexInd ==\
    \ arr.length - 1) {\n            return -1\n        }\n        return maxIndexInd",
  "        val maxIndex = arr.lastIndexWhere(x => x >= arr(0))\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val m = arr.head\n        val n = arr.last\n        val max = arr.max\n\
    \        val min = arr.min\n        val maxIndex = arr.indexWhere(x => x <= max)\n\
    \        val minIndex = arr.indexWhere(x => x >= min)\n        if (maxIndex <\
    \ minIndex) -1 else maxIndex", "        val maxIndex = arr.indexOfMax(x => x >=\
    \ arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "       \
    \ var maxIndex = 0\n        var maxValue = arr(0)\n        var maxIndexOfMaxValue\
    \ = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i) < maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \         maxIndexOfMaxValue = i\n            }\n        }\n        if (maxIndexOfMaxValue\
    \ == -1) {\n            return -1\n        }\n        return maxIndexOfMaxValue",
  "        val maxIndex = arr.lastIndexWhere(x => x < arr(0))\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val m = arr.head\n        var maxIndex\
    \ = 0\n        var maxVal = m\n        for (i <- 0 until arr.length) {\n     \
    \       if (arr(i) < maxVal) {\n                maxVal = arr(i)\n            \
    \    maxIndex = i\n            }\n        }\n        maxIndex", "        var maxIndex\
    \ = -1\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) >= maxValue) {\n                maxIndex = i\n       \
    \         maxValue = arr(i)\n            }\n        }\n        maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndexes = mutable.ListBuffer.empty[Long]\n\
    \        var maxIndex = 0\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) <= arr(maxIndex)) {\n                maxIndexes += maxIndex\n \
    \               maxIndex = i\n            }\n        }\n        maxIndexes +=\
    \ maxIndex\n        if (maxIndexes.isEmpty) -1\n        else maxIndexes.max",
  "        val maxIndex: Long = arr.indexOfMax(x => x >= arr.last)\n        if (maxIndex\
    \ == -1) return -1\n        maxIndex", "        val maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        for (i<-0 until arr.length) {\n            if (arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ i\n            }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1)\n            return -1\n        if (maxIndex == 0)\n\
    \            return arr.length\n        val maxValue = arr(maxIndex)\n       \
    \ val maxIndex1 = maxIndex - 1\n        val maxValue1 = arr(maxIndex1)\n     \
    \   if (maxValue <= maxValue1)\n            return maxIndex\n        else\n  \
    \          return maxIndex1", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i) < maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr(arr.lastIndex - 1))\n        if (maxIndex == -1) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n       \
    \ if (maxIndex < 0) -1 else maxIndex", "        var maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ i\n            }\n        }\n        maxIndex", "        val max = arr.max\n\
    \        val maxIndex = arr.indexWhere(x => x <= max)\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex - 1", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= arr(arr.indexOf(x) - 1))\n        if (maxIndex < 0) -1 else maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val maxIndex2\
    \ = arr.lastIndexWhere(x => x <= maxValue)\n        if (maxIndex2 == -1) {\n \
    \           return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n   \
    \     if (maxValue < maxValue2) {\n            return maxIndex\n        } else\
    \ {\n            return maxIndex2\n        }", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex\
    \ - 1", "        var maxIndex = 0\n        var maxVal = arr(0)\n        for (i\
    \ <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n             \
    \   maxVal = arr(i)\n                maxIndex = i\n            }\n        }\n\
    \        maxIndex", "        val m = arr.head\n        val n = arr.tail.head\n\
    \        val index = arr.indexOf(n)\n        if (index == -1) {\n            return\
    \ -1\n        }\n        if (arr(index) < m) {\n            return canArrange(arr.drop(index))\n\
    \        }\n        return canArrange(arr.drop(index).reverse)", "        val\
    \ maxIndex = arr.indexWhere(x => x < arr.last)\n        if (maxIndex < 0) -1\n\
    \        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x => x >=\
    \ arr(arr.length-1))\n        if (maxIndex == -1) -1\n        else maxIndex",
  "        var maxIndex = -1\n        var maxValue = arr(0)\n        var maxIndexInd\
    \ = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i) < maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \         maxIndexInd = i\n            }\n        }\n        if (maxIndexInd ==\
    \ -1) {\n            return -1\n        }\n        var maxIndexIndPrev = maxIndexInd\n\
    \        var maxIndexIndNext = maxIndexInd\n        var maxIndexIndNextPrev =\
    \ maxIndexInd\n        for (i <- 0 until arr.length) {\n            if (maxIndexInd\
    \ == maxIndexIndPrev) {\n                if (arr(i) > maxValue) {\n          \
    \          maxIndexIndPrev = i\n                    maxIndexIndNext = maxIndexInd\n\
    \                    maxIndexIndNextPrev = maxIndexInd\n                }\n  \
    \          } else if (maxIndexInd == maxIndexIndNext) {\n                if (arr(i)\
    \ < maxValue) {\n                    maxIndexIndPrev = maxIndexInd\n         \
    \           maxIndexIndNext = i\n                    maxIndexIndNextPrev = i\n\
    \                }\n            } else {\n                if (arr(i) < maxValue)\
    \ {\n                    maxIndexIndPrev = maxIndexInd\n                    maxIndexIndNext\
    \ = maxIndexIndNext\n                    maxIndexIndNextPrev = i\n           \
    \     }\n            }\n        }\n        if (maxIndexInd == maxIndexIndPrev)\
    \ {\n            if (arr(maxIndexInd) > maxValue) {\n                maxIndexIndPrev\
    \ = maxIndexInd\n                maxIndexIndNext = maxIndexInd\n             \
    \   maxIndexIndNextPrev = maxIndexInd\n            }\n        } else if (maxIndexInd\
    \ == maxIndexIndNext) {\n            if (arr(maxIndexInd) < maxValue) {\n    \
    \            maxIndexIndPrev = maxIndexInd\n                maxIndexIndNext =\
    \ maxIndexInd\n                maxIndexIndNextPrev = maxIndexInd\n           \
    \ }\n        } else {\n            if (arr(maxIndexInd) < maxValue) {\n      \
    \          maxIndexIndPrev = maxIndexInd\n                maxIndexIndNext = maxIndexIndNext\n\
    \                maxIndexIndNextPrev = maxIndexInd\n            }\n        }\n\
    \        if (maxIndexInd == maxIndexIndPrev) {\n            if (arr(maxIndexInd)\
    \ > maxValue) {\n                maxIndexIndPrev = maxIndexInd\n             \
    \   maxIndexIndNext = maxIndexInd\n                maxIndexIndNextPrev = maxIndexInd\n\
    \            }\n        } else if (max", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x <= arr(0))\n        if (maxIndex == -1) return -1\n\
    \        val maxValue = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(x\
    \ => x <= maxValue)\n        if (maxIndex2 == -1) return -1\n        val maxValue2\
    \ = arr(maxIndex2)\n        if (maxValue > maxValue2) maxIndex2 else maxIndex",
  "        val maxIndex = arr.indexWhere(x => x < arr.last)\n        if (maxIndex\
    \ < 0) -1 else maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex == -1) -1\n        else maxIndex - 1", "        val maxIndex\
    \ = arr.indexOfMax(x => x >= arr(arr.indexOf(x) - 1))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n \
    \           }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x => x <\
    \ arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "        val\
    \ max = arr.max\n        val maxIndex = arr.indexWhere(x => x <= max)\n      \
    \  if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr(0))\n        if (maxIndex == -1)\n            -1\n        else\n\
    \            maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) < maxValue) {\n\
    \                maxIndex = i\n                maxValue = arr(i)\n           \
    \ }\n        }\n        if(maxIndex == arr.length-1)\n            return -1\n\
    \        else\n            return maxIndex", "        val maxIndex = 0\n     \
    \   val maxValue = arr(0)\n        val maxIndexOfMaxValue = -1\n        for(i\
    \ <- 0 until arr.length) {\n            if(arr(i) > maxValue) {\n            \
    \    maxValue = arr(i)\n                maxIndexOfMaxValue = i\n            }\n\
    \        }\n        if(maxIndexOfMaxValue == -1) {\n            return -1\n  \
    \      } else {\n            return maxIndexOfMaxValue\n        }", "        val\
    \ maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInArray = 0\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndexInArray = i\n    \
    \        }\n        }\n        if (maxIndexInArray == arr.length - 1) {\n    \
    \        return -1\n        }\n        if (maxIndexInArray == 0) {\n         \
    \   return maxIndex\n        }\n        return maxIndexInArray", "        val\
    \ maxIndex = 0\n        val maxValue = arr(0)\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) < maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        return\
    \ maxIndex", "        val m = arr.toSet\n        val n = arr.toSeq\n        val\
    \ l = arr.toList\n        val r = arr.toIndexedSeq\n        val s = arr.toArray\n\
    \        val t = arr.toArray\n        val u = arr.toArray\n        val v = arr.toArray\n\
    \        val w = arr.toArray\n        val x = arr.toArray\n        val y = arr.toArray\n\
    \        val z = arr.toArray\n        val a = arr.toArray\n        val b = arr.toArray\n\
    \        val c = arr.toArray\n        val d = arr.toArray\n        val e = arr.toArray\n\
    \        val f = arr.toArray\n        val g = arr.toArray\n        val h = arr.toArray\n\
    \        val i = arr.toArray\n        val j = arr.toArray\n        val k = arr.toArray\n\
    \        val l = arr.toArray\n        val m = arr.toArray\n        val n = arr.toArray\n\
    \        val o = arr.toArray\n        val p = arr.toArray\n        val q = arr.toArray\n\
    \        val r = arr.toArray\n        val s = arr.toArray\n        val t = arr.toArray\n\
    \        val u = arr.toArray\n        val v = arr.toArray\n        val w = arr.toArray\n\
    \        val x = arr.toArray\n        val y = arr.toArray\n        val z = arr.toArray\n\
    \        val a = arr.toArray\n        val b = arr.toArray\n        val c = arr.toArray\n\
    \        val d = arr.toArray\n        val e = arr.toArray\n        val f = arr.toArray\n\
    \        val g = arr.toArray\n        val h = arr.toArray\n        val i = arr.toArray\n\
    \        val j = arr.toArray\n        val k = arr.toArray\n        val l = arr.toArray\n\
    \        val m = arr.toArray\n        val n = arr.toArray\n        val o = arr.toArray\n\
    \        val p = arr.toArray\n        val q = arr.toArray\n        val r = arr.toArray\n\
    \        val s = arr.toArray\n        val t = arr.toArray\n        val u = arr.toArray\n\
    \        val v = arr.toArray\n        val w = arr.toArray\n        val x = arr.toArray\n\
    \        val y = arr.toArray\n        val z = arr.toArray\n        val a = arr.toArray\n\
    \        val b = arr.toArray\n        val c = arr.toArray\n        val d = arr.toArray\n\
    \        val e = arr.toArray\n        val f = arr.toArray\n        val g = arr.toArray\n\
    \        val h = arr.toArray\n        val i = arr.toArray\n", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) < maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        return maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n    \
    \    if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x <= arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        var maxIndex = -1\n        var maxValue\
    \ = arr(0)\n        var currentIndex = 0\n        for (i <- arr.indices) {\n \
    \           if (arr(i) < maxValue) {\n                maxValue = arr(i)\n    \
    \            maxIndex = i\n            }\n        }\n        if (maxIndex == -1)\
    \ {\n            return -1\n        }\n        return maxIndex", "        var\
    \ maxIndex = -1\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        maxIndex", " \
    \       var largest = arr.head\n        var largestIndex = 0\n        for (i <-\
    \ 0 until arr.length) {\n            if (arr(i) < largest) {\n               \
    \ largest = arr(i)\n                largestIndex = i\n            }\n        }\n\
    \        if (largest == arr.last) largestIndex\n        else -1", "        val\
    \ maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        var maxIndex = -1\n        var maxVal = -1L\n\
    \        var maxValIndex = -1\n        for (i <- 0 until arr.length) {\n     \
    \       if (arr(i) > maxVal) {\n                maxVal = arr(i)\n            \
    \    maxValIndex = i\n            }\n        }\n        if (maxValIndex > maxIndex)\
    \ {\n            maxIndex = maxValIndex\n        }\n        maxIndex", "     \
    \   val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x >= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex <\
    \ 0) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n    \
    \    if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr(arr.indexOf(x) + 1))\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.lastIndexWhere(x => x <= arr.head)\n\
    \        if (maxIndex == -1) return -1\n        maxIndex", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) < maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     val maxIndex = arr.indexWhere(x => x <= arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        var largest = -1\n        var largestIndex\
    \ = 0\n        for (i <- 0 until arr.length) {\n            if (arr(i) > arr(largest))\
    \ {\n                largest = arr(i)\n                largestIndex = i\n    \
    \        }\n        }\n        if (largest == -1) {\n            return -1\n \
    \       }\n        return largestIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex", "    \
    \    val maxIndex = arr.indexWhere(x => x <= arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x <= arr(arr.length-1))\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        val maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxValue == 0) {\n            return -1\n     \
    \   }\n        return maxIndex", "        val m = arr.head\n        val n = arr.last\n\
    \        var max = 0\n        var maxIndex = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) < m) {\n                max = arr(i)\n           \
    \     maxIndex = i\n            } else if (arr(i) > m && arr(i) < n) {\n     \
    \           max = arr(i)\n                maxIndex = i\n            }\n      \
    \  }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x <= arr.last)\n        if (maxIndex == -1) return\
    \ -1\n        val maxValue = arr.last\n        val maxIndex2 = arr.lastIndexWhere(x\
    \ => x <= maxValue)\n        if (maxIndex2 == -1) return -1\n        if (maxIndex2\
    \ < maxIndex) return maxIndex2\n        val maxIndex3 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex2)\n        if (maxIndex3 == -1) return -1\n        if (maxIndex3\
    \ < maxIndex) return maxIndex3\n        val maxIndex4 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex3)\n        if (maxIndex4 == -1) return -1\n        if (maxIndex4\
    \ < maxIndex) return maxIndex4\n        val maxIndex5 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex4)\n        if (maxIndex5 == -1) return -1\n        if (maxIndex5\
    \ < maxIndex) return maxIndex5\n        val maxIndex6 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex5)\n        if (maxIndex6 == -1) return -1\n        if (maxIndex6\
    \ < maxIndex) return maxIndex6\n        val maxIndex7 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex6)\n        if (maxIndex7 == -1) return -1\n        if (maxIndex7\
    \ < maxIndex) return maxIndex7\n        val maxIndex8 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex7)\n        if (maxIndex8 == -1) return -1\n        if (maxIndex8\
    \ < maxIndex) return maxIndex8\n        val maxIndex9 = arr.lastIndexWhere(x =>\
    \ x <= maxIndex8)\n        if (maxIndex9 == -1) return -1\n        if (maxIndex9\
    \ < maxIndex) return maxIndex9\n        val maxIndex10 = arr.lastIndexWhere(x\
    \ => x <= maxIndex9)\n        if (maxIndex10 == -1) return -1\n        if (maxIndex10\
    \ < maxIndex) return maxIndex10\n        val maxIndex11 = arr.lastIndexWhere(x\
    \ => x <= maxIndex10)\n        if (maxIndex11 == -1) return -1\n        if (maxIndex11\
    \ < maxIndex) return maxIndex11\n        val maxIndex12 = arr.lastIndexWhere(x\
    \ => x <= maxIndex11)\n        if (maxIndex12 == -1) return -1\n        if (maxIndex12\
    \ < maxIndex) return maxIndex12\n        val maxIndex13 = arr.lastIndexWhere(x\
    \ => x <= maxIndex12)\n        if (maxIndex13 == -1) return -1\n        if (maxIndex13\
    \ < maxIndex) return maxIndex13\n        val maxIndex14 = arr.lastIndexWhere(x\
    \ => x <= maxIndex13)\n        if (maxIndex14 == -1) return -1\n        if (maxIndex14\
    \ < maxIndex) return maxIndex14\n        val maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex - 1",
  "        val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex <\
    \ 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x => x\
    \ <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1) -1\n        else\
    \ maxIndex", "        var maxIndex = 0\n        var maxVal = arr(0)\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n          \
    \      maxVal = arr(i)\n                maxIndex = i\n            }\n        }\n\
    \        maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val maxIndex2 = arr.lastIndexWhere(x => x <= maxValue)\n        if (maxIndex2\
    \ == -1) {\n            return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n\
    \        if (maxValue > maxValue2) {\n            return maxIndex\n        } else\
    \ {\n            return maxIndex2\n        }", "        val maxIndex = 0\n   \
    \     var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) > maxVal) {\n                maxVal = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        maxIndex", "        var maxIndex = 0\n\
    \        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n    \
    \        if (arr(i) < maxValue) {\n                maxValue = arr(i)\n       \
    \         maxIndex = i\n            }\n        }\n        maxIndex", "       \
    \ val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        val m = arr.head\n        var maxIndex\
    \ = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i) < m) {\n\
    \                maxIndex = i\n            }\n        }\n        maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\n\
    \            return -1\n        if (maxIndex == 0)\n            return 0\n   \
    \     val maxValue = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(x\
    \ => x <= maxValue)\n        if (maxIndex2 == -1)\n            return -1\n   \
    \     if (maxIndex2 == 0)\n            return 0\n        val maxValue2 = arr(maxIndex2)\n\
    \        if (maxValue > maxValue2)\n            return maxIndex\n        else\n\
    \            return maxIndex2", "        val maxIndex = arr.indexWhere(x => x\
    \ <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1 else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax(x => x < arr.last)\n     \
    \   if (maxIndex < 0) -1\n        else maxIndex", "        val max = arr.max\n\
    \        val maxIndex = arr.indexWhere(x => x < max)\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex - 1", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) return -1\n        arr.lastIndexWhere(x\
    \ => x <= arr.last)", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexWhere(x => x >= arr(arr.size - 1))\n        if (maxIndex == -1) {\n\
    \            return -1\n        }\n        val maxValue = arr(maxIndex)\n    \
    \    val maxIndex2 = arr.indexWhere(x => x >= maxValue)\n        if (maxIndex2\
    \ == -1) {\n            return -1\n        }\n        if (maxIndex != maxIndex2)\
    \ {\n            return maxIndex\n        } else {\n            return -1\n  \
    \      }", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n      \
    \  if (maxIndex == -1) -1\n        else maxIndex", "        var maxIndex = 0\n\
    \        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n    \
    \        if (arr(i) > maxValue) {\n                maxValue = arr(i)\n       \
    \         maxIndex = i\n            }\n        }\n        maxIndex", "       \
    \ val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x =>\
    \ x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex ==\
    \ -1) {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val maxIndex2 = arr.indexWhere(x => x > maxValue)\n        if (maxIndex2\
    \ == -1) {\n            return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n\
    \        if (maxValue > maxValue2) {\n            return maxIndex\n        } else\
    \ {\n            return maxIndex2\n        }", "        var maxIndex = 0\n   \
    \     var maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n        \
    \    if(arr(i) > maxValue) {\n                maxValue = arr(i)\n            \
    \    maxIndex = i\n            }\n        }\n        return maxIndex", "     \
    \   val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x >= arr(arr.length-1))\n        if (maxIndex == -1) -1\n        else maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = 0\n        val maxValue\
    \ = arr(0)\n        val maxIndexOfMaxValue = -1\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) <= maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndexOfMaxValue = i\n            }\n        }\n        if(maxIndexOfMaxValue\
    \ == -1) {\n            return -1\n        } else {\n            return maxIndexOfMaxValue\n\
    \        }", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n       \
    \ if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax(arr.last)\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x < arr(0))\n        if (maxIndex < 0) -1 else maxIndex",
  "        val m = arr.head\n        var maxIndex = -1\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > m) {\n                maxIndex = i\n\
    \                m = arr(i)\n            }\n        }\n        maxIndex", "  \
    \      val m = arr.head\n        val n = arr.last\n        var maxIndex = -1\n\
    \        var maxValue = arr.head\n        for (i <- 0 until arr.length) {\n  \
    \          if (arr(i) > maxValue) {\n                maxValue = arr(i)\n     \
    \           maxIndex = i\n            }\n        }\n        if (maxIndex == -1)\
    \ {\n            return -1\n        }\n        if (maxValue == n) {\n        \
    \    return maxIndex\n        }\n        if (maxValue < n) {\n            return\
    \ -1\n        }\n        val leftArr = arr.drop(maxIndex + 1)\n        val rightArr\
    \ = arr.take(maxIndex + 1)\n        if (canArrange(leftArr) == -1 && canArrange(rightArr)\
    \ == -1) {\n            return -1\n        }\n        if (canArrange(leftArr)\
    \ == -1) {\n            return canArrange(rightArr)\n        }\n        if (canArrange(rightArr)\
    \ == -1) {\n            return canArrange(leftArr)\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n    \
    \    if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= arr(arr.indexOf(x) + 1))\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.lastIndexWhere(x => x < arr(0))\n   \
    \     if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex - 1",
  "        val maxIndex = arr.indexWhere(x => x <= arr(arr.length-1))\n        if\
    \ (maxIndex < 0) -1\n        else maxIndex", "        var maxIndex = 0\n     \
    \   var maxValue = arr(0)\n        var maxIndexInList = -1\n        for (i <-\
    \ 0 until arr.length) {\n            if (arr(i) < maxValue) {\n              \
    \  maxValue = arr(i)\n                maxIndex = i\n            }\n          \
    \  if (arr(i) == maxValue && i != maxIndexInList) {\n                maxIndexInList\
    \ = i\n            }\n        }\n        maxIndex", "        var maxIndex : Long\
    \ = -1\n        var maxValue : Long = -1\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex <\
    \ 0) -1 else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        var maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        var index = 1\n        for (i <- 1 to arr.length) {\n    \
    \        if (arr(i) < maxVal) {\n                maxVal = arr(i)\n           \
    \     maxIndex = index\n            }\n            index += 1\n        }\n   \
    \     return maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex == -1) {\n            return -1\n        }\n        val maxValue\
    \ = arr(maxIndex)\n        val minIndex = arr.indexOfMin\n        if (minIndex\
    \ == -1) {\n            return -1\n        }\n        val minValue = arr(minIndex)\n\
    \        if (maxValue <= minValue) {\n            return -1\n        }\n     \
    \   maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex - 1", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxIndex\
    \ = i\n                maxValue = arr(i)\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1)\n            -1\n        else\n            maxIndex",
  "        var maxIndex = -1\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax(arr.take(arr.length-1))\n        if(maxIndex\
    \ == -1)\n            return -1\n        else\n            maxIndex", "      \
    \  val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else\
    \ maxIndex - 1", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n   \
    \     if (maxIndex < 0) -1 else maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) -1\n        else maxIndex - 1", "        val m =\
    \ arr.head\n        val n = arr.last\n        var maxIndex = -1\n        for (i\
    \ <- 0 until arr.length) {\n            if (arr(i) < m) {\n                maxIndex\
    \ = i\n            } else if (arr(i) > n) {\n                maxIndex = -1\n \
    \               break\n            }\n        }\n        maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr(0))\n\
    \        if (maxIndex < 0) -1\n        else maxIndex"]
stop_tokens:
- "\n    }\n"

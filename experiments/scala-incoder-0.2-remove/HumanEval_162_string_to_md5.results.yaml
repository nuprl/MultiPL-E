language: scala
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpoh8kzk2v.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5Hex = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(md5Hex)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpolqyoosi.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbvrtrkaz.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n      \
    \      val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2wan2ndj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5String\
    \ = new String(digest)\n            Some(md5String)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpep37ezsp.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\".format(_)).mkString.toUpperCase\n            Some(md5)\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuhnzar4x.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString.toUpperCase\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpuhnzar4x.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString.toUpperCase\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpt6373c4j.scala:11:16 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString.toUpperCase\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpt6373c4j.scala:9:26\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m9 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdzc1hi99.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest\n  \
    \      val buffer = new Array[Byte](128)\n        val digest = md5.digest(text.getBytes)\n\
    \        digest.foreach { x => buffer.update(x.asInstanceOf[Int]) }\n        val\
    \ md5String = buffer.toHexString.take(16).mkString\n        Option(md5String)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpj2cpzq_w.scala:7:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpj2cpzq_w.scala:11:31 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmd5String\e[0m = buffer.toHexString.take(\e\
    [31m16\e[0m).mkString\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue toHexString is not a member of Array[Byte] - did you\
    \ mean buffer.toString?\n2 errors found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n      \
    \      val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"\
    %02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffb9_3fm.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbvrtrkaz.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes\
    \ = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\"\
    .format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp3gbrztfr.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\"\
    .format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp74_2z0ck.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5Hex =\
    \ digest.map(\"%02x\".format(_)).mkString\n            Some(md5Hex)\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpvvvu6cwd.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5String = new String(digest)\n\
    \            Some(md5String)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmptkn9d51g.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbvrtrkaz.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest =\
    \ md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n\
    \            Some(hex)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmbmnmj9w.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                      Not found: MessageDigest\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcragyoj5.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val buffer = new Array[Byte](md5.digest(text.getBytes(\"UTF-8\"\
    )).length)\n        md5.update(text.getBytes(\"UTF-8\"), 0, text.getBytes(\"UTF-8\"\
    ).length)\n        md5.doFinal(buffer, 0, buffer.length)\n        Some(new String(buffer,\
    \ \"UTF-8\"))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe668f2dv.scala:10:12 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        md5.doFinal(buffer, \e[31m0\e[0m, buffer.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value doFinal\
    \ is not a member of java.security.MessageDigest\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(x\
    \ => Integer.toHexString(0xFF & x))\n            Some(new String(hex, StandardCharsets.UTF_8))\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp9g6klopp.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9g6klopp.scala:13:33\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            Some(\e[33mnew\e\
    [0m \e[35mString\e[0m(hex, StandardCharsets.UTF_8))\n\e[31m\e[31m   |\e[0m   \
    \                              ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                         Not found: StandardCharsets\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(x\
    \ => x.toHexString.toUpperCase).mkString\n            Some(hex)\n        }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmptognz1r2.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprh3x996b.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmph79a2fxr.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbvrtrkaz.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).digest)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkib2lhrp.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).digest)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\".format(_)).mkString.toUpperCase\n            Some(md5)\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuhnzar4x.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString.toUpperCase\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpuhnzar4x.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"\
    %02x\".format(_)).mkString\n        Some(md5)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdxgifb9v.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpdxgifb9v.scala:7:22\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m7 |\e[0m       \
    \ \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsevpw5u7.scala:11:16 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpsevpw5u7.scala:9:26\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m9 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaxemb_ki.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5String\
    \ = digest.map(\"%02x\".format(_)).mkString.toUpperCase\n            Some(md5String)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp490vr4a4.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdzc1hi99.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n      \
    \      val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"\
    %02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffb9_3fm.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbn4vjc6q.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpbn4vjc6q.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5Hex = digest.map(\"\
    %02x\".format(_)).mkString(\"\")\n            Some(md5Hex)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpf6_xg9hk.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest\n         \
    \   val digest = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n\
    \            Some(md5String)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp2ymeqqa8.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest\n\e[31m\e[31m   |\e[0m                       \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of the overloaded alternatives\
    \ named <init> can be accessed as a member of java.security.MessageDigest from\
    \ module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5Hex = digest.map(\"%02x\".format(_)).mkString\n\
    \            Some(md5Hex)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp_jdyrn_d.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest\n         \
    \   val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptj4qp4wa.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmptj4qp4wa.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbn4vjc6q.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpbn4vjc6q.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"MD5\")\n\
    \        val bytes = text.getBytes(\"UTF-8\")\n        val hash = md5.digest(bytes)\n\
    \        val hex = hash.toString(\"hex\")\n        hex.takeWhile(c => c != '0').mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4hsxywju.scala:7:18 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                  Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val\
    \ md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n     \
    \   }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp6vvgnpkg.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmp6vvgnpkg.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplm4t6znd.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009446
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n\
    \            Some(hex)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpi94n0kqp.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val hexString = digest.map(_.toHexString).map(\"\
    %02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpsky1zf5x.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaxemb_ki.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbn4vjc6q.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpbn4vjc6q.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes)\n        val md5String = new\
    \ String(digest)\n        val md5Hash = md5String.substring(0, 16)\n        Some(md5Hash)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpszs91y3g.scala:7:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes)\n        val hexString = digest.map(\"\
    %02x\".format(_)).mkString\n        Option(hexString)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpnnq9vg3y.scala:7:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplm4t6znd.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009446
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5String\
    \ = new String(digest)\n            Some(md5String)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpep37ezsp.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val\
    \ md5HexString = digest.map(\"%02x\".format(_)).mkString\n            Some(md5HexString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpvcgwm_k4.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes =\
    \ text.getBytes(\"UTF-8\")\n            val hash = md5.digest(bytes)\n       \
    \     val hex = hash.toString(\"hex\")\n            Some(hex)\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw7jmyp4b.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                      Not found: MessageDigest\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5String\
    \ = digest.map(\"%02x\" format _).mkString.toUpperCase\n            Some(md5String)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmph2jjyj0j.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeorblch1.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\" format\
    \ _).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpf8amvc6b.scala:11:16 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpf8amvc6b.scala:9:26\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m9 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009447
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcfs2lvze.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(_.toHexString)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpcfs2lvze.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest\n  \
    \      val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(_.toHexString)\n\
    \        val md5String = md5.mkString\n        Option(md5String)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_0u2zyqz.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(_.toHexString)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \ |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmp_0u2zyqz.scala:7:22\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m7 |\e[0m       \
    \ \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest\n\
    \e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed as\
    \ a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val\
    \ md5String = digest.map(\"%02x\".format(_)).mkString.toUpperCase\n          \
    \  Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpd53w1sut.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5String\
    \ = new String(digest)\n            Some(md5String)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpep37ezsp.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbvrtrkaz.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n      \
    \      val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"\
    %02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffb9_3fm.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n        Option(hexString)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpfu6fdkkz.scala:7:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcfs2lvze.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(_.toHexString)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpcfs2lvze.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaxemb_ki.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5HexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5HexString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpdyfimwqn.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n\
    \            Some(md5String)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpgxco3mlz.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbvrtrkaz.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplm4t6znd.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009446
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(x\
    \ => Integer.toHexString(x))\n            Some(md5.mkString.substring(0,8))\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5f70ehx1.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [36mx\e[0m => Integer.toHexString(x))\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmp5f70ehx1.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes)\n        val md5HexString =\
    \ digest.map(\"%02x\".format(_)).mkString\n        Option(md5HexString)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpxq8budvi.scala:7:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"\
    %02x\".format(_)).mkString\n        Some(md5)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdxgifb9v.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpdxgifb9v.scala:7:22\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m7 |\e[0m       \
    \ \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5Hex = digest.map(\"\
    %02x\".format(_)).mkString\n        Option(md5Hex)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp2k3euhx.scala:13)\n\tat Problem.main(tmpp2k3euhx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009450
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcfs2lvze.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(_.toHexString)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpcfs2lvze.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpoh8kzk2v.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n      \
    \      val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8g1plthv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n      \
    \      val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9tufzq3k.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9tufzq3k.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e[31m\"\
    MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest\n         \
    \   val digest = md5.digest(text.getBytes)\n            val md5String = digest.toString\n\
    \            Some(md5String)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpkw7qq8mw.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest\n\e[31m\e[31m   |\e[0m                       \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of the overloaded alternatives\
    \ named <init> can be accessed as a member of java.security.MessageDigest from\
    \ module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8mxqqv38.scala:11:16 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(_.toHexString)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmp8mxqqv38.scala:9:26\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m9 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpllo7lbcf.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hex)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest\n         \
    \   val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptj4qp4wa.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m format _).mkString\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmptj4qp4wa.scala:10:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m10 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmph79a2fxr.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else {\n     \
    \       val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest\
    \ = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n\
    \            Some(md5String)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpgxco3mlz.scala:9:26 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpl2qnj3mo.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplm4t6znd.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009446
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val\
    \ hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n     \
    \   }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp7uel03zo.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsaye6gh1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprh3x996b.scala:8:37 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                  value Md5 is not a member of scala.util.hashing\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t4sg6s1.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.md5(text).hexValue)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaxemb_ki.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest\n         \
    \   val digest = md5.digest(text.getBytes)\n            val md5Hex = digest.map(\"\
    %02x\" format _).mkString\n            Some(md5Hex)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpn7xsd5zv.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest\n\e[31m\e[31m   |\e[0m                       \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of the overloaded alternatives\
    \ named <init> can be accessed as a member of java.security.MessageDigest from\
    \ module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9596_yj6.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        if (text.isEmpty) {\n            None\n      \
    \  } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n\
    \            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpl2qnj3mo.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    def stringToMd5(text : String)\
    \ : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(_.toHexString)\n\
    \        val md5 = md5.getOrElse(\"\")\n        Some(md5)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpteuoveh1.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(_.toHexString)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \ |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpteuoveh1.scala:10:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmd5\e[0m = md5.getOrElse(\e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmd5 is already defined as\
    \ \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- Error: /tmp/tmpteuoveh1.scala:7:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n3 errors found\n"
  stdout: ''
  timestamp: 1660009449

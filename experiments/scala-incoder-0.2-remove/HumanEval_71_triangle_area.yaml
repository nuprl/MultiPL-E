name: HumanEval_71_triangle_area
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return the area of\n\
  \    // the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n    // Otherwise return -1\n    // Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    // than the third side.\n    //\
  \ Example:\n    def triangleArea(a : Long, b : Long, c : Long) : Float = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((3l),\
  \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == -1l);\n\
  \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
  \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == -1l);\n\
  \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
  \ (6l), (3l)) == -1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
  \    assert(triangleArea((2l), (2l), (10l)) == -1l);\n    }\n\n}\n"
completions: ["        val sum = a + b + c\n        if (sum > 0) {\n            val\
    \ sides = a + b + c\n            val area = sides * (sides - a) * (sides - b)\
    \ * (sides - c)\n            val rounded = math.round(area / sum * 100) / 100\n\
    \            if (rounded == area)\n                rounded\n            else\n\
    \                -1\n        }\n        else\n            -1", "        val sum\
    \ = a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum *\
    \ (sum - a) * (sum - b) * (sum - c))\n            (area / 100).round\n       \
    \ } else {\n            -1\n        }", "        val a1 = Math.abs(a)\n      \
    \  val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n\
    \        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8 + b8\n\
    \        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10 = a9 + b9\n\
    \        val b10 = b9 + c9\n        val c10 = c9 + a9\n        val a11 = a10 +\
    \ b10\n        val b11 = b10 + c10\n        val c11 = c10 + a10\n        val a12\
    \ = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11 + a11\n    \
    \    val a13 = a12 + b12\n        val b13 = b12 + c12\n        val c13 = c12 +\
    \ a12\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n        val c14\
    \ = c13 + a13\n        val a15 = a14 + b14\n        val b15 = b14 + c14\n    \
    \    val c15 = c14 + a14\n        val a16 = a15 + b15\n        val b16 = b15 +\
    \ c15\n        val c16 = c15 + a15\n        val a17 = a16 + b16\n        val b17\
    \ = b16 + c16\n        val c17 = c16 + a16\n        val a18 = a17 + b17\n    \
    \    val b18 = b17 + c17\n        val c18 = c17 + a17\n        val a19 = a18 +\
    \ b18\n        val b19 = b18 + c18\n        val c19 = c18 + a18\n        val a20\
    \ = a19 + b19\n        val ", "        val a = Math.sqrt(a * a + b * b + c * c)\n\
    \        val b = Math.sqrt(a * a + b * b + c * c)\n        val c = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area = if (a + b > c) (a * b) / 2 else -1\n\
    \        area", "        val a = Math.sqrt(a * a + b * b + c * c)\n        val\
    \ b = 2 * a \n        val c = Math.sqrt(a * a + b * b + c * c)\n        val d\
    \ = Math.sqrt(a * a + b * b + c * c)\n        val area = (a + b + c) / 2\n   \
    \     val area2 = Math.sqrt(a * a + b * b + c * c)\n        val area3 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area4 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area5 = Math.sqrt(a * a + b * b + c * c)\n        val area6 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area7 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area8 = Math.sqrt(a * a + b * b + c * c)\n        val area9 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area10 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area11 = Math.sqrt(a * a + b * b + c * c)\n        val area12 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area13 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area14 = Math.sqrt(a * a + b * b + c * c)\n        val area15 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area16 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area17 = Math.sqrt(a * a + b * b + c * c)\n        val area18 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area19 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area20 = Math.sqrt(a * a + b * b + c * c)\n        val area21 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area22 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area23 = Math.sqrt(a * a + b * b + c * c)\n        val area24 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area25 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area26 = Math.sqrt(a * a + b * b + c * c)\n        val area27 = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area28 = Math.sqrt(a * a + b * b + c * c)\n\
    \        val area29 = Math.sqrt(a * a + b * b + c * c)\n        val ", "     \
    \   val sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum >\
    \ sides.last) sides.last else -1", "        val area = if (a + b > c) (a * b)\
    \ / 2 else -1\n        area.toFloat", "        val triangleArea = (a+b+c)/2\n\
    \        if (triangleArea > 0 && triangleArea < 1) {\n            triangleArea.toFloat\n\
    \        } else {\n            -1\n        }", "        val sides = List(a, b,\
    \ c)\n        val sum = sides.sum\n        if (sum > sides.last) sides.last.toDouble\
    \ / sides.last.toDouble * sides.last.toDouble * sides.last.toDouble\n        else\
    \ -1", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n\
    \        (a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n            a4 + b5 +\
    \ c6 >\n            a5 + b6 + c7 >\n            a6 + b7 + c8 >\n            a7\
    \ + b8 + c9)\n            ? ((a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n \
    \               a4 + b5 + c6 >\n                a5 + b6 + c7 >\n             \
    \   a6 + b7 + c8 >\n                a7 + b8 + c9)\n                ? ((a1 + b2\
    \ + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n                    a4 + b5 + c6 >\n \
    \                   a5 + b6 + c7 >\n                    a6 + b7 + c8 >\n     \
    \               a7 + b8 + c9)\n                    ? ((a1 + b2 + c3 > a2 + b3\
    \ + c4 > a3 + b4 + c5 >\n                        a4 + b5 + c6 >\n            \
    \            a5 + b6 + c7 >\n                        a6 + b7 + c8 >\n        \
    \                a7 + b8 + c9)\n                        ? ((a1 + b2 + c3 > a2\
    \ + b3 + c4 > a3 + b4 + c5 >\n                            a4 + b5 + c6 >\n   \
    \                         a5 + b6 + c7 >\n                            a6 + b7\
    \ + c8 >\n                            a7 + b8 + c9)\n                        \
    \    ? ((a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n                      \
    \          a4 + ", "        val sum = a + b + c\n        if (sum > 0) {\n    \
    \        val area = math.sqrt(sum * ((a + b) * (a + c)) / ((a + b + c) * (a +\
    \ b + c)))\n            (area / 100).toFloat\n        } else {\n            -1\n\
    \        }", "        val sum = a + b + c\n        if (sum > 0) {\n          \
    \  val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n           \
    \ area / 2\n        } else {\n            -1\n        }", "        val area =\
    \ (a + b + c) / 2\n        val isTriangleValid = (area > 0) && \n            (b\
    \ > 0) && (c > 0) && \n            (a * b > c * b)\n        val areaFloat = if\
    \ (isTriangleValid) area else -1\n        areaFloat.toFloat", "        val sides\
    \ = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last else -1", "        val area = if (a + b > c) (a * b) / 2 else -1\n\
    \        area.toFloat", "        val area = (a + b + c) / 2\n        val sides\
    \ = (a, b, c) match {\n            case (a > b) => (b, a, c)\n            case\
    \ (b > c) => (c, b, a)\n            case (a > c) => (c, a, b)\n            case\
    \ (b > a) => (a, b, c)\n        }\n        val sum = sides.sum\n        if (sum\
    \ > sides(2)) {\n            area\n        } else {\n            -1\n        }",
  "        val sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum\
    \ > sides.last) sides.last else -1", "        val sum = a + b + c\n        if\
    \ (sum > 0) {\n            val area = math.sqrt(sum * a * a + sum * b * b + sum\
    \ * c * c)\n            (area / 2).toFloat\n        } else {\n            -1.0\n\
    \        }", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 =\
    \ c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 =\
    \ c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3\
    \ = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4\
    \ = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5\
    \ = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6\
    \ = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7\
    \ = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8\
    \ = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9\
    \ = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n        val\
    \ c10 = c9 + a9\n        val a11 = a10 + b10\n        val b11 = b10 + c10\n  \
    \      val c11 = c10 + a10\n        val a12 = a11 + b11\n        val b12 = b11\
    \ + c11\n        val c12 = c11 + a11\n        val a13 = a12 + b12\n        val\
    \ b13 = b12 + c12\n        val c13 = c12 + a12\n        val a14 = a13 + b13\n\
    \        val b14 = b13 + c13\n        val c14 = c13 + a13\n        val a15 = a14\
    \ + b14\n        val b15 = b14 + c14\n        val c15 = c14 + a14\n        val\
    \ a16 = a15 + b15\n        val b16 = b15 + c15\n        val c16 = c15 + a15\n\
    \        val a17 = a16 + b16\n        val b17 = b16 + c16\n        val c17 = c16\
    \ + a16\n        val a18 = a17 + b17\n        val b18 = b17 + c17\n        val\
    \ c18 = c17 + a17\n        val a19 = a18 + b18\n        val b19 = b18 + c18\n\
    \        val c19 = c18 + a18\n        val a20 = a19 + b19", "        val area\
    \ = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n        if(isValid)\
    \ {\n            val isValidArea = area > 0 && area > a\n            val isValidArea\
    \ = area > 0 && area > b\n            val isValidArea = area > 0 && area > c\n\
    \            if(isValidArea) {\n                area\n            } else {\n \
    \               -1\n            }\n        } else {\n            -1\n        }",
  "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n  \
    \      val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n\
    \        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n\
    \        val a10 = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 +\
    \ a9\n        val a11 = a10 + b10\n        val b11 = b10 + c10\n        val c11\
    \ = c10 + a10\n        val a12 = a11 + b11\n        val b12 = b11 + c11\n    \
    \    val c12 = c11 + a11\n        val a13 = a12 + b12\n        val b13 = b12 +\
    \ c12\n        val c13 = c12 + a12\n        val a14 = a13 + b13\n        val b14\
    \ = b13 + c13\n        val c14 = c13 + a13\n        val a15 = a14 + b14\n    \
    \    val b15 = b14 + c14\n        val c15 = c14 + a14\n        val a16 = a15 +\
    \ b15\n        val b16 = b15 + c15\n        val c16 = c15 + a15\n        val a17\
    \ = a16 + b16\n        val b17 = b16 + c16\n        val c17 = c16 + a16\n    \
    \    val a18 = a17 + b17\n        val b18 = b17 + c17\n        val c18 = c17 +\
    \ a17\n        val a19 = a18 + b18\n        val b19 = b18 + c18\n        val c19\
    \ = c18 + a18\n        val a20 = a19 + b19", "        val area = (a + b + c) /\
    \ 2\n        val isValid = a > 0 && b > 0 && c > 0\n        if (isValid) {\n \
    \           val area1 = (a + b) / 2\n            val area2 = (a + c) / 2\n   \
    \         val area3 = (b + c) / 2\n            val areaSum = area1 + area2 + area3\n\
    \            val isValid1 = area1 > 0 && area2 > 0 && area3 > 0\n            val\
    \ isValid2 = area1 > 0 && area3 > 0 && area2 > 0\n            val isValid3 = area1\
    \ > 0 && area2 > 0 && area3 > 0\n            val isValid4 = area1 > 0 && area3\
    \ > 0 && area2 > 0\n            val isValid5 = area1 > 0 && area2 > 0 && area3\
    \ > 0\n            val isValid6 = area1 > 0 && area3 > 0 && area2 > 0\n      \
    \      val isValid7 = area1 > 0 && area2 > 0 && area3 > 0\n            val isValid8\
    \ = area1 > 0 && area3 > 0 && area2 > 0\n            val isValid9 = area1 > 0\
    \ && area2 > 0 && area3 > 0\n            val isValid10 = area1 > 0 && area3 >\
    \ 0 && area2 > 0\n            val isValid11 = area1 > 0 && area2 > 0 && area3\
    \ > 0\n            val isValid12 = area1 > 0 && area3 > 0 && area2 > 0\n     \
    \       val isValid13 = area1 > 0 && area2 > 0 && area3 > 0\n            val isValid14\
    \ = area1 > 0 && area3 > 0 && area2 > 0\n            val isValid15 = area1 > 0\
    \ && area2 > 0 && area3 > 0\n            val isValid16 = area1 > 0 && area3 >\
    \ 0 && area2 > 0\n            val isValid17 = area1 > 0 && area2 > 0 && area3\
    \ > 0\n            val isValid18 = area1 > 0 && area3 > 0 && area2 > 0\n     \
    \       val isValid19 = area1 > 0 && area2 > 0 && area3 > 0\n            val isValid20\
    \ = area1 > 0 && area3 > 0 && area2 > 0\n            val isValid21 = area1 > 0\
    \ && area2 > 0 && area3 > 0\n            val isValid22 = area1 > 0 && area3 >\
    \ 0 && area2 > 0\n            val isValid23 = area1 > 0 && area2 > 0 && area3\
    \ > 0\n            val isValid24 = area1 > 0 && area3 > 0 && area2 > 0\n     \
    \       val isValid25 = area1 > 0 && area2 > 0 && area3 > 0\n            val isValid26\
    \ = area1 > 0 && area3 > 0 && area2 > 0\n            val isValid27 = area1 > 0\
    \ && area2 > 0 && area3 > 0\n            val isValid28 = area1 > 0 && area3 >\
    \ 0 && area2 > 0\n            val isValid29 = area1 > 0 && area2 ", "        val\
    \ area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n    \
    \    if (isValid) {\n            if (a + b > c) {\n                area\n    \
    \        } else {\n                area / 2\n            }\n        } else {\n\
    \            -1\n        }", "        val sides = List(a, b, c)\n        val sum\
    \ = sides.sum\n        if (sum > sides.last) sides.last else -1", "        val\
    \ area = (a + b + c) / 2\n        val isValid = (a * b + c) >= a\n        val\
    \ isValid2 = (b * c + a) >= b\n        val isValid3 = (a * c + b) >= c\n     \
    \   val isValidArea = area >= 0\n        val isValidArea = isValidArea && isValid2\
    \ && isValid3\n        val isValidArea = isValidArea && isValid\n        val isValidArea\
    \ = isValidArea && isValidArea\n        isValidArea ? area : -1", "        val\
    \ sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last.toFloat * sides.last.toFloat\n        else -1", "        val sides\
    \ = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last.toDouble * sides.last.toDouble / sum.toDouble else -1", "       \
    \ val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val\
    \ a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val\
    \ a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val\
    \ a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val\
    \ a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val\
    \ a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val\
    \ a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val\
    \ a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val\
    \ a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val\
    \ a10 = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 + a9\n      \
    \  val a11 = a10 + b10\n        val b11 = b10 + c10\n        val c11 = c10 + a10\n\
    \        val a12 = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11\
    \ + a11\n        val a13 = a12 + b12\n        val b13 = b12 + c12\n        val\
    \ c13 = c12 + a12\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n\
    \        val c14 = c13 + a13\n        val a15 = a14 + b14\n        val b15 = b14\
    \ + c14\n        val c15 = c14 + a14\n        val a16 = a15 + b15\n        val\
    \ b16 = b15 + c15\n        val c16 = c15 + a15\n        val a17 = a16 + b16\n\
    \        val b17 = b16 + c16\n        val c17 = c16 + a16\n        val a18 = a17\
    \ + b17\n        val b18 = b17 + c17\n        val c18 = c17 + a17\n        val\
    \ a19 = a18 + b18\n        val b19 = b18 + c18\n        val c19 = c18 + a18\n\
    \        val a20 = a19 + b", "        val a1 = a / 2\n        val b1 = b / 2\n\
    \        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4 + c3\n\
    \        val c4 = c4 + a4\n        val a5 = a4 + b4\n        val b5 = b5 + c4\n\
    \        val c5 = c5 + a5\n        val a6 = a5 + b5\n        val b6 = b6 + c5\n\
    \        val c6 = c6 + a6\n        val a7 = a6 + b6\n        val b7 = b7 + c6\n\
    \        val c7 = c7 + a7\n        val a8 = a7 + b7\n        val b8 = b8 + c7\n\
    \        val c8 = c8 + a8\n        val a9 = a8 + b8\n        val b9 = b9 + c8\n\
    \        val c9 = c9 + a9\n        val a10 = a9 + b9\n        val b10 = b10 +\
    \ c9\n        val c10 = c10 + a10\n        val a11 = a10 + b10\n        val b11\
    \ = b11 + c10\n        val c11 = c11 + a11\n        val a12 = a11 + b11\n    \
    \    val b12 = b12 + c11\n        val c12 = c12 + a12\n        val a13 = a12 +\
    \ b12\n        val b13 = b13 + c12\n        val c13 = c13 + a13\n        val a14\
    \ = a13 + b13\n        val b14 = b14 + c13\n        val c14 = c14 + a14\n    \
    \    val a15 = a14 + b14\n        val b15 = b15 + c14\n        val c15 = c15 +\
    \ a15\n        val a16 = a15 + b15\n        val b16 = b16 + c15\n        val c16\
    \ = c16 + a16\n        val a17 = a16 + b16\n        val b17 = b17 + c16\n    \
    \    val c17 = c17 + a17\n        val a18 = a17 + b17\n        val b18 = b18 +\
    \ c17\n        val c18 = c18 + a18\n        val a19 = a18 + b18\n        val b19\
    \ = b19 + c18\n        val c19 = c19 + a19\n        val a20 = a19 + b", "    \
    \    val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val\
    \ a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val\
    \ a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val\
    \ a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val\
    \ a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val\
    \ a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val\
    \ a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val\
    \ a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        (a1\
    \ + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n            a4 + b5 + c6 >\n    \
    \        a5 + b6 + c7 >\n            a6 + b7 + c8 >\n            a7 + b8 + c9)",
  "        val sum = a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum\
    \ * a * a + sum * b * b + sum * c * c)\n            area / 2\n        } else {\n\
    \            -1\n        }", "        val sides = List(a, b, c)\n        val sumSides\
    \ = sides.sum\n        val isValid = sides.forall(side => side > 0)\n        if\
    \ (isValid) {\n            val area = (sides.sum * sides.sum) / 2.0\n        \
    \    val rounded = area.toString.replaceAll(\"\\\\.[0-9]*$\", \".0\")\n      \
    \      val float = rounded.toFloat\n            float\n        } else {\n    \
    \        -1\n        }", "        val a1 = (a + b + c) / 2\n        val b1 = (a\
    \ + b) / 2\n        val c1 = (a + c) / 2\n        val a2 = (b + c + a) / 2\n \
    \       val b2 = (b + c) / 2\n        val c2 = (b + a) / 2\n        val a3 = (a2\
    \ + b2 + c2) / 2\n        val b3 = (a2 + b2 + c) / 2\n        val c3 = (a2 + b2\
    \ + a) / 2\n        val a4 = (a3 + b3 + c3) / 2\n        val b4 = (a3 + b3 + c)\
    \ / 2\n        val c4 = (a3 + b3 + a) / 2\n        val a5 = (a4 + b4 + c4) / 2\n\
    \        val b5 = (a4 + b4 + c) / 2\n        val c5 = (a4 + b4 + a) / 2\n    \
    \    val a6 = (a5 + b5 + c5) / 2\n        val b6 = (a5 + b5 + c) / 2\n       \
    \ val c6 = (a5 + b5 + a) / 2\n        val a7 = (a6 + b6 + c6) / 2\n        val\
    \ b7 = (a6 + b6 + c) / 2\n        val c8 = (a6 + b6 + a) / 2\n        val a9 =\
    \ (a7 + b7 + c8) / 2\n        val b9 = (a7 + b7 + c) / 2\n        val c9 = (a7\
    \ + b7 + a) / 2\n        val a10 = (a9 + b9 + c9) / 2\n        val b10 = (a9 +\
    \ b9 + c) / 2\n        val c10 = (a9 + b9 + a) / 2\n        val a11 = (a10 + b10\
    \ + c10) / 2\n        val b11 = (a10 + b10 + c) / 2\n        val c11 = (a10 +\
    \ b10 + a) / 2\n        val a12 = (a11 + b11 + c11) / 2\n        val b12 = (a11\
    \ + b11 + c) / 2\n        val c12 = (a11 + b11 + a) / 2\n        val a13 = (a12\
    \ + b12 + c12) / 2\n        val b13 = (a12 + b12 + c) / 2\n        val c13 = (a12\
    \ + b12 + a) / 2\n        val a14 = (a13 + b13 + c13) / 2\n        val b14 = (a13\
    \ + b13 + c) / 2\n        val c14 = (a13 + b13 + a) / 2\n        val a15 = (a14\
    \ + b14 + c14) / 2\n        val b15 = (a14 + b14 + c) / 2\n        val c15 = (a14\
    \ + b14 + a) / 2\n        val a16 = (a15 + b15 + c15) / 2\n        val b16 = (a15\
    \ + b15 + c) / 2\n        val c16", "        val sides = List(a, b, c)\n     \
    \   val sum = sides.sum\n        if (sum > sides.last) sides.last else -1", " \
    \       val sum = a + b + c\n        if (sum > 0) {\n            val area = (a\
    \ + b + c) / 2.0\n            val area = if (area > 0) area else -1\n        \
    \    area\n        } else {\n            -1\n        }", "        val sides =\
    \ List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last) sides.last\
    \ else -1", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n    \
    \    val c1 = Math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b3 + c4\n\
    \        val c4 = c4 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c5\n\
    \        val c5 = c5 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c6\n\
    \        val c6 = c6 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c7\n\
    \        val c7 = c7 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c8\n\
    \        val c8 = c8 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c9\n\
    \        val c9 = c9 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c10\n\
    \        val c10 = c10 + a9\n        val a11 = a10 + b10\n        val b11 = b10\
    \ + c11\n        val c11 = c11 + a10\n        val a12 = a11 + b11\n        val\
    \ b12 = b11 + c12\n        val c12 = c12 + a11\n        val a13 = a12 + b12\n\
    \        val b13 = b12 + c13\n        val c13 = c13 + a12\n        val a14 = a13\
    \ + b13\n        val b14 = b13 + c14\n        val c14 = c14 + a13\n        val\
    \ a15 = a14 + b14\n        val b15 = b14 + c15\n        val c15 = c15 + a14\n\
    \        val a16 = a15 + b15\n        val b16 = b15 + c16\n        val c16 = c16\
    \ + a15\n        val a17 = a16 + b16\n        val b17 = b16 + c17\n        val\
    \ c17 = c17 + a16\n        val a18 = a17 + b17\n        val b18 = b17 + c18\n\
    \        val c18 = c18 + a17\n        val a19 = a18 + b18\n        val b19 = b18\
    \ + c19\n        val c19 = c19 + a18\n        val a20 = a19 + b19\n", "      \
    \  val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n\
    \        if (isValid) {\n            val side1 = math.sqrt(a * a + b * b)\n  \
    \          val side2 = math.sqrt(c * c + d * d)\n            val side3 = math.sqrt(a\
    \ * a + c * c)\n            val area1 = side1 * side1\n            val area2 =\
    \ side2 * side2\n            val area3 = side3 * side3\n            val area4\
    \ = side1 + side2 + side3\n            val area5 = side1 + side2 + side3\n   \
    \         val area6 = side1 + side2 + side3\n            val area7 = side1 + side2\
    \ + side3\n            val area8 = side1 + side2 + side3\n            val area9\
    \ = side1 + side2 + side3\n            val area10 = side1 + side2 + side3\n  \
    \          val area11 = side1 + side2 + side3\n            val area12 = side1\
    \ + side2 + side3\n            val area13 = side1 + side2 + side3\n          \
    \  val area14 = side1 + side2 + side3\n            val area15 = side1 + side2\
    \ + side3\n            val area16 = side1 + side2 + side3\n            val area17\
    \ = side1 + side2 + side3\n            val area18 = side1 + side2 + side3\n  \
    \          val area19 = side1 + side2 + side3\n            val area20 = side1\
    \ + side2 + side3\n            val area21 = side1 + side2 + side3\n          \
    \  val area22 = side1 + side2 + side3\n            val area23 = side1 + side2\
    \ + side3\n            val area24 = side1 + side2 + side3\n            val area25\
    \ = side1 + side2 + side3\n            val area26 = side1 + side2 + side3\n  \
    \          val area27 = side1 + side2 + side3\n            val area28 = side1\
    \ + side2 + side3\n            val area29 = side1 + side2 + side3\n          \
    \  val area30 = side1 + side2 + side3\n            val area31 = side1 + side2\
    \ + side3\n            val area32 = side1 + side2 + side3\n            val area33\
    \ = side1 + side2 + side3\n            val area34 = side1 + side2 + side3\n  \
    \          val area35 = side1 + side2 + side3\n            val area36 = side1\
    \ + side2 + side3\n            val area37 = side1 + side2 + side3\n          \
    \  val area38 = side1 + side2 + side3\n            val area39 = side1 + side2\
    \ + side3\n", "        val a1 = a + b\n        val a2 = a + c\n        val b2\
    \ = b + c\n        val a3 = a + b + c\n        val b3 = b + c + a\n        val\
    \ c3 = c + a + b\n        val a4 = a + b + c\n        val b4 = b + c + a\n   \
    \     val c4 = c + a + b\n        val a5 = a + b + c\n        val b5 = b + c +\
    \ a\n        val c5 = c + a + b\n        val a6 = a + b + c\n        val b6 =\
    \ b + c + a\n        val c6 = c + a + b\n        val a7 = a + b + c\n        val\
    \ b7 = b + c + a\n        val c7 = c + a + b\n        val a8 = a + b + c\n   \
    \     val b8 = b + c + a\n        val c8 = c + a + b\n        val a9 = a + b +\
    \ c\n        val b9 = b + c + a\n        val c9 = c + a + b\n        val a10 =\
    \ a + b + c\n        val b10 = b + c + a\n        val c10 = c + a + b\n      \
    \  val a11 = a + b + c\n        val b11 = b + c + a\n        val c11 = c + a +\
    \ b\n        val a12 = a + b + c\n        val b12 = b + c + a\n        val c12\
    \ = c + a + b\n        val a13 = a + b + c\n        val b13 = b + c + a\n    \
    \    val c13 = c + a + b\n        val a14 = a + b + c\n        val b14 = b + c\
    \ + a\n        val c14 = c + a + b\n        val a15 = a + b + c\n        val b15\
    \ = b + c + a\n        val c15 = c + a + b\n        val a16 = a + b + c\n    \
    \    val b16 = b + c + a\n        val c16 = c + a + b\n        val a17 = a + b\
    \ + c\n        val b17 = b + c + a\n        val c17 = c + a + b\n        val a18\
    \ = a + b + c\n        val b18 = b + c + a\n        val c18 = c + a + b\n    \
    \    val a19 = a + b + c\n        val b19 = b + c + a\n        val c19 = c + a\
    \ + b\n        val a20 = a + b + c\n        val b20 = b + c + a\n        val c20\
    \ = c + a + b\n        val a21 = a + b + ", "        val a = Math.sqrt(a * a +\
    \ b * b + c * c)\n        val b = 2 * a + b\n        val c = 2 * a + c\n     \
    \   val d = Math.sqrt(a * a + b * b + c * c)\n        val area = if (a + b + c\
    \ > d) (a * b * c / d) else {\n            val s = a / b\n            val t =\
    \ a / c\n            val u = c / d\n            val v = (b * s - a * t) / d\n\
    \            val w = s * (b * t - a * v) / d\n            val x = s * (u - v)\
    \ / d\n            val y = s * (v - w) / d\n            val z = s * (w - x) /\
    \ d\n            val area = if (x == y) z else -1\n            area\n        }\n\
    \        area", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1\
    \ = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2\
    \ = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3\
    \ = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4\
    \ = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5\
    \ = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6\
    \ = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7\
    \ = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8\
    \ = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9\
    \ = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n        val\
    \ c10 = c9 + a9\n        val a11 = a10 + b10\n        val b11 = b10 + c10\n  \
    \      val c11 = c10 + a10\n        val a12 = a11 + b11\n        val b12 = b11\
    \ + c11\n        val c12 = c11 + a11\n        val a13 = a12 + b12\n        val\
    \ b13 = b12 + c12\n        val c13 = c12 + a12\n        val a14 = a13 + b13\n\
    \        val b14 = b13 + c13\n        val c14 = c13 + a13\n        val a15 = a14\
    \ + b14\n        val b15 = b14 + c14\n        val c15 = c14 + a14\n        val\
    \ a16 = a15 + b15\n        val b16 = b15 + c15\n        val c16 = c15 + a15\n\
    \        val a17 = a16 + b16\n        val b17 = b16 + c16\n        val c17 = c16\
    \ + a16\n        val a18 = a17 + b17\n        val b18 = b17 + c17\n        val\
    \ c18 = c17 + a17\n        val a19 = a18 + b18\n        val b19 = b18 + c18\n\
    \        val c19 = c18 + a18\n        val a20 = a19 + b", "        val area =\
    \ (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n        if(isValid)\
    \ {\n            val area1 = (a + b) / 2\n            val area2 = (a + c) / 2\n\
    \            val area3 = (b + c) / 2\n            val areaSum = area1 + area2\
    \ + area3\n            val isValid1 = areaSum >= a\n            val isValid2 =\
    \ areaSum >= b\n            val isValid3 = areaSum >= c\n            if(isValid1\
    \ && isValid2 && isValid3) {\n                area\n            } else {\n   \
    \             -1\n            }\n        } else {\n            -1\n        }",
  "        val sum = a + b + c\n        if (sum > 0)\n            val area = math.sqrt(sum\
    \ / 2)\n            (area / 100).round(2)\n        else\n            -1", "  \
    \      val area = (a + b + c) / 2\n        val sides = List(a, b, c)\n       \
    \ val validTriangles = sides.filter(x => x >= 0)\n        val validTriangleArea\
    \ = validTriangles.sum\n        if (validTriangleArea > sides.last) area\n   \
    \     else -1", "        val triangleArea = (a + b + c) / 2\n        if (triangleArea\
    \ > c) {\n            triangleArea\n        } else {\n            -1\n       \
    \ }", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c\
    \ = math.abs(c)\n        val sum = a + b + c\n        if (sum > c) {\n       \
    \     val a = math.abs(a)\n            val b = math.abs(b)\n            val c\
    \ = math.abs(c)\n            val sum = a + b + c\n            if (sum > c) {\n\
    \                val a = math.abs(a)\n                val b = math.abs(b)\n  \
    \              val c = math.abs(c)\n                val sum = a + b + c\n    \
    \            if (sum > c) {\n                    val a = math.abs(a)\n       \
    \             val b = math.abs(b)\n                    val c = math.abs(c)\n \
    \                   val sum = a + b + c\n                    if (sum > c) {\n\
    \                        val a = math.abs(a)\n                        val b =\
    \ math.abs(b)\n                        val c = math.abs(c)\n                 \
    \       val sum = a + b + c\n                        if (sum > c) {\n        \
    \                    val a = math.abs(a)\n                            val b =\
    \ math.abs(b)\n                            val c = math.abs(c)\n             \
    \               val sum = a + b + c\n                            if (sum > c)\
    \ {\n                                val a = math.abs(a)\n                   \
    \             val b = math.abs(b)\n                                val c = math.abs(c)\n\
    \                                val sum = a + b + c\n                       \
    \         if (sum > c) {\n                                    val a = math.abs(a)\n\
    \                                    val b = math.abs(b)\n                   \
    \                 val c = math.abs(c)\n                                    val\
    \ sum = a + b + c\n                                    if (sum > c) {\n      \
    \                                  val a = math.abs(a)\n                     \
    \                   val b = math.abs(b)\n                                    \
    \    val c = math.abs(c)\n                                        val sum = a\
    \ + b + c\n                                        if (sum > c) {\n          \
    \                                  val a = math.abs(a)\n                     \
    \                       val b = math.abs(b)\n                                \
    \            val c = math.abs(c)\n                                           \
    \ val sum = a + b + c\n                                            if (sum > c)\
    \ {\n                                                val a = math.abs(a)\n   \
    \                                             val b = math.abs(b)\n          \
    \                                      val c = math.abs(c)\n                 \
    \                               val sum = a + b + c\n                        \
    \                        if (sum > c) {\n                                    \
    \                val a = math.abs(a)\n                                       \
    \             val b = math.abs(b)\n                                          \
    \          val c = math.abs(c)\n                                             \
    \       val sum = a + b + c\n                                                \
    \    if (sum > c) {\n                                                        val\
    \ a = math.abs(a)\n                                                        val\
    \ b = math.abs(b)\n                                                        val\
    \ c = math.abs(c)\n                                                        val\
    \ sum = a + b + c\n                                                        if\
    \ (sum > c) {\n                                                            val\
    \ a = math.abs(a)\n                                                          \
    \  val b = math.abs(b)\n                                                     \
    \       val c = math.abs(c)\n                                                \
    \            val sum = a + b + c\n                                           \
    \                 if (sum > c) {\n                                           \
    \                     val a = math.abs(a)\n                                  \
    \                              val b = math.abs(b)\n                         \
    \                                       val c = math.abs(c)\n                \
    \                                                val sum = a + b + ", "      \
    \  val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n\
    \        if (isValid) {\n            val isValidArea = area > 0 && area > a\n\
    \            if (isValidArea) {\n                val isValidArea = area > 0 &&\
    \ area > b\n                if (isValidArea) {\n                    val isValidArea\
    \ = area > 0 && area > c\n                    if (isValidArea) {\n           \
    \             area\n                    } else {\n                        -1\n\
    \                    }\n                } else {\n                    -1\n   \
    \             }\n            } else {\n                -1\n            }\n   \
    \     } else {\n            -1\n        }", "        val sides = List(a, b, c)\n\
    \        val sum = sides.sum\n        if (sum > sides(2)) sides(2) * sides(2)\
    \ * sides(2)\n        else -1", "        val a1 = a / 2\n        val b1 = b /\
    \ 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3\
    \ + c3) + (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) + (a7 + b7 + c7) *\
    \ (a8 + b8 + c8)", "        val a1 = (a + b) / 2\n        val b1 = (a + c) / 2\n\
    \        val c1 = (b + c) / 2\n        val sum = a1 + b1 + c1\n        if (sum\
    \ > c) sum - c\n        else if (sum < a) sum - a\n        else -1", "       \
    \ val sides = List(a, b, c)\n        val sumSides = sides.sum\n        val isValid\
    \ = sumSides > sides.last\n        val area = if (isValid) sides.sum * sides.last\
    \ / 2 else -1\n        area", "        val area = (a + b + c) / 2\n        val\
    \ isValid = a > 0 && b > 0 && c > 0\n        if(isValid) {\n            val isValidSum\
    \ = a + b > c\n            if(isValidSum) {\n                val isValidArea =\
    \ area > a * b\n                if(isValidArea) {\n                    area\n\
    \                } else {\n                    -1\n                }\n       \
    \     } else {\n                -1\n            }\n        } else {\n        \
    \    -1\n        }", "        val a1 = a + b\n        val a2 = a + c\n       \
    \ val b2 = b + c\n        val a3 = a1 + a2\n        val b3 = b1 + b2\n       \
    \ val c3 = b2 + a3\n        val a4 = a1 + a3\n        val b4 = b1 + b4\n     \
    \   val c4 = b2 + c4\n        val a5 = a2 + a4\n        val b5 = b2 + b5\n   \
    \     val c5 = b3 + c5\n        val a6 = a3 + a5\n        val b6 = b3 + b6\n \
    \       val c6 = c4 + b6\n        val a7 = a3 + a6\n        val b7 = b3 + b7\n\
    \        val c7 = c4 + b7\n        val a8 = a4 + a5\n        val b8 = b4 + b8\n\
    \        val c8 = c4 + b8\n        val a9 = a5 + a6\n        val b9 = b5 + b9\n\
    \        val c9 = c5 + b9\n        val a10 = a6 + a7\n        val b10 = b6 + b10\n\
    \        val c10 = c4 + b10\n        val a11 = a7 + a8\n        val b11 = b7 +\
    \ b11\n        val c11 = c5 + b11\n        val a12 = a8 + a9\n        val b12\
    \ = b8 + b12\n        val c12 = c4 + b12\n        val a13 = a9 + a10\n       \
    \ val b13 = b9 + b13\n        val c13 = c5 + b13\n        val a14 = a10 + a11\n\
    \        val b14 = b10 + b14\n        val c14 = c5 + b14\n        val a15 = a11\
    \ + a12\n        val b15 = b11 + b15\n        val c15 = c5 + b15\n        val\
    \ a16 = a12 + a13\n        val b16 = b12 + b16\n        val c16 = c6 + b16\n \
    \       val a17 = a13 + a14\n        val b17 = b13 + b17\n        val c17 = c6\
    \ + b17\n        val a18 = a14 + a15\n        val b18 = b14 + b18\n        val\
    \ c18 = c6 + b18\n        val a19 = a15 + a16\n        val b19 = b15 + b19\n \
    \       val c19 = c6 + b19\n        val a20 = a16 + a17\n        val b20 = b16\
    \ + b20\n        val c20 = c6 + b20\n        val a21 = a17 + a18\n", "       \
    \ val a1 = a + b\n        val a2 = a + c\n        val b2 = b + c\n        val\
    \ a3 = a1 + a2\n        val b3 = b1 + b2\n        val c3 = b2 + a1\n        val\
    \ a4 = a1 + a3\n        val b4 = b1 + b3\n        val c4 = c1 + b3\n        val\
    \ a5 = a2 + a3\n        val b5 = b2 + b4\n        val c5 = c2 + b4\n        val\
    \ a6 = a2 + a5\n        val b6 = b2 + b5\n        val c6 = c2 + b5\n        val\
    \ a7 = a3 + a5\n        val b7 = b3 + b5\n        val c7 = c3 + b5\n        val\
    \ a8 = a3 + a6\n        val b8 = b3 + b6\n        val c8 = c3 + b6\n        val\
    \ a9 = a4 + a6\n        val b9 = b4 + b7\n        val c9 = c4 + b7\n        val\
    \ a10 = a4 + a9\n        val b10 = b4 + b9\n        val c10 = c4 + b9\n      \
    \  val a11 = a5 + a9\n        val b11 = b5 + b10\n        val c11 = c5 + b10\n\
    \        val a12 = a5 + a10\n        val b12 = b5 + b11\n        val c12 = c5\
    \ + b11\n        val a13 = a6 + a10\n        val b13 = b6 + b11\n        val c13\
    \ = c6 + b11\n        val a14 = a6 + a11\n        val b14 = b6 + b12\n       \
    \ val c14 = c6 + b12\n        val a15 = a7 + a11\n        val b15 = b7 + b12\n\
    \        val c15 = c7 + b12\n        val a16 = a7 + a12\n        val b16 = b7\
    \ + b13\n        val c16 = c7 + b13\n        val a17 = a8 + a12\n        val b17\
    \ = b8 + b13\n        val c17 = c8 + b13\n        val a18 = a8 + a13\n       \
    \ val b18 = b8 + b14\n        val c18 = c8 + b14\n        val a19 = a9 + a13\n\
    \        val b19 = b9 + b14\n        val c19 = c9 + b14\n        val a20 = a9\
    \ + a14\n        val b20 = b9 + b15\n        val c20 = c9 + b15\n        val a21\
    \ = a10 + a14\n        val b21", "        val area = (a + b + c) / 2\n       \
    \ val side1 = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(side1\
    \ * side1 + a * b + b * a + c * c)\n        val side3 = math.sqrt(side2 * side2\
    \ + a * a + b * b + c * c)\n        val isValid = side1 + side2 + side3 > side1\n\
    \        val area = if (isValid) area else -1\n        area", "        val area\
    \ = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n        if\
    \ (isValid) {\n            val side1 = math.sqrt(a * a + b * b)\n            val\
    \ side2 = math.sqrt(c * c + d * d)\n            val side3 = math.sqrt(a * a +\
    \ c * c)\n            val area1 = side1 * side1\n            val area2 = side2\
    \ * side2\n            val area3 = side3 * side3\n            val area4 = side1\
    \ + side2 + side3\n            val area5 = side1 + side2 + side3\n           \
    \ val area6 = side1 + side2 + side3\n            val area7 = side1 + side2 + side3\n\
    \            val area8 = side1 + side2 + side3\n            val area9 = side1\
    \ + side2 + side3\n            val area10 = side1 + side2 + side3\n          \
    \  val area11 = side1 + side2 + side3\n            val area12 = side1 + side2\
    \ + side3\n            val area13 = side1 + side2 + side3\n            val area14\
    \ = side1 + side2 + side3\n            val area15 = side1 + side2 + side3\n  \
    \          val area16 = side1 + side2 + side3\n            val area17 = side1\
    \ + side2 + side3\n            val area18 = side1 + side2 + side3\n          \
    \  val area19 = side1 + side2 + side3\n            val area20 = side1 + side2\
    \ + side3\n            val area21 = side1 + side2 + side3\n            val area22\
    \ = side1 + side2 + side3\n            val area23 = side1 + side2 + side3\n  \
    \          val area24 = side1 + side2 + side3\n            val area25 = side1\
    \ + side2 + side3\n            val area26 = side1 + side2 + side3\n          \
    \  val area27 = side1 + side2 + side3\n            val area28 = side1 + side2\
    \ + side3\n            val area29 = side1 + side2 + side3\n            val area30\
    \ = side1 + side2 + side3\n            val area31 = side1 + side2 + side3\n  \
    \          val area32 = side1 + side2 + side3\n            val area33 = side1\
    \ + side2 + side3\n            val area34 = side1 + side2 + side3\n          \
    \  val area35 = side1 + side2 + side3\n            val area36 = side1 + side2\
    \ + side3\n            val area37 = side1 + side2 + side3\n            val area38\
    \ = side1 + side2 + side3\n            val area39 = side1 + side2 + side3\n",
  "        val a1 = a + b\n        val a2 = a + c\n        val b2 = b + c\n      \
    \  val a3 = a + b + c\n        val b3 = b + c + a\n        val c3 = c + a + b\n\
    \        val a4 = a + b + c\n        val b4 = b + c + a\n        val c4 = c +\
    \ a + b\n        val a5 = a + c + b\n        val b5 = b + c + a\n        val c5\
    \ = c + a + b\n        val a6 = a + c + b\n        val b6 = b + c + a\n      \
    \  val c6 = c + a + b\n        val a7 = a + c + b\n        val b7 = b + c + a\n\
    \        val c7 = c + a + b\n        val a8 = a + b + c\n        val b8 = b +\
    \ c + a\n        val c8 = c + a + b\n        val a9 = a + b + c\n        val b9\
    \ = b + c + a\n        val c9 = c + a + b\n        val a10 = a + c + b\n     \
    \   val b10 = b + c + a\n        val c10 = c + a + b\n        val a11 = a + c\
    \ + b\n        val b11 = b + c + a\n        val c11 = c + a + b\n        val a12\
    \ = a + c + b\n        val b12 = b + c + a\n        val c12 = c + a + b\n    \
    \    val a13 = a + c + b\n        val b13 = b + c + a\n        val c13 = c + a\
    \ + b\n        val a14 = a + c + b\n        val b14 = b + c + a\n        val c14\
    \ = c + a + b\n        val a15 = a + c + b\n        val b15 = b + c + a\n    \
    \    val c15 = c + a + b\n        val a16 = a + c + b\n        val b16 = b + c\
    \ + a\n        val c16 = c + a + b\n        val a17 = a + c + b\n        val b17\
    \ = b + c + a\n        val c17 = c + a + b\n        val a18 = a + c + b\n    \
    \    val b18 = b + c + a\n        val c18 = c + a + b\n        val a19 = a + c\
    \ + b\n        val b19 = b + c + a\n        val c19 = c + a + b\n        val a20\
    \ = a + c + b\n        val b20 = b + c + a\n        val c20 = c + a + b\n    \
    \    val a21 = a + c + b\n        val b21 = b + c + a\n        val c21 = ", " \
    \       val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n     \
    \   val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n   \
    \     val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n \
    \       val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n\
    \        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n\
    \        val a10 = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 +\
    \ a9\n        val a11 = a10 + b10\n        val b11 = b10 + c10\n        val c11\
    \ = c10 + a10\n        val a12 = a11 + b11\n        val b12 = b11 + c11\n    \
    \    val c12 = c11 + a11\n        val a13 = a12 + b12\n        val b13 = b12 +\
    \ c12\n        val c13 = c12 + a12\n        val a14 = a13 + b13\n        val b14\
    \ = b13 + c13\n        val c14 = c13 + a13\n        val a15 = a14 + b14\n    \
    \    val b15 = b14 + c14\n        val c15 = c14 + a14\n        val a16 = a15 +\
    \ b15\n        val b16 = b15 + c15\n        val c16 = c15 + a15\n        val a17\
    \ = a16 + b16\n        val b17 = b16 + c16\n        val c17 = c16 + a16\n    \
    \    val a18 = a17 + b17\n        val b18 = b17 + c17\n        val c18 = c17 +\
    \ a17\n        val a19 = a18 + b18\n        val b19 = b18 + c18\n        val c19\
    \ = c18 + a18\n        val a20 = a19 + b", "        val triangleArea = (a+b+c)/2\n\
    \        val isValid = a > 0 && b > 0 && c > 0\n        if(isValid) {\n      \
    \      val isValidTriangle = (a + b > c) && (a + c > b) && (b + c > a)\n     \
    \       if(isValidTriangle) {\n                triangleArea.toFloat\n        \
    \    } else {\n                -1\n            }\n        } else {\n         \
    \   -1\n        }", "        val area = (a + b + c) / 2\n        val isValid =\
    \ a > 0 && b > 0 && c > 0\n        val isValidArea = area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && a < b\n        val isValidArea = isValidArea\
    \ && b < c\n        val isValidArea = isValidArea && c < a\n        val isValidArea\
    \ = isValidArea && a < c && b < a\n        val isValidArea = isValidArea && a\
    \ < b\n        val isValidArea = isValidArea && b < c\n        val isValidArea\
    \ = isValidArea && c < a\n        val isValidArea = isValidArea && a < c && b\
    \ < a\n        val isValidArea = isValidArea && a < b\n        val isValidArea\
    \ = isValidArea && b < c\n        val isValidArea = isValidArea && c < a\n   \
    \     val isValidArea = isValidArea && a < c && b < a\n        val isValidArea\
    \ = isValidArea && a < b\n        val isValidArea = isValidArea && b < c\n   \
    \     val isValidArea = isValidArea && c < a\n        val isValidArea = isValidArea\
    \ && a < c && b < a\n        val isValidArea = isValidArea && a < b\n        val\
    \ isValidArea = isValidArea && b < c\n        val isValidArea = isValidArea &&\
    \ c < a\n        val isValidArea = isValidArea && a < c && b < a\n        val\
    \ isValidArea = isValidArea && a < b\n        val isValidArea = isValidArea &&\
    \ b < c\n        val isValidArea = isValidArea && c < a\n        val isValidArea\
    \ = isValidArea && a < c && b < a\n        val isValidArea = isValidArea && a\
    \ < b\n        val isValidArea = isValidArea && b < c\n        val isValidArea\
    \ = isValidArea && c < a\n        val isValidArea = isValidArea && a < c && b\
    \ < a\n        val isValidArea = isValidArea && a < b\n        val isValidArea\
    \ = isValidArea && b < c\n        val isValidArea = isValidArea && c < a\n   \
    \     val isValidArea = isValidArea && a < c && b < a\n        val isValidArea\
    \ = isValidArea && a < b\n        val isValidArea = isValidArea && b < c\n   \
    \     val isValid", "        val area = (a + b + c) / 2\n        val isValid =\
    \ (a * b + c) >= a\n        if(isValid) {\n            area\n        } else {\n\
    \            -1\n        }", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        if (a + b > c) {\n            return math.round(math.sqrt(a\
    \ * b * c) / 2)\n        } else {\n            return -1\n        }", "      \
    \  val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a3\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c4\n        val c4 = c4 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c5\n        val c5 = c5 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c6\n        val c6 = c6 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c7\n        val c7 = c7 + a6\n\
    \        val a8 = a7 + b7\n        val b8 = b7 + c8\n        val c8 = c8 + a7\n\
    \        val a9 = a8 + b8\n        val b9 = b8 + c9\n        val c9 = c9 + a8\n\
    \        val a10 = a9 + b9\n        val b10 = b9 + c10\n        val c10 = c10\
    \ + a9\n        val a11 = a10 + b10\n        val b11 = b10 + c11\n        val\
    \ c11 = c11 + a10\n        val a12 = a11 + b11\n        val b12 = b11 + c12\n\
    \        val c12 = c12 + a11\n        val a13 = a12 + b12\n        val b13 = b12\
    \ + c13\n        val c13 = c13 + a12\n        val a14 = a13 + b13\n        val\
    \ b14 = b13 + c14\n        val c14 = c14 + a13\n        val a15 = a14 + b14\n\
    \        val b15 = b14 + c15\n        val c15 = c15 + a14\n        val a16 = a15\
    \ + b15\n        val b16 = b15 + c16\n        val c16 = c16 + a15\n        val\
    \ a17 = a16 + b16\n        val b17 = b16 + c17\n        val c17 = c17 + a16\n\
    \        val a18 = a17 + b17\n        val b18 = b17 + c18\n        val c18 = c18\
    \ + a17\n        val a19 = a18 + b18\n        val b19 = b18 + c19\n        val\
    \ c19 = c19 + a18\n        val a20 = a19 + b19\n", "        val area = if (a +\
    \ b > c) (a * b) / 2 else -1\n        area", "        val area = (a + b + c) /\
    \ 2\n        val isValid = (area > b + c) || (a + b > c + a)\n        val rounded\
    \ = if (isValid) area / 2 else -1\n        rounded", "        val sides = List(a,\
    \ b, c).filter(_ > 0)\n        if (sides.sum > sides.last) sides.sum.toDouble\
    \ * 0.5\n        else -1", "        val a1 = a / 2\n        val b1 = b / 2\n \
    \       val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n \
    \       val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n\
    \        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n\
    \        val c10 = c9 + a9\n        val a11 = a10 + b10\n        val b11 = b10\
    \ + c10\n        val c11 = c10 + a10\n        val a12 = a11 + b11\n        val\
    \ b12 = b11 + c11\n        val c12 = c11 + a11\n        val a13 = a12 + b12\n\
    \        val b13 = b12 + c12\n        val c13 = c12 + a12\n        val a14 = a13\
    \ + b13\n        val b14 = b13 + c13\n        val c14 = c13 + a13\n        val\
    \ a15 = a14 + b14\n        val b15 = b14 + c14\n        val c15 = c14 + a14\n\
    \        val a16 = a15 + b15\n        val b16 = b15 + c15\n        val c16 = c15\
    \ + a15\n        val a17 = a16 + b16\n        val b17 = b16 + c16\n        val\
    \ c17 = c16 + a16\n        val a18 = a17 + b17\n        val b18 = b17 + c17\n\
    \        val c18 = c17 + a17\n        val a19 = a18 + b18\n        val b19 = b18\
    \ + c18\n        val c19 = c18 + a18\n        val a20 = a19 + b19", "        val\
    \ side1 = math.sqrt(a * a + b * b)\n        val side2 = math.sqrt(c * c + a *\
    \ a)\n        val side3 = math.sqrt(c * c + b * b)\n        val area = (side1\
    \ + side2 + side3) / 2\n        val rounded = area.toString.split(\"\\\\.\").last.dropRight(2).drop(1).drop(1).dropRight(1).mkString.toFloat\n\
    \        if (rounded == area) area else -1", "        val sum = a + b + c\n  \
    \      if (sum > 0) sum / 2 else -1", "        val sum = a + b + c\n        if\
    \ (sum > 0) {\n            val area = math.sqrt(sum * a * a + sum * b * b + sum\
    \ * c * c)\n            (area / 2).toFloat\n        } else {\n            -1\n\
    \        }", "        val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n   \
    \     val a3 = (c + a) / 2\n        val a4 = (a1 + a2 + a3) / 2\n        val a5\
    \ = (a2 + a3 + a4) / 2\n        val a6 = (a3 + a4 + a5) / 2\n        val a7 =\
    \ (a4 + a5 + a6) / 2\n        val a8 = (a5 + a6 + a7) / 2\n        val a9 = (a6\
    \ + a7 + a8) / 2\n        val a10 = (a7 + a8 + a9) / 2\n        val a11 = (a8\
    \ + a9 + a10) / 2\n        val a12 = (a9 + a10 + a11) / 2\n        val a13 = (a10\
    \ + a11 + a12) / 2\n        val a14 = (a11 + a12 + a13) / 2\n        val a15 =\
    \ (a12 + a13 + a14) / 2\n        val a16 = (a13 + a14 + a15) / 2\n        val\
    \ a17 = (a14 + a15 + a16) / 2\n        val a18 = (a15 + a16 + a17) / 2\n     \
    \   val a19 = (a16 + a17 + a18) / 2\n        val a20 = (a17 + a18 + a19) / 2\n\
    \        val a21 = (a18 + a19 + a20) / 2\n        val a22 = (a19 + a20 + a21)\
    \ / 2\n        val a23 = (a20 + a21 + a22) / 2\n        val a24 = (a21 + a22 +\
    \ a23) / 2\n        val a25 = (a22 + a23 + a24) / 2\n        val a26 = (a23 +\
    \ a24 + a25) / 2\n        val a27 = (a24 + a25 + a26) / 2\n        val a28 = (a25\
    \ + a26 + a27) / 2\n        val a29 = (a26 + a27 + a28) / 2\n        val a30 =\
    \ (a27 + a28 + a29) / 2\n        val a31 = (a28 + a29 + a30) / 2\n        val\
    \ a32 = (a29 + a30 + a31) / 2\n        val a33 = (a30 + a31 + a32) / 2\n     \
    \   val a34 = (a31 + a32 + a33) / 2\n        val a35 = (a32 + a33 + a34) / 2\n\
    \        val a36 = (a33 + a34 + a35) / 2\n        val a37 = (a34 + a35 + a36)\
    \ / 2\n        val a38 = (a35 + a36 + a37) / 2\n        val a39 = (a36 + a37 +\
    \ a38) / 2\n        val a40 = (a37 + a38 + a39) / 2\n        val a41 = (a38 +\
    \ a39 + a40) / 2\n        val a42 = (a39 + a40 + a41) / 2\n        val a43 = (a40\
    \ + a41 + a42) / 2\n        val a44 = (a41 + a42", "        val a = Math.sqrt(a\
    \ * a)\n        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n \
    \       val sum = (a + b + c) / 2\n        if (sum > a) sum - a\n        else\
    \ if (sum > b) sum - b\n        else if (sum > c) sum - c\n        else -1", " \
    \       val a = Math.sqrt(a * a + b * b + c * c)\n        val b = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val c = Math.sqrt(a * a + b * b + c * c)\n   \
    \     val area = if (a + b > c) a / 2\n        else b / 2\n        area", "  \
    \      val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0\n        if (isValid) {\n            val sum = a + b + c\n            if (sum\
    \ > area) {\n                val rounded = math.round(sum * 100) / 100\n     \
    \           rounded\n            } else {\n                -1\n            }\n\
    \        } else {\n            -1\n        }", "        val sides = List(a, b,\
    \ c).sorted\n        val sum = sides.sum\n        if (sum > sides(2)) {\n    \
    \        val area = sides.sum * sides.sum / 2\n            val rounded = area.toString.replaceAll(\"\
    \\\\.[0-9]*$\", \"\")\n            val roundedFloat = rounded.toFloat\n      \
    \      roundedFloat\n        } else {\n            -1\n        }", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        if (a + b > c) {\n            val d = math.min(a, b, c);\n          \
    \  val e = math.max(a, b, c);\n            val f = math.min(e, d, c);\n      \
    \      val g = math.max(e, d, c);\n            val h = math.min(f, g, c);\n  \
    \          val i = math.max(e, d, c);\n            val area = h * i / 2;\n   \
    \         area\n        } else {\n            -1\n        }", "        val triangleArea\
    \ = (a+b+c)/2\n        val isValid = a > 0 && b > 0 && c > 0 && a + b > c\n  \
    \      if (isValid) {\n            val area = (triangleArea*triangleArea*triangleArea)/4\n\
    \            val rounded = area.toString.split(\"\\\\.\").takeRight(2).mkString(\"\
    .\")\n            rounded.toFloat\n        } else {\n            -1\n        }",
  "        val triangleArea = a * b * c / 2\n        val validTriangleSides = a +\
    \ b + c > 0\n        if (validTriangleSides && triangleArea > 0)\n           \
    \ triangleArea.toFloat\n        else\n            -1", "        val sum = a +\
    \ b + c\n        if (sum > 0) (sum / 2) else -1", "        val a = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val b = Math.sqrt(a * a + b * b + c * c)\n   \
    \     val c = Math.sqrt(a * a + b * b + c * c)\n        if (a + b > c) {\n   \
    \         val area = (a * b) / c\n            area\n        } else {\n       \
    \     -1\n        }", "        val a1 = a / 2\n        val b1 = b / 2\n      \
    \  val c1 = c / 2\n        val sum = a1 + b1 + c1\n        val a2 = a1 - sum\n\
    \        val b2 = b1 - sum\n        val c2 = c1 - sum\n        val a3 = a2 - sum\n\
    \        val b3 = b2 - sum\n        val c3 = c2 - sum\n        val a4 = a3 - sum\n\
    \        val b4 = b3 - sum\n        val c4 = c3 - sum\n        val a5 = a4 - sum\n\
    \        val b5 = b5 - sum\n        val c5 = c5 - sum\n        val a6 = a5 - sum\n\
    \        val b6 = b6 - sum\n        val c6 = c6 - sum\n        val a7 = a6 - sum\n\
    \        val b7 = b7 - sum\n        val c7 = c7 - sum\n        val a8 = a7 - sum\n\
    \        val b8 = b8 - sum\n        val c8 = c8 - sum\n        val a9 = a8 - sum\n\
    \        val b9 = b9 - sum\n        val c9 = c9 - sum\n        val a10 = a9 -\
    \ sum\n        val b10 = b9 - sum\n        val c10 = c9 - sum\n        val a11\
    \ = a10 - sum\n        val b11 = b10 - sum\n        val c11 = c10 - sum\n    \
    \    val a12 = a11 - sum\n        val b12 = b11 - sum\n        val c12 = c11 -\
    \ sum\n        val a13 = a12 - sum\n        val b13 = b12 - sum\n        val c13\
    \ = c12 - sum\n        val a14 = a13 - sum\n        val b14 = b13 - sum\n    \
    \    val c14 = c13 - sum\n        val a15 = a14 - sum\n        val b15 = b14 -\
    \ sum\n        val c15 = c14 - sum\n        val a16 = a15 - sum\n        val b16\
    \ = b15 - sum\n        val c16 = c15 - sum\n        val a17 = a16 - sum\n    \
    \    val b17 = b16 - sum\n        val c17 = c16 - sum\n        val a18 = a17 -\
    \ sum\n        val b18 = b17 - sum\n        val c18 = c17 - sum\n        val a19\
    \ = a18 - sum\n        val b19 = b18 - sum\n        val c19 = c18 - sum\n    \
    \    val a20 = a19 - sum\n        val b20 = b19 - sum", "        val area = (a\
    \ + b + c) / 2\n        val isValid = (area > 0 && area > b) && \n           \
    \          (area > c && area > a)\n        val areaFloat = if (isValid) area else\
    \ -1\n        areaFloat.toFloat", "        val sides = List(a, b, c)\n       \
    \ val sum = sides.sum\n        if (sum > sides.last) sides.last else -1", "  \
    \      val area = (a + b + c) / 2\n        val isTriangle = (a + b > c) && (a\
    \ + c > b) && (b + c > a)\n        if (area > 0 && isTriangle) area else -1",
  "        val a1 = a/2\n        val b1 = b/2\n        val c1 = c/2\n        val a2\
    \ = a*a\n        val b2 = b*b\n        val c2 = c*c\n        val a3 = a1*a1\n\
    \        val b3 = b1*b1\n        val c3 = c1*c1\n        val a4 = a2*a2\n    \
    \    val b4 = b2*b2\n        val c4 = c4*c4\n        val a5 = a3*a3\n        val\
    \ b5 = b3*b3\n        val c5 = c5*c5\n        val a6 = a4*a4\n        val b6 =\
    \ b6*b6\n        val c6 = c6*c6\n        val a7 = a5*a5\n        val b7 = b7*b7\n\
    \        val c7 = c7*c7\n        val a8 = a7*a7\n        val b8 = b8*b8\n    \
    \    val c8 = c8*c8\n        val a9 = a8*a8\n        val b9 = b9*b9\n        val\
    \ c9 = c9*c9\n        val a10 = a9*a9\n        val b10 = b9*b9\n        val c10\
    \ = c9*c9\n        val a11 = a10*a10\n        val b11 = b10*b10\n        val c11\
    \ = c10*c10\n        val a12 = a11*a11\n        val b12 = b11*b11\n        val\
    \ c12 = c11*c11\n        val a13 = a12*a12\n        val b13 = b12*b12\n      \
    \  val c13 = c12*c12\n        val a14 = a13*a13\n        val b14 = b13*b13\n \
    \       val c14 = c13*c13\n        val a15 = a14*a14\n        val b15 = b14*b14\n\
    \        val c15 = c14*c14\n        val a16 = a15*a15\n        val b16 = b15*b15\n\
    \        val c16 = c15*c15\n        val a17 = a16*a16\n        val b17 = b16*b16\n\
    \        val c17 = c16*c16\n        val a18 = a17*a17\n        val b18 = b17*b17\n\
    \        val c18 = c17*c17\n        val a19 = a18*a18\n        val b19 = b18*b18\n\
    \        val c19 = c18*c18\n        val a20 = a19*", "        val a1 = Math.abs(a\
    \ * 0.5)\n        val b1 = Math.abs(b * 0.5)\n        val c1 = Math.abs(c * 0.5)\n\
    \        val a2 = Math.abs(a1 + b1 + c1)\n        val b2 = Math.abs(a1 + b1)\n\
    \        val c2 = Math.abs(a1 + c1)\n        val a3 = Math.abs(a2 + b2 + c2)\n\
    \        val b3 = Math.abs(a2 + b2)\n        val c3 = Math.abs(a2 + c2)\n    \
    \    val a4 = Math.abs(a3 + b3 + c3)\n        val b4 = Math.abs(a3 + b3)\n   \
    \     val c4 = Math.abs(a3 + c3)\n        val a5 = Math.abs(a4 + b4 + c4)\n  \
    \      val b5 = Math.abs(a4 + b4)\n        val c5 = Math.abs(a4 + c4)\n      \
    \  val a6 = Math.abs(a5 + b5 + c5)\n        val b6 = Math.abs(a5 + b5)\n     \
    \   val c6 = Math.abs(a5 + c5)\n        val a7 = Math.abs(a6 + b6 + c6)\n    \
    \    val b7 = Math.abs(a6 + b6)\n        val c7 = Math.abs(a6 + c6)\n        val\
    \ a8 = Math.abs(a7 + b7 + c7)\n        val b8 = Math.abs(a7 + b7)\n        val\
    \ c8 = Math.abs(a7 + c7)\n        val a9 = Math.abs(a8 + b8 + c8)\n        val\
    \ b9 = Math.abs(a8 + b8)\n        val c9 = Math.abs(a8 + c8)\n        val a10\
    \ = Math.abs(a9 + b9 + c9)\n        val b10 = Math.abs(a9 + b9)\n        val c10\
    \ = Math.abs(a9 + c9)\n        val a11 = Math.abs(a10 + b10 + c10)\n        val\
    \ b11 = Math.abs(a10 + b10)\n        val c11 = Math.abs(a10 + c10)\n        val\
    \ a12 = Math.abs(a11 + b11 + c11)\n        val b12 = Math.abs(a11 + b11)\n   \
    \     val c12 = Math.abs(a11 + c11)\n        val a13 = Math.abs(a12 + b12 + c12)\n\
    \        val b13 = Math.abs(a12 + b12)\n        val c13 = Math.abs(a12 + c12)\n\
    \        val a14 = Math.abs(a13 + b13 + c13)\n        val b14 = Math.abs(a13 +\
    \ b13)\n        val c14 = Math.abs(a13 + c13)\n        val a15 = Math.abs(a14\
    \ + b14 + c14)\n        val b15 = Math.abs(a14 + b14)\n        val c15 = Math.abs(a14\
    \ + c14)", "        val area = (a + b + c) / 2\n        val isValid = a > 0 &&\
    \ b > 0 && c > 0\n        val isValidArea = area > 0 && area < 1\n        val\
    \ isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea =\
    \ isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea &&\
    \ area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 && area\
    \ < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n       \
    \ val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area ", "   \
    \     val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0\n        if (isValid) {\n            val sum = a + b + c\n            if (sum\
    \ > area) {\n                area / 2\n            } else {\n                -1\n\
    \            }\n        } else {\n            -1\n        }", "        val area\
    \ = if (a + b > c) (a * b) / 2 else -1\n        area", "        val sides = List(a,\
    \ b, c).sorted\n        val sum = sides.sum\n        if (sum > sides(2)) sides(2)\
    \ * sides(2) * sides(2)\n        else -1", "        val sides = List(a,b,c)\n\
    \        val sum = sides.sum\n        if (sum > sides.last) sides.last else -1",
  "        val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0\n        if (isValid) {\n            val area1 = (a + b) / 2\n           \
    \ val area2 = (a + c) / 2\n            val area3 = (b + c) / 2\n            val\
    \ areaSum = area1 + area2 + area3\n            val isValid1 = area1 > 0 && area2\
    \ > 0 && area3 > 0\n            val isValid2 = area1 > 0 && area3 > 0 && area2\
    \ > 0\n            val isValid3 = area1 > 0 && area2 > 0 && area3 > 0\n      \
    \      val isValidSum = isValid1 && isValid2 && isValid3\n            if (isValidSum)\
    \ {\n                areaSum.toFloat\n            } else {\n                -1\n\
    \            }\n        } else {\n            -1\n        }", "        val a1\
    \ = a + b\n        val a2 = a + c\n        val b2 = b + c\n        val a3 = a1\
    \ + a2\n        val b3 = b1 + b2\n        val c3 = b2 + a3\n        val a4 = a1\
    \ + a3\n        val b4 = b1 + b4\n        val c4 = b2 + c4\n        val a5 = a2\
    \ + a4\n        val b5 = b2 + b5\n        val c5 = b3 + c5\n        val a6 = a3\
    \ + a5\n        val b6 = b3 + b6\n        val c6 = c4 + b6\n        val a7 = a3\
    \ + a6\n        val b7 = b3 + b7\n        val c7 = c4 + b7\n        val a8 = a4\
    \ + a7\n        val b8 = b4 + b8\n        val c8 = c4 + b8\n        val a9 = a5\
    \ + a8\n        val b9 = b5 + b9\n        val c9 = c5 + b9\n        val a10 =\
    \ a6 + a9\n        val b10 = b6 + b10\n        val c10 = c6 + b10\n        val\
    \ a11 = a7 + a10\n        val b11 = b7 + b11\n        val c11 = c7 + b11\n   \
    \     val a12 = a8 + a11\n        val b12 = b8 + b12\n        val c12 = c8 + b12\n\
    \        val a13 = a9 + a12\n        val b13 = b9 + b13\n        val c13 = c9\
    \ + b13\n        val a14 = a10 + a13\n        val b14 = b10 + b14\n        val\
    \ c14 = c10 + b14\n        val a15 = a11 + a14\n        val b15 = b11 + b15\n\
    \        val c15 = c11 + b15\n        val a16 = a12 + a15\n        val b16 = b12\
    \ + b16\n        val c16 = c12 + b16\n        val a17 = a13 + a16\n        val\
    \ b17 = b13 + b17\n        val c17 = c13 + b17\n        val a18 = a14 + a17\n\
    \        val b18 = b14 + b18\n        val c18 = c14 + b18\n        val a19 = a15\
    \ + a18\n        val b19 = b15 + b19\n        val c19 = c15 + b19\n        val\
    \ a20 = a16 + a19\n        val b20 = b16 + b20\n        val c20 = c16", "    \
    \    val sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum >\
    \ sides.last) sides.last else -1", "        val sum = a + b + c\n        if (sum\
    \ > 0) {\n            val area = math.sqrt(sum * sum / 2)\n            (area /\
    \ 100).round\n        } else {\n            -1\n        }", "        val sides\
    \ = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last else -1", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n\
    \        val c1 = Math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4\
    \ + c3\n        val c4 = c4 + a4 \n        val a5 = a4 + b4\n        val b5 =\
    \ b5 + c4\n        val c5 = c5 + a5 \n        val a6 = a5 + b5\n        val b6\
    \ = b6 + c5\n        val c6 = c6 + a6 \n        val a7 = a6 + b6\n        val\
    \ b7 = b7 + c6\n        val c7 = c7 + a7\n        (a1 + b2 + c3 > a2 + b3 + c4\
    \ && a1 + b2 + c3 > a3 + b2 + c4 && a1 + b2 + c3 > a4 + b3 + c4 && a1 + b2 + c3\
    \ > a5 + b2 + c4 && a1 + b2 + c3 > a6 + b2 + c4 && a1 + b2 + c3 > a7 + b2 + c4\
    \ && a1 + b2 + c3 > a2 + b3 + c5 && a1 + b2 + c3 > a3 + b3 + c5 && a1 + b2 + c3\
    \ > a4 + b3 + c5 && a1 + b2 + c3 > a5 + b3 + c5 && a1 + b2 + c3 > a6 + b3 + c5\
    \ && a1 + b2 + c3 > a7 + b3 + c5 && a1 + b2 + c3 > a2 + b3 + c6 && a1 + b2 + c3\
    \ > a3 + b3 + c6 && a1 + b2 + c3 > a4 + b3 + c6 && a1 + b2 + c3 > a5 + b3 + c6\
    \ && a1 + b2 + c3 > a6 + b3 + c6 && a1 + b2 + c3 > a7 + b3 + c6 && a1 + b2 + c3\
    \ > a2 + b3 + c7 && a1 + b2 + c3 > a3 + b3 + c7 && a1 + b2 + c3 > a4 + b3 + c7\
    \ && a1 + b2 + c3 > a5 + b3 + c7 && a1 + b2 + c3 > a6 + b3 + c7 && a1 + b2 + c3\
    \ > a7 + b3 + c7 && a1 + b2 + c3 > a2 + b3 + c4 && a1 + b2 + c3 > a3 + b3 + c4\
    \ && a1 + b2 + c3 > a4", "        val sum = a + b + c\n        if (sum > 0) {\n\
    \            val area = (a + b + c) / 2\n            val side1 = math.sqrt(a *\
    \ a + b * b + c * c)\n            val side2 = math.sqrt(a * a + c * c + b * b)\n\
    \            val side3 = math.sqrt(b * b + c * c + a * a)\n            val area1\
    \ = side1 * side1\n            val area2 = side2 * side2\n            val area3\
    \ = side3 * side3\n            val area4 = area1 + area2 + area3\n           \
    \ val area5 = area / 2\n            val area6 = area4 / 2\n            val area7\
    \ = area5 / 2\n            val area8 = area6 / 2\n            val area9 = area7\
    \ / 2\n            val area10 = area8 / 2\n            val area11 = area9 / 2\n\
    \            val area12 = area10 / 2\n            val area13 = area11 / 2\n  \
    \          val area14 = area12 / 2\n            val area15 = area13 / 2\n    \
    \        val area16 = area14 / 2\n            val area17 = area15 / 2\n      \
    \      val area18 = area16 / 2\n            val area19 = area17 / 2\n        \
    \    val area20 = area18 / 2\n            val area21 = area19 / 2\n          \
    \  val area22 = area20 / 2\n            val area23 = area21 / 2\n            val\
    \ area24 = area22 / 2\n            val area25 = area23 / 2\n            val area26\
    \ = area24 / 2\n            val area27 = area25 / 2\n            val area28 =\
    \ area26 / 2\n            val area29 = area27 / 2\n            val area30 = area28\
    \ / 2\n            val area31 = area29 / 2\n            val area32 = area30 /\
    \ 2\n            val area33 = area31 / 2\n            val area34 = area32 / 2\n\
    \            val area35 = area33 / 2\n            val area36 = area34 / 2\n  \
    \          val area37 = area35 / 2\n            val area38 = area36 / 2\n    \
    \        val area39 = area37 / 2\n            val area40 = area38 / 2\n      \
    \      val area41 = area39 / 2\n            val area42 = area40 / 2\n        \
    \    val area43 = area41 / 2\n            val area44 = area42 / 2\n          \
    \  val area45 = area43 / 2\n            val area4", "        val area = (a + b\
    \ + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n        if (isValid)\
    \ {\n            val isValidArea = area > 0 && area > a\n            if (isValidArea)\
    \ {\n                val isValidArea = area > 0 && area > b\n                if\
    \ (isValidArea) {\n                    val isValidArea = area > 0 && area > c\n\
    \                    if (isValidArea) {\n                        area\n      \
    \              } else {\n                        -1\n                    }\n \
    \               } else {\n                    -1\n                }\n        \
    \    } else {\n                -1\n            }\n        } else {\n         \
    \   -1\n        }", "        val area = (a + b + c) / 2\n        val isValid =\
    \ a > 0 && b > 0 && c > 0\n        if (isValid) {\n            val isValidSum\
    \ = a + b > c\n            if (isValidSum) {\n                val isValidArea\
    \ = area > a * b\n                if (isValidArea) {\n                    area\n\
    \                } else {\n                    -1\n                }\n       \
    \     } else {\n                -1\n            }\n        } else {\n        \
    \    -1\n        }", "        val area = (a + b + c) / 2\n        val isTriangle\
    \ = (area > a * a + b * b + c * c) \n        if (isTriangle) {\n            area\n\
    \        } else {\n            -1\n        }", "        val a1 = a / 2\n     \
    \   val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n       \
    \ val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n     \
    \   val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n   \
    \     val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n \
    \       val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n\
    \        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8 + b8\n\
    \        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10 = a9 + b9\n\
    \        val b10 = b9 + c9\n        val c10 = c9 + a9\n        val a11 = a10 +\
    \ b10\n        val b11 = b10 + c10\n        val c11 = c110 + a10\n        val\
    \ a12 = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11 + a11\n\
    \        val a13 = a12 + b12\n        val b13 = b12 + c12\n        val c13 = c12\
    \ + a12\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n        val\
    \ c14 = c13 + a13\n        val a15 = a14 + b14\n        val b15 = b14 + c14\n\
    \        val c15 = c14 + a14\n        val a16 = a15 + b15\n        val b16 = b15\
    \ + c15\n        val c16 = c15 + a15\n        val a17 = a16 + b16\n        val\
    \ b17 = b16 + c16\n        val c17 = c16 + a16\n        val a18 = a17 + b17\n\
    \        val b18 = b17 + c17\n        val c18 = c17 + a17\n        val a19 = a18\
    \ + b18\n        val b19 = b18 + c18\n        val c19 = c18 + a18\n        val\
    \ a20 = a19 + b", "        val sides = List(a, b, c).sorted\n        val sum =\
    \ sides.sum\n        if (sum > sides(2)) sides(2).toFloat else -1", "        val\
    \ sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last.toFloat * sides.last.toFloat / sum\n        else -1", "        val\
    \ sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides(2))\
    \ {\n            val area = sides.sum * sides(2) * sides(2) / 3\n            (area.toDouble\
    \ * 100).toFloat\n        } else {\n            -1\n        }", "        val sides\
    \ = List(a,b,c)\n        val sum = sides.sum\n        if (sum > sides.last) sides.last\
    \ else -1", "        val area = (a + b + c) / 2\n        val isValid = a > 0 &&\
    \ b > 0 && c > 0\n        if(isValid) {\n            val isValidSide = a + b >\
    \ c\n            if(isValidSide) {\n                val isValidArea = area > a\n\
    \                if(isValidArea) {\n                    area\n               \
    \ } else {\n                    -1\n                }\n            } else {\n\
    \                -1\n            }\n        } else {\n            -1\n       \
    \ }", "        val a1 = Math.abs(a * b - c * c)\n        val a2 = Math.abs(a *\
    \ c - b * b)\n        val a3 = Math.abs(a * b + c * c)\n        val a4 = Math.abs(a\
    \ * c + b * b)\n        val a5 = Math.abs(a * b - c * c)\n        val a6 = Math.abs(a\
    \ * c + b * b)\n        val a7 = Math.abs(a * b + c * c)\n        val a8 = Math.abs(a\
    \ * c - b * b)\n        val a9 = Math.abs(a * c + b * b)\n        val a10 = Math.abs(a\
    \ * b - c * c)\n        val a11 = Math.abs(a * c + b * b)\n        val a12 = Math.abs(a\
    \ * b + c * c)\n        val a13 = Math.abs(a * c - b * b)\n        val a14 = Math.abs(a\
    \ * c + b * b)\n        val a15 = Math.abs(a * b - c * c)\n        val a16 = Math.abs(a\
    \ * c + b * b)\n        val a17 = Math.abs(a * b + c * c)\n        val a18 = Math.abs(a\
    \ * c - b * b)\n        val a19 = Math.abs(a * c + b * b)\n        val a20 = Math.abs(a\
    \ * b - c * c)\n        val a21 = Math.abs(a * c + b * b)\n        val a22 = Math.abs(a\
    \ * b + c * c)\n        val a23 = Math.abs(a * c - b * b)\n        val a24 = Math.abs(a\
    \ * c + b * b)\n        val a25 = Math.abs(a * b - c * c)\n        val a26 = Math.abs(a\
    \ * c + b * b)\n        val a27 = Math.abs(a * b + c * c)\n        val a28 = Math.abs(a\
    \ * c - b * b)\n        val a29 = Math.abs(a * c + b * b)\n        val a30 = Math.abs(a\
    \ * b - c * c)\n        val a31 = Math.abs(a * c + b * b)\n        val a32 = Math.abs(a\
    \ * b + c * c)\n        val a33 = Math.abs(a * c - b * b)\n        val a34 = Math.abs(a\
    \ * c + b * b)\n        val a35 = Math.abs(a * b - c * c)\n        val a36 = Math.abs(a\
    \ * c + b * b)\n        val a37 = Math.abs(a * b + c * c)\n        val a38 = Math.abs(a\
    \ * c - b * b)\n        val a39 = Math.abs(a * c + b * b)\n        val a40 = Math.abs(a\
    \ * b - c * c)\n        val a4", "        val sum = a + b + c\n        if (sum\
    \ > 0)\n            val area = math.sqrt(sum * a * a + sum * b * b + sum * c *\
    \ c)\n            area.toFloat\n        else\n            -1", "        val sum\
    \ = a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum *\
    \ a * a + sum * b * b + sum * c * c)\n            area / 2\n        } else {\n\
    \            -1\n        }", "        val sides = List(a, b, c)\n        val sum\
    \ = sides.sum\n        val third = sides.last\n        if (sum > third) {\n  \
    \          val area = sides.sum * sides.last\n            val rounded = math.round(area\
    \ * 100.0) / 100.0\n            rounded\n        } else {\n            -1\n  \
    \      }", "        val sum = a + b + c\n        if (sum > 0) {\n            val\
    \ area = math.sqrt(sum * a * a + b * b + c * c)\n            area / 2\n      \
    \  } else {\n            -1\n        }", "        val a = math.abs(a)\n      \
    \  val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b +\
    \ c\n        if (sum > c) {\n            val area = math.round(a * b / (sum -\
    \ c))\n            area\n        } else {\n            -1\n        }", "     \
    \   val area = if (a + b > c) (a * b) / 2 else -1\n        area.toFloat", "  \
    \      val a1 = a + b\n        val b1 = b + c\n        val c1 = c + a\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a3\n  \
    \      val a4 = a3 + b3\n        val b4 = b4 + c3\n        val c4 = c4 + a4 \n\
    \        (a1 + b2 + c2 > a3 + b3 + c3 && a2 + b3 + c3 > a3 + b3 + c3 && a3 + b4\
    \ + c3 > a3 + b3 + c3 && a3 + b4 + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3\
    \ + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a1 + b2\
    \ + c2 > a3 + b3 + c3 && a2 + b3 + c3 > a3 + b3 + c3 && a3 + b4 + c3 > a3 + b3\
    \ + c3 && a3 + b4 + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a4 + b4\
    \ + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a1 + b2 + c2 > a3 + b3\
    \ + c3 && a2 + b3 + c3 > a3 + b3 + c3 && a3 + b4 + c3 > a3 + b3 + c3 && a3 + b4\
    \ + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3\
    \ + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a1 + b2 + c2 > a3 + b3 + c3 && a2 + b3\
    \ + c3 > a3 + b3 + c3 && a3 + b4 + c3 > a3 + b3 + c3 && a3 + b4 + c3 > a3 + b3\
    \ + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a4 + b4 + c3 > a3 + b3 + c3 && a4 + b4\
    \ + c3 > a3 + b3 + c3 && a1 + b2 + c2 > a3 + b3 + c3 && a2 + b3 + c3 > a3 + b3\
    \ + c3 && a3 + b4 + c3 > a3 + b3 + c3 && a3 + b4 + c3 > a3 + b3 + c3 && a", " \
    \       val area = if (a + b > c) (a * b) / 2 else -1\n        area.toFloat",
  "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c3\n        val c3 = c2 + a3\n  \
    \      val a4 = a3 + b3\n        val b4 = b4 + c3\n        val c4 = c4 + a4\n\
    \        val a5 = a4 + b4\n        val b5 = b5 + c4\n        val c5 = c5 + a5\n\
    \        val a6 = a5 + b5\n        val b6 = b6 + c5\n        val c6 = c6 + a6\n\
    \        val a7 = a6 + b6\n        val b7 = b7 + c6\n        val c7 = c7 + a7\n\
    \        val a8 = a7 + b7\n        val b8 = b8 + c7\n        val c8 = c8 + a8\n\
    \        val a9 = a8 + b8\n        val b9 = b9 + c8\n        val c9 = c9 + a9\n\
    \        val a10 = a9 + b9\n        val b10 = b10 + c9\n        val c10 = c10\
    \ + a10\n        val a11 = a10 + b10\n        val b11 = b11 + c10\n        val\
    \ c11 = c11 + a11\n        val a12 = a11 + b11\n        val b12 = b12 + c11\n\
    \        val c12 = c12 + a12\n        val a13 = a12 + b12\n        val b13 = b13\
    \ + c12\n        val c13 = c13 + a13\n        val a14 = a13 + b13\n        val\
    \ b14 = b14 + c13\n        val c14 = c14 + a14\n        val a15 = a14 + b14\n\
    \        val b15 = b15 + c14\n        val c15 = c15 + a15\n        val a16 = a15\
    \ + b15\n        val b16 = b16 + c15\n        val c16 = c16 + a16\n        val\
    \ a17 = a16 + b16\n        val b17 = b17 + c16\n        val c17 = c17 + a17\n\
    \        val a18 = a17 + b17\n        val b18 = b18 + c17\n        val c18 = c18\
    \ + a18\n        val a19 = a18 + b18\n        val b19 = b19 + c18\n        val\
    \ c19 = c19 + a19\n        val a20 = a19 + b", "        val a1 = a/2\n       \
    \ val b1 = b/2\n        val c1 = c/2\n        val a2 = a/2\n        val b2 = b/2\n\
    \        val c2 = c/2\n        val a3 = a/2\n        val b3 = b/2\n        val\
    \ c3 = c/2\n        val a4 = a/2\n        val b4 = b/2\n        val c4 = c/2\n\
    \        val a5 = a/2\n        val b5 = b/2\n        val c5 = c/2\n        val\
    \ a6 = a/2\n        val b6 = b/2\n        val c6 = c/2\n        val a7 = a/2\n\
    \        val b7 = b/2\n        val c7 = c/2\n        val a8 = a/2\n        val\
    \ b8 = b/2\n        val c8 = c/2\n        val a9 = a/2\n        val b9 = b/2\n\
    \        val c9 = c/2\n        val a10 = a/2\n        val b10 = b/2\n        val\
    \ c10 = c/2\n        val a11 = a/2\n        val b11 = b/2\n        val c11 = c/2\n\
    \        val a12 = a/2\n        val b12 = b/2\n        val c12 = c/2\n       \
    \ val a13 = a/2\n        val b13 = b/2\n        val c13 = c/2\n        val a14\
    \ = a/2\n        val b14 = b/2\n        val c14 = c/2\n        val a15 = a/2\n\
    \        val b15 = b/2\n        val c15 = c/2\n        val a16 = a/2\n       \
    \ val b16 = b/2\n        val c16 = c/2\n        val a17 = a/2\n        val b17\
    \ = b/2\n        val c17 = c/2\n        val a18 = a/2\n        val b18 = b/2\n\
    \        val c18 = c/2\n        val a19 = a/2\n        val b19 = b/2\n       \
    \ val c19 = c/2\n        val a20 = a/2\n        val b20 = b/2\n        val c20\
    \ = c/2\n        val a21 = a/2\n        val b21 = 0\n        val c21 = c/2\n \
    \       val a22 = a/2\n        val b22 = 0\n        val c22 = c/2\n        val\
    \ a23 = a/2\n        val b23 = 0\n        val c23 = c/2\n        val a24 = a/2\n\
    \        val b24 = 0\n        val c24 = c/2\n        val a", "        val area\
    \ = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n        val\
    \ isValidArea = area > 0 && area < 1\n        val isValidArea = isValidArea &&\
    \ a < b\n        val isValidArea = isValidArea && a < c\n        val isValidArea\
    \ = isValidArea && b < c\n        val isValidArea = isValidArea && a > 0 && b\
    \ > 0 && c > 0\n        isValidArea match {\n            case true => area\n \
    \           case false => -1\n        }", "        val area = (a + b + c) / 2\n\
    \        val isValid = a > 0 && b > 0 && c > 0\n        if (isValid) {\n     \
    \       val side1 = math.sqrt(a * a + b * b + c * c)\n            val side2 =\
    \ math.sqrt(a * a + b * b + c * c)\n            val side3 = math.sqrt(a * a +\
    \ b * b + c * c)\n            val area1 = side1 * side1\n            val area2\
    \ = side2 * side2\n            val area3 = side3 * side3\n            val areaSum\
    \ = area1 + area2 + area3\n            val roundedArea = areaSum.toFloat / 2\n\
    \            if (roundedArea > area) {\n                roundedArea\n        \
    \    } else {\n                -1\n            }\n        } else {\n         \
    \   -1\n        }", "        val area = (a + b + c) / 2\n        val isValid =\
    \ a > 0 && b > 0 && c > 0\n        if (isValid) {\n            val sum = (a +\
    \ b + c) / 2\n            if (sum > a) {\n                val diff = a - sum\n\
    \                val diff2 = diff * diff\n                val diff3 = diff2 *\
    \ diff\n                val diff4 = diff3 * diff\n                val diff5 =\
    \ diff4 * diff\n                val diff6 = diff5 * diff\n                val\
    \ diff7 = diff6 * diff\n                val diff8 = diff7 * diff\n           \
    \     val diff9 = diff8 * diff\n                val diff10 = diff9 * diff\n  \
    \              val diff11 = diff10 * diff\n                val diff12 = diff11\
    \ * diff\n                val diff13 = diff12 * diff\n                val diff14\
    \ = diff13 * diff\n                val diff15 = diff14 * diff\n              \
    \  val diff16 = diff15 * diff\n                val diff17 = diff16 * diff\n  \
    \              val diff18 = diff17 * diff\n                val diff19 = diff18\
    \ * diff\n                val diff20 = diff19 * diff\n                val diff21\
    \ = diff20 * diff\n                val diff22 = diff21 * diff\n              \
    \  val diff23 = diff22 * diff\n                val diff24 = diff23 * diff\n  \
    \              val diff25 = diff24 * diff\n                val diff26 = diff25\
    \ * diff\n                val diff27 = diff26 * diff\n                val diff28\
    \ = diff27 * diff\n                val diff29 = diff28 * diff\n              \
    \  val diff30 = diff29 * diff\n                val diff31 = diff30 * diff\n  \
    \              val diff32 = diff31 * diff\n                val diff33 = diff32\
    \ * diff\n                val diff34 = diff33 * diff\n                val diff35\
    \ = diff34 * diff\n                val diff36 = diff35 * diff\n              \
    \  val diff37 = diff36 * diff\n                val diff38 = diff37 * diff\n  \
    \              val diff39 = diff38 * diff\n                val diff40 = diff39\
    \ * diff\n                val diff41 = diff40 * diff\n                val diff42\
    \ = diff41 * diff\n                val diff43 = diff42 * diff\n              \
    \  val diff44 = diff43 * diff\n                val diff45 = diff44 * diff\n  \
    \              val diff46 = diff45 * diff\n                val diff47 = diff46\
    \ * diff\n                val diff48 = diff47 * diff\n                val diff49\
    \ = diff48 * diff\n                val ", "        val sum = a + b + c\n     \
    \   if (sum > 0) {\n            val area = math.sqrt(sum * (sum - a) * (sum -\
    \ b) * (sum - c))\n            area / 100\n        } else {\n            -1\n\
    \        }", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last else -1", "        val a1 = Math.abs(a)\n\
    \        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5\
    \ = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6\
    \ = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7\
    \ = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8\
    \ = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) + (a4 + b4 + c4) * (a5 + b5 + c5)\
    \ * (a6 + b6 + c6) + (a7 + b7 + c7) * (a8 + b8 + c8)", "        val a1 = a / 2\n\
    \        val b1 = b / 2\n        val c1 = c / 2\n        val sum = a1 + b1 + c1\n\
    \        val a2 = a / 2\n        val b2 = b / 2\n        val c2 = c / 2\n    \
    \    val sum2 = a2 + b2 + c2\n        val a3 = a / 2\n        val b3 = b / 2\n\
    \        val c3 = c / 2\n        val sum3 = a3 + b3 + c3\n        val a4 = a /\
    \ 2\n        val b4 = b / 2\n        val c4 = c / 2\n        val sum4 = a4 + b4\
    \ + c4\n        val a5 = a / 2\n        val b5 = b / 2\n        val c5 = c / 2\n\
    \        val sum5 = a5 + b5 + c5\n        val a6 = a / 2\n        val b6 = b /\
    \ 2\n        val c6 = c / 2\n        val sum6 = a6 + b6 + c6\n        val a7 =\
    \ a / 2\n        val b7 = b / 2\n        val c7 = c / 2\n        val sum7 = a7\
    \ + b7 + c7\n        val a8 = a / 2\n        val b8 = b / 2\n        val c8 =\
    \ c / 2\n        val sum8 = a8 + b8 + c8\n        val a9 = a / 2\n        val\
    \ b9 = b / 2\n        val c9 = c / 2\n        val sum9 = a9 + b9 + c9\n      \
    \  val a10 = a / 2\n        val b10 = b / 2\n        val c10 = c / 2\n       \
    \ val sum10 = a10 + b10 + c10\n        val a11 = a / 2\n        val b11 = b /\
    \ 2\n        val c11 = c / 2\n        val sum11 = a11 + b11 + c11\n        val\
    \ a12 = a / 2\n        val b12 = b / 2\n        val c12 = c / 2\n        val sum12\
    \ = a12 + b12 + c12\n        val a13 = a / 2\n        val b13 = b / 2\n      \
    \  val c13 = c / 2\n        val sum13 = a13 + b13 + c13\n        val a14 = a /\
    \ 2\n        val b14 = b / 2\n        val c14 = c / 2\n        val sum14 = a14\
    \ + b14 + c14\n        val a15 = a / 2\n        val b15 = b / 2\n        ", " \
    \       val a = Math.sqrt(a * a + b * b + c * c)\n        val b = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val c = Math.sqrt(a * a + b * b + c * c)\n   \
    \     val d = Math.sqrt(a * a + b * b + c * c)\n        val area = if (a + b +\
    \ c > d) (a * b * c) / Math.sqrt(a * a + b * b + c * c) else -1\n        area",
  "        val sum = a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum\
    \ * (sum - a) * (sum - b) * (sum - c))\n            area / 100\n        } else\
    \ {\n            -1\n        }", "        val area = (a + b + c) / 2\n       \
    \ val isValid = a > 0 && b > 0 && c > 0\n        if (isValid) {\n            val\
    \ side1 = math.sqrt(a * a + b * b + c * c)\n            val side2 = math.sqrt(a\
    \ * a + b * b + c * c)\n            val side3 = math.sqrt(a * a + b * b + c *\
    \ c)\n            val area1 = side1 * side1\n            val area2 = side2 * side2\n\
    \            val area3 = side3 * side3\n            val area4 = side1 + side2\
    \ + side3\n            val area5 = side1 + side2 + side3\n            val area6\
    \ = side1 + side2 + side3\n            val area7 = side1 + side2 + side3\n   \
    \         val area8 = side1 + side2 + side3\n            val area9 = side1 + side2\
    \ + side3\n            val area10 = side1 + side2 + side3\n            val area11\
    \ = side1 + side2 + side3\n            val area12 = side1 + side2 + side3\n  \
    \          val area13 = side1 + side2 + side3\n            val area14 = side1\
    \ + side2 + side3\n            val area15 = side1 + side2 + side3\n          \
    \  val area16 = side1 + side2 + side3\n            val area17 = side1 + side2\
    \ + side3\n            val area18 = side1 + side2 + side3\n            val area19\
    \ = side1 + side2 + side3\n            val area20 = side1 + side2 + side3\n  \
    \          val area21 = side1 + side2 + side3\n            val area22 = side1\
    \ + side2 + side3\n            val area23 = side1 + side2 + side3\n          \
    \  val area24 = side1 + side2 + side3\n            val area25 = side1 + side2\
    \ + side3\n            val area26 = side1 + side2 + side3\n            val area27\
    \ = side1 + side2 + side3\n            val area28 = side1 + side2 + side3\n  \
    \          val area29 = side1 + side2 + side3\n            val area30 = side1\
    \ + side2 + side3\n            val area31 = side1 + side2 + side3\n          \
    \  val area32 = side1 + side2 + side3\n            val area33 = side1 + side2\
    \ + side3\n            val area34 = side1 + side2 + side3\n            val area35\
    \ = side1 + side2 + side3\n            val area36 = side1 + side2 + side3\n  \
    \          val area37 = side1 + side2 + side3\n            val area38 = side1\
    \ + side2 + side3\n            val ", "        val area = (a + b + c) / 2\n  \
    \      val isValid = (area > 0 && area > b) && \n                     (area >\
    \ c && area > a)\n        val areaRounded = if (isValid) area * 100f / 2f else\
    \ -1\n        areaRounded", "        val sum = a + b + c\n        if (sum > 0)\
    \ {\n            val side1 = math.sqrt(a * a + b * b + c * c)\n            val\
    \ side2 = math.sqrt(a * a + b * b - c * c)\n            val side3 = math.sqrt(a\
    \ * a - b * b + c * c)\n            val area = side1 * side2 * side3\n       \
    \     val rounded = area.toString.split(\"\\\\.\").takeRight(2).mkString.toFloat\n\
    \            if (rounded > 0)\n                rounded\n            else\n   \
    \             -1\n        }\n        else\n            -1", "        val a1 =\
    \ a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2\
    \ + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3\
    \ + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4\
    \ + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5\
    \ + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6\
    \ + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7\
    \ + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        (a1 + b2 +\
    \ c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n            a4 + b5 + c6 >\n           \
    \ a5 + b6 + c7 >\n            a6 + b7 + c8 >\n            a7 + b8 + c9)", "  \
    \      val a = Math.sqrt(a * a + b * b + c * c)\n        val b = Math.sqrt(a *\
    \ a + b * b + c * c)\n        val c = Math.sqrt(a * a + b * b + c * c)\n     \
    \   val d = Math.sqrt(a * a + b * b + c * c)\n        val area = if (a + b > c)\
    \ (a * b * c) / d else -1\n        area", "        val area = (a + b + c) / 2\n\
    \        val isTriangle = (a * b * c) > area\n        if(isTriangle) {\n     \
    \       area\n        } else {\n            -1\n        }", "        val sum =\
    \ a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum * sum\
    \ / 2)\n            (area / 100).round(2)\n        } else {\n            -1.0\n\
    \        }", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 =\
    \ c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 =\
    \ c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3\
    \ = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4 + c3\n        val c4\
    \ = c4 + a4 \n        val a5 = a4 + b4\n        val b5 = b5 + c4\n        val\
    \ c5 = c5 + a5 \n        val a6 = a5 + b5\n        val b6 = b6 + c5 \n       \
    \ val c6 = c6 + a6 \n        val a7 = a6 + b6\n        val b7 = b7 + c6 \n   \
    \     val c7 = c7 + a7\n        (a1 + b2 + c3 > a2 + b3 + c4 && a2 + b3 + c4 >\
    \ a3 + b3 + c5 && a3 + b3 + c5 > a4 + b4 + c6 && a4 + b4 + c6 > a5 + b5 + c7 &&\
    \ a5 + b5 + c7 > a6 + b6 + c7 && a6 + b6 + c7 > a7 + b7 + c7 && a7 + b7 + c7 >\
    \ a1 + b2 + c3 && a1 + b2 + c3 > a2 + b3 + c4 && a2 + b3 + c4 > a3 + b3 + c5 &&\
    \ a3 + b3 + c5 > a4 + b4 + c6 && a4 + b4 + c6 > a5 + b5 + c7 && a5 + b5 + c7 >\
    \ a6 + b6 + c7 && a6 + b6 + c7 > a7 + b7 + c7 && a7 + b7 + c7 > a1 + b2 + c3 &&\
    \ a1 + b2 + c3 > a2 + b3 + c4 && a2 + b3 + c4 > a3 + b3 + c5 && a3 + b3 + c5 >\
    \ a4 + b4 + c6 && a4 + b4 + c6 > a5 + b5 + c7 && a5 + b5 + c7 > a6 + b6 + c7 &&\
    \ a6 + b6 + c7 > a7 + b7 + c7 && a7 + b7 + c7 > a1 + b2 + c3 && a1 + b2 + c3 >\
    \ a2 + b3 + c4 && a2 + b3 + c4 > a3 + b3 + c5 && a3 + b3 + c5 > a4 + b4 + c6 &&\
    \ a4 + b4 + c6 > a5 + b5 + c7 && a5 + b5 + c7 > a6 + b6 + c7 && a6 + b6 + c7 > ",
  "        val sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum\
    \ > sides.last) sides.last else -1", "        val area = if (a + b > c) (a * b)\
    \ / 2 else -1\n        area.toFloat", "        val triangleArea = if (a + b >\
    \ c) \n            (a * b) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) \n   \
    \     else -1\n        triangleArea.toFloat", "        val sum = a + b + c\n \
    \       if (sum > 0)\n            val area = math.sqrt(sum * sum / 2)\n      \
    \      area\n        else\n            -1.0", "        val sum = a + b + c\n \
    \       if (sum > 0) (sum * 0.5) else if (sum < 0) (-1 * sum * 0.5)\n        else\
    \ -1", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val\
    \ c = math.abs(c)\n        if (a + b > c) {\n            val d = math.min(a +\
    \ c, b + c)\n            val area = d * (d - a) * (d - b) * (d - c)\n        \
    \    area / 2\n        } else {\n            -1\n        }", "        val sides\
    \ = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last else -1", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        val isValid = sides.forall(s => s > 0)\n        if (isValid) {\n    \
    \        val area = sides.foldLeft(0.0f) { (sum, side) => sum + side * side }\n\
    \            val rounded = area.toDouble / Math.pow(sides.size, 2).toDouble\n\
    \            rounded.toFloat\n        } else {\n            -1.0\n        }",
  "        val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0 && a + b > c\n        val area = if (isValid) area else -1\n        area",
  "        val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0\n        if (isValid) {\n            val isValid1 = a + b > c\n          \
    \  val isValid2 = a + c > b\n            val isValid3 = b + c > a\n          \
    \  if (isValid1 && isValid2 && isValid3) {\n                area\n           \
    \ } else {\n                -1\n            }\n        } else {\n            -1\n\
    \        }", "        val area = (a + b + c) / 2\n        val isValid = a > 0\
    \ && b > 0 && c > 0\n        if (isValid) {\n            if (a + b > c) {\n  \
    \              area\n            } else {\n                area - c\n        \
    \    }\n        } else {\n            -1\n        }", "        val a1 = a / 2\n\
    \        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n  \
    \      val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n\
    \        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8 + b8\n\
    \        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10 = a9 + b9\n\
    \        val b10 = b9 + c9\n        val c10 = c9 + a9\n        val a11 = a10 +\
    \ b10\n        val b11 = b10 + c10\n        val c11 = c10 + a10\n        val a12\
    \ = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11 + a11\n    \
    \    val a13 = a12 + b12\n        val b13 = b12 + c12\n        val c13 = c12 +\
    \ a12\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n        val c14\
    \ = c13 + a13\n        val a15 = a14 + b14\n        val b15 = b14 + c14\n    \
    \    val c15 = c14 + a14\n        val a16 = a15 + b15\n        val b16 = b15 +\
    \ c15\n        val c16 = c15 + a15\n        val a17 = a16 + b16\n        val b17\
    \ = b16 + c16\n        val c17 = c16 + a16\n        val a18 = a17 + b17\n    \
    \    val b18 = b17 + c17\n        val c18 = c17 + a17\n        val a19 = a18 +\
    \ b18\n        val b19 = b18 + c18\n        val c19 = c18 + a18\n        val a20\
    \ = a19 + b19", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n\
    \        val c1 = Math.abs(c)\n        val sum = a1 + b1 + c1\n        if (sum\
    \ > 0) {\n            val a2 = a1 / sum\n            val b2 = b1 / sum\n     \
    \       val c2 = c1 / sum\n            val a3 = a1 + b1 + c2\n            val\
    \ b3 = b1 + c1 + a2\n            val c3 = c1 + a2 + b2\n            val a4 = a1\
    \ + b2 + c2\n            val b4 = b1 + c2 + a3\n            val c4 = c1 + a3 +\
    \ b4\n            val a5 = a1 + b3 + c3\n            val b5 = b1 + c3 + a4\n \
    \           val c5 = c1 + a4 + b5\n            val a6 = a1 + b5 + c3\n       \
    \     val b6 = b1 + c3 + a5\n            val c6 = c1 + a5 + b6\n            val\
    \ a7 = a1 + b6 + c3\n            val b7 = b1 + c3 + a6\n            val c7 = c1\
    \ + a6 + b7\n            val a8 = a1 + b7 + c3\n            val b8 = b1 + c3 +\
    \ a8\n            val c8 = c1 + a8 + b8\n            val a9 = a1 + b8 + c3\n \
    \           val b9 = b1 + c3 + a9\n            val c9 = c1 + a9 + b9\n       \
    \     val a10 = a1 + b9 + c3\n            val b10 = b1 + c3 + a10\n          \
    \  val c10 = c1 + a10 + b10\n            val a11 = a1 + b10 + c3\n           \
    \ val b11 = b1 + c3 + a11\n            val c11 = c1 + a11 + b11\n            val\
    \ a12 = a1 + b11 + c3\n            val b12 = b1 + c3 + a12\n            val c12\
    \ = c1 + a12 + b12\n            val a13 = a1 + b12 + c3\n            val b13 =\
    \ b1 + c3 + a13\n            val c13 = c1 + a13 + b13\n            val a14 = a1\
    \ + b13 + c3\n            val b14 = b1 + c3 + a14\n            val c14 = c1 +\
    \ a14 + b14\n            val a15 = a1 + b14 + c3\n            val b15 = b1 + c3\
    \ + a15\n            val c15 = c1 + a15 + b15\n            val a16 = a1 + b15\
    \ + c3\n            val b16 = b1 + c3 + a16\n            val c16 = c1 + a16 +\
    \ b16\n            val a17 = a1 + b16 + c3\n            val b17 = b1 + c3 + a17\n",
  "        val a1 = a + b\n        val a2 = a + c\n        val b1 = b + c\n      \
    \  val b2 = b + a\n        val c1 = c + a\n        val c2 = c + b\n        val\
    \ d1 = b2 - b1\n        val d2 = c2 - c1\n        val d3 = a2 - a1\n        val\
    \ area = if (d1 > 0 && d2 > 0 && d3 > 0) (d1 * d2 * d3) / 2 else -1\n        area",
  "        val area = (a + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b\
    \ + c * c)\n        val side2 = math.sqrt(a * a + b * b + c * c)\n        val\
    \ side3 = math.sqrt(a * a + b * b + c * c)\n        if (side1 + side2 > side3)\
    \ {\n            area\n        } else {\n            -1\n        }", "       \
    \ val sides = List(a, b, c)\n        val sum = sides.sum\n        val third =\
    \ sides.last\n        if (sum > third) {\n            val area = sides.sum * sides.last\n\
    \            val rounded = area.toString.replaceAll(\"\\\\.[0-9]*$\", \"\")\n\
    \            val rounded2 = rounded.toString.replaceAll(\"\\\\.[0-9]*$\", \"\"\
    )\n            val rounded3 = rounded2.toString.replaceAll(\"\\\\.[0-9]*$\", \"\
    \")\n            val rounded4 = rounded3.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded5 = rounded4.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded6 = rounded5.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded7 = rounded6.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded8 = rounded7.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded9 = rounded8.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded10 = rounded9.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded11 = rounded10.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded12 = rounded11.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded13 = rounded12.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded14 = rounded13.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded15 = rounded14.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded16 = rounded15.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded17 = rounded16.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded18 = rounded17.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded19 = rounded18.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded20 = rounded19.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded21 = rounded20.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded22 = rounded21.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded23 = rounded22.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded24 = rounded23.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \"\")\n            val rounded25 = rounded", "        val a1 = a / 2\n     \
    \   val b1 = b / 2\n        val c1 = c / 2\n        val sum = a1 + b1 + c1\n \
    \       if (sum > c) {\n            val a2 = a / 2\n            val b2 = b / 2\n\
    \            val c2 = c / 2\n            val sum = a2 + b2 + c2\n            if\
    \ (sum > c) {\n                val a3 = a / 2\n                val b3 = b / 2\n\
    \                val c3 = c / 2\n                val sum = a3 + b3 + c3\n    \
    \            if (sum > c) {\n                    val a4 = a / 2\n            \
    \        val b4 = b / 2\n                    val c4 = c / 2\n                \
    \    val sum = a4 + b4 + c4\n                    if (sum > c) {\n            \
    \            val a5 = a / 2\n                        val b5 = b / 2\n        \
    \                val c5 = c / 2\n                        val sum = a5 + b5 + c5\n\
    \                        if (sum > c) {\n                            val a6 =\
    \ a / 2\n                            val b6 = b / 2\n                        \
    \    val c6 = c / 2\n                            val sum = a6 + b6 + c6\n    \
    \                        if (sum > c) {\n                                val a7\
    \ = a / 2\n                                val b7 = b / 2\n                  \
    \              val c7 = c / 2\n                                val sum = a7 +\
    \ b7 + c7\n                                if (sum > c) {\n                  \
    \                  val a8 = a / 2\n                                    val b8\
    \ = b / 2\n                                    val c8 = c / 2\n              \
    \                      val sum = a8 + b8 + c8\n                              \
    \      if (sum > c) {\n                                        val a9 = a / 2\n\
    \                                        val b9 = b / 2\n                    \
    \                    val c9 = c / 2\n                                        val\
    \ sum = a9 + b9 + c9\n                                        if (sum > c) {\n\
    \                                            val a10 = a / 2\n               \
    \                             val b10 = b / 2\n                              \
    \              val c10 = c / 2\n                                            val\
    \ sum = a10 + b10 + c10\n                                            if (sum >\
    \ c) {\n                                                return sum\n         \
    \                                   } else {\n                               \
    \                 return -1\n                                            }\n \
    \                                       } else {\n                           \
    \                 return -1\n                                        }\n     \
    \                               } else {\n                                   \
    \     return -1\n                                    }\n                     \
    \           } else {\n                                    return -1\n        \
    \                        }\n                            } else {\n           \
    \                     return -1\n                            }\n             \
    \           } else {\n                            return -1\n                \
    \        }\n                    } else {\n                        return -1\n\
    \                    }\n                } else {\n                    return -1\n\
    \                }\n            } else {\n                return -1\n        \
    \    }\n        } else {\n            return -1\n        }", "        val sides\
    \ = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides(2)) {\n\
    \            val area = sides.map(x => x * x).sum\n            (area / sides(2)).toFloat\n\
    \        } else {\n            -1.0\n        }", "        val a1 = Math.abs(a)\n\
    \        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5\
    \ = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6\
    \ = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7\
    \ = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8\
    \ = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9\
    \ = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10\
    \ = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 + a9\n        val\
    \ a11 = a10 + b10\n        val b11 = b10 + c10\n        val c11 = c10 + a10\n\
    \        val a12 = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11\
    \ + a11\n        val a13 = a12 + b12\n        val b13 = b12 + c12\n        val\
    \ c13 = c12 + a12\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n\
    \        val c14 = c13 + a13\n        val a15 = a14 + b14\n        val b15 = b14\
    \ + c14\n        val c15 = c14 + a14\n        val a16 = a15 + b15\n        val\
    \ b16 = b15 + c15\n        val c16 = c15 + a15\n        val a17 = a16 + b16\n\
    \        val b17 = b16 + c16\n        val c17 = c16 + a16\n        val a18 = a17\
    \ + b17\n        val b18 = b17 + c17\n        val c18 = c17 + a17\n        val\
    \ a19 = a18 + b18\n        val b19 = b18 + c18\n        val c19 = c18 + a18\n\
    \        val a20 = a19 + b19\n        val ", "        val sum = a + b + c\n  \
    \      if (sum > 0) {\n            val area = (a + b + c) / 2\n            val\
    \ sides = if (sum > a) 1 else 2\n            val area = if (sides == 1) area else\
    \ area / sides\n            area.toFloat\n        } else {\n            -1\n \
    \       }", "        val area = if (a + b > c) (a * b) / 2 else -1\n        area",
  "        val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0\n        if(isValid) {\n            val side1 = math.sqrt(a * a + b * b)\n\
    \            val side2 = math.sqrt(c * c + d * d)\n            val side3 = math.sqrt(a\
    \ * a + c * c)\n            val area1 = side1 * side1\n            val area2 =\
    \ side2 * side2\n            val area3 = side3 * side3\n            val isValid1\
    \ = area1 > side2 && area2 > side3\n            val isValid2 = area1 > side3 &&\
    \ area3 > side1\n            val isValid3 = area2 > side1 && area3 > side2\n \
    \           val isValid = isValid1 && isValid2 && isValid3\n            if(isValid)\
    \ {\n                area\n            } else {\n                -1\n        \
    \    }\n        } else {\n            -1\n        }", "        val area = (a +\
    \ b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n        if (isValid)\
    \ {\n            val side1 = math.sqrt(a * a + b * b)\n            val side2 =\
    \ math.sqrt(c * c + d * d)\n            val side3 = math.sqrt(a * a + c * c)\n\
    \            val side4 = math.sqrt(b * b + d * d)\n            val area2 = side1\
    \ * side2 * side3\n            val area3 = side1 * side2 * side4\n           \
    \ val area4 = side1 * side3 * side4\n            val area5 = side1 * side2 * side4\n\
    \            val area6 = side1 * side3 * side5\n            val area7 = side1\
    \ * side4 * side5\n            val area8 = side1 * side3 * side6\n           \
    \ val area9 = side1 * side4 * side6\n            val area10 = side1 * side5 *\
    \ side6\n            val area11 = side1 * side4 * side7\n            val area12\
    \ = side1 * side5 * side8\n            val area13 = side1 * side6 * side8\n  \
    \          val area14 = side1 * side7 * side8\n            val area15 = side1\
    \ * side7 * side9\n            val area16 = side1 * side8 * side9\n          \
    \  val area17 = side1 * side7 * side10\n            val area18 = side1 * side8\
    \ * side10\n            val area19 = side1 * side9 * side10\n            val area20\
    \ = side1 * side10 * side10\n            val area21 = side2 * side3\n        \
    \    val area22 = side2 * side4\n            val area23 = side2 * side5\n    \
    \        val area24 = side2 * side6\n            val area25 = side2 * side7\n\
    \            val area26 = side2 * side8\n            val area27 = side2 * side9\n\
    \            val area28 = side2 * side10\n            val area29 = side3 * side4\n\
    \            val area30 = side3 * side5\n            val area31 = side3 * side6\n\
    \            val area32 = side3 * side7\n            val area33 = side3 * side8\n\
    \            val area34 = side3 * side9\n            val area35 = side3 * side10\n\
    \            val area36 = side4 * side5\n            val area37 = side4 * side6\n\
    \            val area38 = side4 * side7\n            val area39 = side4 * side8\n\
    \            val area40 = side4 * side9\n            val area41 = side4 * side10\n\
    \            val area42 = side5 * ", "        val sides = List(a, b, c).sorted\n\
    \        val sum = sides.sum\n        if (sum > sides(2)) {\n            val area\
    \ = sides.foldLeft(0.0f) { (sum, side) => sum + side * side }\n            (area\
    \ / sides(2)).toFloat\n        } else {\n            -1.0\n        }", "     \
    \   val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            val area = math.sqrt((c\
    \ * c) - (sum * sum))\n            area / 2\n        } else {\n            -1\n\
    \        }", "        val a = Math.sqrt(a * a + b * b + c * c)\n        val b\
    \ = 2 * a \n        val c = Math.sqrt(a * a + b * b + c * c)\n        val d =\
    \ Math.sqrt(a * a + b * b + c * c)\n        val area = if (a + b + c > d) (a *\
    \ b * c) / Math.sqrt(a * a + b * b + c * c) else -1\n        area", "        val\
    \ a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val area = (a + b +\
    \ c) / 2\n        val isValid = (a * b + c) >= a\n        val isValid2 = (b *\
    \ c + a) >= b\n        val isValid3 = (a * c + b) >= c\n        if (isValid) {\n\
    \            if (isValid2) {\n                if (isValid3) {\n              \
    \      area\n                } else {\n                    -1\n              \
    \  }\n            } else {\n                -1\n            }\n        } else\
    \ {\n            -1\n        }", "        val sides = List(a, b, c)\n        val\
    \ sum = sides.sum\n        if (sum > sides.last) sides.last else -1", "      \
    \  val a1 = Math.abs(a * b - c * c)\n        val a2 = Math.abs(a * c - b * b)\n\
    \        val a3 = Math.abs(a * b + c * c)\n        val a4 = Math.abs(a * c + b\
    \ * b)\n        val a5 = Math.abs(a * b + c * c)\n        val a6 = Math.abs(a\
    \ * c + b * b)\n        val a7 = Math.abs(a * b - c * c)\n        val a8 = Math.abs(a\
    \ * c - b * b)\n        val a9 = Math.abs(a * c + b * b)\n        val a10 = Math.abs(a\
    \ * b + c * c)\n        val a11 = Math.abs(a * c + b * b)\n        val a12 = Math.abs(a\
    \ * b + c * c)\n        val a13 = Math.abs(a * c + b * b)\n        val a14 = Math.abs(a\
    \ * b - c * c)\n        val a15 = Math.abs(a * c - b * b)\n        val a16 = Math.abs(a\
    \ * c + b * b)\n        val a17 = Math.abs(a * b + c * c)\n        val a18 = Math.abs(a\
    \ * c + b * b)\n        val a19 = Math.abs(a * b - c * c)\n        val a20 = Math.abs(a\
    \ * c - b * b)\n        val a21 = Math.abs(a * c + b * b)\n        val a22 = Math.abs(a\
    \ * b + c * c)\n        val a23 = Math.abs(a * c + b * b)\n        val a24 = Math.abs(a\
    \ * b - c * c)\n        val a25 = Math.abs(a * c - b * b)\n        val a26 = Math.abs(a\
    \ * c + b * b)\n        val a27 = Math.abs(a * b + c * c)\n        val a28 = Math.abs(a\
    \ * c + b * b)\n        val a29 = Math.abs(a * b - c * c)\n        val a30 = Math.abs(a\
    \ * c - b * b)\n        val a31 = Math.abs(a * c + b * b)\n        val a32 = Math.abs(a\
    \ * b + c * c)\n        val a33 = Math.abs(a * c + b * b)\n        val a34 = Math.abs(a\
    \ * b - c * c)\n        val a35 = Math.abs(a * c - b * b)\n        val a36 = Math.abs(a\
    \ * c + b * b)\n        val a37 = Math.abs(a * b + c * c)\n        val a38 = Math.abs(a\
    \ * c + b * b)\n        val a39 = Math.abs(a * b - c * c)\n        val a40 = Math.abs(a\
    \ * c - b * b)\n        val a4", "        val sum = a + b + c\n        if (sum\
    \ > 0) {\n            val area = a / Math.sqrt(Math.pow(a + b, 2) + Math.pow(c,\
    \ 2))\n            val rounded = area.toString.replaceAll(\"\\\\.\", \"\").replaceAll(\"\
    \\\\,\", \".\")\n            val result = rounded.toFloat\n            if (result\
    \ > 0) result else -1\n        } else {\n            -1\n        }", "       \
    \ val sum = a + b + c\n        if (sum > 0) (sum / 2) * 0.5\n        else -1",
  "        val side1 = math.sqrt(a * a + b * b)\n        val side2 = math.sqrt(c *\
    \ c + a * a)\n        val side3 = math.sqrt(b * b + c * c)\n        val area =\
    \ (side1 + side2 + side3) / 2\n        val rounded = area.toString.replaceAll(\"\
    \\\\.\", \"\").replaceAll(\"\\\\,\",\"\").replaceAll(\"\\\\s\", \"\")\n      \
    \  val result = rounded.toFloat\n        if (result > 0) result else -1", "  \
    \      val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val sum = a + b + c\n\
    \        if (sum > 0) {\n            val area = math.sqrt(sum * a * a + sum *\
    \ b * b + sum * c * c)\n            area / 2\n        } else {\n            -1\n\
    \        }", "        val sum = a + b + c\n        if (sum > 0) sum / 2\n    \
    \    else -1", "        val sum = a + b + c\n        if (sum > 0)\n          \
    \  val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n           \
    \ area.toFloat\n        else\n            -1.0", "        val sides = List(a,\
    \ b, c).filter(_ > 0)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last else -1", "        val area = (a + b + c) / 2\n        val side1\
    \ = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(a * a + b\
    \ * b + c * c)\n        val side3 = math.sqrt(a * a + b * b + c * c)\n       \
    \ if (side1 + side2 > side3) {\n            area\n        } else {\n         \
    \   -1\n        }", "        val sum = a + b + c\n        if (sum > 0) {\n   \
    \         val area = (a + b + c) / 2\n            val area = if (area > 0) area\
    \ else -1\n            area\n        } else {\n            -1\n        }", " \
    \       val area = (a + b + c) / 2\n        val isValid = (a * b + c) > a\n  \
    \      val isValid2 = (b * c + a) > b\n        val isValid3 = (c * a + b) > c\n\
    \        if (isValid) {\n            area\n        } else if (isValid2) {\n  \
    \          area / 2\n        } else if (isValid3) {\n            area / 2\n  \
    \      } else {\n            -1\n        }", "        val a1 = a + b\n       \
    \ val a2 = a + c\n        val b1 = b + c\n        val b2 = b + a\n        val\
    \ c1 = c + a\n        val c2 = c + b\n        val a3 = a1 + a2\n        val b3\
    \ = b1 + b2\n        val c3 = c1 + c2\n        val a4 = a2 + a1\n        val b4\
    \ = b2 + b1\n        val c4 = c2 + c1\n        val a5 = a3 + a4\n        val b5\
    \ = b3 + b4\n        val c5 = c3 + c4\n        val a6 = a4 + a3\n        val b6\
    \ = b4 + b3\n        val c6 = c4 + c3\n        val a7 = a5 + b6\n        val b7\
    \ = b5 + b5\n        val c7 = c6 + c6\n        val a8 = a7 + a7\n        val b8\
    \ = b7 + b7\n        val c8 = c7 + c7\n        val a9 = a8 + a8\n        val b9\
    \ = b8 + b8\n        val c9 = c8 + c8\n        val a10 = a9 + a9\n        val\
    \ b10 = b9 + b9\n        val c10 = c9 + c9\n        val a11 = a10 + a10\n    \
    \    val b11 = b10 + b10\n        val c11 = c10 + c10\n        val a12 = a11 +\
    \ a11\n        val b12 = b11 + b11\n        val c12 = c11 + c11\n        val a13\
    \ = a12 + a12\n        val b13 = b12 + b12\n        val c13 = c12 + c12\n    \
    \    val a14 = a13 + a13\n        val b14 = b13 + b13\n        val c14 = c13 +\
    \ c13\n        val a15 = a14 + a14\n        val b15 = b14 + b14\n        val c15\
    \ = c14 + c14\n        val a16 = a15 + a15\n        val b16 = b15 + b15\n    \
    \    val c16 = c15 + c15\n        val a17 = a16 + a16\n        val b17 = b16 +\
    \ b16\n        val c17 = c16 + c16\n        val a18 = a17 + a17\n        val b18\
    \ = b17 + b17\n        val c18 = c17 + c17\n        val a19 = a18 + a18\n    \
    \    val b19 = b18 + b18\n        val c19 = c18 + c18\n        val a20 = a19 +\
    \ a19\n        val b20", "        val sum = a + b + c\n        if (sum > 0) sum\
    \ / 2\n        else -1", "        val a1 = a / 2\n        val b1 = b / 2\n   \
    \     val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n   \
    \     val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n \
    \       val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        (a1 + b2 + c3 >= a2 + b3 + c4 && a1 + b2 +\
    \ c3 >= a3 + b2 + c5 && a1 + b2 + c3 >= a4 + b3 + c6 && a1 + b2 + c3 >= a5 + b2\
    \ + c7 && a1 + b2 + c3 >= a6 + b2 + c8 && a1 + b2 + c3 >= a7 + b2 + c9 &&\n  \
    \      a2 + b3 + c4 >= a3 + b3 + c5 && a2 + b3 + c4 >= a4 + b3 + c6 && a2 + b3\
    \ + c4 >= a5 + b3 + c7 && a2 + b3 + c4 >= a6 + b3 + c8 && a2 + b3 + c4 >= a7 +\
    \ b3 + c9 &&\n        a3 + b4 + c5 >= a4 + b4 + c6 && a3 + b4 + c5 >= a5 + b4\
    \ + c7 && a3 + b4 + c5 >= a6 + b4 + c8 && a3 + b4 + c5 >= a7 + b4 + c9 &&\n  \
    \      a4 + b5 + c6 >= a5 + b5 + c7 && a4 + b5 + c6 >= a6 + b5 + c8 && a4 + b5\
    \ + c6 >= a7 + b5 + c9 &&\n        a5 + b6 + c7 >= a6 + b6 + c8 && a5 + b6 + c7\
    \ >= a7 + b6 + c9 &&\n        a6 + b7 + c8 >= a7 + b7 + c9 &&\n        (a1 + b2\
    \ + c3 >= a2 + b3 + c4 && a1 + b2 + c3 >= a3 + b2 + c5 && a1 + b2 + c3 >= a4 + ",
  "        val area = (a + b + c) / 2\n        val isValid = (area > b + c) || (a\
    \ + b > c + a)\n        val isValid2 = (b > a + c) || (b + c > a + b)\n      \
    \  val isValid3 = ((a > b) || (b > c)) || ((c > a) || (a + c > b))\n        val\
    \ isValid4 = ((a > b + c) || (b > a + c)) || ((c > a + b) || (a + b > c))\n  \
    \      val isValid5 = ((a > b + c) || (b > a + c)) || ((c > a + b) || (a + b >\
    \ c))\n        val isValid6 = ((a > b + c) || (b > a + c)) || ((c > a + b) ||\
    \ (a + b > c))\n        val isValid7 = ((a > b + c) || (b > a + c)) || ((c > a\
    \ + b) || (a + b > c))\n        val isValid8 = ((a > b + c) || (b > a + c)) ||\
    \ ((c > a + b) || (a + b > c))\n        val isValid9 = ((a > b + c) || (b > a\
    \ + c)) || ((c > a + b) || (a + b > c))\n        val isValid10 = ((a > b + c)\
    \ || (b > a + c)) || ((c > a + b) || (a + b > c))\n        val isValid11 = ((a\
    \ > b + c) || (b > a + c)) || ((c > a + b) || (a + b > c))\n        val isValid12\
    \ = ((a > b + c) || (b > a + c)) || ((c > a + b) || (a + b > c))\n        val\
    \ isValid13 = ((a > b + c) || (b > a + c)) || ((c > a + b) || (a + b > c))\n \
    \       val isValid14 = ((a > b + c) || (b > a + c)) || ((c > a + b) || (a + b\
    \ > c))\n        val isValid15 = ((a > b + c) || (b > a + c)) || ((c > a + b)\
    \ || (a + b > c))\n        val isValid16 = ((a > b + c) || (b > a + c)) || ((c\
    \ > a + b) || (a + b > c))\n        val isValid17 = ((a > b + c) || (b > a + c))\
    \ || ((c > a + b) || (a + b > c))\n        val isValid18 = ((a > b + c) || (b\
    \ > a + c)) || ((c > a + b) || (a + b > c))\n        val isValid19 = ((a > b +\
    \ c", "        val sum = a + b + c\n        if (sum > 0)\n            val area\
    \ = math.sqrt(sum * (sum - a) * (sum - b) * (sum - c))\n            area\n   \
    \     else\n            -1.0", "        val sides = List(a, b, c)\n        val\
    \ sum = sides.sum\n        if (sum > sides.last) sides.last else -1", "      \
    \  val a1 = a + b\n        val a2 = a + c\n        val b2 = b + c\n        val\
    \ a3 = a1 + a2\n        val b3 = b1 + b2\n        val c3 = b2 + a3\n        val\
    \ a4 = a1 + a3\n        val b4 = b1 + b4\n        val c4 = b2 + c4\n        val\
    \ a5 = a2 + a4\n        val b5 = b2 + b5\n        val c5 = b3 + c5\n        val\
    \ a6 = a3 + a4\n        val b6 = b3 + b6\n        val c6 = c4 + b6\n        val\
    \ a7 = a3 + a5\n        val b7 = b3 + b7\n        val c7 = c4 + c7\n        val\
    \ a8 = a4 + a5\n        val b8 = b4 + b8\n        val c8 = c4 + c8\n        val\
    \ a9 = a4 + a8\n        val b9 = b4 + b9\n        val c9 = c4 + c9\n        val\
    \ a10 = a5 + a9\n        val b10 = b5 + b10\n        val c10 = c5 + c10\n    \
    \    val a11 = a5 + a10\n        val b11 = b5 + b11\n        val c11 = c5 + c11\n\
    \        val a12 = a6 + a11\n        val b12 = b6 + b12\n        val c12 = c6\
    \ + c12\n        val a13 = a6 + a12\n        val b13 = b6 + b13\n        val c13\
    \ = c6 + c13\n        val a14 = a7 + a13\n        val b14 = b7 + b14\n       \
    \ val c14 = c7 + c14\n        val a15 = a7 + a14\n        val b15 = b7 + b15\n\
    \        val c15 = c7 + c15\n        val a16 = a8 + a15\n        val b16 = b8\
    \ + b16\n        val c16 = c8 + c16\n        val a17 = a8 + a16\n        val b17\
    \ = b8 + b17\n        val c17 = c8 + c17\n        val a18 = a9 + a17\n       \
    \ val b18 = b9 + b18\n        val c18 = c9 + c18\n        val a19 = a9 + a18\n\
    \        val b19 = b9 + b19\n        val c19 = c9 + c19\n        val a20 = a10\
    \ + a19\n        val b20 = b10 + b20\n        val c20 = c10 + c20\n        val\
    \ a21 = a10 + a", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last.toDouble * sides.last.toDouble * sides.last.toDouble\
    \ else -1", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n    \
    \    val c1 = math.abs(c)\n        val sum = a1 + b1 + c1\n        if (sum > c1)\
    \ {\n            val a2 = math.abs(a - b1)\n            val b2 = math.abs(b -\
    \ c1)\n            val c2 = math.abs(c - a1)\n            val sum2 = a2 + b2 +\
    \ c2\n            if (sum2 > b2) {\n                val a3 = math.abs(a - b1 -\
    \ c1)\n                val b3 = math.abs(b - c1 - a1)\n                val c3\
    \ = math.abs(c - a1 - b1)\n                val sum3 = a3 + b3 + c3\n         \
    \       if (sum3 > a2) {\n                    val a4 = math.abs(a - b1 - c1 -\
    \ a1)\n                    val b4 = math.abs(b - c1 - a1 - b1)\n             \
    \       val c4 = math.abs(c - a1 - b1 - c1)\n                    val sum4 = a4\
    \ + b4 + c4\n                    if (sum4 > b2) {\n                        val\
    \ a5 = math.abs(a - b1 - c1 - a1 - b1)\n                        val b5 = math.abs(b\
    \ - c1 - a1 - b1 - c1)\n                        val c5 = math.abs(c - a1 - b1\
    \ - c1 - a1)\n                        val sum5 = a5 + b5 + c5\n              \
    \          if (sum5 > c2) {\n                            val a6 = math.abs(a -\
    \ b1 - c1 - a1 - b1 - c1)\n                            val b6 = math.abs(b - c1\
    \ - a1 - b1 - c1 - a1)\n                            val c6 = math.abs(c - a1 -\
    \ b1 - c1 - a1 - b1)\n                            val sum6 = a6 + b6 + c6\n  \
    \                          if (sum6 > a2) {\n                                val\
    \ a7 = math.abs(a - b1 - c1 - a1 - b1 - c1 - a1)\n                           \
    \     val b7 = math.abs(b - c1 - a1 - b1 - c1 - a1 - b1)\n                   \
    \             val c7 = math.abs(c - a1 - b1 - c1 - a1 - b1 - c1)\n           \
    \                     val sum7 = a7 + b7 + c7\n                              \
    \  if (sum7 > b2) {\n                                    val a8 = math.abs(a -\
    \ b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1)\n                                   \
    \ val b8 = math.abs(b - c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1)\n             \
    \                       val c8 = math.abs(c - a1 - b1 - c1 - a1 - b1 - c1 - a1\
    \ - b1)\n                                    val sum8 = a8 + b8 + c8\n       \
    \                             if (sum8 > c2) {\n                             \
    \           ", "        val area = if (a + b > c) (a * b) / 2 else -1\n      \
    \  area.toFloat", "        val area = (a + b + c) / 2\n        val side1 = math.sqrt(a\
    \ * a + b * b + c * c)\n        val side2 = math.sqrt(side1 * side1 + a * b +\
    \ b * c)\n        val side3 = math.sqrt(side1 * side1 + a * a + b * b)\n     \
    \   if (side1 + side2 > side3) {\n            area\n        } else {\n       \
    \     -1\n        }", "        val area = (a + b + c) / 2\n        val isValid\
    \ = a > 0 && b > 0 && c > 0\n        if (isValid) {\n            val sides = (a,\
    \ b, c).filter(_ > 0)\n            val sum = sides.sum\n            val isValidSides\
    \ = sides.forall(x => x > 0)\n            if (isValidSides && sum > sides.last)\n\
    \                area\n            else\n                -1\n        } else {\n\
    \            -1\n        }", "        val area = (a + b + c) / 2\n        val\
    \ sides = List(a, b, c).filter(_ > 0)\n        if (sides.sum > sides.last) area\n\
    \        else -1", "        val sum = a + b + c\n        if (sum > 0) {\n    \
    \        val area = math.sqrt(sum * sum / 2)\n            area\n        } else\
    \ {\n            -1\n        }", "        val triangleArea = (a+b+c)/2\n     \
    \   val validTriangle = (a+b > c) && (a+c > b) && (b+c > a)\n        if (validTriangle)\
    \ {\n            triangleArea.toFloat\n        } else {\n            -1\n    \
    \    }", "        val a = Math.sqrt(a * a + b * b + c * c)\n        val b = 2\
    \ * a \n        val c = Math.sqrt(a * a + b * b + c * c)\n        val d = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val area = if (a + b > c && a + c > b && b + c\
    \ > a) \n            (a * b * c) / d \n        else -1\n        area", "     \
    \   val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c > 0\n\
    \        val isValidArea = area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area < 1\n        val isValidArea = isValidArea\
    \ && area > 0 && area < 1\n        val isValidArea = isValidArea && area > 0 &&\
    \ area < 1\n        val isValidArea = isValidArea && area > 0 && area < 1\n  \
    \      val isValidArea = isValidArea && area > 0 && area < 1\n        val isValidArea\
    \ = isValidArea && area > 0 && area ", "        val a1 = Math.abs(a)\n       \
    \ val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val sum = a1 + b1\
    \ + c1\n        if (sum > a1 && sum > b1 && sum > c1) {\n            val area\
    \ = a1 * b1 * c1\n            val rounded = area.toString.replaceAll(\"\\\\.[0-9]*$\"\
    , \".0\")\n            val float = rounded.toFloat\n            float\n      \
    \  } else {\n            -1.0\n        }", "        val a1 = Math.abs(a)\n   \
    \     val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val sum = a1\
    \ + b1 + c1\n        if (sum > 0) {\n            val a2 = a1 / sum\n         \
    \   val b2 = b1 / sum\n            val c2 = c1 / sum\n            val area = (a2\
    \ + b2 + c2) * 0.5\n            area.toFloat\n        } else {\n            -1.0\n\
    \        }", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 =\
    \ c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 =\
    \ c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3\
    \ = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4\
    \ = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5\
    \ = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6\
    \ = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7\
    \ = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8\
    \ = c7 + a7\n        (a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n         \
    \   a4 + b5 + c6 >\n            a5 + b6 + c7 >\n            a6 + b7 + c8 >\n \
    \           a7 + b8 + c9)", "        val triangleArea = (a+b+c)/2\n        val\
    \ isValid = (a+b > c) && (a+c > b) && (b+c > a)\n        if(isValid) triangleArea.toFloat\
    \ else -1", "        val sum = a + b + c\n        if (sum > 0) {\n           \
    \ val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n            area\n\
    \        } else {\n            -1\n        }", "        val sum = a + b + c\n\
    \        if (sum > 0) {\n            val area = math.sqrt(sum * a * a + sum *\
    \ b * b + sum * c * c)\n            (area / 2).toFloat\n        } else {\n   \
    \         -1.0\n        }", "        val a1 = Math.abs(a * b - c * c)\n      \
    \  val a2 = Math.abs(a * b + c * c)\n        val a3 = Math.abs(a * b - c * c)\n\
    \        val a4 = Math.abs(a * b + c * c)\n        val a5 = Math.abs(a * b + c\
    \ * c)\n        val a6 = Math.abs(a * b - c * c)\n        val a7 = Math.abs(a\
    \ * b + c * c)\n        val a8 = Math.abs(a * b - c * c)\n        val a9 = Math.abs(a\
    \ * b + c * c)\n        val a10 = Math.abs(a * b + c * c)\n        val a11 = Math.abs(a\
    \ * b - c * c)\n        val a12 = Math.abs(a * b + c * c)\n        val a13 = Math.abs(a\
    \ * b - c * c)\n        val a14 = Math.abs(a * b + c * c)\n        val a15 = Math.abs(a\
    \ * b - c * c)\n        val a16 = Math.abs(a * b + c * c)\n        val a17 = Math.abs(a\
    \ * b - c * c)\n        val a18 = Math.abs(a * b + c * c)\n        val a19 = Math.abs(a\
    \ * b - c * c)\n        val a20 = Math.abs(a * b + c * c)\n        val a21 = Math.abs(a\
    \ * b - c * c)\n        val a22 = Math.abs(a * b + c * c)\n        val a23 = Math.abs(a\
    \ * b - c * c)\n        val a24 = Math.abs(a * b + c * c)\n        val a25 = Math.abs(a\
    \ * b - c * c)\n        val a26 = Math.abs(a * b + c * c)\n        val a27 = Math.abs(a\
    \ * b - c * c)\n        val a28 = Math.abs(a * b + c * c)\n        val a29 = Math.abs(a\
    \ * b - c * c)\n        val a30 = Math.abs(a * b + c * c)\n        val a31 = Math.abs(a\
    \ * b - c * c)\n        val a32 = Math.abs(a * b + c * c)\n        val a33 = Math.abs(a\
    \ * b - c * c)\n        val a34 = Math.abs(a * b + c * c)\n        val a35 = Math.abs(a\
    \ * b - c * c)\n        val a36 = Math.abs(a * b + c * c)\n        val a37 = Math.abs(a\
    \ * b - c * c)\n        val a38 = Math.abs(a * b + c * c)\n        val a39 = Math.abs(a\
    \ * b - c * c)\n        val a40 = Math.abs(a * b + c * c)\n        val a4"]
stop_tokens:
- "\n    }\n"

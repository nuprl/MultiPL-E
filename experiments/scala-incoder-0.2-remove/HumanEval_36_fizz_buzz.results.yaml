language: scala
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashSet[Int]()\n\
    \        divisors += 11\n        divisors += 13\n        divisors.foreach(divisor\
    \ => {\n            val remainder = n % divisor\n            if (remainder ==\
    \ 0) divisors.clear()\n        })\n        divisors.foreach(divisor => {\n   \
    \         val remainder = n % divisor\n            if (remainder == 0) divisors.clear()\n\
    \            if (remainder == 7) {\n                counts.put(remainder, 1)\n\
    \            }\n        })\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqs6numqm.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqs6numqm.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            if (i % 11 == 0 || i % 13 == 0) {\n                counts.update(i.toInt,\
    \ counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.filter(_._2\
    \ == 7).length\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvqenaelg.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvqenaelg.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val div = i % 11\n            val fizz = i % 13\n            if (div\
    \ == 0 || fizz == 0) {\n                counts.putIfAbsent(div, fizz)\n      \
    \      }\n        }\n        counts.foldLeft(0)((acc, x) => acc + x)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2n07vcxw.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2n07vcxw.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        val divisors = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount = mutable.ListBuffer[Long]()\n        val divisorsCount2\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount3 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount4 = mutable.ListBuffer[Long]()\n        val divisorsCount5\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount6 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount7 = mutable.ListBuffer[Long]()\n        val divisorsCount8\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount9 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount10 = mutable.ListBuffer[Long]()\n        val divisorsCount11\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount12 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount13 = mutable.ListBuffer[Long]()\n        val divisorsCount14\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount15 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount16 = mutable.ListBuffer[Long]()\n        val divisorsCount17\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount18 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount19 = mutable.ListBuffer[Long]()\n        val divisorsCount20\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount21 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount22 = mutable.ListBuffer[Long]()\n        val divisorsCount23\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount24 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount25 = mutable.ListBuffer[Long]()\n        val divisorsCount26\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount27 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount28 = mutable.ListBuffer[Long]()\n        val divisorsCount29\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount30 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount31 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:11:29 ------------------------\e\
    ["
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.Map[Int, Int]()\n        for (i <- 1 to n) {\n \
    \           val remainder = i % 11\n            val divideBy11 = i % 13\n    \
    \        if (remainder == 7 && divideBy11 == 0) counts(i) += 1\n        }\n  \
    \      counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv41q4yhk.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpv41q4yhk.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = 0\n        var lastDigitCount\
    \ = 0\n        var lastDigitCount2 = 0\n        var lastDigitCount3 = 0\n    \
    \    var lastDigitCount4 = 0\n        var lastDigitCount5 = 0\n        var lastDigitCount6\
    \ = 0\n        var lastDigitCount7 = 0\n        var lastDigitCount8 = 0\n    \
    \    var lastDigitCount9 = 0\n        var lastDigitCount10 = 0\n        var lastDigitCount11\
    \ = 0\n        var lastDigitCount12 = 0\n        var lastDigitCount13 = 0\n  \
    \      var lastDigitCount14 = 0\n        var lastDigitCount15 = 0\n        var\
    \ lastDigitCount16 = 0\n        var lastDigitCount17 = 0\n        var lastDigitCount18\
    \ = 0\n        var lastDigitCount19 = 0\n        var lastDigitCount20 = 0\n  \
    \      var lastDigitCount21 = 0\n        var lastDigitCount22 = 0\n        var\
    \ lastDigitCount23 = 0\n        var lastDigitCount24 = 0\n        var lastDigitCount25\
    \ = 0\n        var lastDigitCount26 = 0\n        var lastDigitCount27 = 0\n  \
    \      var lastDigitCount28 = 0\n        var lastDigitCount29 = 0\n        var\
    \ lastDigitCount30 = 0\n        var lastDigitCount31 = 0\n        var lastDigitCount32\
    \ = 0\n        var lastDigitCount33 = 0\n        var lastDigitCount34 = 0\n  \
    \      var lastDigitCount35 = 0\n        var lastDigitCount36 = 0\n        var\
    \ lastDigitCount37 = 0\n        var lastDigitCount38 = 0\n        var lastDigitCount39\
    \ = 0\n        var lastDigitCount40 = 0\n        var lastDigitCount41 = 0\n  \
    \      var lastDigitCount42 = 0\n        var lastDigitCount43 = 0\n        var\
    \ lastDigitCount44 = 0\n        var lastDigitCount45 = 0\n        var lastDigitCount46\
    \ = 0\n        var lastDigitCount47 = 0\n        var lastDigitCount48 = 0\n  \
    \      var lastDigitCount49 = 0\n        var lastDigitCount50 = 0\n        var\
    \ lastDigitCount51 = 0\n        var lastDigitCount52 = 0\n        var lastDigitCount53\
    \ = 0\n        var lastDigitCount54 = 0\n        var lastDigitCount55 = 0\n  \
    \      var lastDigitCount56 = 0\n        var lastDigitCount57 = 0\n        var\
    \ lastDigitCount58 = 0\n        var lastDigitCount59 = 0\n        var lastDigitCount60\
    \ = 0\n        var lastDigitCount61 = 0\n        var lastDigitCount62 = 0\n  \
    \      var lastDigitCount63 = 0\n        var lastDigitCount64 = 0\n        var\
    \ lastDigitCount65 = 0\n        var lastDigitCount66 = 0\n        var lastDigitCount67\
    \ = 0\n        var lastDigitCount68 = 0\n        var lastDigitCount69 = 0\n  \
    \      var lastDigitCount70 = 0\n        var lastDigitCount71 = 0\n        var\
    \ lastDigitCount72 = 0\n        var \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpvg181cre.scala:80:11 ---------------------------\e\
    [0m\e[0m\n\e[31m80 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvg181cre.scala:81:5 ---------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for (i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            if (remainder == 0 || remainder\
    \ == 7) {\n                counts.put(i, counts.getOrElse(i, 0) + 1L)\n      \
    \      }\n        }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp323h_d5p.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp323h_d5p.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.ListBuffer[Long]()\n        val divisors = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount = mutable.ListBuffer[Long]()\n        divisors ++=\
    \ List(11, 13)\n        divisorsCount ++= divisors.map(x => x % 11 == 0 ? 1 :\
    \ 0)\n        divisorsCount += divisors.map(x => x % 13 == 0 ? 1 : 0)\n      \
    \  divisorsCount += divisors.map(x => x % 11 == 0 ? 0 : 0)\n        divisorsCount\
    \ += divisors.map(x => x % 13 == 0 ? 0 : 0)\n        divisorsCount += divisors.map(x\
    \ => x % 11 == 0 ? 1 : 0)\n        divisorsCount += divisors.map(x => x % 13 ==\
    \ 0 ? 1 : 0)\n        divisorsCount += divisors.map(x => x % 11 == 0 ? 0 : 0)\n\
    \        divisorsCount += divisors.map(x => x % 13 == 0 ? 0 : 0)\n        divisorsCount\
    \ += divisors.map(x => x % 11 == 0 ? 1 : 0)\n        divisorsCount += divisors.map(x\
    \ => x % 13 == 0 ? 1 : 0)\n        divisorsCount += divisors.map(x => x % 11 ==\
    \ 0 ? 0 : 0)\n        divisorsCount += divisors.map(x => x % 13 == 0 ? 0 : 0)\n\
    \        divisorsCount += divisors.map(x => x % 11 == 0 ? 1 : 0)\n        divisorsCount\
    \ += divisors.map(x => x % 13 == 0 ? 1 : 0)\n        divisorsCount += divisors.map(x\
    \ => x % 11 == 0 ? 0 : 0)\n        divisorsCount += divisors.map(x => x % 13 ==\
    \ 0 ? 0 : 0)\n        divisorsCount += divisors.map(x => x % 11 == 0 ? 1 : 0)\n\
    \        divisorsCount += divisors.map(x => x % 13 == 0 ? 1 : 0)\n        divisorsCount\
    \ += divisors.map(x => x % 11 == 0 ? 0 : 0)\n        divisorsCount += divisors.map(x\
    \ => x % 13 == 0 ? 0 : 0)\n        divisorsCount += divisors.map(x => x % 11 ==\
    \ 0 ? 1 : 0)\n        divisorsCount += divisors.map(x => x % 13 == 0 ? 1 : 0)\n\
    \        divisorsCount += divisors.map(x => x % 11 == 0 ? 0 : 0)\n        divisorsCount\
    \ += divisors.map(x => x % 13 == 0 ? 0 : 0)\n        divisorsCount += divisors.map(x\
    \ => x % 11 == 0 ? 1 : 0)\n        divisorsCount += divisors.map(x => x % 13\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphoo0_fi5.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphoo0_fi5.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphoo0_fi5.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                       ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphoo0_fi5.scala:8:28\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m \
    \ |\e[0m                            ^^^^^^^\e[0m\n\e[31m  |\e[0m             \
    \               Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for(i <- 1 to n) {\n\
    \            if(i % 11 == 0 || i % 13 == 0) {\n                nums += i\n   \
    \         }\n        }\n        nums.count(_ == 7)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz50x48_9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpz50x48_9.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ListBuffer(1 to n).filter(_ % 11 == 0 || _ % 13 ==\
    \ 0)\n        val count = nums.count(_ == 7) \n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx3anj4vl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m to n).filter(_ % \e[31m11\e[0m == \e[31m0\e[0m || _ % \e[31m13\e[0m\
    \ == \e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = 7\n        var lastN = 0\n   \
    \     while (n > 0) {\n            val remainder = n % 10\n            if (remainder\
    \ == lastDigit) {\n                count += 1\n            } else {\n        \
    \        if (lastN % 11 == 0 || lastN % 13 == 0) {\n                    count\
    \ += 1\n                }\n                lastN = n\n                lastDigit\
    \ = remainder\n            }\n            n /= 10\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx6uu5inm.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m                lastN = n\n\e\
    [31m\e[31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m           \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                        Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx6uu5inm.scala:18:28\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                lastDigit = remainder\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                            Found:    (remainder : Long)\n\e[31m   |\e[0m \
    \                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpx6uu5inm.scala:20:14 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        val divisors = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount = mutable.ListBuffer[Long]()\n        val divisorsCount2\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount3 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount4 = mutable.ListBuffer[Long]()\n        val divisorsCount5\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount6 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount7 = mutable.ListBuffer[Long]()\n        val divisorsCount8\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount9 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount10 = mutable.ListBuffer[Long]()\n        val divisorsCount11\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount12 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount13 = mutable.ListBuffer[Long]()\n        val divisorsCount14\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount15 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount16 = mutable.ListBuffer[Long]()\n        val divisorsCount17\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount18 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount19 = mutable.ListBuffer[Long]()\n        val divisorsCount20\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount21 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount22 = mutable.ListBuffer[Long]()\n        val divisorsCount23\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount24 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount25 = mutable.ListBuffer[Long]()\n        val divisorsCount26\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount27 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount28 = mutable.ListBuffer[Long]()\n        val divisorsCount29\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount30 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount31 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:11:29 ------------------------\e\
    ["
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount2 = mutable.HashMap[Int, Int]()\n        val divisorsCount3 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount4 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount5 = mutable.HashMap[Int, Int]()\n        val divisorsCount6 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount7 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount8 = mutable.HashMap[Int, Int]()\n        val divisorsCount9 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount10 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount11 = mutable.HashMap[Int, Int]()\n        val divisorsCount12 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount13 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount14 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount15 = mutable.HashMap[Int, Int]()\n        val divisorsCount16 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount17 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount18 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount19 = mutable.HashMap[Int, Int]()\n        val divisorsCount20 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount21 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount22 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount23 = mutable.HashMap[Int, Int]()\n        val divisorsCount24 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount25 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount26 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount27 = mutable.HashMap[Int, Int]()\n        val divisorsCount28 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount29 = mutable.HashMap[Int,\
    \ Int]()\n        val divisors\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpee24j0cy.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m              \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpee24j0cy.scala:8:28 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                        \
    \     ^^^^^^^\e[0m\n\e[31m  |\e[0m                             Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:10:29\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount3\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        val divisors =\
    \ mutable.HashSet.empty[Int]\n        val divisorsCount = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount2 = mutable.HashMap.empty[Int, Int]\n       \
    \ val divisorsCount3 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount4\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount5 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount6 = mutable.HashMap.empty[Int, Int]\n       \
    \ val divisorsCount7 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount8\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount9 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount10 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount11 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount12\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount13 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount14 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount15 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount16\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount17 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount18 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount19 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount20\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount21 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount22 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount23 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount24\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount25 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount26 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount27 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount28\
    \ = mutable.HashMap.\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp53u5ldi7.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp53u5ldi7.scala:6:21 -------------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                          \
    \  ^^^^^^^\e[0m\n\e[31m  |\e[0m                            Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:9:29\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount2\e[0m = mutable.HashMap.empty[\e[35mInt\e[0m, \e[35mInt\e[0m]\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                         \
    \    ^^"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val d = i % 11\n            val e = i % 13\n            if(d == 7\
    \ && e == 7) {\n                counts(i) = 1\n            }\n        }\n    \
    \    counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqewcfrsz.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqewcfrsz.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        val divisors = mutable.HashSet[Int]()\n\
    \        divisors += 11\n        divisors += 13\n        divisors.foreach(divisor\
    \ => counts += (divisor, 0))\n        val digits = n.toString.reverse.grouped(3).map(_.toInt)\n\
    \        digits.foreach(digit => counts(digit) += 1L)\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_p1yzmgq.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_p1yzmgq.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010172
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ListBuffer(1 to n).toList\n        val result = mutable.ListBuffer[Long]()\n\
    \        val divisors = mutable.ListBuffer(\"11\", \"13\")\n        divisors.foreach(divisor\
    \ => {\n            val divisorNums = nums.filter(num => num % divisor == 0)\n\
    \            val divisorNumsCount = divisorNums.size\n            if (divisorNumsCount\
    \ == 0) {\n                divisorNumsCount += 1\n            }\n            divisorNums.foreach(num\
    \ => {\n                if (num == 7) {\n                    result += divisorNumsCount\n\
    \                }\n            })\n        })\n        result.sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n \
    \   assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n \
    \   assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfxpse_5l.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m to n).toList\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpfxpse_5l.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpfxpse_5l.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer(\e\
    [31m\"11\"\e[0m, \e[31m\"13\"\e[0m)\n\e[31m\e[31m  |\e[0m                    \
    \   ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found: mutable\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount2 = mutable.HashMap[Int, Int]()\n        val divisorsCount3 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount4 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount5 = mutable.HashMap[Int, Int]()\n        val divisorsCount6 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount7 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount8 = mutable.HashMap[Int, Int]()\n        val divisorsCount9 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount10 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount11 = mutable.HashMap[Int, Int]()\n        val divisorsCount12 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount13 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount14 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount15 = mutable.HashMap[Int, Int]()\n        val divisorsCount16 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount17 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount18 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount19 = mutable.HashMap[Int, Int]()\n        val divisorsCount20 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount21 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount22 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount23 = mutable.HashMap[Int, Int]()\n        val divisorsCount24 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount25 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount26 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount27 = mutable.HashMap[Int, Int]()\n        val divisorsCount28 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount29 = mutable.HashMap[Int,\
    \ Int]()\n        val divisors\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpee24j0cy.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m              \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpee24j0cy.scala:8:28 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                        \
    \     ^^^^^^^\e[0m\n\e[31m  |\e[0m                             Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:10:29\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount3\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ == 7)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmt1vrm00.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmt1vrm00.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Int]()\n        val fizzBuzzCount = mutable.Set[Int]()\n\
    \        val fizzBuzzCount2 = mutable.Set[Int]()\n        val fizzBuzzCount3 =\
    \ mutable.Set[Int]()\n        val fizzBuzzCount4 = mutable.Set[Int]()\n      \
    \  val fizzBuzzCount5 = mutable.Set[Int]()\n        val fizzBuzzCount6 = mutable.Set[Int]()\n\
    \        val fizzBuzzCount7 = mutable.Set[Int]()\n        val fizzBuzzCount8 =\
    \ mutable.Set[Int]()\n        val fizzBuzzCount9 = mutable.Set[Int]()\n      \
    \  val fizzBuzzCount10 = mutable.Set[Int]()\n        val fizzBuzzCount11 = mutable.Set[Int]()\n\
    \        val fizzBuzzCount12 = mutable.Set[Int]()\n        val fizzBuzzCount13\
    \ = mutable.Set[Int]()\n        val fizzBuzzCount14 = mutable.Set[Int]()\n   \
    \     val fizzBuzzCount15 = mutable.Set[Int]()\n        val fizzBuzzCount16 =\
    \ mutable.Set[Int]()\n        val fizzBuzzCount17 = mutable.Set[Int]()\n     \
    \   val fizzBuzzCount18 = mutable.Set[Int]()\n        val fizzBuzzCount19 = mutable.Set[Int]()\n\
    \        val fizzBuzzCount20 = mutable.Set[Int]()\n        val fizzBuzzCount21\
    \ = mutable.Set[Int]()\n        val fizzBuzzCount22 = mutable.Set[Int]()\n   \
    \     val fizzBuzzCount23 = mutable.Set[Int]()\n        val fizzBuzzCount24 =\
    \ mutable.Set[Int]()\n        val fizzBuzzCount25 = mutable.Set[Int]()\n     \
    \   val fizzBuzzCount26 = mutable.Set[Int]()\n        val fizzBuzzCount27 = mutable.Set[Int]()\n\
    \        val fizzBuzzCount28 = mutable.Set[Int]()\n        val fizzBuzzCount29\
    \ = mutable.Set[Int]()\n        val fizzBuzzCount30 = mutable.Set[Int]()\n\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u8bssor.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp6u8bssor.scala:7:28 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u8bssor.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount2\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u8bssor.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount3\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u8bssor.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount4\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u8bssor.scala:11:29 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m  "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 && (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7f3wfefo.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.Map[Int, Long]()\n        for(i <- 1 to n) {\n \
    \           val div = i % 11\n            val fizz = i % 13\n            if(div\
    \ == 0 || fizz == 0) {\n                counts(i) = 1\n            } else {\n\
    \                counts(i) = counts(i) + 1\n            }\n        }\n       \
    \ counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzrxvi9v.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpuzrxvi9v.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val digit = i % 10\n            if(digit == 7 && counts.contains(digit))\
    \ {\n                counts(digit) += 1\n            } else {\n              \
    \  counts.put(digit, 1)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0s7la2np.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0s7la2np.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzSet = mutable.Set[Long]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Long]()\n        val fizzBuzzSet3 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Long]()\n        val fizzBuzzSet5 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Long]()\n        val fizzBuzzSet7 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Long]()\n        val fizzBuzzSet9 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Long]()\n        val fizzBuzzSet11 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet12 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet13 = mutable.Set[Long]()\n        val fizzBuzzSet14 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet15 = mutable.Set[Long]()\n        val fizzBuzzSet16 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet17 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet18 = mutable.Set[Long]()\n        val fizzBuzzSet19 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Long]()\n        val fizzBuzzSet21 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet22 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet23 = mutable.Set[Long]()\n        val fizzBuzzSet24 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet25 = mutable.Set[Long]()\n        val fizzBuzzSet26 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet27 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet28 = mutable.Set[Long]()\n        val fizzBuzzSet29 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Long]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashSet[Int]()\n\
    \        divisors += 11\n        divisors += 13\n        divisors.foreach(divisor\
    \ => {\n            val remainder = n % divisor\n            if (remainder ==\
    \ 0) divisors -= divisor\n        })\n        divisors.foreach(divisor => {\n\
    \            val remainder = n % divisor\n            if (remainder == 0) divisors\
    \ -= divisor\n        })\n        divisors.foreach(divisor => {\n            val\
    \ remainder = n % divisor\n            if (remainder == 0) divisors -= divisor\n\
    \        })\n        divisors.foreach(divisor => {\n            val remainder\
    \ = n % divisor\n            if (remainder == 0) divisors -= divisor\n       \
    \ })\n        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors -= divisor\n        })\n        divisors.foreach(divisor\
    \ => {\n            val remainder = n % divisor\n            if (remainder ==\
    \ 0) divisors -= divisor\n        })\n        divisors.foreach(divisor => {\n\
    \            val remainder = n % divisor\n            if (remainder == 0) divisors\
    \ -= divisor\n        })\n        divisors.foreach(divisor => {\n            val\
    \ remainder = n % divisor\n            if (remainder == 0) divisors -= divisor\n\
    \        })\n        divisors.foreach(divisor => {\n            val remainder\
    \ = n % divisor\n            if (remainder == 0) divisors -= divisor\n       \
    \ })\n        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors -= divisor\n        })\n        divisors.foreach(divisor\
    \ => {\n            val remainder = n % divisor\n            if (remainder ==\
    \ 0) divisors -= divisor\n        })\n        divisors.foreach(divisor => {\n\
    \            val remainder = n % divisor\n            if (remainder == 0) divisors\
    \ -= divisor\n        })\n        divisors.foreach(divisor => {\n            val\
    \ remainder = n % divisor\n            if (remainder == 0) divisors -= divisor\n\
    \        })\n        divisors.foreach(divisor => {\n            val remainder\
    \ = n % divisor\n            if (remainder == 0) divisors -= divisor\n       \
    \ })\n        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors -= divisor\n        })\n        divisors.foreach(divisor\
    \ => {\n            val remainder = n % divisor\n            if (remainder ==\
    \ 0) divisors -= divisor\n        })\n        divisors.foreach(divisor => {\n\
    \            val remainder = n % divisor\n            if (remainder == 0) divisors\
    \ -= divisor\n        })\n\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp308428fs.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp308428fs.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            val remainder =\
    \ i % 11\n            val isDivisibleBy11 = remainder == 0\n            val isDivisibleBy13\
    \ = remainder == 1\n            if(isDivisibleBy11 || isDivisibleBy13){\n    \
    \            count += 1\n            }\n        }\n        count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw8t3lf37.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            val remainder\
    \ = n % i\n            if(remainder == 0 || remainder == 11 || remainder == 13)\
    \ {\n                count += 1\n            }\n            n /= 10\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnaf0ff19.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnaf0ff19.scala:12:14\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            n /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporvih_wl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmporvih_wl.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzSet = mutable.Set[Long]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Long]()\n        val fizzBuzzSet3 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Long]()\n        val fizzBuzzSet5 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Long]()\n        val fizzBuzzSet7 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Long]()\n        val fizzBuzzSet9 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Long]()\n        val fizzBuzzSet11 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet12 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet13 = mutable.Set[Long]()\n        val fizzBuzzSet14 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet15 = mutable.Set[Long]()\n        val fizzBuzzSet16 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet17 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet18 = mutable.Set[Long]()\n        val fizzBuzzSet19 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Long]()\n        val fizzBuzzSet21 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet22 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet23 = mutable.Set[Long]()\n        val fizzBuzzSet24 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet25 = mutable.Set[Long]()\n        val fizzBuzzSet26 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet27 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet28 = mutable.Set[Long]()\n        val fizzBuzzSet29 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Long]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzCount = mutable.Set[Long]()\n\
    \        val fizzBuzzCount2 = mutable.Set[Long]()\n        val fizzBuzzCount3\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount4 = mutable.Set[Long]()\n  \
    \      val fizzBuzzCount5 = mutable.Set[Long]()\n        val fizzBuzzCount6 =\
    \ mutable.Set[Long]()\n        val fizzBuzzCount7 = mutable.Set[Long]()\n    \
    \    val fizzBuzzCount8 = mutable.Set[Long]()\n        val fizzBuzzCount9 = mutable.Set[Long]()\n\
    \        val fizzBuzzCount10 = mutable.Set[Long]()\n        val fizzBuzzCount11\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount12 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount13 = mutable.Set[Long]()\n        val fizzBuzzCount14\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount15 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount16 = mutable.Set[Long]()\n        val fizzBuzzCount17\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount18 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount19 = mutable.Set[Long]()\n        val fizzBuzzCount20\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount21 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount22 = mutable.Set[Long]()\n        val fizzBuzzCount23\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount24 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount25 = mutable.Set[Long]()\n        val fizzBuzzCount26\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount27 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount28 = mutable.Set[Long]()\n        val fizzBuzzCount29\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount30 = mutable.Set[Long]()\n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:7:28 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:11:29 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val isFizz = (remainder == 0)\n\
    \            val isBuzz = (remainder == 6)\n            val isFizzBuzz = (isFizz\
    \ && isBuzz)\n            if(isFizzBuzz) {\n                counts.update(i)\n\
    \            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi9jr3bs8.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi9jr3bs8.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Long, Int]\n        for(i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            val divideBy11 = i % 13\n\
    \            if(remainder == 7 && divideBy11 == 0) counts(i) ++ 1\n        }\n\
    \        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3gwvbxek.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3gwvbxek.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzSet = mutable.Set[Long]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Long]()\n        val fizzBuzzSet3 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Long]()\n        val fizzBuzzSet5 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Long]()\n        val fizzBuzzSet7 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Long]()\n        val fizzBuzzSet9 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Long]()\n        val fizzBuzzSet11 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet12 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet13 = mutable.Set[Long]()\n        val fizzBuzzSet14 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet15 = mutable.Set[Long]()\n        val fizzBuzzSet16 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet17 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet18 = mutable.Set[Long]()\n        val fizzBuzzSet19 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Long]()\n        val fizzBuzzSet21 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet22 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet23 = mutable.Set[Long]()\n        val fizzBuzzSet24 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet25 = mutable.Set[Long]()\n        val fizzBuzzSet26 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet27 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet28 = mutable.Set[Long]()\n        val fizzBuzzSet29 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Long]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val divisors = mutable.Set[Long]()\n\
    \        val divisorsCount = mutable.Set[Long]()\n        val divisorsCount2 =\
    \ mutable.Set[Long]()\n        val divisorsCount3 = mutable.Set[Long]()\n    \
    \    val divisorsCount4 = mutable.Set[Long]()\n        val divisorsCount5 = mutable.Set[Long]()\n\
    \        val divisorsCount6 = mutable.Set[Long]()\n        val divisorsCount7\
    \ = mutable.Set[Long]()\n        val divisorsCount8 = mutable.Set[Long]()\n  \
    \      val divisorsCount9 = mutable.Set[Long]()\n        val divisorsCount10 =\
    \ mutable.Set[Long]()\n        val divisorsCount11 = mutable.Set[Long]()\n   \
    \     val divisorsCount12 = mutable.Set[Long]()\n        val divisorsCount13 =\
    \ mutable.Set[Long]()\n        val divisorsCount14 = mutable.Set[Long]()\n   \
    \     val divisorsCount15 = mutable.Set[Long]()\n        val divisorsCount16 =\
    \ mutable.Set[Long]()\n        val divisorsCount17 = mutable.Set[Long]()\n   \
    \     val divisorsCount18 = mutable.Set[Long]()\n        val divisorsCount19 =\
    \ mutable.Set[Long]()\n        val divisorsCount20 = mutable.Set[Long]()\n   \
    \     val divisorsCount21 = mutable.Set[Long]()\n        val divisorsCount22 =\
    \ mutable.Set[Long]()\n        val divisorsCount23 = mutable.Set[Long]()\n   \
    \     val divisorsCount24 = mutable.Set[Long]()\n        val divisorsCount25 =\
    \ mutable.Set[Long]()\n        val divisorsCount26 = mutable.Set[Long]()\n   \
    \     val divisorsCount27 = mutable.Set[Long]()\n        val divisorsCount28 =\
    \ mutable.Set[Long]()\n        val divisorsCount29 = mutable.Set[Long]()\n   \
    \     val divisorsCount30 = mutable.Set[Long]()\n        val divisorsCount31 =\
    \ mutable.Set[Long]()\n        val divisorsCount32 = mutable.Set[Long]()\n   \
    \     val divisorsCount33 = mutable.Set[Long]()\n        val divisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfurnw0m9.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfurnw0m9.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzz\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfurnw0m9.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfurnw0m9.scala:8:28\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                            ^^^^^^^\e[0m\n\e[31m  |\e[0m                    \
    \        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpfurnw0m9.scala:9:29 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpfurnw0m9.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660010186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Int, Int]\n        val divisors = mutable.HashSet.empty[Int]\n\
    \        for(i <- 1 to n) {\n            val remainder = i % 11\n            val\
    \ divisor = remainder % 13\n            if(divisor == 0 || divisor == 11) {\n\
    \                divisors += divisor\n            }\n            if(remainder\
    \ == 7) {\n                count(divisor) = count(divisor) + 1\n            }\n\
    \        }\n        divisors.toList.foldLeft(0)((acc, d) => acc + count(d))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp77oyxww2.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp77oyxww2.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp77oyxww2.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7) {\n             \
    \   counts.put(i, counts.getOrElse(i, 0) + 1)\n            }\n        }\n    \
    \    counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4iw48rj0.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4iw48rj0.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val divisors =\
    \ mutable.ArrayBuffer.empty[Long]\n        val divisorsCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount2 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount3\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount4 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount5 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount6\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount7 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount8 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount9\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount10 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount11 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount12\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount13 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount14 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount15\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount16 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount17 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount18\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount19 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount20 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount21\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount22 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount23 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount24\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount25 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount26 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount27\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount28 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisorsCount29 = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount30\
    \ = mutable.ArrayBuffer.empty[Long]\n        val divisorsCount31 = mutable.ArrayBuffer.empty[Long]\n\
    \        val divisors\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbyuqhi5c.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbyuqhi5c.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbyuqhi5c.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m \
    \ |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m                  \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbyuqhi5c.scala:8:28\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e\
    [31m  |\e[0m                            ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpbyuqhi5c.scala:9:29 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpbyuqhi5c.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  "
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val divisors = mutable.Set[Long]()\n\
    \        val divisorsSet = mutable.Set[Long]()\n        val divisorsSet2 = mutable.Set[Long]()\n\
    \        val divisorsSet3 = mutable.Set[Long]()\n        val divisorsSet4 = mutable.Set[Long]()\n\
    \        val divisorsSet5 = mutable.Set[Long]()\n        val divisorsSet6 = mutable.Set[Long]()\n\
    \        val divisorsSet7 = mutable.Set[Long]()\n        val divisorsSet8 = mutable.Set[Long]()\n\
    \        val divisorsSet9 = mutable.Set[Long]()\n        val divisorsSet10 = mutable.Set[Long]()\n\
    \        val divisorsSet11 = mutable.Set[Long]()\n        val divisorsSet12 =\
    \ mutable.Set[Long]()\n        val divisorsSet13 = mutable.Set[Long]()\n     \
    \   val divisorsSet14 = mutable.Set[Long]()\n        val divisorsSet15 = mutable.Set[Long]()\n\
    \        val divisorsSet16 = mutable.Set[Long]()\n        val divisorsSet17 =\
    \ mutable.Set[Long]()\n        val divisorsSet18 = mutable.Set[Long]()\n     \
    \   val divisorsSet19 = mutable.Set[Long]()\n        val divisorsSet20 = mutable.Set[Long]()\n\
    \        val divisorsSet21 = mutable.Set[Long]()\n        val divisorsSet22 =\
    \ mutable.Set[Long]()\n        val divisorsSet23 = mutable.Set[Long]()\n     \
    \   val divisorsSet24 = mutable.Set[Long]()\n        val divisorsSet25 = mutable.Set[Long]()\n\
    \        val divisorsSet26 = mutable.Set[Long]()\n        val divisorsSet27 =\
    \ mutable.Set[Long]()\n        val divisorsSet28 = mutable.Set[Long]()\n     \
    \   val divisorsSet29 = mutable.Set[Long]()\n        val divisorsSet30 = mutable.Set[Long]()\n\
    \        val divisorsSet31 = mutable.Set[Long]()\n        val divisorsSet32 =\
    \ mutable.Set[Long]()\n        val divisorsSet33 = mutable.Set[Long]()\n     \
    \   val \n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpcvmh9uhc.scala:41:11 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcvmh9uhc.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcvmh9uhc.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcvmh9uhc.scala:8:26 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcvmh9uhc.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcvmh9uhc.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer(1 to n).map(_.toInt)\n        val numsFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzz\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val numsFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzFizzBuzzF\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprmxmzx1y.scala:19:4 ----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprmxmzx1y.scala:6:19\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mnums\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m to n).map(_.toInt)\n\e[31m\e\
    [31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                  \
    \ Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprmxmzx1y.scala:7:27\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mnumsFizzBuzz\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m to n).map(_.toInt)\n\e\
    [31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmprmxmzx1y.scala:8:35 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mnumsFizzBuzzFizzBuzz\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n).map(_.toInt)\n\e[31m\e[31m  |\e[0m                          \
    \         ^^^^^^^\e[0m\n\e[31m  |\e[0m                                   Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprmxmzx1y.scala:9:43\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mnumsFizzBuzzFizzBuzzFizzBuzz\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m to n).map(_.toInt)\n\
    \e[31m\e[31m  |\e[0m                                           ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                                           Not found: mutable\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprmxmzx1y.scala:10:51\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mnumsFizzBuzzFizzBuzzFizzBuzzFizzBuzz\e[0m = muta"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[String]()\n        for(i <- 1 to n)\
    \ {\n            val str = i.toString.toInt\n            if(str % 11 == 0 || str\
    \ % 13 == 0) {\n                fizzBuzz += str\n            }\n        }\n  \
    \      fizzBuzz.count(_ == \"7\")\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptrryy00u.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptrryy00u.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 && (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7f3wfefo.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val isFizz = (remainder == 0)\n\
    \            val isBuzz = (remainder == 6)\n            val isFizzBuzz = (isFizz\
    \ && isBuzz)\n            if(isFizzBuzz) {\n                counts(i) += 1\n \
    \           }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm_no0q_p.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpm_no0q_p.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ % 7 == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxq4jvi_j.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpxq4jvi_j.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ListBuffer(1 to n)\n        val result = mutable.ListBuffer[Long]()\n\
    \        val isDivisibleBy11 = nums.filter(x => x % 11 == 0).length == 0\n   \
    \     val isDivisibleBy13 = nums.filter(x => x % 13 == 0).length == 0\n      \
    \  val isDivisibleBy7 = nums.filter(x => x % 7 == 0).length == 0\n        val\
    \ isDivisibleBy11 = nums.filter(x => x % 11 == 0).length == 0\n        val isDivisibleBy13\
    \ = nums.filter(x => x % 13 == 0).length == 0\n        val isDivisibleBy7 = nums.filter(x\
    \ => x % 7 == 0).length == 0\n        val isDivisibleBy11 = nums.filter(x => x\
    \ % 11 == 0).length == 0\n        val isDivisibleBy13 = nums.filter(x => x % 13\
    \ == 0).length == 0\n        val isDivisibleBy7 = nums.filter(x => x % 7 == 0).length\
    \ == 0\n        val isDivisibleBy11 = nums.filter(x => x % 11 == 0).length ==\
    \ 0\n        val isDivisibleBy13 = nums.filter(x => x % 13 == 0).length == 0\n\
    \        val isDivisibleBy7 = nums.filter(x => x % 7 == 0).length == 0\n     \
    \   val isDivisibleBy11 = nums.filter(x => x % 11 == 0).length == 0\n        val\
    \ isDivisibleBy13 = nums.filter(x => x % 13 == 0).length == 0\n        val isDivisibleBy7\
    \ = nums.filter(x => x % 7 == 0).length == 0\n        val isDivisibleBy11 = nums.filter(x\
    \ => x % 11 == 0).length == 0\n        val isDivisibleBy13 = nums.filter(x =>\
    \ x % 13 == 0).length == 0\n        val isDivisibleBy7 = nums.filter(x => x %\
    \ 7 == 0).length == 0\n        val isDivisibleBy11 = nums.filter(x => x % 11 ==\
    \ 0).length == 0\n        val isDivisibleBy13 = nums.filter(x => x % 13 == 0).length\
    \ == 0\n        val isDivisibleBy7 = nums.filter(x => x % 7 == 0).length == 0\n\
    \        val isDivisibleBy11 = nums.filter(x => x % 11 == 0).length == 0\n   \
    \     val isDivisibleBy13 = nums.filter(x => x % 13 == 0).length == 0\n      \
    \  val isDivisibleBy7 = nums.filter(x => x % 7 == 0).length == 0\n        \n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt2u_hn4.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misDivisibleBy11\e[0m = nums.filter(\e\
    [36mx\e[0m => x % \e[31m11\e[0m == \e[31m0\e[0m).length == \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misDivisibleBy11 is already defined as \e[33mvalue\e[0m \e\
    [35misDivisibleBy11\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpkt2u_hn4.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misDivisibleBy13\e[0m = nums.filter(\e\
    [36mx\e[0m => x % \e[31m13\e[0m == \e[31m0\e[0m).length == \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misDivisibleBy13 is already defined as \e[33mvalue\e[0m \e\
    [35misDivisibleBy13\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpkt2u_hn4.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misDivisibleBy7\e[0m = nums.filter(\e\
    [36mx\e[0m => x % \e[31m7\e[0m == \e[31m0\e[0m).length == \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misDivisibleBy7 is already defined as \e[33mvalue\e[0m \e[35misDivisibleBy7\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkt2u_hn4.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misDivisibleBy11\e[0m = nums.filter(\e\
    [36mx\e[0m => x % \e[31m11\e[0m == \e[31m0\e[0m).length == \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misDivisibleBy11 is already defined as \e[33mvalue\e[0m \e\
    [35misDivisibleBy11\e[0m\n\e[31m   "
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            if (remainder == 0 ||\
    \ remainder == 7) {\n                counts(i) = counts.getOrElse(i, 0) + 1\n\
    \            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp7zo_fkk.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpp7zo_fkk.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val digit = i % 10\n            if(digit == 7 || digit == 13) {\n\
    \                counts(digit) += 1\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2srgj_o.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpg2srgj_o.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0){\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4lnzy2d5.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for (i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            if (remainder == 0 || remainder\
    \ == 7) {\n                counts.update(i.toInt, counts.getOrElse(i, 0L) + 1L)\n\
    \            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpihgo797x.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpihgo797x.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashSet[Int](11,\
    \ 13)\n        divisors.foreach(divisor => {\n            val divisorCount = n\
    \ / divisor\n            counts += divisor -> divisorCount\n        })\n     \
    \   divisors.foreach(divisor => {\n            val divisorCount = n % divisor\n\
    \            counts += divisor -> divisorCount\n        })\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpey21197p.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpey21197p.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mInt\e[0m](\e[31m11\e[0m, \e[31m13\e[0m)\n\e[31m\e[31m  |\e[0m            \
    \           ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        val divisors =\
    \ mutable.HashSet.empty[Int]\n        val divisorsCount = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount2 = mutable.HashSet.empty[Int]\n        val divisorsCount3\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount4 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount5 = mutable.HashSet.empty[Int]\n        val divisorsCount6\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount7 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount8 = mutable.HashSet.empty[Int]\n        val divisorsCount9\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount10 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount11 = mutable.HashSet.empty[Int]\n        val divisorsCount12\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount13 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount14 = mutable.HashSet.empty[Int]\n        val divisorsCount15\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount16 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount17 = mutable.HashSet.empty[Int]\n        val divisorsCount18\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount19 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount20 = mutable.HashSet.empty[Int]\n        val divisorsCount21\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount22 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount23 = mutable.HashSet.empty[Int]\n        val divisorsCount24\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount25 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount26 = mutable.HashSet.empty[Int]\n        val divisorsCount27\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount28 = mutable.HashSet.empty[Int]\n\
    \        val divisorsCount29 = mutable.HashSet.empty[Int]\n        val divisorsCount30\
    \ = mutable.HashSet.empty[Int]\n        val divisorsCount31 = mutable.HashSet.empty[Int]\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwr055anh.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwr055anh.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwr055anh.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwr055anh.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwr055anh.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwr055anh.scala:11:29 ------------------"
  stdout: ''
  timestamp: 1660010190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzSet = mutable.Set[Long]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Long]()\n        val fizzBuzzSet3 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Long]()\n        val fizzBuzzSet5 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Long]()\n        val fizzBuzzSet7 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Long]()\n        val fizzBuzzSet9 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Long]()\n        val fizzBuzzSet11 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet12 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet13 = mutable.Set[Long]()\n        val fizzBuzzSet14 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet15 = mutable.Set[Long]()\n        val fizzBuzzSet16 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet17 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet18 = mutable.Set[Long]()\n        val fizzBuzzSet19 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Long]()\n        val fizzBuzzSet21 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet22 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet23 = mutable.Set[Long]()\n        val fizzBuzzSet24 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet25 = mutable.Set[Long]()\n        val fizzBuzzSet26 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet27 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet28 = mutable.Set[Long]()\n        val fizzBuzzSet29 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Long]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Long, Long]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            val divideBy11 = i % 13\n\
    \            if (remainder == 7 && divideBy11 != 0) {\n                count.putIfAbsent(divideBy11,\
    \ 1L) += 1\n            }\n        }\n        count.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgmhh85j4.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgmhh85j4.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            if (remainder == 0 ||\
    \ remainder == 7) {\n                counts.putIfAbsent(remainder, 1)\n      \
    \      } else {\n                counts.putIfAbsent(remainder, counts.getOrElse(remainder,\
    \ 0) + 1)\n            }\n        }\n        counts.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwj_jdkb8.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwj_jdkb8.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[String]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i.toString\n            }\n        }\n        fizzBuzz.count(_ == \"7\")\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppifj6_um.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppifj6_um.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = n % 10\n        while (lastDigit\
    \ != 7) {\n            n /= 10\n            lastDigit = n % 10\n            count\
    \ += 1\n        }\n        if (lastDigit == 7) {\n            count += 1\n   \
    \     }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphe2pxyh4.scala:9:14 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m  |\e[0m \
    \           ^^^^\e[0m\n\e[31m  |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            if (i % 11 == 0 || i % 13 == 0) {\n                counts.update(i.toString,\
    \ counts.getOrElse(i.toString, 0) + 1L)\n            }\n        }\n        counts(7)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplwarcwgk.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplwarcwgk.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ListBuffer(1 to n).filter(_ % 11 == 0 || _ % 13 ==\
    \ 0).map(x => x % 10).distinct\n        nums.count(x => x == 7)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpevqkri0u.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m to n).filter(_ % \e[31m11\e[0m == \e[31m0\e[0m || _ % \e[31m13\e[0m\
    \ == \e[31m0\e[0m).map(\e[36mx\e[0m => x % \e[31m10\e[0m).distinct\n\e[31m\e[31m\
    \  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            val divideBy11 = i % 13\n\
    \            if(remainder == 7 && divideBy11 != 0) {\n                count(divideBy11)\
    \ += 1\n            }\n        }\n        count.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5z1rjjd.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpw5z1rjjd.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var remainder = n\n        while (remainder >\
    \ 0) {\n            if (remainder % 11 == 0 || remainder % 13 == 0) {\n      \
    \          count += 1\n            }\n            remainder = remainder / 10\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxrhmjfhq.scala:18)\n\tat Problem.main(tmpxrhmjfhq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            val isFizz = (remainder ==\
    \ 0)\n            val isBuzz = (remainder == 6)\n            val isFizzBuzz =\
    \ isFizz && isBuzz\n            if(isFizzBuzz) {\n                counts.update(i.toInt,\
    \ counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.getOrElse(n,\
    \ 0L)\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2611tp27.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2611tp27.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = 0\n        var lastDigitCount\
    \ = 0\n        var lastDigitCount2 = 0\n        var lastDigitCount3 = 0\n    \
    \    var lastDigitCount4 = 0\n        var lastDigitCount5 = 0\n        var lastDigitCount6\
    \ = 0\n        var lastDigitCount7 = 0\n        var lastDigitCount8 = 0\n    \
    \    var lastDigitCount9 = 0\n        var lastDigitCount10 = 0\n        var lastDigitCount11\
    \ = 0\n        var lastDigitCount12 = 0\n        var lastDigitCount13 = 0\n  \
    \      var lastDigitCount14 = 0\n        var lastDigitCount15 = 0\n        var\
    \ lastDigitCount16 = 0\n        var lastDigitCount17 = 0\n        var lastDigitCount18\
    \ = 0\n        var lastDigitCount19 = 0\n        var lastDigitCount20 = 0\n  \
    \      var lastDigitCount21 = 0\n        var lastDigitCount22 = 0\n        var\
    \ lastDigitCount23 = 0\n        var lastDigitCount24 = 0\n        var lastDigitCount25\
    \ = 0\n        var lastDigitCount26 = 0\n        var lastDigitCount27 = 0\n  \
    \      var lastDigitCount28 = 0\n        var lastDigitCount29 = 0\n        var\
    \ lastDigitCount30 = 0\n        var lastDigitCount31 = 0\n        var lastDigitCount32\
    \ = 0\n        var lastDigitCount33 = 0\n        var lastDigitCount34 = 0\n  \
    \      var lastDigitCount35 = 0\n        var lastDigitCount36 = 0\n        var\
    \ lastDigitCount37 = 0\n        var lastDigitCount38 = 0\n        var lastDigitCount39\
    \ = 0\n        var lastDigitCount40 = 0\n        var lastDigitCount41 = 0\n  \
    \      var lastDigitCount42 = 0\n        var lastDigitCount43 = 0\n        var\
    \ lastDigitCount44 = 0\n        var lastDigitCount45 = 0\n        var lastDigitCount46\
    \ = 0\n        var lastDigitCount47 = 0\n        var lastDigitCount48 = 0\n  \
    \      var lastDigitCount49 = 0\n        var lastDigitCount50 = 0\n        var\
    \ lastDigitCount51 = 0\n        var lastDigitCount52 = 0\n        var lastDigitCount53\
    \ = 0\n        var lastDigitCount54 = 0\n        var lastDigitCount55 = 0\n  \
    \      var lastDigitCount56 = 0\n        var lastDigitCount57 = 0\n        var\
    \ lastDigitCount58 = 0\n        var lastDigitCount59 = 0\n        var lastDigitCount60\
    \ = 0\n        var lastDigitCount61 = 0\n        var lastDigitCount62 = 0\n  \
    \      var lastDigitCount63 = 0\n        var lastDigitCount64 = 0\n        var\
    \ lastDigitCount65 = 0\n        var lastDigitCount66 = 0\n        var lastDigitCount67\
    \ = 0\n        var lastDigitCount68 = 0\n        var lastDigitCount69 = 0\n  \
    \      var lastDigitCount70 = 0\n        var lastDigitCount71 = 0\n        var\
    \ lastDigitCount72 = 0\n        var \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpvg181cre.scala:80:11 ---------------------------\e\
    [0m\e[0m\n\e[31m80 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvg181cre.scala:81:5 ---------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            val divide = i % 13\n   \
    \         if (remain == 7 && divide == 0) {\n                count.put(i, 1)\n\
    \            }\n        }\n        count.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfbkirp16.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpfbkirp16.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfbkirp16.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m            \e[33mif\e[0m\
    \ (remain == \e[31m7\e[0m && divide == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: remain\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer(1 to n)\n        val counts = mutable.ArrayBuffer(0\
    \ to n)\n        val fizzBuzz = mutable.ArrayBuffer(0 to n)\n        for (i <-\
    \ nums) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz\
    \ += i\n            }\n        }\n        for (i <- nums) {\n            if (fizzBuzz.contains(i))\
    \ {\n                counts(fizzBuzz.indexOf(i)) += 1\n            }\n       \
    \ }\n        counts.foldLeft(0)((acc, i) => acc + i)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph3fvr1ik.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m to n)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmph3fvr1ik.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmph3fvr1ik.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n)\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ListBuffer(1 to n)\n        val counts = mutable.ListBuffer[Long]()\n\
    \        for(i <- nums) {\n            val remainder = i % 11\n            val\
    \ remainder2 = i % 13\n            if((remainder == 7) && (remainder2 == 7)) {\n\
    \                counts += i\n            }\n        }\n        counts.sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzlhntstq.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m to n)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzlhntstq.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa4hjr1je.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpa4hjr1je.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val isFizz = (remainder == 0)\n\
    \            val isBuzz = (remainder == 6)\n            if(isFizz && !isBuzz)\
    \ {\n                counts(i) = 1\n            }\n            else if(isBuzz)\
    \ {\n                counts(i) = 1\n            }\n            else {\n      \
    \          counts(i) = counts.getOrElse(i, 0) + 1\n            }\n        }\n\
    \        counts.filter(_._2 == 7).length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvx0a16s1.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvx0a16s1.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            val remainder\
    \ = i % 11\n            val isDivisibleBy11 = remainder == 0\n            val\
    \ isDivisibleBy13 = remainder == 1\n            if(isDivisibleBy11 || isDivisibleBy13)\
    \ {\n                count += 1\n            }\n        }\n        count\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpem1di1xl.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(x => x == 7)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpucshwjuh.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpucshwjuh.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            if (remainder == 0 || remainder\
    \ == 7) {\n                result += i\n            }\n        }\n        result.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppsennkcv.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmppsennkcv.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7 && counts.contains(digit))\
    \ {\n                counts(digit) += 1\n            } else {\n              \
    \  counts.put(digit, 1)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7bpmzpzl.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7bpmzpzl.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n)\
    \ {\n            val div = i % 11\n            val fizz = i % 13\n           \
    \ if(div == 0 || fizz == 0) {\n                nums += i\n            }\n    \
    \    }\n        nums.count(_ == 7) * nums.count(_ == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5j212qbc.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5j212qbc.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 && (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7f3wfefo.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var nums = mutable.ArrayBuffer(n)\n        for(i\
    \ <- 0 until nums.length){\n            val num = nums(i)\n            if(num\
    \ % 11 == 0 || num % 13 == 0){\n                nums += num\n                count\
    \ += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpglpuow1i.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mvar\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            val isFizz = (remainder ==\
    \ 0)\n            val isBuzz = (remainder == 6)\n            val isFizzBuzz =\
    \ if (isFizz) isBuzz else isFizz\n            if (isFizzBuzz) result += i\n  \
    \      }\n        result.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptz_cptmu.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmptz_cptmu.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            if (i % 11 == 0 || i % 13 == 0) {\n                counts(i) = counts.getOrElse(i,\
    \ 0) + 1\n            }\n        }\n        counts.filter(_._2 == 7).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18943al5.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp18943al5.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer(1 to n).map(_.toInt)\n        val counts\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzz = mutable.ArrayBuffer(0\
    \ to n).map(_.toInt)\n        val fizzBuzzCount = mutable.ArrayBuffer(0 to n).map(_.toInt)\n\
    \        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n     \
    \   val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val\
    \ fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzzCounts\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzzCounts = mutable.ArrayBuffer(0\
    \ to n).map(_.toInt)\n        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n\
    \        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n     \
    \   val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val\
    \ fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzzCounts\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzzCounts = mutable.ArrayBuffer(0\
    \ to n).map(_.toInt)\n        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n\
    \        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n     \
    \   val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val\
    \ fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzzCounts\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val fizzBuzzCounts = mutable.ArrayBuffer(0\
    \ to n).map(_.toInt)\n        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n\
    \        val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n     \
    \   val fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val\
    \ fizzBuzzCounts = mutable.ArrayBuffer(0 to n).map(_.to\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwks54wsy.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwks54wsy.scala:11:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfizzBuzzCounts\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m to n).map(_.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfizzBuzzCounts is already defined as \e[33mvalue\e[0m \e[35mfizzBuzzCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwks54wsy.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCounts\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n).map(_.toInt)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfizzBuzzCounts is already defined as \e[33mvalue\e[0m \e[35mfizzBuzzCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwks54wsy.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCounts\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n).map(_.toInt)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfizzBuzzCounts is already defined as \e[33mvalue\e[0m \e[35mfizzBuzzCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwks54wsy.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCounts\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n).map(_.toInt)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfizzBuzzCounts is a"
  stdout: ''
  timestamp: 1660010201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to n)\
    \ {\n            val digit = i % 10\n            if (digit == 7 || digit == 3)\
    \ {\n                count.get(digit) match {\n                    case Some(count)\
    \ => count.get += 1\n                    case None => count.put(digit, 1)\n  \
    \              }\n            } else {\n                count.put(digit, 0)\n\
    \            }\n        }\n        count.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq4b4528b.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq4b4528b.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            if (remainder == 0 || remainder\
    \ == 7) {\n                counts(i) = counts.getOrElse(i, 0) + 1\n          \
    \  }\n        }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp0dy5k9z.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpp0dy5k9z.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            if (remainder == 0 || remainder\
    \ == 7) {\n                counts.update(i.toInt, counts.getOrElse(i, 0) + 1L)\n\
    \            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2t2hjifw.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2t2hjifw.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7) {\n             \
    \   counts.update(i.toInt, counts.getOrElse(i, 0) + 1L)\n            }\n     \
    \   }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp24o5eupm.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp24o5eupm.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            val remainder\
    \ = n % i\n            if(remainder == 0 || remainder == 11 || remainder == 13)\
    \ {\n                count += 1\n            }\n        }\n        count\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8ii36gtb.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val isFizz = (remainder == 0)\n\
    \            val isBuzz = (remainder == 6)\n            if(isFizz && isBuzz) fizzBuzz\
    \ += i\n        }\n        fizzBuzz.count(_ == 7) * fizzBuzz.count(_ == 0)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcileg_gi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpcileg_gi.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var remainder = n\n        while (remainder >\
    \ 0) {\n            val remainderAsInt = remainder % 10\n            if (remainderAsInt\
    \ == 7) {\n                count += 1\n            }\n            remainder =\
    \ remainder / 10\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvmhgy2yx.scala:19)\n\tat Problem.main(tmpvmhgy2yx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0){\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4lnzy2d5.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ == 7)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmt1vrm00.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmt1vrm00.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Long, Long]\n        val divisors =\
    \ mutable.HashSet.empty[Long]\n        divisors += 11\n        divisors += 13\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = n % divisor\n\
    \            if (remainder == 0) divisors += divisor\n            else if (remainder\
    \ == 1) divisors += divisor\n            else divisors += divisor\n        })\n\
    \        divisors.foreach(divisor => {\n            val remainder = \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpoz1buli1.scala:77:27 ---------------------------\e\
    [0m\e[0m\n\e[31m77 |\e[0m            \e[33mval\e[0m \e[36mremainder\e[0m = \n\e\
    [31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m        \
    \                   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpoz1buli1.scala:79:4 ----------------------------\e\
    [0m\e[0m\n\e[31m79 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[31m\e[31m   |\e[0m    ^^^\e[0m\n\e\
    [31m   |\e[0m    ')' expected, but 'def' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpoz1buli1.scala:91:0 ----------------------------\e[0m\e[0m\n\e[31m91\
    \ |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoz1buli1.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpoz1buli1.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashSet[Int]()\n\
    \        divisors += 11\n        divisors += 13\n        divisors.foreach(divisor\
    \ => counts(divisor) = 0)\n        val remainder = n % divisors.toList.length\n\
    \        divisors.toList.foreach(divisor => {\n            val remainder2 = n\
    \ % divisor\n            if (remainder == 0 && remainder2 == 0) {\n          \
    \      counts(divisor)++\n            }\n        })\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3t3ecktg.scala:15:33 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                counts(divisor)++\n\e[31m\e[31m   |\e\
    [0m                                 ^\e[0m\n\e[31m   |\e[0m                  \
    \               expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3t3ecktg.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3t3ecktg.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer(1 to n).map(_.toInt)\n        val counts\
    \ = mutable.ArrayBuffer(0 to n).map(_.toInt)\n        val countsMap = mutable.HashMap.empty[Int,\
    \ Int]\n        for (i <- 1 to n) {\n            if (nums(i) % 11 == 0 || nums(i)\
    \ % 13 == 0) {\n                counts(nums(i) % 11) = (counts(nums(i) % 11) +\
    \ 1)\n                countsMap += (nums(i) % 11 -> counts(nums(i) % 11))\n  \
    \          }\n        }\n        val result = countsMap.values.toList.max\n  \
    \      result\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzc_valqd.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m to n).map(_.toInt)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzc_valqd.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m to n).map(_.toInt)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzc_valqd.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mcountsMap\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzc_valqd.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for(i <- 1 to n){\n\
    \            if((i % 11) == 0 || (i % 13) == 0){\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / nums.length\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfoz3xif8.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpfoz3xif8.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e[31m\
    \  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                      Found:\
    \    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0){\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4lnzy2d5.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val div = i / 11\n            val mod = i % 11\n            if(div\
    \ == 0 || div == 1) counts(mod) += 1\n        }\n        counts.filter(_._2 ==\
    \ 7).length\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo7jzk0s3.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpo7jzk0s3.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpywz8zc2a.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpywz8zc2a.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var remainder = n\n        while(n != 0) {\n \
    \           val remainderMod11 = remainder % 11\n            val remainderMod13\
    \ = remainder % 13\n            if(remainderMod11 == 0 || remainderMod13 == 0)\
    \ {\n                count += 1\n            }\n            remainder = remainder\
    \ / 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        val divisors = mutable.HashSet[Long]()\n\
    \        divisors.add(11)\n        divisors.add(13)\n        divisors.add(7)\n\
    \        divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n \
    \       divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n  \
    \      divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n   \
    \     divisors.add(7)\n        divisors.add(5)\n        divisors.add(3)\n    \
    \    divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n     \
    \   divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n      \
    \  divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n       \
    \ divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n\
    \        divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n \
    \       divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n  \
    \      divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n   \
    \     divisors.add(7)\n        divisors.add(5)\n        divisors.add(3)\n    \
    \    divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n     \
    \   divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n      \
    \  divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n       \
    \ divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n\
    \        divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n \
    \       divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n  \
    \      divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n   \
    \     divisors.add(7)\n        divisors.add(5)\n        divisors.add(3)\n    \
    \    divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n     \
    \   divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n      \
    \  divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n       \
    \ divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n\
    \        divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n \
    \       divisors.add(9)\n        divisors.add(7)\n        divisors.add(5)\n  \
    \      divisors.add(3)\n        divisors.add(1)\n        divisors.add(9)\n   \
    \     divisors.add(7)\n        divisors.add(5)\n        divisors.add(3)\n    \
    \    divisors.add(1)\n        divisors.add(9)\n        divisors.add(7)\n     \
    \   divisors.add(5)\n        divisors.add(3)\n        divisors.add(1)\n      \
    \  divisors.add(9)\n\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvum43227.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpvum43227.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        for(i <- 1 to n){\n     \
    \       if((i % 11) == 0 || (i % 13) == 0){\n                fizzBuzz += i\n \
    \           }\n        }\n        fizzBuzz.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfl3i0o8m.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpfl3i0o8m.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val digit = i % 10\n            if(digit == 7 || digit == 13)\
    \ {\n                counts.put(digit, 1)\n            } else {\n            \
    \    counts.put(digit, counts.getOrElse(digit, 0) + 1)\n            }\n      \
    \  }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpol0gx0as.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpol0gx0as.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporvih_wl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmporvih_wl.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if(i % 11 == 0\
    \ || i % 13 == 0) {\n                count += 1\n            }\n        }\n  \
    \      count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzt8_uzns.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for(i <- 1 to n) nums\
    \ += i\n        val count = nums.count(i => i % 11 == 0 || i % 13 == 0)\n    \
    \    count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuk6eqg35.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpuk6eqg35.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) nums += i\n\e\
    [31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m               \
    \       Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var remainder = n\n        while (remainder >\
    \ 0) {\n            if (remainder % 11 == 0 || remainder % 13 == 0) {\n      \
    \          count += 1\n            }\n            remainder = remainder / 10\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxrhmjfhq.scala:18)\n\tat Problem.main(tmpxrhmjfhq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val digit = i % 10\n            if(digit == 7) {\n          \
    \      count(digit) = count(digit) + 1\n            }\n        }\n        count.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzst9tpb0.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzst9tpb0.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n){\n\
    \            if(i % 11 == 0 || i % 13 == 0){\n                nums += i\n    \
    \        }\n        }\n        nums.count(_ % 7 == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxu2vn05f.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpxu2vn05f.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e[31m\
    \  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                      Found:\
    \    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val remainder2 = i % 13\n   \
    \         if (remainder == 7 && remainder2 == 7) {\n                counts(i)\
    \ = 1\n            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc0wd_z43.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpc0wd_z43.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val isDivisibleBy11 = remainder\
    \ == 0\n            val isDivisibleBy13 = remainder == 1\n            if(isDivisibleBy11\
    \ || isDivisibleBy13) {\n                nums += i\n            }\n        }\n\
    \        nums.count(_ == 7) * nums.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc4v920ei.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpc4v920ei.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporvih_wl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmporvih_wl.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.Map[Int, Long]()\n        for(i <- 1 to n) {\n \
    \           val div = i % 11\n            val fizz = i % 13\n            val buzz\
    \ = i % 17\n            val count = counts.getOrElse(div, 0)\n            counts\
    \ += (div -> count + 1)\n            counts += (fizz -> count + 1)\n         \
    \   counts += (buzz -> count + 1)\n        }\n        counts.filter(_._2 == 7).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgxgrmbso.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgxgrmbso.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010214
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for (i <- 1 to n)\
    \ {\n            val d = i % 11\n            val m = i % 13\n            if (d\
    \ == 7 && m == 0) {\n                counts.put(i, 1L)\n            } else {\n\
    \                counts.put(i, 0L)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplx5ub_co.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplx5ub_co.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        val divisors =\
    \ mutable.HashSet.empty[Int]\n        val divisorsCount = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount2 = mutable.HashMap.empty[Int, Int]\n       \
    \ val divisorsCount3 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount4\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount5 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount6 = mutable.HashMap.empty[Int, Int]\n       \
    \ val divisorsCount7 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount8\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount9 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount10 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount11 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount12\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount13 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount14 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount15 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount16\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount17 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount18 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount19 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount20\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount21 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount22 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount23 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount24\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount25 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount26 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount27 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount28\
    \ = mutable.HashMap.\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp53u5ldi7.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp53u5ldi7.scala:6:21 -------------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                          \
    \  ^^^^^^^\e[0m\n\e[31m  |\e[0m                            Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:9:29\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount2\e[0m = mutable.HashMap.empty[\e[35mInt\e[0m, \e[35mInt\e[0m]\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                         \
    \    ^^"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val remainder2 = i % 13\n   \
    \         val count = if (remainder == 0 || remainder == 7 || remainder2 == 0\
    \ || remainder2 == 7) 1 else 0\n            counts.put(i, count)\n        }\n\
    \        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwqlxf_a_.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwqlxf_a_.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n)\
    \ nums += i\n        val numsDivisibleBy11Or13 = nums.filter(i => i % 11 == 0\
    \ || i % 13 == 0)\n        val numsDivisibleBy7And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11Or13.filter(i\
    \ => i % 7 == 0)\n        val numsDivisibleBy7And13And11 = numsDivisibleBy11\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppbymfvpj.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnumsDivisibleBy7And13And11\e\
    [0m = numsDivisibleBy11Or13.filter(\e[36mi\e[0m => i % \e[31m7\e[0m == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumsDivisibleBy7And13And11 is already defined as \e[33mvalue\e\
    [0m \e[35mnumsDivisibleBy7And13And11\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppbymfvpj.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mnumsDivisibleBy7And13And11\e\
    [0m = numsDivisibleBy11Or13.filter(\e[36mi\e[0m => i % \e[31m7\e[0m == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumsDivisibleBy7And13And11 is already defined as \e[33mvalue\e\
    [0m \e[35mnumsDivisibleBy7And13And11\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppbymfvpj.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnumsDivisibleBy7And13And11\e\
    [0m = numsDivisibleBy11Or13.filter(\e[36mi\e[0m => i % \e[31m7\e[0m == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumsDivisibleBy7And13And11 is already defined as \e[33mvalue\e\
    [0m \e[35mnumsDivisibleBy7And13And11\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppbymfvpj.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mnumsDivisibleBy7And13And11\e\
    [0m = numsDivisibleBy11Or13.filter(\e[36mi\e[0m => i % \e[31m7\e[0m == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1660010216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount2 = mutable.HashMap[Int, Int]()\n        val divisorsCount3 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount4 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount5 = mutable.HashMap[Int, Int]()\n        val divisorsCount6 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount7 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount8 = mutable.HashMap[Int, Int]()\n        val divisorsCount9 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount10 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount11 = mutable.HashMap[Int, Int]()\n        val divisorsCount12 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount13 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount14 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount15 = mutable.HashMap[Int, Int]()\n        val divisorsCount16 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount17 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount18 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount19 = mutable.HashMap[Int, Int]()\n        val divisorsCount20 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount21 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount22 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount23 = mutable.HashMap[Int, Int]()\n        val divisorsCount24 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount25 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount26 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount27 = mutable.HashMap[Int, Int]()\n        val divisorsCount28 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount29 = mutable.HashMap[Int,\
    \ Int]()\n        val divisors\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpee24j0cy.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m              \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpee24j0cy.scala:8:28 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                        \
    \     ^^^^^^^\e[0m\n\e[31m  |\e[0m                             Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:10:29\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount3\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val isFizz = (remainder == 0)\n\
    \            val isBuzz = (remainder == 6)\n            val isFizzBuzz = isFizz\
    \ && isBuzz\n            if(isFizzBuzz) {\n                counts(i) = counts.getOrElse(i,\
    \ 0) + 1\n            }\n        }\n        counts.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprll452s0.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprll452s0.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = 0\n        var lastNumber = 0\n\
    \        var lastFizz = 0\n        var lastBuzz = 0\n        var lastFizzBuzz\
    \ = 0\n        var lastFizzBuzzBuzz = 0\n        var lastFizzBuzzBuzzBuzz = 0\n\
    \        var lastFizzBuzzBuzzBuzzBuzz = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzz\
    \ = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\
    \ = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\
    \ = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var\
    \ lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\
    \ = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n    \
    \    var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var\
    \ lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\
    \ = 0\n        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n\
    \        var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n  \
    \      var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n    \
    \    var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n      \
    \  var lastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz = 0\n        var\
    \ lastFizzBuzzBuzzBuzzBuzzBu\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n \
    \   assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4mxitzl3.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4mxitzl3.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzz is already defined as \e[33mvariable\e\
    [0m \e[35mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4mxitzl3.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e[0m = \e[31m0\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz is already\
    \ defined as \e[33mvariable\e[0m \e[35mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4mxitzl3.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz is already\
    \ defined as \e[33mvariable\e[0m \e[35mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4mxitzl3.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mvar\e[0m \e[36mlastFizzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzzBuzz\e\
    [0m = \e"
  stdout: ''
  timestamp: 1660010217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            val isFizz = (remainder\
    \ == 0)\n            val isBuzz = (remainder == 6)\n            if (isFizz &&\
    \ isBuzz) result += i\n        }\n        result.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpubjcvipi.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpubjcvipi.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ % 7 == 0)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp29h8u3n9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp29h8u3n9.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for(i <- 1 to n) {\n\
    \            if(i % 11 == 0 || i % 13 == 0) {\n                nums += i\n   \
    \         }\n        }\n        nums.count(7)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5mzzdyj.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpw5mzzdyj.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n){\n\
    \            val remainder = i % 11\n            val isFizz = (remainder == 0)\n\
    \            val isBuzz = (remainder == 6)\n            val isFizzBuzz = isFizz\
    \ && isBuzz\n            if(isFizzBuzz){\n                counts(i) = 1\n    \
    \        }\n        }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0c6_jpcx.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0c6_jpcx.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount2 = mutable.HashMap[Int, Int]()\n        val divisorsCount3 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount4 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount5 = mutable.HashMap[Int, Int]()\n        val divisorsCount6 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount7 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount8 = mutable.HashMap[Int, Int]()\n        val divisorsCount9 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount10 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount11 = mutable.HashMap[Int, Int]()\n        val divisorsCount12 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount13 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount14 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount15 = mutable.HashMap[Int, Int]()\n        val divisorsCount16 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount17 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount18 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount19 = mutable.HashMap[Int, Int]()\n        val divisorsCount20 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount21 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount22 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount23 = mutable.HashMap[Int, Int]()\n        val divisorsCount24 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount25 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount26 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount27 = mutable.HashMap[Int, Int]()\n        val divisorsCount28 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount29 = mutable.HashMap[Int,\
    \ Int]()\n        val divisors\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpee24j0cy.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m              \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpee24j0cy.scala:8:28 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                        \
    \     ^^^^^^^\e[0m\n\e[31m  |\e[0m                             Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpee24j0cy.scala:10:29\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount3\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        for(i <- 1 to n) {\n    \
    \        if((i % 11) == 0 && (i % 13) == 0) {\n                fizzBuzz += i\n\
    \            }\n        }\n        fizzBuzz.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl7lcxyxg.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpl7lcxyxg.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.HashSet[Long]()\n        val fizzBuzzSet = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet2 = mutable.HashSet[Long]()\n        val fizzBuzzSet3\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet4 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet5 = mutable.HashSet[Long]()\n        val fizzBuzzSet6\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet7 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet8 = mutable.HashSet[Long]()\n        val fizzBuzzSet9\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet10 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet11 = mutable.HashSet[Long]()\n        val fizzBuzzSet12\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet13 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet14 = mutable.HashSet[Long]()\n        val fizzBuzzSet15\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet16 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet17 = mutable.HashSet[Long]()\n        val fizzBuzzSet18\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet19 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet20 = mutable.HashSet[Long]()\n        val fizzBuzzSet21\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet22 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet23 = mutable.HashSet[Long]()\n        val fizzBuzzSet24\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet25 = mutable.HashSet[Long]()\n\
    \        val fizzBuzzSet26 = mutable.HashSet[Long]()\n        val fizzBuzzSet27\
    \ = mutable.HashSet[Long]()\n        val fizzBuzzSet28 = mutable.HashSet[Long]()\n\
    \        val fizz\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiz24f73_.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiz24f73_.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzz\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiz24f73_.scala:7:26\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzzSet\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                          ^^^^^^^\e[0m\n\e[31m  |\e[0m                      \
    \    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiz24f73_.scala:8:27\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzzSet2\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e\
    [0m                           ^^^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpiz24f73_.scala:9:27 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.HashSet[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpiz24f73_.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e"
  stdout: ''
  timestamp: 1660010219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7) {\n             \
    \   counts.update(i.toInt, counts.getOrElse(i, 0) + 1L)\n            }\n     \
    \   }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp24o5eupm.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp24o5eupm.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Int]()\n        val divisors = mutable.Set[Int]()\n\
    \        val divisorsCount = mutable.Set[Int]()\n        val divisorsCount2 =\
    \ mutable.Set[Int]()\n        val divisorsCount3 = mutable.Set[Int]()\n      \
    \  val divisorsCount4 = mutable.Set[Int]()\n        val divisorsCount5 = mutable.Set[Int]()\n\
    \        val divisorsCount6 = mutable.Set[Int]()\n        val divisorsCount7 =\
    \ mutable.Set[Int]()\n        val divisorsCount8 = mutable.Set[Int]()\n      \
    \  val divisorsCount9 = mutable.Set[Int]()\n        val divisorsCount10 = mutable.Set[Int]()\n\
    \        val divisorsCount11 = mutable.Set[Int]()\n        val divisorsCount12\
    \ = mutable.Set[Int]()\n        val divisorsCount13 = mutable.Set[Int]()\n   \
    \     val divisorsCount14 = mutable.Set[Int]()\n        val divisorsCount15 =\
    \ mutable.Set[Int]()\n        val divisorsCount16 = mutable.Set[Int]()\n     \
    \   val divisorsCount17 = mutable.Set[Int]()\n        val divisorsCount18 = mutable.Set[Int]()\n\
    \        val divisorsCount19 = mutable.Set[Int]()\n        val divisorsCount20\
    \ = mutable.Set[Int]()\n        val divisorsCount21 = mutable.Set[Int]()\n   \
    \     val divisorsCount22 = mutable.Set[Int]()\n        val divisorsCount23 =\
    \ mutable.Set[Int]()\n        val divisorsCount24 = mutable.Set[Int]()\n     \
    \   val divisorsCount25 = mutable.Set[Int]()\n        val divisorsCount26 = mutable.Set[Int]()\n\
    \        val divisorsCount27 = mutable.Set[Int]()\n        val divisorsCount28\
    \ = mutable.Set[Int]()\n        val divisorsCount29 = mutable.Set[Int]()\n   \
    \     val divisorsCount30 = mutable.Set[Int]()\n        val divisorsCount31 =\
    \ mutable.Set[Int]()\n        val divisorsCount32 = mutable.Set[Int]()\n     \
    \   val divisorsCount33 = mutable.Set[Int]()\n        val divisor\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphe04hkp_.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphe04hkp_.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzz\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m      \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphe04hkp_.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m      \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphe04hkp_.scala:8:28\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                           ^^^^^^^\e[0m\n\e[31m  |\e[0m                     \
    \       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmphe04hkp_.scala:9:29 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphe04hkp_.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m l"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ % 7 == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxq4jvi_j.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpxq4jvi_j.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.HashSet[Long]()\n        val divisors = mutable.HashSet[Long]()\n\
    \        for(i <- 1 to n){\n            if((i % 11) == 0 || (i % 13) == 0){\n\
    \                fizzBuzz += i\n            }\n            if((i % 11) != 0 &&\
    \ (i % 13) != 0){\n                divisors += i\n            }\n        }\n \
    \       divisors.toSet.count(_ == 7)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjlw0zgqp.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpjlw0zgqp.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjlw0zgqp.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if(i % 11 == 0\
    \ || i % 13 == 0) {\n                count += 1\n            }\n        }\n  \
    \      count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzt8_uzns.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporvih_wl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmporvih_wl.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            if (remainder == 0 ||\
    \ remainder == 7) {\n                counts.update(i.toInt, counts.getOrElse(i,\
    \ 0) + 1L)\n            }\n        }\n        counts.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpchzx4he6.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpchzx4he6.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ % 7 == 0)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp29h8u3n9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp29h8u3n9.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = 0\n        for(i <- 1 to n) {\n\
    \            val digit = i % 10\n            if(digit == 7 && lastDigit != 7)\
    \ {\n                count += 1\n            }\n            lastDigit = digit\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6b57nhx5.scala:8:22\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7 || digit == 3) {\n\
    \                counts.put(digit, 1)\n            } else {\n                counts.put(digit,\
    \ counts.getOrElse(digit, 0) + 1)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph_86rtk7.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph_86rtk7.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val divideBy11 = i % 13\n   \
    \         if (remainder == 7 && divideBy11 != 0) {\n                counts.update(i.toInt,\
    \ counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpufg7qm63.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpufg7qm63.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ % 7 == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxq4jvi_j.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpxq4jvi_j.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            if (remainder == 0 ||\
    \ remainder == 7) {\n                counts.update(i.toInt, counts.getOrElse(i,\
    \ 0) + 1L)\n            }\n        }\n        counts.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpchzx4he6.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpchzx4he6.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(7)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp140wj9r2.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp140wj9r2.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap[Int, Long]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            if (remainder == 0 || remainder\
    \ == 7) {\n                val count = count.getOrElse(i, 0) + 1\n           \
    \     count.put(i, count)\n            }\n        }\n        count.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfi796pi6.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpfi796pi6.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ListBuffer(1 to n).map(_.toString)\n        val numsStr\
    \ = nums.map(_.mkString(\"\"))\n        val numsStrLen = numsStr.length\n    \
    \    val numsStrLen2 = numsStrLen / 2\n        val numsStrLen3 = numsStrLen /\
    \ 3\n        val numsStrLen4 = numsStrLen / 4\n        val numsStrLen5 = numsStrLen\
    \ / 5\n        val numsStrLen6 = numsStrLen / 6\n        val numsStrLen7 = numsStrLen\
    \ / 7\n        val numsStrLen8 = numsStrLen / 8\n        val numsStrLen9 = numsStrLen\
    \ / 9\n        val numsStrLen10 = numsStrLen / 10\n        val numsStrLen11 =\
    \ numsStrLen / 11\n        val numsStrLen12 = numsStrLen / 12\n        val numsStrLen13\
    \ = numsStrLen / 13\n        val numsStrLen14 = numsStrLen / 14\n        val numsStrLen15\
    \ = numsStrLen / 15\n        val numsStrLen16 = numsStrLen / 16\n        val numsStrLen17\
    \ = numsStrLen / 17\n        val numsStrLen18 = numsStrLen / 18\n        val numsStrLen19\
    \ = numsStrLen / 19\n        val numsStrLen20 = numsStrLen / 20\n        val numsStrLen21\
    \ = numsStrLen / 21\n        val numsStrLen22 = numsStrLen / 22\n        val numsStrLen23\
    \ = numsStrLen / 23\n        val numsStrLen24 = numsStrLen / 24\n        val numsStrLen25\
    \ = numsStrLen / 25\n        val numsStrLen26 = numsStrLen / 26\n        val numsStrLen27\
    \ = numsStrLen / 27\n        val numsStrLen28 = numsStrLen / 28\n        val numsStrLen29\
    \ = numsStrLen / 29\n        val numsStrLen30 = numsStrLen / 30\n        val numsStrLen31\
    \ = numsStrLen / 31\n        val numsStrLen32 = numsStrLen / 32\n        val numsStrLen33\
    \ = numsStrLen / 33\n        val \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkpnaiaqo.scala:41:11 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpnaiaqo.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m to n).map(_.toString)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkpnaiaqo.scala:42:5 ---------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0){\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4lnzy2d5.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzSet = mutable.Set[Long]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Long]()\n        val fizzBuzzSet3 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Long]()\n        val fizzBuzzSet5 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Long]()\n        val fizzBuzzSet7 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Long]()\n        val fizzBuzzSet9 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Long]()\n        val fizzBuzzSet11 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet12 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet13 = mutable.Set[Long]()\n        val fizzBuzzSet14 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet15 = mutable.Set[Long]()\n        val fizzBuzzSet16 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet17 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet18 = mutable.Set[Long]()\n        val fizzBuzzSet19 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Long]()\n        val fizzBuzzSet21 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet22 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet23 = mutable.Set[Long]()\n        val fizzBuzzSet24 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet25 = mutable.Set[Long]()\n        val fizzBuzzSet26 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet27 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet28 = mutable.Set[Long]()\n        val fizzBuzzSet29 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Long]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val divideBy11 = i % 13\n   \
    \         if(remainder == 7 && divideBy11 != 0) {\n                counts(divideBy11)\
    \ += 1\n            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo01owvkq.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpo01owvkq.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            val remainder2 = i % 13\n\
    \            val count = counts.get(remainder)\n            counts += (remainder\
    \ -> count match {\n                case None => 1\n                case Some(count)\
    \ => count + 1\n            })\n            val count2 = counts.get(remainder2)\n\
    \            counts += (remainder2 -> count2 match {\n                case None\
    \ => 1\n                case Some(count2) => count2 + 1\n            })\n    \
    \    }\n        counts.values.sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ptdl7li.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0ptdl7li.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val remainder2 = i % 13\n   \
    \         if(remainder == 7 && remainder2 == 7) {\n                counts(i) =\
    \ counts.getOrElse(i, 0) + 1\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphgyo94uv.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphgyo94uv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010226
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            val remainder\
    \ = n % i\n            if(remainder == 0 || remainder == 11 || remainder == 13)\
    \ {\n                count += 1\n            }\n        }\n        count\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8ii36gtb.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashSet[Int]()\n\
    \        divisors += 11\n        divisors += 13\n        divisors.foreach(divisor\
    \ => {\n            val divisorCount = math.floor(n/divisor)\n            counts\
    \ += divisor -> divisorCount\n            n -= divisorCount * divisor\n      \
    \  })\n        counts.filter(_._2 == 7).length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpta7zc5ji.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpta7zc5ji.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Long, Int]\n        for(i <- 1 to\
    \ n) {\n            val d = i % 11\n            val m = i % 13\n            if(d\
    \ != 0 && m != 0) {\n                counts(d) = counts(d) + 1\n            }\n\
    \        }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpektctfvz.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpektctfvz.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010226
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        var lastDigit = 0\n        var lastDigitCount\
    \ = 0\n        var lastDigitCount2 = 0\n        var lastDigitCount3 = 0\n    \
    \    var lastDigitCount4 = 0\n        var lastDigitCount5 = 0\n        var lastDigitCount6\
    \ = 0\n        var lastDigitCount7 = 0\n        var lastDigitCount8 = 0\n    \
    \    var lastDigitCount9 = 0\n        var lastDigitCount10 = 0\n        var lastDigitCount11\
    \ = 0\n        var lastDigitCount12 = 0\n        var lastDigitCount13 = 0\n  \
    \      var lastDigitCount14 = 0\n        var lastDigitCount15 = 0\n        var\
    \ lastDigitCount16 = 0\n        var lastDigitCount17 = 0\n        var lastDigitCount18\
    \ = 0\n        var lastDigitCount19 = 0\n        var lastDigitCount20 = 0\n  \
    \      var lastDigitCount21 = 0\n        var lastDigitCount22 = 0\n        var\
    \ lastDigitCount23 = 0\n        var lastDigitCount24 = 0\n        var lastDigitCount25\
    \ = 0\n        var lastDigitCount26 = 0\n        var lastDigitCount27 = 0\n  \
    \      var lastDigitCount28 = 0\n        var lastDigitCount29 = 0\n        var\
    \ lastDigitCount30 = 0\n        var lastDigitCount31 = 0\n        var lastDigitCount32\
    \ = 0\n        var lastDigitCount33 = 0\n        var lastDigitCount34 = 0\n  \
    \      var lastDigitCount35 = 0\n        var lastDigitCount36 = 0\n        var\
    \ lastDigitCount37 = 0\n        var lastDigitCount38 = 0\n        var lastDigitCount39\
    \ = 0\n        var lastDigitCount40 = 0\n        var lastDigitCount41 = 0\n  \
    \      var lastDigitCount42 = 0\n        var lastDigitCount43 = 0\n        var\
    \ lastDigitCount44 = 0\n        var lastDigitCount45 = 0\n        var lastDigitCount46\
    \ = 0\n        var lastDigitCount47 = 0\n        var lastDigitCount48 = 0\n  \
    \      var lastDigitCount49 = 0\n        var lastDigitCount50 = 0\n        var\
    \ lastDigitCount51 = 0\n        var lastDigitCount52 = 0\n        var lastDigitCount53\
    \ = 0\n        var lastDigitCount54 = 0\n        var lastDigitCount55 = 0\n  \
    \      var lastDigitCount56 = 0\n        var lastDigitCount57 = 0\n        var\
    \ lastDigitCount58 = 0\n        var lastDigitCount59 = 0\n        var lastDigitCount60\
    \ = 0\n        var lastDigitCount61 = 0\n        var lastDigitCount62 = 0\n  \
    \      var lastDigitCount63 = 0\n        var lastDigitCount64 = 0\n        var\
    \ lastDigitCount65 = 0\n        var lastDigitCount66 = 0\n        var lastDigitCount67\
    \ = 0\n        var lastDigitCount68 = 0\n        var lastDigitCount69 = 0\n  \
    \      var lastDigitCount70 = 0\n        var lastDigitCount71 = 0\n        var\
    \ lastDigitCount72 = 0\n        var \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpvg181cre.scala:80:11 ---------------------------\e\
    [0m\e[0m\n\e[31m80 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvg181cre.scala:81:5 ---------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0){\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4lnzy2d5.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzCount = mutable.Set[Long]()\n\
    \        val fizzBuzzCount2 = mutable.Set[Long]()\n        val fizzBuzzCount3\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount4 = mutable.Set[Long]()\n  \
    \      val fizzBuzzCount5 = mutable.Set[Long]()\n        val fizzBuzzCount6 =\
    \ mutable.Set[Long]()\n        val fizzBuzzCount7 = mutable.Set[Long]()\n    \
    \    val fizzBuzzCount8 = mutable.Set[Long]()\n        val fizzBuzzCount9 = mutable.Set[Long]()\n\
    \        val fizzBuzzCount10 = mutable.Set[Long]()\n        val fizzBuzzCount11\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount12 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount13 = mutable.Set[Long]()\n        val fizzBuzzCount14\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount15 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount16 = mutable.Set[Long]()\n        val fizzBuzzCount17\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount18 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount19 = mutable.Set[Long]()\n        val fizzBuzzCount20\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount21 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount22 = mutable.Set[Long]()\n        val fizzBuzzCount23\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount24 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount25 = mutable.Set[Long]()\n        val fizzBuzzCount26\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount27 = mutable.Set[Long]()\n \
    \       val fizzBuzzCount28 = mutable.Set[Long]()\n        val fizzBuzzCount29\
    \ = mutable.Set[Long]()\n        val fizzBuzzCount30 = mutable.Set[Long]()\n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:7:28 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:8:29 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkxnu2_h7.scala:11:29 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for(i <- 1 to n) {\n\
    \            if((i % 11) == 0 || (i % 13) == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ % 7 == 0)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdicvs7gv.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdicvs7gv.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010227
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ == 7) \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpshql2btf.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpshql2btf.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap.empty[Int, Int]\n        for(i <- 1 to n)\
    \ {\n            val remainder = i % 11\n            val isFizz = (remainder ==\
    \ 0)\n            val isBuzz = (remainder == 6)\n            if(isFizz && !isBuzz)\
    \ {\n                count(i) = 1\n            }\n            else if(isBuzz)\
    \ {\n                count(i) = 1\n            }\n            else {\n       \
    \         count(i) = count(i) + 1\n            }\n        }\n        count.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjwhjos8h.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjwhjos8h.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for(i <- 1 to n) {\n\
    \            val digit = i % 10\n            if(digit == 7) {\n              \
    \  val count = counts.getOrElse(digit, 0) + 1\n                counts.put(digit,\
    \ count)\n            }\n        }\n        counts.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphizlia05.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphizlia05.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ i\n            }\n        }\n        fizzBuzz.count(_ % 7 == 0)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp29h8u3n9.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp29h8u3n9.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n){\n            if((i % 11) ==\
    \ 0 && (i % 13) == 0){\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpaqfppn2l.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val fizz = i % 13\n         \
    \   if (fizz == 0 || remainder == 7) {\n                count(i) = 1\n       \
    \     } else if (fizz != 0 && remainder != 7) {\n                count(i) = count(i)\
    \ + 1\n            }\n        }\n        count.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl17ramgw.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpl17ramgw.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        val divisors =\
    \ mutable.HashSet.empty[Int]\n        val divisorsCount = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount2 = mutable.HashMap.empty[Int, Int]\n       \
    \ val divisorsCount3 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount4\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount5 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount6 = mutable.HashMap.empty[Int, Int]\n       \
    \ val divisorsCount7 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount8\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount9 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount10 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount11 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount12\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount13 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount14 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount15 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount16\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount17 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount18 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount19 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount20\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount21 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount22 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount23 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount24\
    \ = mutable.HashMap.empty[Int, Int]\n        val divisorsCount25 = mutable.HashMap.empty[Int,\
    \ Int]\n        val divisorsCount26 = mutable.HashMap.empty[Int, Int]\n      \
    \  val divisorsCount27 = mutable.HashMap.empty[Int, Int]\n        val divisorsCount28\
    \ = mutable.HashMap.\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp53u5ldi7.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp53u5ldi7.scala:6:21 -------------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                          \
    \  ^^^^^^^\e[0m\n\e[31m  |\e[0m                            Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:9:29\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount2\e[0m = mutable.HashMap.empty[\e[35mInt\e[0m, \e[35mInt\e[0m]\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp53u5ldi7.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                         \
    \    ^^"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7) {\n             \
    \   counts.put(i, counts.getOrElse(i, 0) + 1L)\n            }\n        }\n   \
    \     counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg67et1n2.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpg67et1n2.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.ListBuffer[Long]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val remainder2 = i % 13\n   \
    \         if(remainder == 7 && remainder2 == 7) {\n                result += i\n\
    \            }\n        }\n        result.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphbddoukq.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphbddoukq.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(_ == 7) / n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporvih_wl.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmporvih_wl.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 || (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptkeib5aw.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[String]()\n        val fizzBuzzCount\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount2 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount3 = mutable.ListBuffer[String]()\n        val fizzBuzzCount4\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount5 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount6 = mutable.ListBuffer[String]()\n        val fizzBuzzCount7\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount8 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount9 = mutable.ListBuffer[String]()\n        val fizzBuzzCount10\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount11 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount12 = mutable.ListBuffer[String]()\n        val fizzBuzzCount13\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount14 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount15 = mutable.ListBuffer[String]()\n        val fizzBuzzCount16\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount17 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount18 = mutable.ListBuffer[String]()\n        val fizzBuzzCount19\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount20 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount21 = mutable.ListBuffer[String]()\n        val fizzBuzzCount22\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount23 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount24 = mutable.ListBuffer[String]()\n        val fizzBuzzCount25\
    \ = mutable.ListBuffer[String]()\n        val fizzBuzzCount26 = mutable.ListBuffer[String]()\n\
    \        val fizzBuzzCount27 = mutable.ListBuffer[String]()\n        val fizzBuzzCount28\
    \ = mutable.ListBuffer[String]()\n        val fizzBu\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwff26w0r.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwff26w0r.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzz\e[0m = mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m  |\e\
    [0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwff26w0r.scala:7:28\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzzCount\e[0m = mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m\
    \  |\e[0m                            ^^^^^^^\e[0m\n\e[31m  |\e[0m            \
    \                Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwff26w0r.scala:8:29 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mfizzBuzzCount2\e[0m = mutable.ListBuffer[\e[35mString\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwff26w0r.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount3\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwff26w0r.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzCount4\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m         "
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            val divisor = i % 13\n\
    \            if (remainder == 7 && divisor == 11 || remainder == 7 && divisor\
    \ == 13) {\n                counts(divisor) += 1\n            }\n        }\n \
    \       counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7zrv69dx.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7zrv69dx.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Int]()\n        for(i <- 1 to n) {\n     \
    \       if((i %% 11) == 0 || i %% 13 == 0) {\n                fizzBuzz += i\n\
    \            }\n        }\n        fizzBuzz.count(7)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9w7fevcg.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9w7fevcg.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9w7fevcg.scala:8:18\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m            \e[33mif\e[0m((i\
    \ %% \e[31m11\e[0m) == \e[31m0\e[0m || i %% \e[31m13\e[0m == \e[31m0\e[0m) {\n\
    \e[31m\e[31m  |\e[0m                ^^^^\e[0m\n\e[31m  |\e[0m                value\
    \ %% is not a member of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1660010233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val digit = i % 10\n            if(digit == 7) {\n              \
    \  counts.update(i.toInt, counts.getOrElse(i, 0) + 1L)\n            }\n      \
    \  }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8bx2s_e.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpw8bx2s_e.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Int, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            val remainder2 = i % 13\n\
    \            if (remainder == 7 && remainder2 == 7) {\n                counts.update(i.toInt,\
    \ counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzc2fuyxh.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzc2fuyxh.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Long]()\n        for (i <- 1 to n)\
    \ {\n            val digit = i % 10\n            if (digit == 7) {\n         \
    \       counts.put(digit, counts.getOrElse(digit, 0L) + 1)\n            }\n  \
    \      }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6grad164.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6grad164.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            if((i % 11) ==\
    \ 0 && (i % 13) == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7f3wfefo.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7) {\n             \
    \   counts.update(i.toInt, counts.getOrElse(i, 0) + 1L)\n            }\n     \
    \   }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp24o5eupm.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp24o5eupm.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val div = i % 11\n            val fizz = i % 13\n            if(div\
    \ == 0 || fizz == 0) {\n                count.put(i, 1)\n            } else {\n\
    \                count.put(i, count.getOrElse(i, 0) + 1)\n            }\n    \
    \    }\n        count.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_pzowtwc.scala:6:20 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_pzowtwc.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val result = mutable.MutableList[Long]()\n        val divisors = mutable.MutableList[Long]()\n\
    \        val divisorsSet = mutable.Set[Long]()\n        val divisorsSet2 = mutable.Set[Long]()\n\
    \        val divisorsSet3 = mutable.Set[Long]()\n        val divisorsSet4 = mutable.Set[Long]()\n\
    \        val divisorsSet5 = mutable.Set[Long]()\n        val divisorsSet6 = mutable.Set[Long]()\n\
    \        val divisorsSet7 = mutable.Set[Long]()\n        val divisorsSet8 = mutable.Set[Long]()\n\
    \        val divisorsSet9 = mutable.Set[Long]()\n        val divisorsSet10 = mutable.Set[Long]()\n\
    \        val divisorsSet11 = mutable.Set[Long]()\n        val divisorsSet12 =\
    \ mutable.Set[Long]()\n        val divisorsSet13 = mutable.Set[Long]()\n     \
    \   val divisorsSet14 = mutable.Set[Long]()\n        val divisorsSet15 = mutable.Set[Long]()\n\
    \        val divisorsSet16 = mutable.Set[Long]()\n        val divisorsSet17 =\
    \ mutable.Set[Long]()\n        val divisorsSet18 = mutable.Set[Long]()\n     \
    \   val divisorsSet19 = mutable.Set[Long]()\n        val divisorsSet20 = mutable.Set[Long]()\n\
    \        val divisorsSet21 = mutable.Set[Long]()\n        val divisorsSet22 =\
    \ mutable.Set[Long]()\n        val divisorsSet23 = mutable.Set[Long]()\n     \
    \   val divisorsSet24 = mutable.Set[Long]()\n        val divisorsSet25 = mutable.Set[Long]()\n\
    \        val divisorsSet26 = mutable.Set[Long]()\n        val divisorsSet27 =\
    \ mutable.Set[Long]()\n        val divisorsSet28 = mutable.Set[Long]()\n     \
    \   val divisorsSet29 = mutable.Set[Long]()\n        val divisorsSet30 = mutable.Set[Long]()\n\
    \        val divisorsSet31 = mutable.Set[Long]()\n        val divisorsSet32 =\
    \ mutable.Set[Long]()\n        val divisorsSet33 = mutable.Set[Long]()\n     \
    \   val divisorsSet34\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcv2lhdhx.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcv2lhdhx.scala:6:21\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.MutableList[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcv2lhdhx.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.MutableList[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e\
    [0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcv2lhdhx.scala:8:26\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m  \
    \                        ^^^^^^^\e[0m\n\e[31m  |\e[0m                        \
    \  Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcv2lhdhx.scala:9:27\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                          ^^^^^^^\e[0m\n\e[31m  |\e[0m                      \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcv2lhdhx.scala:10:27\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsSet3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m long"
  stdout: ''
  timestamp: 1660010233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val digit = i % 10\n            if (digit == 7) {\n             \
    \   counts.update(i.toInt, counts.getOrElse(i, 0) + 1L)\n            }\n     \
    \   }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp24o5eupm.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp24o5eupm.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Int]()\n        val fizzBuzzSet = mutable.Set[Int]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Int]()\n        val fizzBuzzSet3 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Int]()\n        val fizzBuzzSet5 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Int]()\n        val fizzBuzzSet7 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Int]()\n        val fizzBuzzSet9 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Int]()\n        val fizzBuzzSet11 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet12 = mutable.Set[Int]()\n        val fizzBuzzSet13 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet14 = mutable.Set[Int]()\n        val fizzBuzzSet15 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet16 = mutable.Set[Int]()\n        val fizzBuzzSet17 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet18 = mutable.Set[Int]()\n        val fizzBuzzSet19 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Int]()\n        val fizzBuzzSet21 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet22 = mutable.Set[Int]()\n        val fizzBuzzSet23 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet24 = mutable.Set[Int]()\n        val fizzBuzzSet25 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet26 = mutable.Set[Int]()\n        val fizzBuzzSet27 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet28 = mutable.Set[Int]()\n        val fizzBuzzSet29 = mutable.Set[Int]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Int]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzmjqc_o7.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzmjqc_o7.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzmjqc_o7.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzmjqc_o7.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzmjqc_o7.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpzmjqc_o7.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36m"
  stdout: ''
  timestamp: 1660010233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val count = mutable.HashMap[Int, Int]()\n        val divisors = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount2 = mutable.HashMap[Int, Int]()\n        val divisorsCount3 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount4 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount5 = mutable.HashMap[Int, Int]()\n        val divisorsCount6 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount7 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount8 = mutable.HashMap[Int, Int]()\n        val divisorsCount9 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount10 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount11 = mutable.HashMap[Int, Int]()\n        val divisorsCount12 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount13 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount14 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount15 = mutable.HashMap[Int, Int]()\n        val divisorsCount16 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount17 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount18 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount19 = mutable.HashMap[Int, Int]()\n        val divisorsCount20 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount21 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount22 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount23 = mutable.HashMap[Int, Int]()\n        val divisorsCount24 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount25 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount26 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount27 = mutable.HashMap[Int, Int]()\n        val divisorsCount28 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount29 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmply3a7wrs.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply3a7wrs.scala:6:20\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m\
    \  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply3a7wrs.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m              \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmply3a7wrs.scala:8:28 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap[\e[35mInt\e\
    [0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply3a7wrs.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                        \
    \     ^^^^^^^\e[0m\n\e[31m  |\e[0m                             Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply3a7wrs.scala:10:29\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount3\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for(i <- 1 to n) {\n\
    \            val remainder = i % 11\n            if(remainder == 0 || remainder\
    \ == 7) {\n                val count = counts.getOrElse(i, 0)\n              \
    \  counts(i) = count + 1\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnt4ys8y_.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnt4ys8y_.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[String]()\n        for (i <- 1 to n)\
    \ {\n            val str = i.toString\n            if (str.contains(\"7\") &&\
    \ str.contains(\"3\") && str.contains(\"5\") && str.contains(\"3\") && str.contains(\"\
    7\")) {\n                fizzBuzz += str\n            }\n        }\n        fizzBuzz.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpht58epqa.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpht58epqa.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        val fizzBuzzSet = mutable.Set[Long]()\n\
    \        val fizzBuzzSet2 = mutable.Set[Long]()\n        val fizzBuzzSet3 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet4 = mutable.Set[Long]()\n        val fizzBuzzSet5 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet6 = mutable.Set[Long]()\n        val fizzBuzzSet7 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet8 = mutable.Set[Long]()\n        val fizzBuzzSet9 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet10 = mutable.Set[Long]()\n        val fizzBuzzSet11 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet12 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet13 = mutable.Set[Long]()\n        val fizzBuzzSet14 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet15 = mutable.Set[Long]()\n        val fizzBuzzSet16 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet17 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet18 = mutable.Set[Long]()\n        val fizzBuzzSet19 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet20 = mutable.Set[Long]()\n        val fizzBuzzSet21 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet22 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet23 = mutable.Set[Long]()\n        val fizzBuzzSet24 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet25 = mutable.Set[Long]()\n        val fizzBuzzSet26 =\
    \ mutable.Set[Long]()\n        val fizzBuzzSet27 = mutable.Set[Long]()\n     \
    \   val fizzBuzzSet28 = mutable.Set[Long]()\n        val fizzBuzzSet29 = mutable.Set[Long]()\n\
    \        val fizzBuzzSet30 = mutable.Set[Long]()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:7:26 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                          Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:8:27 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzzSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzom0l8k.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m "
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap[Int, Int]()\n        for (i <- 1 to n) {\n\
    \            val remainder = i % 11\n            val remainder2 = i % 13\n   \
    \         if (remainder == 7 && remainder2 == 7) {\n                counts.update(i\
    \ + 1, counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc40n23w3.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpc40n23w3.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        for(i <- 1 to n)\
    \ {\n            val d = i % 11\n            val m = i % 13\n            if(d\
    \ == 7 && m == 0) nums += i\n        }\n        nums.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvws10sv9.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpvws10sv9.scala:7:22 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[Long]()\n        val divisors = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount = mutable.ListBuffer[Long]()\n        val divisorsCount2\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount3 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount4 = mutable.ListBuffer[Long]()\n        val divisorsCount5\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount6 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount7 = mutable.ListBuffer[Long]()\n        val divisorsCount8\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount9 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount10 = mutable.ListBuffer[Long]()\n        val divisorsCount11\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount12 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount13 = mutable.ListBuffer[Long]()\n        val divisorsCount14\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount15 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount16 = mutable.ListBuffer[Long]()\n        val divisorsCount17\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount18 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount19 = mutable.ListBuffer[Long]()\n        val divisorsCount20\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount21 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount22 = mutable.ListBuffer[Long]()\n        val divisorsCount23\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount24 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount25 = mutable.ListBuffer[Long]()\n        val divisorsCount26\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount27 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount28 = mutable.ListBuffer[Long]()\n        val divisorsCount29\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount30 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount31 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:8:28 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                            Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7gdqh56.scala:11:29 ------------------------\e\
    ["
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val nums = mutable.ArrayBuffer.empty[Int]\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                nums += i\n\
    \            }\n        }\n        nums.count(7)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp140wj9r2.scala:6:19 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp140wj9r2.scala:7:23 ---------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                count += 1\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyb23cm9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.ListBuffer[String]()\n        for (i <- 1 to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                fizzBuzz +=\
    \ s\"$i\"\n            }\n        }\n        fizzBuzz.count(_ == \"7\")\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9sfpr_x1.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp9sfpr_x1.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.Set[Long]()\n        for(i <- 1 to n) {\n    \
    \        val remainder = i % 11\n            if(remainder == 0 || remainder ==\
    \ 7) {\n                fizzBuzz += i\n            }\n        }\n        fizzBuzz.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz8j_d4gi.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpz8j_d4gi.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val counts = mutable.HashMap.empty[Long, Int]\n        for (i <- 1 to\
    \ n) {\n            val remainder = i % 11\n            if (remainder == 0 ||\
    \ remainder == 7) {\n                counts.put(i, counts.getOrElse(i, 0) + 1)\n\
    \            }\n        }\n        counts.filter(_._2 == 1).length\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n \
    \   assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n \
    \   assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmoolg7lq.scala:6:21 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmoolg7lq.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            val remainder\
    \ = i % 11\n            if(remainder == 0 || remainder == 7) {\n             \
    \   count += 1\n            }\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprwg1qivy.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    def fizzBuzz(n : Long) : Long = {\n\
    \        val fizzBuzz = mutable.HashSet[Long]()\n        val divisors = mutable.HashSet[Long]()\n\
    \        val divisorsCount = mutable.HashMap[Long, Long]()\n        val divisorsCount2\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount3 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount4 = mutable.HashMap[Long, Long]()\n      \
    \  val divisorsCount5 = mutable.HashMap[Long, Long]()\n        val divisorsCount6\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount7 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount8 = mutable.HashMap[Long, Long]()\n      \
    \  val divisorsCount9 = mutable.HashMap[Long, Long]()\n        val divisorsCount10\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount11 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount12 = mutable.HashMap[Long, Long]()\n     \
    \   val divisorsCount13 = mutable.HashMap[Long, Long]()\n        val divisorsCount14\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount15 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount16 = mutable.HashMap[Long, Long]()\n     \
    \   val divisorsCount17 = mutable.HashMap[Long, Long]()\n        val divisorsCount18\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount19 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount20 = mutable.HashMap[Long, Long]()\n     \
    \   val divisorsCount21 = mutable.HashMap[Long, Long]()\n        val divisorsCount22\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount23 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount24 = mutable.HashMap[Long, Long]()\n     \
    \   val divisorsCount25 = mutable.HashMap[Long, Long]()\n        val divisorsCount26\
    \ = mutable.HashMap[Long, Long]()\n        val divisorsCount27 = mutable.HashMap[Long,\
    \ Long]()\n        val divisorsCount28 = mutable.HashMap[Long, Long]()\n     \
    \   val divisorsCount29 = mutable.HashMap[Long, Long]()\n        val divisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx7pholid.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx7pholid.scala:6:23\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzz\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx7pholid.scala:7:23\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx7pholid.scala:8:28\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount\e[0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                            ^^^^^^^\e[0m\n\e[31m  |\e[0m \
    \                           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpx7pholid.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      \
    \       ^^^^^^^\e[0m\n\e[31m  |\e[0m                             Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx7pholid.scala:10:29\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount3\e[0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \       "
  stdout: ''
  timestamp: 1660010236

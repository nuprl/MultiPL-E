name: HumanEval_49_modp
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return 2^n modulo p (be aware of numerics).\n    def modp(n : Long, p :\
  \ Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(modp((3l), (5l))\
  \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
  \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
  \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
  \ == (3l));\n    }\n\n}\n"
completions: ["        val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p\n\
    \        else r", "        val r = scala.math.pow(2, n) % p\n        if (r < 0)\
    \ r + p else r", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val r = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val ", "        val r = scala.math.mod(n,\
    \ p)\n        if (n < 0) r + p else r", "        val r = scala.math.pow(2, n)\
    \ % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if (r\
    \ == 0) r else p + r", "        val q = p + n\n        val r = q % p\n       \
    \ val s = q - r\n        r + (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s *\
    \ (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s * (s\
    \ * (s * (", "        val m = 2L\n        val r = n % p\n        if (r < m)\n\
    \            modp(r + p, p)\n        else\n            r", "        val r = scala.math.pow(2,\
    \ n)\n        val m = scala.math.mod(r, p)\n        val r = scala.math.pow(r,\
    \ m)\n        r", "        val r = scala.math.pow(2, n)\n        val q = scala.math.pow(p,\
    \ r)\n        val r = scala.math.mod(q, p)\n        r", "        val r = scala.math.pow(2,\
    \ n)\n        val s = scala.math.mod(r, p)\n        s", "        val r = scala.math.pow(2,\
    \ n)\n        val m = scala.math.mod(r, p)\n        val r = scala.math.pow(r,\
    \ m)\n        r", "        val r = n % p\n        if (r == 0) r else p + r", " \
    \       val r = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val ", "        val r = scala.util.Random.nextLong()\n\
    \        val x = scala.util.Random.nextLong()\n        val y = scala.util.Random.nextLong()\n\
    \        val z = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val t = scala.util.Random.nextLong()\n        val u = scala.util.Random.nextLong()\n\
    \        val v = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val x = scala.util.Random.nextLong()\n        val y = scala.util.Random.nextLong()\n\
    \        val z = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val t = scala.util.Random.nextLong()\n        val u = scala.util.Random.nextLong()\n\
    \        val v = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val x = scala.util.Random.nextLong()\n        val y = scala.util.Random.nextLong()\n\
    \        val z = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val t = scala.util.Random.nextLong()\n        val u = scala.util.Random.nextLong()\n\
    \        val v = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val x = scala.util.Random.nextLong()\n        val y = scala.util.Random.nextLong()\n\
    \        val z = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val t = scala.util.Random.nextLong()\n        val u = scala.util.Random.nextLong()\n\
    \        val v = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val x = scala.util.Random.nextLong()\n        val y = scala.util.Random.nextLong()\n\
    \        val z = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val t = scala.util.Random.nextLong()\n        val u = scala.util.Random.nextLong()\n\
    \        val v = scala.util.Random.nextLong()\n        val w = scala.util.Random.nextLong()\n\
    \        val x = scala.util.Random.nextLong()\n        val y = scala.util.Random.",
  "        val r = n % p\n        val q = p / r\n        val r = p % r\n        val\
    \ q = q * r\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val\
    \ q = q * q\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val\
    \ q = q * q\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val\
    \ q = q * q\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val\
    \ q = q * q\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val\
    \ q = q * q\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val\
    \ q = q * q\n        val r = r * r\n        val q = q * q\n        val r = r *\
    \ r\n        val q = q * q\n        val r = r * r\n        val q = q * q\n   \
    \     val r = r * r\n        val q = q * q\n        val r = r * r\n        val ",
  "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", " \
    \       val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p\n        else\
    \ r", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        val r = scala.math.pow(2, m)\n        r", "        val r = scala.util.Random\n\
    \        val x = r.nextInt() % p\n        val y = r.nextInt() % p\n        val\
    \ z = r.nextInt() % p\n        val w = r.nextInt() % p\n        val v = r.nextInt()\
    \ % p\n        val u = r.nextInt() % p\n        val t = r.nextInt() % p\n    \
    \    val s = r.nextInt() % p\n        val q = r.nextInt() % p\n        val r =\
    \ r.nextInt() % p\n        val q = r.nextInt() % p\n        val r = r.nextInt()\
    \ % p\n        val q = r.nextInt() % p\n        val r = r.nextInt() % p\n    \
    \    val q = r.nextInt() % p\n        val r = r.nextInt() % p\n        val q =\
    \ r.nextInt() % p\n        val r = r.nextInt() % p\n        val q = r.nextInt()\
    \ % p\n        val r = r.nextInt() % p\n        val q = r.nextInt() % p\n    \
    \    val r = r.nextInt() % p\n        val q = r.nextInt() % p\n        val r =\
    \ r.nextInt() % p\n        val q = r.nextInt() % p\n        val r = r.nextInt()\
    \ % p\n        val q = r.nextInt() % p\n        val r = r.nextInt() % p\n    \
    \    val q = r.nextInt() % p\n        val r = r.nextInt() % p\n        val q =\
    \ r.nextInt() % p\n        val r = r.nextInt() % p\n        val q = r.nextInt()\
    \ % p\n        val r = r.nextInt() % p\n        val q = r.nextInt() % p\n    \
    \    val r = r.nextInt() % p\n        val q = r.nextInt() % p\n        val r =\
    \ r.nextInt() % p\n        val q = r.nextInt() % p\n        val r = r.nextInt()\
    \ % p\n        val q = r.nextInt() % p\n        val r = r.nextInt() % p\n    \
    \    val q = r.nextInt() % p\n        val r = r.nextInt() % p\n        val q =\
    \ r.nextInt() % p\n        val r = r.nextInt() % p\n        val q = r.nextInt()\
    \ % p\n        val r = r.nextInt() % p\n        val q = r.nextInt() % p\n    \
    \    val r = r.nextInt() % p\n        val q = r.nextInt() % p\n        val r =\
    \ r.nextInt() % p\n        val q = r.nextInt() % p\n        val r = r.nextInt()\
    \ % p\n        val q = r.nextInt() % p\n        val r = r.nextInt() % p\n", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = n %\
    \ p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2, n)\n\
    \        val m = scala.math.mod(r, p)\n        if (m == 0) r else m", "      \
    \  val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "     \
    \   val r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n\
    \        val m = p / r\n        val x = r * m + p\n        x % p", "        val\
    \ r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val\
    \ r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val\
    \ r = n % p\n        if (r == 0) r else p + r", "        val m = 1L\n        val\
    \ r = n % p\n        val q = p / r\n        val r = p % r\n        val s = (r\
    \ + q) / 2\n        val t = r - s\n        val r = r + q\n        val m = m +\
    \ (s * (r + q))\n        val m = m + (t * r)\n        val m = m + (t * r)\n  \
    \      val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t\
    \ * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n\
    \        val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m +\
    \ (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n\
    \        val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m +\
    \ (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n\
    \        val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m +\
    \ (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n\
    \        val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m +\
    \ (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n\
    \        val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m +\
    \ (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n\
    \        val m = m + (t * r)\n        val m = m + (t * r)\n        val m = m +\
    \ (t * r)\n        val m = m + (t * r)\n        val m = m + (t * r)\n        val\
    \ m = m + (t * r)\n        val m = m ", "        val r = scala.math.mod(n, p)\n\
    \        r match {\n            case 0 => p\n            case _ => r\n       \
    \ }", "        val m = scala.math.BigInt(n)\n        val r = scala.math.BigInt(p)\n\
    \        val s = scala.math.BigInt(2)\n        val t = scala.math.BigInt(m)\n\
    \        val u = scala.math.BigInt(r)\n        val v = scala.math.BigInt(s)\n\
    \        val w = scala.math.BigInt(t)\n        val x = scala.math.BigInt(u + v)\n\
    \        val y = scala.math.BigInt(u - v)\n        val z = scala.math.BigInt(u\
    \ * v)\n        val a = scala.math.BigInt(u / v)\n        val b = scala.math.BigInt(u\
    \ % v)\n        val c = scala.math.BigInt(u % w)\n        val d = scala.math.BigInt(u\
    \ * w)\n        val e = scala.math.BigInt(u / w)\n        val f = scala.math.BigInt(u\
    \ % w)\n        val g = scala.math.BigInt(u / w)\n        val h = scala.math.BigInt(u\
    \ % w)\n        val i = scala.math.BigInt(u / w)\n        val j = scala.math.BigInt(u\
    \ % w)\n        val k = scala.math.BigInt(u / w)\n        val l = scala.math.BigInt(u\
    \ % w)\n        val m = scala.math.BigInt(u / w)\n        val n = scala.math.BigInt(u\
    \ % w)\n        val o = scala.math.BigInt(u / w)\n        val p = scala.math.BigInt(u\
    \ % w)\n        val q = scala.math.BigInt(u / w)\n        val r = scala.math.BigInt(u\
    \ % w)\n        val s = scala.math.BigInt(u / w)\n        val t = scala.math.BigInt(u\
    \ % w)\n        val u = scala.math.BigInt(u / w)\n        val v = scala.math.BigInt(u\
    \ % w)\n        val w = scala.math.BigInt(u / w)\n        val x = scala.math.BigInt(u\
    \ % w)\n        val y = scala.math.BigInt(u / w)\n        val z = scala.math.BigInt(u\
    \ % w)\n        val a = scala.math.BigInt(u / w)\n        val b = scala.math.BigInt(u\
    \ % w)\n        val c = scala.math.BigInt(u / w)\n        val d = scala.math.BigInt(u\
    \ % w)\n        val e = scala.math.BigInt(u / w)\n        val f = scala.math.BigInt(u\
    \ % w)\n        val g = scala.math.BigInt(u / w)\n        val h = scala.math.BigInt(u\
    \ % ", "        val m = 2L\n        val r = n % p\n        val q = p / r\n   \
    \     val r = p % r\n        val s = (r * r + m) % q\n        s % p", "      \
    \  val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "     \
    \   val r = n % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        val\
    \ m = n / p\n        val r = r * p + m\n        r", "        val m = scala.math.pow(2,\
    \ n)\n        val r = scala.math.mod(m, p)\n        r.toLong", "        val r\
    \ = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val r\
    \ = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r == 0) r else p + r", "        val r = scala.math.pow(2, n) % p\n        if\
    \ (r < 0) r + p else r", "        val r = n % p\n        val q = p + r\n     \
    \   if (q < p)\n            modp(q, p)\n        else\n            q", "      \
    \  val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r, p)\n      \
    \  if (m == 0) r else r - m", "        val m = 1L\n        val r = n % p\n   \
    \     val q = p / r\n        val r = p % r\n        val s = p * (r - q * m)\n\
    \        s + q * m", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        val r = scala.math.pow(2, m)\n        r", "        val r = n % p\n\
    \        if (r == 0) r\n        else modp(r, p + 2)", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val r = scala.math.pow(2, n)\n        val m\
    \ = scala.math.mod(r, p)\n        if (m == 0) r else m", "        val r = n %\
    \ p\n        if (p < 0 || r < 0) r + p\n        else r", "        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.Random.nextLong\n\
    \        val q = scala.util.Random.nextLong\n        val r = scala.util.", " \
    \       val r = n % p\n        if (r == 0) r else p + r", "        val r = n %\
    \ p\n        if (p < 0 || r > p) 0\n        else r + (p - (r + p) % p)", "   \
    \     val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "  \
    \      val r = n % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n)\n        val m = scala.math.mod(r, p)\n        val r = scala.math.pow(2,\
    \ m)\n        r", "        val q = p / 2\n        val r = p % 2\n        val s\
    \ = scala.math.pow(2, n)\n        val t = scala.math.pow(2, n + 1)\n        val\
    \ u = scala.math.pow(2, n - 1)\n        val v = scala.math.pow(2, n - 2)\n   \
    \     val w = scala.math.pow(2, n - 3)\n        val x = scala.math.pow(2, n -\
    \ 4)\n        val y = scala.math.pow(2, n - 5)\n        val z = scala.math.pow(2,\
    \ n - 6)\n        val a = scala.math.pow(2, n - 7)\n        val b = scala.math.pow(2,\
    \ n - 8)\n        val c = scala.math.pow(2, n - 9)\n        val d = scala.math.pow(2,\
    \ n - 10)\n        val e = scala.math.pow(2, n - 11)\n        val f = scala.math.pow(2,\
    \ n - 12)\n        val g = scala.math.pow(2, n - 13)\n        val h = scala.math.pow(2,\
    \ n - 14)\n        val i = scala.math.pow(2, n - 15)\n        val j = scala.math.pow(2,\
    \ n - 16)\n        val k = scala.math.pow(2, n - 17)\n        val l = scala.math.pow(2,\
    \ n - 18)\n        val m = scala.math.pow(2, n - 19)\n        val n = scala.math.pow(2,\
    \ n - 20)\n        val o = scala.math.pow(2, n - 21)\n        val p = scala.math.pow(2,\
    \ n - 22)\n        val q = scala.math.pow(2, n - 23)\n        val r = scala.math.pow(2,\
    \ n - 24)\n        val s = scala.math.pow(2, n - 25)\n        val t = scala.math.pow(2,\
    \ n - 26)\n        val u = scala.math.pow(2, n - 27)\n        val v = scala.math.pow(2,\
    \ n - 28)\n        val w = scala.math.pow(2, n - 29)\n        val x = scala.math.pow(2,\
    \ n - 30)\n        val y = scala.math.pow(2, n - 31)\n        val z = scala.math.pow(2,\
    \ n - 32)\n        val a = scala.math.pow(2, n - 33)\n        val b = scala.math.pow(2,\
    \ n - 34)\n        val c = scala.math.pow(2, n - 35)\n        val d = scala.math.pow(2,\
    \ n - 36)\n        val e = scala.math.pow(2, n - 37)\n        val f = scala.math.pow(2,\
    \ n - 38)\n        val g = scala.math.pow(2, n - 39)\n        val h = scala.math.pow(2,\
    \ n - 40)\n        val i = scala.math.pow(2, n - 41)\n        val j = scala.math.pow(2,\
    \ n - 42)\n", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        m + 1", "        val r = scala.math.BigInt(n).mod(scala.math.BigInt(p))\n\
    \        r.toLong", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = n % p\n        if\
    \ (r == 0) r else p + r", "        val m = n / p\n        val r = n % p\n    \
    \    val q = p * r\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n        val\
    \ r = p * (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n        val\
    \ r = p * (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n        val\
    \ r = p * (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n        val\
    \ r = p * (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n        val\
    \ r = p * (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n        val\
    \ r = p * (r + m)\n        val r = p * (r + m)\n        val r = p * (r + m)\n\
    \        val r = p * (r + m)\n        val r = p * (r + m)\n        val r = p *\
    \ (r + m)\n        val r = p * (r + m)\n        val r = p * (r", "        val\
    \ r = n % p\n        if (r == 0) r else r + p", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (n < 0) -r\n        else r", "        val r = scala.math.mod(n,\
    \ p)\n        r match {\n            case 0 => p\n            case _ => r\n  \
    \      }", "        val r = scala.math.pow(2, n) % p\n        if (n < 0) r + p\n\
    \        else r", "        val r = scala.math.BigInt(n)\n        val m = scala.math.BigInt(p)\n\
    \        val r = r.modPow(m, p)\n        r.toLong", "        val r = scala.math.BigInt(n)\n\
    \        val q = scala.math.BigInt(p)\n        val t = r.mod(q)\n        if (t\
    \ == 0) 1 else t", "        val r = scala.math.pow(2, n) % p\n        if (r <\
    \ 0) r + p else r", "        val r = scala.util.Random.nextLong()\n        val\
    \ q = scala.util.Random.nextLong()\n        val r = r * q % p\n        r % p",
  "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p\n        else\
    \ r", "        val r = n % p\n        if (r < 0) r + p else r", "        val r\
    \ = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val r\
    \ = scala.math.pow(2, n)\n        val m = scala.math.mod(r, p)\n        val r2\
    \ = scala.math.pow(r, 2)\n        val r3 = scala.math.pow(r, 3)\n        val r4\
    \ = scala.math.pow(r, 4)\n        val r5 = scala.math.pow(r, 5)\n        val r6\
    \ = scala.math.pow(r, 6)\n        val r7 = scala.math.pow(r, 7)\n        val r8\
    \ = scala.math.pow(r, 8)\n        val r9 = scala.math.pow(r, 9)\n        val r10\
    \ = scala.math.pow(r, 10)\n        val r11 = scala.math.pow(r, 11)\n        val\
    \ r12 = scala.math.pow(r, 12)\n        val r13 = scala.math.pow(r, 13)\n     \
    \   val r14 = scala.math.pow(r, 14)\n        val r15 = scala.math.pow(r, 15)\n\
    \        val r16 = scala.math.pow(r, 16)\n        val r17 = scala.math.pow(r,\
    \ 17)\n        val r18 = scala.math.pow(r, 18)\n        val r19 = scala.math.pow(r,\
    \ 19)\n        val r20 = scala.math.pow(r, 20)\n        val r21 = scala.math.pow(r,\
    \ 21)\n        val r22 = scala.math.pow(r, 22)\n        val r23 = scala.math.pow(r,\
    \ 23)\n        val r24 = scala.math.pow(r, 24)\n        val r25 = scala.math.pow(r,\
    \ 25)\n        val r26 = scala.math.pow(r, 26)\n        val r27 = scala.math.pow(r,\
    \ 27)\n        val r28 = scala.math.pow(r, 28)\n        val r29 = scala.math.pow(r,\
    \ 29)\n        val r30 = scala.math.pow(r, 30)\n        val r31 = scala.math.pow(r,\
    \ 31)\n        val r32 = scala.math.pow(r, 32)\n        val r33 = scala.math.pow(r,\
    \ 33)\n        val r34 = scala.math.pow(r, 34)\n        val r35 = scala.math.pow(r,\
    \ 35)\n        val r36 = scala.math.pow(r, 36)\n        val r37 = scala.math.pow(r,\
    \ 37)\n        val r38 = scala.math.pow(r, 38)\n        val r39 = scala.math.pow(r,\
    \ 39)\n        val r40 = scala.math.pow(r, 40)\n        val r41 = scala.math.pow(r,\
    \ 41)\n        val r42 = scala.math.pow", "        val r = scala.math.pow(2, n)\
    \ % p\n        if (r < 0) r + p else r", "        val m = math.pow(2, n)\n   \
    \     val r = math.mod(m, p)\n        if (r < 0) r + p else r", "        val r\
    \ = scala.math.pow(2, n)\n        val m = scala.math.mod(r, p)\n        m + 1",
  "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", " \
    \       val r = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n \
    \       val r = scala.math.mod(r, p)\n        val ", "        val r = scala.math.pow(2,\
    \ n)\n        val m = scala.math.mod(r, p)\n        val q = scala.math.pow(p,\
    \ m)\n        q", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = scala.util.Random\n\
    \        val q = p.toLong\n        val r = r.nextLong\n        val r = r.mod(q)\n\
    \        val r = r.pow(n)\n        val r = r.mod(q)\n        r", "        val\
    \ r = n % p\n        if (r == 0) r else p + r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (n < 0) r + p\n        else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val r = n % p\n        if (r == 0) r else p\
    \ + r", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        if (m == 0) r else m", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(p)\n        val r = r.modPow(m, p)\n      \
    \  r.toLong", "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r\
    \ + p else r", "        val r = n % p\n        if (r < 0) r + p else r", "   \
    \     val r = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n   \
    \     val r = scala.math.mod(r, p)\n        val ", "        val m = 2L\n     \
    \   val r = n % p\n        if (p < 2L) m + (r % p) else m", "        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n\
    \        val r = scala.util.Random\n        val r = scala.util.Random\n      \
    \  val r = scala.util.Random\n        val r = scala.util.Random\n        val r\
    \ = scala.util.Random\n        val r = scala.util.Random\n        val r = scala.util.Random\n",
  "        val r = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val q = scala.math.mod(r, p)\n        val m = scala.math.mod(q, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val q = scala.math.mod(r, p)\n  \
    \      val m = scala.math.mod(q, p)\n        val ", "        val r = scala.math.pow(2,\
    \ n)\n        val q = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val ", "        val r = scala.util.Random.nextInt() % p\n      \
    \  val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.util.Random.nextInt() % p\n        val q = scala.util.Random.nextInt()\
    \ % p\n        val m = scala.util.Random.nextInt() % p\n        val r = scala.util.Random.nextInt()\
    \ % p\n        val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.util.Random.nextInt() % p\n        val q = scala.util.Random.nextInt()\
    \ % p\n        val m = scala.util.Random.nextInt() % p\n        val r = scala.util.Random.nextInt()\
    \ % p\n        val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.util.Random.nextInt() % p\n        val q = scala.util.Random.nextInt()\
    \ % p\n        val m = scala.util.Random.nextInt() % p\n        val r = scala.util.Random.nextInt()\
    \ % p\n        val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.util.Random.nextInt() % p\n        val q = scala.util.Random.nextInt()\
    \ % p\n        val m = scala.util.Random.nextInt() % p\n        val r = scala.util.Random.nextInt()\
    \ % p\n        val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.util.Random.nextInt() % p\n        val q = scala.util.Random.nextInt()\
    \ % p\n        val m = scala.util.Random.nextInt() % p\n        val r = scala.util.Random.nextInt()\
    \ % p\n        val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.util.Random.nextInt() % p\n        val q = scala.util.Random.nextInt()\
    \ % p\n        val m = scala.util.Random.nextInt() % p\n        val r = scala.util.Random.nextInt()\
    \ % p\n        val q = scala.util.Random.nextInt() % p\n        val m = scala.util.Random.nextInt()\
    \ % p\n        val r = scala.", "        val r = scala.math.pow(2, n)\n      \
    \  val m = scala.math.mod(r, p)\n        val s = scala.math.signum(r)\n      \
    \  if (s == 0) m else m", "        val r = scala.math.pow(2, n) % p\n        if\
    \ (r < 0) r + p else r", "        val r = scala.math.pow(2, n) % p\n        if\
    \ (r < 0) r + p else r", "        val m = p.toLong\n        val r = n.toLong\n\
    \        val t = ((r - m) % m).toLong\n        if (t == 0) 1 else t", "      \
    \  val r = scala.math.BigInt(n)\n        val m = scala.math.BigInt(p)\n      \
    \  val q = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt)\n\
    \        val r = scala.math.BigInt(r.toInt)\n        val r = scala.math.BigInt(r.toInt",
  "        val r = n % p\n        if (r == 0) r else p + r", "        val q = p /\
    \ 2\n        val r = p % 2\n        val s = n >> r\n        val t = n & -(r+1)\n\
    \        s * (q + t) % p", "        val m = 1L\n        val r = n % p\n      \
    \  val q = p / r\n        val r = p % r\n        val s = (r * r * r * r) % p\n\
    \        val t = ((r * r * r * r * r) % p + m) % p\n        ((t * t * t * t *\
    \ t) % p + s) % p", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        if (m == 0) r else r - m", "        val r = scala.math.pow(2, n)\n\
    \        val m = scala.math.mod(r, p)\n        val s = scala.math.signum(r)\n\
    \        if (s == 0) m else m", "        val r = scala.math.pow(2, n) % p\n  \
    \      if (r < 0) r + p else r", "        val q = p / 2\n        val r = p % 2\n\
    \        val s = n % q\n        val t = n % r\n        val u = n - (s * q)\n \
    \       val v = n - (t * r)\n        val w = n - (u * r)\n        val x = n -\
    \ (v * q)\n        val y = n - (w * r)\n        val z = n - (x * q)\n        val\
    \ a = n - (y * r)\n        val b = n - (z * r)\n        val c = n - (a * q)\n\
    \        val d = n - (b * r)\n        val e = n - (c * q)\n        val f = n -\
    \ (d * r)\n        val g = n - (e * r)\n        val h = n - (f * q)\n        val\
    \ i = n - (g * r)\n        val j = n - (h * r)\n        val k = n - (i * q)\n\
    \        val l = n - (j * r)\n        val m = n - (k * q)\n        val n = n -\
    \ (l * r)\n        val o = n - (m * q)\n        val p = n - (n * r)\n        val\
    \ q = n - (o * q)\n        val r = n - (p * r)\n        val s = n - (q * r)\n\
    \        val t = n - (r * q)\n        val u = n - (s * q)\n        val v = n -\
    \ (t * r)\n        val w = n - (u * r)\n        val x = n - (v * q)\n        val\
    \ y = n - (w * r)\n        val z = n - (x * q)\n        val a = n - (y * r)\n\
    \        val b = n - (z * r)\n        val c = n - (a * q)\n        val d = n -\
    \ (b * r)\n        val e = n - (c * q)\n        val f = n - (d * r)\n        val\
    \ g = n - (e * r)\n        val h = n - (f * q)\n        val i = n - (g * r)\n\
    \        val j = n - (h * r)\n        val k = n - (i * q)\n        val l = n -\
    \ (j * r)\n        val m = n - (k * q)\n        val n = n - (l * r)\n        val\
    \ o = n - (m * q)\n        val p = n - (n * r)\n        val q = n - (o * q)\n\
    \        val r = n - (p * r)\n        val s = n - (q * r)\n        val t = n -\
    \ (r * q)\n        val u = n - (s * q)\n        val v = n - (t * r)\n        val\
    \ w = n - (u * r)\n        val x = n - (v * q)\n        val y = n - (w * r)\n",
  "        val r = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n  \
    \      val r = scala.math.mod(r, p)\n        val ", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.util.Random\n\
    \        val q = p.toLong\n        val x = r.nextInt() % q\n        val y = r.nextInt()\
    \ % q\n        val z = r.nextInt() % q\n        val w = r.nextInt() % q\n    \
    \    val v = r.nextInt() % q\n        val u = r.nextInt() % q\n        val t =\
    \ r.nextInt() % q\n        val s = r.nextInt() % q\n        val r = r.nextInt()\
    \ % q\n        val q = r.nextInt() % q\n        val p = r.nextInt() % q\n    \
    \    val q = r.nextInt() % q\n        val r = r.nextInt() % q\n        val q =\
    \ r.nextInt() % q\n        val r = r.nextInt() % q\n        val q = r.nextInt()\
    \ % q\n        val r = r.nextInt() % q\n        val q = r.nextInt() % q\n    \
    \    val r = r.nextInt() % q\n        val q = r.nextInt() % q\n        val r =\
    \ r.nextInt() % q\n        val q = r.nextInt() % q\n        val r = r.nextInt()\
    \ % q\n        val q = r.nextInt() % q\n        val r = r.nextInt() % q\n    \
    \    val q = r.nextInt() % q\n        val r = r.nextInt() % q\n        val q =\
    \ r.nextInt() % q\n        val r = r.nextInt() % q\n        val q = r.nextInt()\
    \ % q\n        val r = r.nextInt() % q\n        val q = r.nextInt() % q\n    \
    \    val r = r.nextInt() % q\n        val q = r.nextInt() % q\n        val r =\
    \ r.nextInt() % q\n        val q = r.nextInt() % q\n        val r = r.nextInt()\
    \ % q\n        val q = r.nextInt() % q\n        val r = r.nextInt() % q\n    \
    \    val q = r.nextInt() % q\n        val r = r.nextInt() % q\n        val q =\
    \ r.nextInt() % q\n        val r = r.nextInt() % q\n        val q = r.nextInt()\
    \ % q\n        val r = r.nextInt() % q\n        val q = r.nextInt() % q\n    \
    \    val r = r.nextInt() % q\n        val q = r.nextInt() % q\n        val r =\
    \ r.nextInt() % q\n        val q = r.nextInt() % q\n        val r = r.nextInt()\
    \ % q\n        val q = r.nextInt() % q\n        val r = r.nextInt() % q\n    \
    \    val q = r.nextInt() % q\n        val r = r.nextInt() % q\n        val ",
  "        val m = scala.math.BigInt(n)\n        val r = scala.math.BigInt(p)\n  \
    \      val r = scala.math.BigInt(r).mod(m)\n        r.toLong", "        val r\
    \ = scala.math.pow(2, n)\n        val q = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val r\
    \ = scala.math.mod(r, p)\n        val ", "        val r = scala.util.BigInt(n).mod(scala.util.BigInt(p)).toLong\n\
    \        if(r < 0) r + p else r", "        val r = scala.math.pow(2, n)\n    \
    \    val q = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n    \
    \    val ", "        val r = scala.math.mod(n, p)\n        val s = scala.math.abs(r)\
    \ % p\n        if (s == 0) r else r + p", "        val r = scala.math.pow(2, n)\
    \ % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2, n)\n\
    \        val m = scala.math.mod(r, p)\n        if (m == 0) r else m", "      \
    \  val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "     \
    \   val r = scala.math.mod(n, p)\n        if (n < 0) r + p else r", "        val\
    \ r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val\
    \ r = n % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p\n        else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = n % p\n        if\
    \ (r == 0) r else p + r", "        val r = scala.math.pow(2, n)\n        val m\
    \ = scala.math.mod(r, p)\n        m + 1", "        val r = scala.math.pow(2, n)\n\
    \        val q = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n\
    \        val ", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        if (m == 0) r else m", "        val r = n % p\n        if (r < 0)\
    \ r + p else r", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        if (m == 0) r else m", "        val r = n % p\n        if (r < 0)\
    \ r + p else r", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val q = n / p\n        val\
    \ r = n % p\n        val s = q * q + r * r\n        if (s < p) q + p else q",
  "        val m = n % (p + 1)\n        if (m == 0) 1\n        else modp(m, p)", " \
    \       val m = 2L\n        val r = n % p\n        if (p == 1)\n            m\n\
    \        else if (r == 0)\n            1\n        else\n            modp(r, p\
    \ * m) % p", "        val r = n % p\n        if (n < 0) r + p else r", "     \
    \   val r = scala.math.pow(2, n)\n        val s = scala.math.mod(r, p)\n     \
    \   val m = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n     \
    \   val r = scala.math.mod(r, p)\n        val ", "        val r = n % p\n    \
    \    val q = p / r\n        val r = p % r\n        val q = q * r\n        val\
    \ r = q * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val r = r * r\n        val\
    \ r = r * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val r = r * r\n        val\
    \ r = r * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val r = r * r\n        val\
    \ r = r * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val r = r * r\n        val\
    \ r = r * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val r = r * r\n        val\
    \ r = r * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val r = r * r\n        val\
    \ r = r * r\n        val r = r * r\n        val r = r * r\n        val r = r *\
    \ r\n        val r = r * r\n        val r = r * r\n        val r = r * r\n   \
    \     val r = r * r\n        val r = r * r\n        val ", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val m = scala.math.pow(2,n)\n        val r =\
    \ scala.math.mod(m,p)\n        val s = scala.math.signum(r)\n        if (s ==\
    \ 0) r else r + p", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = scala.math.mod(n,\
    \ p)\n        if (n < 0) r + p else r", "        val r = n % p\n        if (p\
    \ < 0 || r < 0) r + p\n        else r", "        val r = scala.math.pow(2, n)\
    \ % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2, n)\n\
    \        val m = scala.math.mod(r, p)\n        val s = scala.math.signum(r)\n\
    \        if (s == 0) m else m", "        val r = n % p\n        if (r < 0) r +\
    \ p else r", "        val q = p + n\n        val r = p - (q % p)\n        val\
    \ s = q - r\n        r % p", "        val r = scala.math.pow(2, n) % p\n     \
    \   if (r < 0) r + p\n        else r", "        val r = n % p\n        if (r <\
    \ 0) r + p else r", "        val m = 1L\n        val r = n % p\n        val q\
    \ = p / r\n        val r = p % r\n        val s = (r + q * m) % p\n        s %\
    \ p", "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else\
    \ r", "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else\
    \ r", "        val r = n % p\n        if (r == 0) r else p + r", "        val\
    \ r = scala.math.pow(2, n)\n        val m = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val r = scala.math.mod(r, p)\n        val\
    \ r = scala.math.mod(r, p)\n        val ", "        val r = n % p\n        val\
    \ q = p / r\n        val m = p * q\n        val r = n % m\n        val s = m /\
    \ r\n        val r = n % s\n        val t = s / r\n        val r = n % t\n   \
    \     val u = t / r\n        val r = n % u\n        val v = u / r\n        val\
    \ r = n % v\n        val w = v / r\n        val r = n % w\n        val x = w /\
    \ r\n        val r = n % x\n        val y = x / r\n        val r = n % y\n   \
    \     val z = y / r\n        val r = n % z\n        val a = z / r\n        val\
    \ r = n % a\n        val b = a / r\n        val r = n % b\n        val c = b /\
    \ r\n        val r = n % c\n        val d = c / r\n        val r = n % d\n   \
    \     val e = d / r\n        val r = n % e\n        val f = e / r\n        val\
    \ r = n % f\n        val g = f / r\n        val r = n % g\n        val h = g /\
    \ r\n        val r = n % h\n        val i = h / r\n        val r = n % i\n   \
    \     val j = i / r\n        val r = n % j\n        val k = j / r\n        val\
    \ r = n % k\n        val l = k / r\n        val r = n % l\n        val m = l /\
    \ r\n        val r = n % m\n        val n = m / r\n        val r = n % n\n   \
    \     val o = n / r\n        val r = n % o\n        val p = o / r\n        val\
    \ r = n % p\n        val q = p / r\n        val r = n % q\n        val r = n %\
    \ r", "        val r = scala.math.BigInt(n)\n        val q = scala.math.BigInt(p)\n\
    \        val r = r.mod(q)\n        val r = r.toLong", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val r = scala.math.pow(2, n) % p\n        if\
    \ (r < 0) r + p\n        else r", "        val r = scala.math.pow(2, n) % p\n\
    \        if (r < 0) r + p else r", "        val r = n % p\n        if (r < 0)\
    \ r + p else r", "        val r = scala.math.pow(2, n) % p\n        if (r < 0)\
    \ r + p else r", "        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r,\
    \ p)\n        if (m == 0) r else r", "        val q = p + n\n        val r = q\
    \ % p\n        val s = q - r\n        r + (s << 1)", "        val r = scala.math.BigInt(n).mod(p)\n\
    \        if(r < 0) r + p else r", "        val r = n % p\n        if (n < 0) r\
    \ + p else r", "        val m = BigInt(n)\n        val r = BigInt(p)\n       \
    \ val s = BigInt(2)\n        val t = BigInt(m)\n        val r = BigInt(r)\n  \
    \      val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        val r = BigInt(r)\n\
    \        val s = BigInt(s)\n        val t = BigInt(t)\n        ", "        val\
    \ r = scala.math.BigInt(n).mod(p)\n        if(r < 0) r + p else r", "        val\
    \ r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val\
    \ r = scala.math.BigInt(n).mod(p)\n        if(r < 0) r + p else r", "        val\
    \ m = 2L\n        val r = n % p\n        val s = p / r\n        val t = n % m\n\
    \        val u = p / t\n        val v = n % m\n        val w = p / u\n       \
    \ val x = p / v\n        val y = p / w\n        val z = p / x\n        val a =\
    \ p / y\n        val b = p / z\n        val c = p / a\n        val d = p / b\n\
    \        val e = p / c\n        val f = p / d\n        val g = p / e\n       \
    \ val h = p / f\n        val i = p / g\n        val j = p / h\n        val k =\
    \ p / i\n        val l = p / j\n        val m = p / k\n        val n = p / l\n\
    \        val o = p / m\n        val p = p / n\n        val q = p / o\n       \
    \ val r = p / q\n        val s = p / r\n        val t = p / s\n        val u =\
    \ p / t\n        val v = p / u\n        val w = p / v\n        val x = p / w\n\
    \        val y = p / x\n        val z = p / y\n        val a = p / z\n       \
    \ val b = p / a\n        val c = p / b\n        val d = p / c\n        val e =\
    \ p / d\n        val f = p / e\n        val g = p / f\n        val h = p / g\n\
    \        val i = p / h\n        val j = p / i\n        val k = p / j\n       \
    \ val l = p / k\n        val m = p / l\n        val n = p / m\n        val o =\
    \ p / n\n        val p = p / o\n        val q = p / p\n        val r = p / q\n\
    \        val s = p / r\n        val t = p / s\n        val u = p / t\n       \
    \ val v = p / u\n        val w = p / v\n        val x = p / w\n        val y =\
    \ p / x\n        val z = p / y\n        val a = p / z\n        val b = p / a\n\
    \        val c = p / b\n        val d = p / c\n        val e = p / d\n       \
    \ val f = p / e\n        val g = p / f\n        val h = p / g\n        val i =\
    \ p / h\n        val j = p / i\n        val k = p / j\n        val l = p / ",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val q = p / 2\n\
    \        val r = p % 2\n        val s = n % q\n        val t = n % r\n       \
    \ s * (q + r) + t", "        val q = p / 2\n        val r = p % 2\n        val\
    \ s = n % q\n        val t = n / q\n        val u = (t * q + r) % p\n        val\
    \ v = (t * q + s) % p\n        ((u * q + v) % p) % p", "        val r = scala.math.pow(2,\
    \ n)\n        val m = scala.math.mod(r, p)\n        if (m == 0) r else m", " \
    \       val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", " \
    \       val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", " \
    \       val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p\n        else r", "        val r = scala.math.pow(2,\
    \ n)\n        val q = scala.math.pow(p, r)\n        val m = scala.math.mod(q,\
    \ p)\n        m", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p), scala.math.BigInt(p))\n\
    \        r.toLong", "        val r = scala.math.BigInt(n).modPow(scala.math.BigInt(p),\
    \ scala.math.BigInt(2))\n        r.toLong", "        val r = n % p\n        if\
    \ (p < 0 || r < 0) r + p\n        else r", "        val r = scala.math.pow(2,\
    \ n)\n        val q = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val r = scala.math.mod(r, p)\n        val r = scala.math.mod(r,\
    \ p)\n        val "]
stop_tokens:
- "\n    }\n"

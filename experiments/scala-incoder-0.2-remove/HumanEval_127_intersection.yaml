name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    def intersection(interval1\
  \ : Tuple2[Long, Long], interval2 : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start = start2\n         \
    \   val end = end2\n            val length = end - start\n            if (length\
    \ == 1) {\n                return \"YES\"\n            }\n            val primes\
    \ = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97)\n            var prime = 0\n            var isPrime\
    \ = true\n            var primeIndex = 0\n            while (prime < length &&\
    \ isPrime) {\n                prime = prime + 1\n                primeIndex =\
    \ primeIndex + 1\n                if (prime == length) {\n                   \
    \ isPrime = false\n                }\n                if (prime % 2 == 0) {\n\
    \                    isPrime = false\n                }\n                if (prime\
    \ % 3 == 0) {\n                    isPrime = false\n                }\n      \
    \          if (prime % 5 == 0) {\n                    isPrime = false\n      \
    \          }\n                if (prime % 7 == 0) {\n                    isPrime\
    \ = false\n                }\n                if (prime % 11 == 0) {\n       \
    \             isPrime = false\n                }\n                if (prime %\
    \ 13 == 0) {\n                    isPrime = false\n                }\n       \
    \         if (prime % 17 == 0) {\n                    isPrime = false\n      \
    \          }\n                if (prime % 19 == 0) {\n                    isPrime\
    \ = false\n                }\n                if (prime % 23 == 0) {\n       \
    \             isPrime = false\n                }\n                if (prime %\
    \ 29 == 0) {\n                    isPrime = false\n                }\n       \
    \         if (prime % 31 == 0) {\n                    isPrime = false\n      \
    \          }\n                if (prime % 37 == 0) {\n                    isPrime\
    \ = false\n                }\n                if (prime % 41 == 0) {\n       \
    \             isPrime = false\n                }\n                if (prime %\
    \ 43 == 0) {\n                    isPrime = false\n                }\n       \
    \         if (prime % 47 == 0) {\n                    isPrime = false\n      \
    \          }\n                if (prime % 53 == 0) {\n                    isPrime\
    \ = false\n                }\n                if (prime % 59 == 0) {\n       \
    \             isPrime = false\n                }\n                if (prime %\
    \ 61 == 0) {\n                    isPrime = false\n                }\n       \
    \         if (prime % 67 == 0) {\n                    isPrime = false\n      \
    \          }\n                if (prime % 71 == 0) {\n                    isPrime\
    \ = false\n                }\n                if (prime % 73 == 0) {\n       \
    \             isPrime = false\n                }\n                if (prime %\
    \ 79 == 0) {\n                    isPrime = false\n                }\n       \
    \         if (prime % 83 == 0) {\n                    isPrime = false\n      \
    \          }\n                if (prime % 89 == 0) {\n                    isPrime\
    \ = false\n                }\n                if (prime % 97 == 0) {\n       \
    \             isPrime = false\n                }\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else if (length == 1) \"YES\"\
    \ else \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\"\n        else if (length2 ==\
    \ 1) \"YES\"\n        else if (length2 == 2) \"YES\"\n        else if (length2\
    \ > 2) \"NO\"\n        else if (length2 > 1) \"YES\"\n        else if (length2\
    \ > 0) \"YES\"\n        else intersection(interval1, interval2)", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else intersection(interval2, interval1)", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n      \
    \  else if (length == 1) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.max(start, start2)\n        val end = math.min(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval2._2\n        val end2 = interval1._2\n        val start3 = interval1._1\n\
    \        val end3 = interval2._2\n        val start4 = interval1._2\n        val\
    \ end4 = interval2._1\n        val start5 = interval1._1\n        val end5 = interval2._2\n\
    \        val start6 = interval1._2\n        val end6 = interval2._1\n        val\
    \ start7 = interval1._1\n        val end7 = interval2._2\n        val start8 =\
    \ interval1._2\n        val end8 = interval2._1\n        val start9 = interval1._1\n\
    \        val end9 = interval2._2\n        val start10 = interval1._2\n       \
    \ val end10 = interval2._1\n        val start11 = interval1._1\n        val end11\
    \ = interval2._2\n        val start12 = interval1._2\n        val end12 = interval2._1\n\
    \        val start13 = interval1._1\n        val end13 = interval2._2\n      \
    \  val start14 = interval1._2\n        val end14 = interval2._1\n        val start15\
    \ = interval1._1\n        val end15 = interval2._2\n        val start16 = interval1._2\n\
    \        val end16 = interval2._1\n        val start17 = interval1._1\n      \
    \  val end17 = interval2._2\n        val start18 = interval1._2\n        val end18\
    \ = interval2._1\n        val start19 = interval1._1\n        val end19 = interval2._2\n\
    \        val start20 = interval1._2\n        val end20 = interval2._1\n      \
    \  val start21 = interval1._1\n        val end21 = interval2._2\n        val start22\
    \ = interval1._2\n        val end22 = interval2._1\n        val start23 = interval1._1\n\
    \        val end23 = interval2._2\n        val start24 = interval1._2\n      \
    \  val end24 = interval2._1\n        val start25 = interval1._1\n        val end25\
    \ = interval2._2\n        val start26 = interval1._2\n        val end26 = interval2._1\n\
    \        val start27 = interval1._1\n        val end27 = interval2._2\n      \
    \  val start28 = interval1._2\n        val end28 = interval2._1\n        val start29\
    \ = interval1._1\n        val end29 = interval2._2\n        val start30 = interval1._2\n\
    \        val end30 = interval2.", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMin = math.min(start, start2)\n      \
    \  val endMin = math.min(end, end2)\n        val startMax = math.max(start, start2)\n\
    \        val endMax = math.max(end, end2)\n        val startRange = startMax -\
    \ startMin\n        val endRange = endMax - endMin\n        if (startRange ==\
    \ 0 || endRange == 0) \"NO\"\n        else if (startRange == endRange) \"YES\"\
    \n        else intersection(startMin, endMin, startMax, endMax)", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            if (start3 < end4 && start4 < end3) {\n                val start5\
    \ = start3\n                val end5 = end3\n                val start6 = start4\n\
    \                val end6 = end4\n                if (start5 < end6 && start6\
    \ < end5) {\n                    val start7 = start5\n                    val\
    \ end7 = end5\n                    val start8 = start6\n                    val\
    \ end8 = end6\n                    if (start7 < end8 && start8 < end7) {\n   \
    \                     val start9 = start7\n                        val end9 =\
    \ end7\n                        val start10 = start8\n                       \
    \ val end10 = end8\n                        if (start9 < end10 && start10 < end9)\
    \ {\n                            val start11 = start9\n                      \
    \      val end11 = end9\n                            val start12 = start10\n \
    \                           val end12 = end10\n                            if\
    \ (start11 < end12 && start12 < end11) {\n                                val\
    \ start13 = start11\n                                val end13 = end11\n     \
    \                           val start14 = start12\n                          \
    \      val end14 = end12\n                                if (start13 < end14\
    \ && start14 < end13) {\n                                    val start15 = start13\n\
    \                                    val end15 = end13\n                     \
    \               val start16 = start14\n                                    val\
    \ end16 = end14\n                                    if (start15 < end16 && start16\
    \ < end15) {\n                                        val start17 = start15\n\
    \                                        val end17 = end15\n                 \
    \                       val start18 = start16\n                              \
    \          val end18 = end16\n                                        if (start17\
    \ < end18 && start18 < end17) {\n                                            return\
    \ \"YES\"\n                                        } else {\n                \
    \                            return \"NO\"\n                                 \
    \       }\n                                    } else {\n                    \
    \                    return \"NO\"\n                                    }\n  \
    \                              } else {\n                                    return\
    \ \"NO\"\n                                }\n                            } else\
    \ {\n                                return \"NO\"\n                         \
    \   }\n                        } else {\n                            return \"\
    NO\"\n                        }\n                    } else {\n              \
    \          return \"NO\"\n                    }\n                } else {\n  \
    \                  return \"NO\"\n                }\n            } else {\n  \
    \              return \"NO\"\n            }\n        } else {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val length = end - start\n   \
    \         val length2 = end2 - start2\n            if (length == length2) {\n\
    \                if (length == 1) {\n                    return \"YES\"\n    \
    \            }\n                val prime = length.toInt\n                val\
    \ prime2 = length2.toInt\n                val prime3 = prime + prime2\n      \
    \          val prime4 = prime3 * prime\n                val prime5 = prime4 *\
    \ prime\n                val prime6 = prime5 * prime\n                val prime7\
    \ = prime6 * prime\n                val prime8 = prime7 * prime\n            \
    \    val prime9 = prime8 * prime\n                val prime10 = prime9 * prime\n\
    \                val prime11 = prime10 * prime\n                val prime12 =\
    \ prime11 * prime\n                val prime13 = prime12 * prime\n           \
    \     val prime14 = prime13 * prime\n                val prime15 = prime14 * prime\n\
    \                val prime16 = prime15 * prime\n                val prime17 =\
    \ prime16 * prime\n                val prime18 = prime17 * prime\n           \
    \     val prime19 = prime18 * prime\n                val prime20 = prime19 * prime\n\
    \                val prime21 = prime20 * prime\n                val prime22 =\
    \ prime21 * prime\n                val prime23 = prime22 * prime\n           \
    \     val prime24 = prime23 * prime\n                val prime25 = prime24 * prime\n\
    \                val prime26 = prime25 * prime\n                val prime27 =\
    \ prime26 * prime\n                val prime28 = prime27 * prime\n           \
    \     val prime29 = prime28 * prime\n                val prime30 = prime29 * prime\n\
    \                val prime31 = prime30 * prime\n                val prime32 =\
    \ prime31 * prime\n                val prime33 = prime32 * prime\n           \
    \     val prime34 = prime33 * prime\n                val prime35 = prime34 * prime\n\
    \                val prime36 = prime35 * prime\n                val prime37 =\
    \ prime36 * prime\n                val prime38 = prime37 * prime\n           \
    \     val prime39 = prime38 * prime\n                val prime40 = prime39 * prime\n\
    \                val prime41 = prime40 * prime\n                val prime42 =\
    \ prime41 * prime\n                val prime43 = prime42 * prime\n           \
    \     val prime44 = prime43 * prime\n                val prime45 = prime44 * prime\n\
    \                val prime46 = prime45", "        val start = interval1._1\n \
    \       val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else if (length ==\
    \ 1) \"YES\" else \"NO\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n  \
    \      } else {\n            if (length == 0) \"NO\" else \"YES\"\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val result = length * length2\n\
    \        val isPrime = result % 2 == 0\n        if (isPrime) {\n            \"\
    YES\"\n        } else {\n            \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval2._2\n        val end2 = interval1._2\n        val start3 = interval1._1\n\
    \        val end3 = interval2._1\n        val start4 = interval2._2\n        val\
    \ end4 = interval1._2\n        val start5 = interval1._1\n        val end5 = interval2._1\n\
    \        val start6 = interval2._2\n        val end6 = interval1._2\n        val\
    \ start7 = interval1._1\n        val end7 = interval2._1\n        val start8 =\
    \ interval2._2\n        val end8 = interval1._2\n        val start9 = interval1._1\n\
    \        val end9 = interval2._1\n        val start10 = interval2._2\n       \
    \ val end10 = interval1._2\n        val start11 = interval1._1\n        val end11\
    \ = interval2._1\n        val start12 = interval2._2\n        val end12 = interval1._2\n\
    \        val start13 = interval1._1\n        val end13 = interval2._1\n      \
    \  val start14 = interval2._2\n        val end14 = interval1._2\n        val start15\
    \ = interval1._1\n        val end15 = interval2._1\n        val start16 = interval2._2\n\
    \        val end16 = interval1._2\n        val start17 = interval1._1\n      \
    \  val end17 = interval2._1\n        val start18 = interval2._2\n        val end18\
    \ = interval1._2\n        val start19 = interval1._1\n        val end19 = interval2._1\n\
    \        val start20 = interval2._2\n        val end20 = interval1._2\n      \
    \  val start21 = interval1._1\n        val end21 = interval2._1\n        val start22\
    \ = interval2._2\n        val end22 = interval1._2\n        val start23 = interval1._1\n\
    \        val end23 = interval2._1\n        val start24 = interval2._2\n      \
    \  val end24 = interval1._2\n        val start25 = interval1._1\n        val end25\
    \ = interval2._1\n        val start26 = interval2._2\n        val end26 = interval1._2\n\
    \        val start27 = interval1._1\n        val end27 = interval2._1\n      \
    \  val start28 = interval2._2\n        val end28 = interval1._2\n        val start29\
    \ = interval1._1\n        val end29 = interval2._1\n        val start30 = interval2._2\n\
    \        val end30 = interval1.", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"YES\"\n        }\n        if (start == start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end < end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n            temp = end\n            end =\
    \ end2\n            end2 = temp\n        }\n        if (start < start2 && end\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end > end2) {\n            val temp = start\n            start = start2\n\
    \            start2 = temp\n            temp = end\n            end = end2\n \
    \           end2 = temp\n        }\n        if (start > start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end > end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start < start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start > start2 && end > end2) {\n\
    \            return \"NO\"\n        }\n        if (start < start2 && end < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end >\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start < start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 1) {\n            return \"NO\"\n        }\n        if\
    \ (length2 == 0) {\n            return \"NO\"\n        }\n        if (length ==\
    \ 1) {\n            if (length2 == 1) {\n                return \"NO\"\n     \
    \       } else {\n                return \"YES\"\n            }\n        }\n \
    \       if (length == 2) {\n            if (length2 == 2) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 2) {\n            return \"NO\"\n        }\n\
    \        if (length2 == 1) {\n            return \"NO\"\n        }\n        if\
    \ (length2 == 0) {\n            return \"NO\"\n        }\n        if (length ==\
    \ 2) {\n            if (length2 == 2) {\n                return \"YES\"\n    \
    \        } else {\n                return \"NO\"\n            }\n        }\n \
    \       if (length2 == 1) {\n            return \"NO\"\n        }\n        if\
    \ (length2 == 0) {\n            return \"NO\"\n        }\n        if (length ==\
    \ 1) {\n            if (length2 == 1) {\n                return \"NO\"\n     \
    \       } else {\n                return \"YES\"\n            }\n        }\n \
    \       if (length == 2) {\n            if (length2 == 2) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 1) {\n            return \"NO\"\n        }\n\
    \        if (length2 == 0) {\n            return \"NO\"\n        }\n        if\
    \ (length == 1) {\n            if (length2 == 1) {\n                return \"\
    NO\"\n            } else {\n                return \"YES\"\n            }\n  \
    \      }\n        if (length2 == 2) {\n            return \"NO\"\n        }\n\
    \        if (length2 == 1) {\n            return \"NO\"\n        }\n        if\
    \ (length2 == 0) {\n            return \"NO\"\n        }\n        if (length ==\
    \ 1) {\n            if (length2 == 1) {\n                return \"NO\"\n     \
    \       } else {\n                return \"YES\"\n            }\n        }\n \
    \       if (length2 == 2) {\n            return \"NO\"\n        }\n        if\
    \ (length2 == 1) {\n            return \"NO\"\n        }\n        if (length2\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length == 1) {\n\
    \            if (length2 == 1) {\n                return \"NO\"\n            }\
    \ else {\n                return \"YES\"\n            }\n        }\n        if\
    \ (length2 == 2) {\n            return \"NO\"\n        }\n        if (length2\
    \ == 1) {\n            return \"NO\"\n        }\n        if (length2 == 0) {\n\
    \            return \"NO\"\n        }\n        if (length == 1) {\n          \
    \  if (length2 == 1) {\n", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            if (start3 < end4 && start4 < end3) {\n            \
    \    val start5 = start3\n                val end5 = end3\n                val\
    \ start6 = start4\n                val end6 = end4\n                if (start5\
    \ < end6 && start6 < end5) {\n                    val start7 = start5\n      \
    \              val end7 = end5\n                    val start8 = start6\n    \
    \                val end8 = end6\n                    if (start7 < end8 && start8\
    \ < end7) {\n                        val start9 = start7\n                   \
    \     val end9 = end7\n                        val start10 = start8\n        \
    \                val end10 = end8\n                        if (start9 < end10\
    \ && start10 < end9) {\n                            val start11 = start9\n   \
    \                         val end11 = end9\n                            val start12\
    \ = start10\n                            val end12 = end10\n                 \
    \           if (start11 < end12 && start12 < end11) {\n                      \
    \          val start13 = start11\n                                val end13 =\
    \ end11\n                                val start14 = start12\n             \
    \                   val end14 = end12\n                                if (start13\
    \ < end14 && start14 < end13) {\n                                    val start15\
    \ = start13\n                                    val end15 = end13\n         \
    \                           val start16 = start14\n                          \
    \          val end16 = end14\n                                    if (start15\
    \ < end16 && start16 < end15) {\n                                        val start17\
    \ = start15\n                                        val end17 = end15\n     \
    \                                   val start18 = start16\n                  \
    \                      val end18 = end16\n                                   \
    \     if (start17 < end18 && start18 < end17) {\n                            \
    \                return \"YES\"\n                                        } else\
    \ {\n                                            return \"NO\"\n             \
    \                           }\n                                    } else {\n\
    \                                        return \"NO\"\n                     \
    \               }\n                                } else {\n                \
    \                    return \"NO\"\n                                }\n      \
    \                      } else {\n                                return \"NO\"\
    \n                            }\n                        } else {\n          \
    \                  return \"NO\"\n                        }\n                \
    \    } else {\n                        return \"NO\"\n                    }\n\
    \                } else {\n                    return \"NO\"\n               \
    \ }\n            } else {\n                return \"NO\"\n            }\n    \
    \    } else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval2._1\n        val start2 = interval2._2\n        val\
    \ end2 = interval1._2\n        val start3 = interval1._1\n        val end3 = interval2._2\n\
    \        val start4 = interval2._1\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._1\n        val end5 = interval2._2\n        val start6 =\
    \ interval2._1\n        val end6 = interval1._2\n        val start7 = interval1._1\n\
    \        val end7 = interval2._2\n        val start8 = interval2._1\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._1\n        val end9 = interval2._2\n\
    \        val start10 = interval2._1\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._1\n        val end11 = interval2._2\n        val start12\
    \ = interval2._1\n        val end12 = interval1._2\n        val start13 = interval1._1\n\
    \        val end13 = interval2._2\n        val start14 = interval2._1\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._1\n        val end15\
    \ = interval2._2\n        val start16 = interval2._1\n        val end16 = interval1._2\n\
    \        val start17 = interval1._1\n        val end17 = interval2._2\n      \
    \  val start18 = interval2._1\n        val end18 = interval1._2\n        val start19\
    \ = interval1._1\n        val end19 = interval2._2\n        val start20 = interval2._1\n\
    \        val end20 = interval1._2\n        val start21 = interval1._1\n      \
    \  val end21 = interval2._2\n        val start22 = interval2._1\n        val end22\
    \ = interval1._2\n        val start23 = interval1._1\n        val end23 = interval2._2\n\
    \        val start24 = interval2._1\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._1\n        val end25 = interval2._2\n        val start26\
    \ = interval2._1\n        val end26 = interval1._2\n        val start27 = interval1._1\n\
    \        val end27 = interval2._2\n        val start28 = interval2._1\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._1\n        val end29\
    \ = interval2._2\n        val start30 = interval2._1\n        val end30 = interval1.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          return \"NO\"\n        }\n        if (length == 1) {\n            return\
    \ \"YES\"\n        }\n        if (length2 == 1) {\n            return \"YES\"\n\
    \        }\n        if (length2 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length == 1) {\n            return \"YES\"\n        }\n        if\
    \ (length == 2) {\n            if (start <= start2 && end2 >= end) {\n       \
    \         return \"YES\"\n            }\n            if (start <= end2 && end2\
    \ >= start) {\n                return \"YES\"\n            }\n            if (start2\
    \ <= end && end2 >= start) {\n                return \"YES\"\n            }\n\
    \            if (start2 <= start && end2 >= end) {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 2) {\n            if (start\
    \ <= start2 && end2 >= end) {\n                return \"YES\"\n            }\n\
    \            if (start <= end2 && end2 >= start) {\n                return \"\
    YES\"\n            }\n            if (start2 <= end && end2 >= start) {\n    \
    \            return \"YES\"\n            }\n            if (start2 <= start &&\
    \ end2 >= end) {\n                return \"YES\"\n            }\n        }\n \
    \       if (length == 2) {\n            if (start <= start2 && end2 >= end) {\n\
    \                return \"YES\"\n            }\n            if (start <= end2\
    \ && end2 >= start) {\n                return \"YES\"\n            }\n       \
    \     if (start2 <= end && end2 >= start) {\n                return \"YES\"\n\
    \            }\n            if (start2 <= start && end2 >= end) {\n          \
    \      return \"YES\"\n            }\n        }\n        if (length == 2) {\n\
    \            if (start <= start2 && end2 >= end) {\n                return \"\
    YES\"\n            }\n            if (start <= end2 && end2 >= start) {\n    \
    \            return \"YES\"\n            }\n            if (start2 <= end && end2\
    \ >= start) {\n                return \"YES\"\n            }\n            if (start2\
    \ <= start && end2 >= end) {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (start <= start2 && end2\
    \ >= end) {\n                return \"YES\"\n            }\n            if (start\
    \ <= end2 && end2 >= start) {\n                return \"YES\"\n            }\n\
    \            if (start2 <= end && end2 >= start) {\n                return \"\
    YES\"\n            }\n            if (start2 <= start && end2 >= end) {\n    \
    \            return \"YES\"\n            }\n        }\n        if (length == 2)\
    \ {\n            if (start ", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length == length2) {\n            \"YES\"\n        } else {\n            val\
    \ start3 = start + length\n            val end3 = start + length2\n          \
    \  val start4 = start2 + length2\n            val end4 = start2 + length\n   \
    \         val start5 = start2 + length\n            val end5 = start2 + length2\n\
    \            val start6 = start2 + length2\n            val end6 = start2 + length\n\
    \            val start7 = start2 + length\n            val end7 = start2 + length2\n\
    \            val start8 = start2 + length2\n            val end8 = start2 + length\n\
    \            val start9 = start2 + length\n            val end9 = start2 + length2\n\
    \            val start10 = start2 + length2\n            val end10 = start2 +\
    \ length\n            val start11 = start2 + length\n            val end11 = start2\
    \ + length2\n            val start12 = start2 + length2\n            val end12\
    \ = start2 + length\n            val start13 = start2 + length\n            val\
    \ end13 = start2 + length2\n            val start14 = start2 + length2\n     \
    \       val end14 = start2 + length\n            val start15 = start2 + length\n\
    \            val end15 = start2 + length2\n            val start16 = start2 +\
    \ length2\n            val end16 = start2 + length\n            val start17 =\
    \ start2 + length\n            val end17 = start2 + length2\n            val start18\
    \ = start2 + length2\n            val end18 = start2 + length\n            val\
    \ start19 = start2 + length\n            val end19 = start2 + length2\n      \
    \      val start20 = start2 + length2\n            val end20 = start2 + length\n\
    \            val start21 = start2 + length\n            val end21 = start2 + length2\n\
    \            val start22 = start2 + length2\n            val end22 = start2 +\
    \ length\n            val start23 = start2 + length\n            val end23 = start2\
    \ + length2\n            val start24 = start2 + length2\n            val end24\
    \ = start2 + length\n            val start25 = start2 + length\n            val\
    \ end25 = start2 + length2\n            val start26 = start2 + length2\n     \
    \       val end26 = start2 + length\n            val start27 = start2 + length\n",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        val length\
    \ = length / 2\n        val length2 = length2 / 2\n        if (length2 == 0) {\n\
    \            if (length == 0) {\n                return \"NO\"\n            }\
    \ else {\n                return \"YES\"\n            }\n        }\n        val\
    \ start = start + length\n        val end = end - length\n        val start2 =\
    \ start2 + length2\n        val end2 = end2 - length2\n        val length = end\
    \ - start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n\
    \            if (length == 0) {\n                return \"NO\"\n            }\
    \ else {\n                return \"YES\"\n            }\n        }\n        val\
    \ length = length / 2\n        val length2 = length2 / 2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val start = start + length\n        val end = end - length\n        val\
    \ start2 = start2 + length2\n        val end2 = end2 - length2\n        val length\
    \ = end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ {\n            if (length == 0) {\n                return \"NO\"\n         \
    \   } else {\n                return \"YES\"\n            }\n        }\n     \
    \   val length = length / 2\n        val length2 = length2 / 2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val start = start + length\n        val end = end - length\n        val\
    \ start2 = start2 + length2\n        val end2 = end2 - length2\n        val length\
    \ = end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ {\n            if (length == 0) {\n                return \"NO\"\n         \
    \   } else {\n                return \"YES\"\n            }\n        }\n     \
    \   val length = length / 2\n        val length2 = length2 / 2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val start = start + length\n        val end = end - length\n        val\
    \ start2 = start2 + length2\n        val end2 = end2 - length2\n        val length\
    \ = end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ {\n            if (length == 0) {\n                return \"NO\"\n         \
    \   } else {\n                return \"YES\"\n            }\n        }\n     \
    \   val ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length2 % length == 0\n        if (isPrime) {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) {\n         \
    \   val length = end - start\n            val length2 = end2 - start2\n      \
    \      if (length == length2) {\n                if (length == 1) {\n        \
    \            return \"YES\"\n                }\n                val prime = length.toInt\n\
    \                val prime2 = length2.toInt\n                val prime3 = prime\
    \ + prime2\n                val prime4 = prime3 * prime3\n                val\
    \ prime5 = prime4 * prime4\n                val prime6 = prime5 * prime5\n   \
    \             val prime7 = prime6 * prime6\n                val prime8 = prime7\
    \ * prime7\n                val prime9 = prime8 * prime8\n                val\
    \ prime10 = prime9 * prime9\n                val prime11 = prime10 * prime10\n\
    \                val prime12 = prime11 * prime11\n                val prime13\
    \ = prime12 * prime12\n                val prime14 = prime13 * prime13\n     \
    \           val prime15 = prime14 * prime14\n                val prime16 = prime15\
    \ * prime15\n                val prime17 = prime16 * prime16\n               \
    \ val prime18 = prime17 * prime17\n                val prime19 = prime18 * prime18\n\
    \                val prime20 = prime19 * prime19\n                val prime21\
    \ = prime20 * prime20\n                val prime22 = prime21 * prime21\n     \
    \           val prime23 = prime22 * prime22\n                val prime24 = prime23\
    \ * prime23\n                val prime25 = prime24 * prime24\n               \
    \ val prime26 = prime25 * prime25\n                val prime27 = prime26 * prime26\n\
    \                val prime28 = prime27 * prime27\n                val prime29\
    \ = prime28 * prime28\n                val prime30 = prime29 * prime29\n     \
    \           val prime31 = prime30 * prime30\n                val prime32 = prime31\
    \ * prime31\n                val prime33 = prime32 * prime32\n               \
    \ val prime34 = prime33 * prime33\n                val prime35 = prime34 * prime34\n\
    \                val prime36 = prime35 * prime35\n                val prime37\
    \ = prime36 * prime36\n                val prime38 = prime37 * prime37\n     \
    \           val prime39 = prime38 * prime38\n                val prime40 = prime39\
    \ * prime39\n                val prime41 = prime40 * prime40\n               \
    \ val prime42 = prime41 * prime", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"YES\"\n        }\n        if (start == start2 && end != end2) {\n        \
    \    return \"NO\"\n        }\n        if (start != start2 && end == end2) {\n\
    \            return \"NO\"\n        }\n        if (start != start2 && end != end2)\
    \ {\n            return \"YES\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) {\n         \
    \   val start3 = start2\n            val end3 = end2\n            val start4 =\
    \ start\n            val end4 = end\n            val start5 = start3\n       \
    \     val end5 = end3\n            val start6 = start4\n            val end6 =\
    \ end4\n            val start7 = start5\n            val end7 = end5\n       \
    \     val start8 = start6\n            val end8 = end6\n            val start9\
    \ = start7\n            val end9 = end7\n            val start10 = start8\n  \
    \          val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ \"NO\" else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            val length3 = end - start\n            if (length3 == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        } else {\n            val length3 = end - start\n\
    \            if (length3 == 0) {\n                return \"NO\"\n            }\
    \ else {\n                val length4 = end2 - start2\n                if (length4\
    \ == 0) {\n                    return \"NO\"\n                } else {\n     \
    \               if (length3 % length4 == 0) {\n                        return\
    \ \"YES\"\n                    } else {\n                        return \"NO\"\
    \n                    }\n                }\n            }\n        }", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if(length == 0 || length2 == 0) \"NO\" else \"YES\"", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ \"NO\" else if (length == 1) \"YES\" else \"NO\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if(length == 0 || length2 == 0) \"NO\"\n        else\
    \ {\n            val isPrime = length == length2\n            if(isPrime) \"YES\"\
    \n            else \"NO\"\n        }", "        val start = interval1._1\n   \
    \     val end = interval2._1\n        val start2 = interval2._2\n        val end2\
    \ = interval1._2\n        val start3 = interval1._1\n        val end3 = interval2._2\n\
    \        val start4 = interval2._1\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._1\n        val end5 = interval2._2\n        val start6 =\
    \ interval2._1\n        val end6 = interval1._2\n        val start7 = interval1._1\n\
    \        val end7 = interval2._2\n        val start8 = interval2._1\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._1\n        val end9 = interval2._2\n\
    \        val start10 = interval2._1\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._1\n        val end11 = interval2._2\n        val start12\
    \ = interval2._1\n        val end12 = interval1._2\n        val start13 = interval1._1\n\
    \        val end13 = interval2._2\n        val start14 = interval2._1\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._1\n        val end15\
    \ = interval2._2\n        val start16 = interval2._1\n        val end16 = interval1._2\n\
    \        val start17 = interval1._1\n        val end17 = interval2._2\n      \
    \  val start18 = interval2._1\n        val end18 = interval1._2\n        val start19\
    \ = interval1._1\n        val end19 = interval2._2\n        val start20 = interval2._1\n\
    \        val end20 = interval1._2\n        val start21 = interval1._1\n      \
    \  val end21 = interval2._2\n        val start22 = interval2._1\n        val end22\
    \ = interval1._2\n        val start23 = interval1._1\n        val end23 = interval2._2\n\
    \        val start24 = interval2._1\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._1\n        val end25 = interval2._2\n        val start26\
    \ = interval2._1\n        val end26 = interval1._2\n        val start27 = interval1._1\n\
    \        val end27 = interval2._2\n        val start28 = interval2._1\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._1\n        val end29\
    \ = interval2._2\n        val start30 = interval2._1\n        val end30 = interval1.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == end) {\n  \
    \          if (start2 == end2) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length2 == 1) {\n\
    \            if (length == 1) {\n                return \"YES\"\n            }\
    \ else {\n                return \"NO\"\n            }\n        }\n        val\
    \ isPrime = length2 % length == 0 && length2 != 2\n        if (isPrime) {\n  \
    \          return \"YES\"\n        } else {\n            return \"NO\"\n     \
    \   }", "        val start = interval1._1\n        val end = interval1._2\n  \
    \      val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        val isPrime = length == 2 ||\
    \ length == 3 && start % length == 0 && end % length == 0\n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start >\
    \ end) {\n            val temp = start\n            start = end\n            end\
    \ = temp\n        }\n        if (start2 > end2) {\n            val temp = start2\n\
    \            start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start\n     \
    \   val end4 = end\n        val start5 = start3\n        val end5 = end3\n   \
    \     val start6 = start4\n        val end6 = end4\n        val start7 = start5\n\
    \        val end7 = end5\n        val start8 = start6\n        val end8 = end6\n\
    \        val start9 = start7\n        val end9 = end7\n        val start10 = start8\n\
    \        val end10 = end8\n        val start11 = start9\n        val end11 = end9\n\
    \        val start12 = start10\n        val end12 = end10\n        val start13\
    \ = start11\n        val end13 = end11\n        val start14 = start12\n      \
    \  val end14 = end12\n        val start15 = start13\n        val end15 = end13\n\
    \        val start16 = start14\n        val end16 = end14\n        val start17\
    \ = start15\n        val end17 = end15\n        val start18 = start16\n      \
    \  val end18 = end16\n        val start19 = start17\n        val end19 = end17\n\
    \        val start20 = start18\n        val end20 = end18\n        val start21\
    \ = start19\n        val end21 = end19\n        val start22 = start20\n      \
    \  val end22 = end20\n        val start23 = start21\n        val end23 = end21\n\
    \        val start24 = start22\n        val end24 = end22\n        val start25\
    \ = start23\n        val end25 = end23\n        val start26 = start24\n      \
    \  val end26 = end24\n        val start27 = start25\n        val end27 = end25\n\
    \        val start28 = start26\n        val end28 = end26\n        val start29\
    \ = start27\n        val end29 = end27\n        val start30 = start28\n      \
    \  val ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval1._2\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val isPrime = length == 2 || length == 3 && start % length == 0 && end\
    \ % length == 0\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"\
    YES\"\n        else if (length == 1) \"NO\"\n        else if (length == 2) \"\
    YES\"\n        else if (length == 3) \"YES\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length2 == 1) {\n            if (length == 1) {\n               \
    \ return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 2) {\n            if (length == 2) {\n                return \"YES\"\n  \
    \          }\n            else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 3) {\n            if (length == 2) {\n    \
    \            return \"YES\"\n            }\n            else {\n             \
    \   return \"NO\"\n            }\n        }\n        if (length2 == 4) {\n   \
    \         if (length == 2) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 5) {\n            if (length == 2) {\n               \
    \ return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length2 == 6) {\n            if (length\
    \ == 2) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 7) {\n            if (length == 2) {\n                return \"YES\"\n  \
    \          }\n            else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 8) {\n            if (length == 2) {\n    \
    \            return \"YES\"\n            }\n            else {\n             \
    \   return \"NO\"\n            }\n        }\n        if (length2 == 9) {\n   \
    \         if (length == 2) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 10) {\n            if (length == 2) {\n              \
    \  return \"YES\"\n            }\n            else {\n                return \"\
    NO\"\n            }\n        }\n        if (length2 == 11) {\n            if (length\
    \ == 2) {\n                return \"YES\"\n            }\n            else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 12) {\n            if (length == 2) {\n                return \"YES\"\n \
    \           }\n            else {\n                return \"NO\"\n           \
    \ }\n        }\n        if (length2 == 13) {\n            if (length == 2) {\n\
    \                return \"YES\"\n            }\n            else {\n         \
    \       return \"NO\"\n            }\n        }\n        if (length2 == 14) {\n\
    \            if (length == 2) {\n                return \"YES\"\n            }\n\
    \            else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 15) {\n            if (length == 2) {\n              \
    \  return \"YES\"\n            }\n            else {\n                return \"\
    NO", "        val start = interval1._1\n        val end = interval1._2\n     \
    \   val start2 = interval2._1\n        val end2 = interval2._2\n        val length\
    \ = end - start\n        val length2 = end2 - start2\n        if (length == 0\
    \ || length2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ == length2) {\n            if (length == 1) {\n                return \"YES\"\
    \n            }\n            else {\n                return \"NO\"\n         \
    \   }\n        }\n        val mid = (start + end) / 2\n        val mid2 = start2\
    \ + end2\n        val mid3 = mid / 2\n        val mid4 = mid3 / 2\n        val\
    \ mid5 = mid4 / 2\n        val mid6 = mid5 / 2\n        val mid7 = mid6 / 2\n\
    \        val mid8 = mid7 / 2\n        val mid9 = mid8 / 2\n        val mid10 =\
    \ mid9 / 2\n        val mid11 = mid10 / 2\n        val mid12 = mid11 / 2\n   \
    \     val mid13 = mid12 / 2\n        val mid14 = mid13 / 2\n        val mid15\
    \ = mid14 / 2\n        val mid16 = mid15 / 2\n        val mid17 = mid16 / 2\n\
    \        val mid18 = mid17 / 2\n        val mid19 = mid18 / 2\n        val mid20\
    \ = mid19 / 2\n        val mid21 = mid20 / 2\n        val mid22 = mid21 / 2\n\
    \        val mid23 = mid22 / 2\n        val mid24 = mid23 / 2\n        val mid25\
    \ = mid24 / 2\n        val mid26 = mid25 / 2\n        val mid27 = mid26 / 2\n\
    \        val mid28 = mid27 / 2\n        val mid29 = mid28 / 2\n        val mid30\
    \ = mid29 / 2\n        val mid31 = mid30 / 2\n        val mid32 = mid31 / 2\n\
    \        val mid33 = mid32 / 2\n        val mid34 = mid33 / 2\n        val mid35\
    \ = mid34 / 2\n        val mid36 = mid35 / 2\n        val mid37 = mid36 / 2\n\
    \        val mid38 = mid37 / 2\n        val mid39 = mid38 / 2\n        val mid40\
    \ = mid39 / 2\n        val mid41 = mid40 / 2\n        val mid42 = mid41 / 2\n\
    \        val mid43 = mid42 / 2\n        val mid44 = mid4", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val length = end - start\n            val length2 = end2 - start2\n\
    \            if (length2 == 0) {\n                if (length == 0) \"NO\" else\
    \ \"YES\"\n            } else \"NO\"\n        } else \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.max(start, start2)\n        val end = math.min(end, end2)\n   \
    \     val length = end - start\n        val isPrime = length == 2 || length ==\
    \ 3 && start % length == 0 && end % length == 0\n        if (isPrime) {\n    \
    \        return \"YES\"\n        }\n        return \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == end) {\n  \
    \          if (start2 == end2) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (start2 == end2) {\n            return \"NO\"\n        }\n        val length\
    \ = end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ {\n            return \"NO\"\n        }\n        if (length == 1) {\n      \
    \      return \"YES\"\n        }\n        val prime = length / length2\n     \
    \   if (prime == 1) {\n            return \"YES\"\n        }\n        if (prime\
    \ == 2) {\n            return \"NO\"\n        }\n        if (prime == 3) {\n \
    \           return \"YES\"\n        }\n        if (prime == 4) {\n           \
    \ return \"NO\"\n        }\n        if (prime == 5) {\n            return \"YES\"\
    \n        }\n        if (prime == 6) {\n            return \"NO\"\n        }\n\
    \        if (prime == 7) {\n            return \"YES\"\n        }\n        if\
    \ (prime == 8) {\n            return \"NO\"\n        }\n        if (prime == 9)\
    \ {\n            return \"YES\"\n        }\n        if (prime == 10) {\n     \
    \       return \"NO\"\n        }\n        if (prime == 11) {\n            return\
    \ \"YES\"\n        }\n        if (prime == 12) {\n            return \"NO\"\n\
    \        }\n        if (prime == 13) {\n            return \"YES\"\n        }\n\
    \        if (prime == 14) {\n            return \"NO\"\n        }\n        if\
    \ (prime == 15) {\n            return \"YES\"\n        }\n        if (prime ==\
    \ 16) {\n            return \"NO\"\n        }\n        if (prime == 17) {\n  \
    \          return \"YES\"\n        }\n        if (prime == 18) {\n           \
    \ return \"NO\"\n        }\n        if (prime == 19) {\n            return \"\
    YES\"\n        }\n        if (prime == 20) {\n            return \"NO\"\n    \
    \    }\n        if (prime == 21) {\n            return \"YES\"\n        }\n  \
    \      if (prime == 22) {\n            return \"NO\"\n        }\n        if (prime\
    \ == 23) {\n            return \"YES\"\n        }\n        if (prime == 24) {\n\
    \            return \"NO\"\n        }\n        if (prime == 25) {\n          \
    \  return \"YES\"\n        }\n        if (prime == 26) {\n            return \"\
    NO\"\n        }\n        if (prime == 27) {\n            return \"YES\"\n    \
    \    }\n        if (prime == 28) {\n            return \"NO\"\n        }\n   \
    \     if (prime == 29) {\n            return \"YES\"\n        }\n        if (prime\
    \ == 30) {\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     val isPrime = length == 2 || length == 3 && start % length == 0 && end %\
    \ length == 0\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else if (length == 1) \"YES\" else \"NO\"", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val prime = length.toString.toInt\n        val isPrime = prime == 2\n\
    \        if (isPrime) {\n            return \"YES\"\n        }\n        else {\n\
    \            return \"NO\"\n        }", "        val start = interval1._1\n  \
    \      val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start > end) {\n            val temp = start\n\
    \            start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == start2 && end == end2) {\n\
    \            return \"YES\"\n        }\n        if (start > start2 && end < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end >\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end > end2) {\n            return \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        val prime = length * length2\n        if (prime\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        val isPrime = length2 % length == 0\n        if (isPrime)\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        val isPrime = length == 2 || length ==\
    \ 3 && start % length == 0 && end % length == 0\n        if (isPrime) {\n    \
    \        \"YES\"\n        } else {\n            \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == length2) {\n\
    \            if (length == 1) {\n                return \"YES\"\n            }\n\
    \            val prime = length\n            val prime2 = length2\n          \
    \  var flag = true\n            var flag2 = true\n            var flag3 = true\n\
    \            var flag4 = true\n            var flag5 = true\n            var flag6\
    \ = true\n            var flag7 = true\n            var flag8 = true\n       \
    \     var flag9 = true\n            var flag10 = true\n            var flag11\
    \ = true\n            var flag12 = true\n            var flag13 = true\n     \
    \       var flag14 = true\n            var flag15 = true\n            var flag16\
    \ = true\n            var flag17 = true\n            var flag18 = true\n     \
    \       var flag19 = true\n            var flag20 = true\n            var flag21\
    \ = true\n            var flag22 = true\n            var flag23 = true\n     \
    \       var flag24 = true\n            var flag25 = true\n            var flag26\
    \ = true\n            var flag27 = true\n            var flag28 = true\n     \
    \       var flag29 = true\n            var flag30 = true\n            var flag31\
    \ = true\n            var flag32 = true\n            var flag33 = true\n     \
    \       var flag34 = true\n            var flag35 = true\n            var flag36\
    \ = true\n            var flag37 = true\n            var flag38 = true\n     \
    \       var flag39 = true\n            var flag40 = true\n            var flag41\
    \ = true\n            var flag42 = true\n            var flag43 = true\n     \
    \       var flag44 = true\n            var flag45 = true\n            var flag46\
    \ = true\n            var flag47 = true\n            var flag48 = true\n     \
    \       var flag49 = true\n            var flag50 = true\n            var flag51\
    \ = true\n            var flag52 = true\n            var flag53 = true\n     \
    \       var flag54 = true\n            var flag55 = true\n            var flag56\
    \ = true\n            var flag57 = true\n            var flag58 = true\n     \
    \       var flag59 = true\n            var flag60 = true\n            var flag61\
    \ = true\n            var flag62 = true\n            var flag63 = true\n     \
    \       var flag64 = true\n            var flag65 = true\n            var flag66\
    \ = true\n            var flag67 = true\n            var flag68 = true\n     \
    \       var flag69 = true\n            var flag70 = true\n            var flag71\
    \ = true\n            var flag72 = true\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length == length2\n        if (isPrime)\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length == length2) {\n            return \"YES\"\
    \n        }\n        val mid = (start + end) / 2\n        if (mid < start2) {\n\
    \            return \"NO\"\n        }\n        if (mid > end2) {\n           \
    \ return \"NO\"\n        }\n        if (length == 1) {\n            return \"\
    YES\"\n        }\n        if (length2 == 1) {\n            return \"YES\"\n  \
    \      }\n        if (length == 2) {\n            return \"YES\"\n        }\n\
    \        if (length2 == 2) {\n            return \"YES\"\n        }\n        if\
    \ (length == 3) {\n            return \"YES\"\n        }\n        if (length2\
    \ == 3) {\n            return \"YES\"\n        }\n        if (length == 4) {\n\
    \            return \"YES\"\n        }\n        if (length2 == 4) {\n        \
    \    return \"YES\"\n        }\n        if (length == 5) {\n            return\
    \ \"YES\"\n        }\n        if (length2 == 5) {\n            return \"YES\"\n\
    \        }\n        if (length == 6) {\n            return \"YES\"\n        }\n\
    \        if (length2 == 6) {\n            return \"YES\"\n        }\n        if\
    \ (length == 7) {\n            return \"YES\"\n        }\n        if (length2\
    \ == 7) {\n            return \"YES\"\n        }\n        if (length == 8) {\n\
    \            return \"YES\"\n        }\n        if (length2 == 8) {\n        \
    \    return \"YES\"\n        }\n        if (length == 9) {\n            return\
    \ \"YES\"\n        }\n        if (length2 == 9) {\n            return \"YES\"\n\
    \        }\n        if (length == 10) {\n            return \"YES\"\n        }\n\
    \        if (length2 == 10) {\n            return \"YES\"\n        }\n       \
    \ if (length == 11) {\n            return \"YES\"\n        }\n        if (length2\
    \ == 11) {\n            return \"YES\"\n        }\n        if (length == 12) {\n\
    \            return \"YES\"\n        }\n        if (length2 == 12) {\n       \
    \     return \"YES\"\n        }\n        if (length == 13) {\n            return\
    \ \"YES\"\n        }\n        if (length2 == 13) {\n            return \"YES\"\
    \n        }\n        if (length == 14) {\n            return \"YES\"\n       \
    \ }\n        if (length2 == 14) {\n            return \"YES\"\n        }\n   \
    \     if (length == 15) {\n            return \"YES\"\n        }\n        if (length2\
    \ == 15) {\n            return \"YES\"\n        }\n        if (length == 16) {\n\
    \            return \"YES\"\n        }\n        if (length2 == 16) {\n       \
    \     return \"YES\"\n        }\n        if (length == 17) {\n            return\
    \ \"YES\"\n        }\n        if (length2 == 17) {\n            return \"YES\"\
    \n        }\n        if (length == 18) {\n            return \"YES\"\n       \
    \ }\n        if (length2 == ", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start > start2 && end < end2) {\n            val temp\
    \ = start\n            start = start2\n            start2 = temp\n        }\n\
    \        if (start < start2 && end > end2) {\n            val temp = start\n \
    \           start = start2\n            start2 = temp\n        }\n        if (start\
    \ < start2 && end < end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n        }\n        if (start > start2 && end > end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \      }\n        if (start < start2 && end > end2) {\n            val temp =\
    \ start\n            start = start2\n            start2 = temp\n        }\n  \
    \      if (start < start2 && end < end2) {\n            val temp = start\n   \
    \         start = start2\n            start2 = temp\n        }\n        if (start\
    \ > start2 && end < end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n        }\n        if (start < start2 && end < end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n        }\n        if (start < start2 && end > end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \      }\n        if (start < start2 && end < end2) {\n            val temp =\
    \ start\n            start = start2\n            start2 = temp\n        }\n  \
    \      if (start > start2 && end > end2) {\n            val temp = start\n   \
    \         start = start2\n            start2 = temp\n        }\n        if (start\
    \ > start2 && end < end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n        }\n        if (start < start2 && end < end2)\
    \ {\n            val temp = start\n            start = start2\n", "        val\
    \ start = interval1._1\n        val end = interval2._1\n        val start2 = interval2._2\n\
    \        val end2 = interval1._2\n        val start3 = interval1._1\n        val\
    \ end3 = interval2._1\n        val start4 = interval2._2\n        val end4 = interval1._2\n\
    \        val start5 = interval1._1\n        val end5 = interval2._2\n        val\
    \ start6 = interval2._1\n        val end6 = interval1._2\n        val start7 =\
    \ interval1._1\n        val end7 = interval2._2\n        val start8 = interval2._1\n\
    \        val end8 = interval1._2\n        val start9 = interval1._1\n        val\
    \ end9 = interval2._2\n        val start10 = interval2._1\n        val end10 =\
    \ interval1._2\n        val start11 = interval1._1\n        val end11 = interval2._2\n\
    \        val start12 = interval2._1\n        val end12 = interval1._2\n      \
    \  val start13 = interval1._1\n        val end13 = interval2._2\n        val start14\
    \ = interval2._1\n        val end14 = interval1._2\n        val start15 = interval1._1\n\
    \        val end15 = interval2._2\n        val start16 = interval2._1\n      \
    \  val end16 = interval1._2\n        val start17 = interval1._1\n        val end17\
    \ = interval2._2\n        val start18 = interval2._1\n        val end18 = interval1._2\n\
    \        val start19 = interval1._1\n        val end19 = interval2._2\n      \
    \  val start20 = interval2._1\n        val end20 = interval1._2\n        val start21\
    \ = interval1._1\n        val end21 = interval2._2\n        val start22 = interval2._1\n\
    \        val end22 = interval1._2\n        val start23 = interval1._1\n      \
    \  val end23 = interval2._2\n        val start24 = interval2._1\n        val end24\
    \ = interval1._2\n        val start25 = interval1._1\n        val end25 = interval2._2\n\
    \        val start26 = interval2._1\n        val end26 = interval1._2\n      \
    \  val start27 = interval1._1\n        val end27 = interval2._2\n        val start28\
    \ = interval2._1\n        val end28 = interval1._2\n        val start29 = interval1._1\n\
    \        val end29 = interval2._2\n        val start30 = interval2._1\n      \
    \  val end30 = interval1.", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            return \"NO\"\n        }\n\
    \        if (length2 > length) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        val inter = start2 until\
    \ end2\n        val isPrime = inter.forall(x => x % length == 0)\n        if (isPrime)\
    \ {\n            return \"YES\"\n        }\n        return \"NO\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else intersection(interval2, interval1)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1 && length == 1) \"YES\"\n        else if (length2 == 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length2 == 1) \"NO\"\n       \
    \ else if (length != 1 && length2 != 1) \"NO\"\n        else if (length2 % length\
    \ == 0) \"NO\"\n        else if (length2 % length != 0) \"NO\"\n        else if\
    \ (length2 % length == 1 && length != 1) \"YES\"\n        else if (length2 % length\
    \ != 1 && length2 != 1) \"NO\"\n        else if (length2 % length == 1 && length\
    \ == 1) \"YES\"\n        else if (length2 % length != 1 && length2 == 1) \"NO\"\
    \n        else if (length2 % length == 1 && length != 1) \"YES\"\n        else\
    \ if (length2 % length != 1 && length2 != 1) \"NO\"\n        else if (length2\
    \ % length != 1 && length == 1) \"YES\"\n        else if (length2 % length ==\
    \ 1 && length != 1) \"YES\"\n        else if (length2 % length != 1 && length2\
    \ != 1) \"YES\"\n        else if (length2 % length != 1 && length == 1) \"YES\"\
    \n        else if (length2 % length != 1 && length2 != 1) \"YES\"\n        else\
    \ if (length2 % length != 1 && length == 1) \"YES\"\n        else if (length2\
    \ % length != 1 && length2 != 1) \"YES\"\n        else if (length2 % length !=\
    \ 1 && length == 1) \"YES\"\n        else if (length2 % length != 1 && length2\
    \ != 1) \"YES\"\n        else if (length2 % length != 1 && length == 1) \"YES\"\
    \n        else if (length2 % length != 1 && length2 != 1) \"YES\"\n        else\
    \ if (length2 % length != 1 && length == 1) \"YES\"\n        else if (length2\
    \ % length != 1 && length2 != 1) \"YES\"\n        else if (length2 % length !=\
    \ 1 && length == 1) \"YES\"\n        else if (length2 % length != 1 && length2\
    \ != 1) \"YES\"\n        else if (length2 % length != 1 && length == 1) \"YES\"\
    \n        else if (length2 % length != 1 && length2 != 1) \"YES\"\n        else\
    \ if (length2 % length != 1 && length == 1) \"YES\"\n        else if (length2\
    \ % length != 1 && length2 != 1) \"YES\"\n        else if (length2 % length !=\
    \ 1 && length == 1) \"YES\"\n        else if (length2 % length != 1 && length2\
    \ != 1) \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isPrime = length ==\
    \ length2\n        if (isPrime) {\n            return \"YES\"\n        } else\
    \ {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        val length1 = end\
    \ - start\n        val length2 = end2 - start2\n        if (length1 == 0 || length2\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length1 == length2)\
    \ {\n            if (length1 == 1) {\n                return \"YES\"\n       \
    \     }\n            val temp = length1\n            length1 = length2\n     \
    \       length2 = temp\n        }\n        val length3 = length1 / 2\n       \
    \ val length4 = length2 / 2\n        val length5 = length3 / 2\n        val length6\
    \ = length4 / 2\n        val length7 = length5 / 2\n        val length8 = length6\
    \ / 2\n        val length9 = length7 / 2\n        val length10 = length8 / 2\n\
    \        val length11 = length9 / 2\n        val length12 = length10 / 2\n   \
    \     val length13 = length11 / 2\n        val length14 = length12 / 2\n     \
    \   val length15 = length13 / 2\n        val length16 = length14 / 2\n       \
    \ val length17 = length15 / 2\n        val length18 = length16 / 2\n        val\
    \ length19 = length17 / 2\n        val length20 = length18 / 2\n        val length21\
    \ = length19 / 2\n        val length22 = length20 / 2\n        val length23 =\
    \ length21 / 2\n        val length24 = length22 / 2\n        val length25 = length23\
    \ / 2\n        val length26 = length24 / 2\n        val length27 = length25 /\
    \ 2\n        val length28 = length26 / 2\n        val length29 = length27 / 2\n\
    \        val length30 = length28 / 2\n        val length31 = length29 / 2\n  \
    \      val length32 = length30 / 2\n        val length33 = length31 / 2\n    \
    \    val length34 = length32 / 2\n        val length35 = length33 / 2\n      \
    \  val length36 = length34 / 2\n        val length37 = length35 / 2\n        val\
    \ length38 = length36 / 2\n        val length39 = ", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 % length == 0) \"YES\"\n        else intersection(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval1._2\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val prime = length.toInt\n        if (prime == 1) {\n            return\
    \ \"YES\"\n        }\n        if (prime == 0) {\n            return \"NO\"\n \
    \       }\n        if (length == 2) {\n            return \"YES\"\n        }\n\
    \        if (length == 3) {\n            return \"YES\"\n        }\n        if\
    \ (length == 5) {\n            return \"YES\"\n        }\n        if (length ==\
    \ 7) {\n            return \"YES\"\n        }\n        if (length == 11) {\n \
    \           return \"YES\"\n        }\n        if (length == 13) {\n         \
    \   return \"YES\"\n        }\n        if (length == 17) {\n            return\
    \ \"YES\"\n        }\n        if (length == 19) {\n            return \"YES\"\n\
    \        }\n        if (length == 23) {\n            return \"YES\"\n        }\n\
    \        if (length == 29) {\n            return \"YES\"\n        }\n        if\
    \ (length == 31) {\n            return \"YES\"\n        }\n        if (length\
    \ == 37) {\n            return \"YES\"\n        }\n        if (length == 43) {\n\
    \            return \"YES\"\n        }\n        if (length == 47) {\n        \
    \    return \"YES\"\n        }\n        if (length == 53) {\n            return\
    \ \"YES\"\n        }\n        if (length == 59) {\n            return \"YES\"\n\
    \        }\n        if (length == 67) {\n            return \"YES\"\n        }\n\
    \        if (length == 73) {\n            return \"YES\"\n        }\n        if\
    \ (length == 79) {\n            return \"YES\"\n        }\n        if (length\
    \ == 91) {\n            return \"YES\"\n        }\n        if (length == 97) {\n\
    \            return \"YES\"\n        }\n        if (length == 103) {\n       \
    \     return \"YES\"\n        }\n        if (length == 109) {\n            return\
    \ \"YES\"\n        }\n        if (length == 111) {\n            return \"YES\"\
    \n        }\n        if (length == 117) {\n            return \"YES\"\n      \
    \  }\n        if (length == 121) {\n            return \"YES\"\n        }\n  \
    \      if (length == 127) {\n            return \"YES\"\n        }\n        if\
    \ (length == 131) {\n            return \"YES\"\n        }\n        if (length\
    \ == 137) {\n            return \"YES\"\n        }\n        if (length == 141)\
    \ {\n            return \"YES\"\n        }\n        if (length == 147) {\n   \
    \         return \"YES\"\n        }\n        if (length == 151) {\n          \
    \  return \"YES\"\n        }\n        if (length == 157) {\n            return\
    \ \"YES\"\n        }\n        if (length == 161) {\n            return \"YES\"\
    \n        }\n        if (length == 167) {\n            return \"YES\"\n      \
    \  }\n        if (length == 173) {\n            return \"YES\"\n        }\n  \
    \      if (length == ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            if (start < start2) {\n      \
    \          val temp = start\n                start = start2\n                start2\
    \ = temp\n            }\n            if (end < end2) {\n                val temp\
    \ = end\n                end = end2\n                end2 = temp\n           \
    \ }\n            if (start == start2 && end == end2) {\n                return\
    \ \"YES\"\n            }\n            val start3 = start2\n            val end3\
    \ = end2\n            val start4 = start\n            val end4 = end\n       \
    \     val start5 = start3\n            val end5 = end3\n            val start6\
    \ = start4\n            val end6 = end4\n            val start7 = start5\n   \
    \         val end7 = end5\n            val start8 = start6\n            val end8\
    \ = end6\n            val start9 = start7\n            val end9 = end7\n     \
    \       val start10 = start8\n            val end10 = end8\n            val start11\
    \ = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        val isPrime = length == 2 || length == 3 && start % length == 0 && end\
    \ % length == 0\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = math.max(start, start2)\n        val end3 = math.min(end,\
    \ end2)\n        val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        val start5 = math.max(start, start4)\n        val end5 = math.min(end,\
    \ end4)\n        val start6 = math.max(start, start5)\n        val end6 = math.min(end,\
    \ end5)\n        val start7 = math.max(start, start6)\n        val end7 = math.min(end,\
    \ end6)\n        val start8 = math.max(start, start7)\n        val end8 = math.min(end,\
    \ end7)\n        val start9 = math.max(start, start8)\n        val end9 = math.min(end,\
    \ end8)\n        val start10 = math.max(start, start9)\n        val end10 = math.min(end,\
    \ end9)\n        val start11 = math.max(start, start10)\n        val end11 = math.min(end,\
    \ end10)\n        val start12 = math.max(start, start11)\n        val end12 =\
    \ math.min(end, end11)\n        val start13 = math.max(start, start12)\n     \
    \   val end13 = math.min(end, end12)\n        val start14 = math.max(start, start13)\n\
    \        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMin = math.min(start, start2)\n      \
    \  val startMax = math.max(start, start2)\n        val endMin = math.min(end,\
    \ end2)\n        val endMax = math.max(end, end2)\n        val length = endMax\
    \ - startMax\n        val isPrime = length == 2 || length == 3 && startMin ==\
    \ startMax && endMin == endMax\n        if (isPrime) {\n            \"YES\"\n\
    \        } else {\n            \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval2._1\n        val start2 = interval2._2\n\
    \        val end2 = interval2._2\n        val start1 = interval1._2\n        val\
    \ end1 = interval1._2\n        val start3 = interval1._2\n        val end3 = interval1._2\n\
    \        val start4 = interval1._2\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._2\n        val end5 = interval1._2\n        val start6 =\
    \ interval1._2\n        val end6 = interval1._2\n        val start7 = interval1._2\n\
    \        val end7 = interval1._2\n        val start8 = interval1._2\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._2\n        val end9 = interval1._2\n\
    \        val start10 = interval1._2\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._2\n        val end11 = interval1._2\n        val start12\
    \ = interval1._2\n        val end12 = interval1._2\n        val start13 = interval1._2\n\
    \        val end13 = interval1._2\n        val start14 = interval1._2\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._2\n        val end15\
    \ = interval1._2\n        val start16 = interval1._2\n        val end16 = interval1._2\n\
    \        val start17 = interval1._2\n        val end17 = interval1._2\n      \
    \  val start18 = interval1._2\n        val end18 = interval1._2\n        val start19\
    \ = interval1._2\n        val end19 = interval1._2\n        val start20 = interval1._2\n\
    \        val end20 = interval1._2\n        val start21 = interval1._2\n      \
    \  val end21 = interval1._2\n        val start22 = interval1._2\n        val end22\
    \ = interval1._2\n        val start23 = interval1._2\n        val end23 = interval1._2\n\
    \        val start24 = interval1._2\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._2\n        val end25 = interval1._2\n        val start26\
    \ = interval1._2\n        val end26 = interval1._2\n        val start27 = interval1._2\n\
    \        val end27 = interval1._2\n        val start28 = interval1._2\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._2\n        val end29\
    \ = interval1._2\n", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start2 = interval2._2\n        val end2 = interval1._2\n        val\
    \ start3 = interval1._1\n        val end3 = interval2._1\n        val start4 =\
    \ interval1._2\n        val end4 = interval2._2\n        val start5 = interval1._1\n\
    \        val end5 = interval2._1\n        val start6 = interval1._2\n        val\
    \ end6 = interval2._2\n        val start7 = interval1._1\n        val end7 = interval2._1\n\
    \        val start8 = interval1._2\n        val end8 = interval2._2\n        val\
    \ start9 = interval1._1\n        val end9 = interval2._1\n        val start10\
    \ = interval1._2\n        val end10 = interval2._2\n        val start11 = interval1._1\n\
    \        val end11 = interval2._1\n        val start12 = interval1._2\n      \
    \  val end12 = interval2._2\n        val start13 = interval1._1\n        val end13\
    \ = interval2._1\n        val start14 = interval1._2\n        val end14 = interval2._2\n\
    \        val start15 = interval1._1\n        val end15 = interval2._1\n      \
    \  val start16 = interval1._2\n        val end16 = interval2._2\n        val start17\
    \ = interval1._1\n        val end17 = interval2._1\n        val start18 = interval1._2\n\
    \        val end18 = interval2._2\n        val start19 = interval1._1\n      \
    \  val end19 = interval2._1\n        val start20 = interval1._2\n        val end20\
    \ = interval2._2\n        val start21 = interval1._1\n        val end21 = interval2._1\n\
    \        val start22 = interval1._2\n        val end22 = interval2._2\n      \
    \  val start23 = interval1._1\n        val end23 = interval2._1\n        val start24\
    \ = interval1._2\n        val end24 = interval2._2\n        val start25 = interval1._1\n\
    \        val end25 = interval2._1\n        val start26 = interval1._2\n      \
    \  val end26 = interval2._2\n        val start27 = interval1._1\n        val end27\
    \ = interval2._1\n        val start28 = interval1._2\n        val end28 = interval2._2\n\
    \        val start29 = interval1._1\n        val end29 = interval2._1\n      \
    \  val start30 = interval1._2\n        val end30 = interval2.", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length == 1) \"YES\"\n        else if (length == 2) \"YES\"\n        else\
    \ if (length == 3) \"YES\"\n        else if (length == length2) \"YES\"\n    \
    \    else if (length == length2 + 1) \"YES\"\n        else if (length == length2\
    \ + 2) \"YES\"\n        else if (length == length2 + 3) \"YES\"\n        else\
    \ if (length == length2 + 4) \"YES\"\n        else if (length == length2 + 5)\
    \ \"YES\"\n        else if (length == length2 + 6) \"YES\"\n        else if (length\
    \ == length2 + 7) \"YES\"\n        else if (length == length2 + 8) \"YES\"\n \
    \       else if (length == length2 + 9) \"YES\"\n        else if (length == length2\
    \ + 10) \"YES\"\n        else if (length == length2 + 11) \"YES\"\n        else\
    \ if (length == length2 + 12) \"YES\"\n        else if (length == length2 + 13)\
    \ \"YES\"\n        else if (length == length2 + 14) \"YES\"\n        else if (length\
    \ == length2 + 15) \"YES\"\n        else if (length == length2 + 16) \"YES\"\n\
    \        else if (length == length2 + 17) \"YES\"\n        else if (length ==\
    \ length2 + 18) \"YES\"\n        else if (length == length2 + 19) \"YES\"\n  \
    \      else if (length == length2 + 20) \"YES\"\n        else if (length == length2\
    \ + 21) \"YES\"\n        else if (length == length2 + 22) \"YES\"\n        else\
    \ if (length == length2 + 23) \"YES\"\n        else if (length == length2 + 24)\
    \ \"YES\"\n        else if (length == length2 + 25) \"YES\"\n        else if (length\
    \ == length2 + 26) \"YES\"\n        else if (length == length2 + 27) \"YES\"\n\
    \        else if (length == length2 + 28) \"YES\"\n        else if (length ==\
    \ length2 + 29) \"YES\"\n        else if (length == length2 + 30) \"YES\"\n  \
    \      else if (length == length2 + 31) \"YES\"\n        else if (length == length2\
    \ + 32) \"YES\"\n        else if (length == length2 + 33) \"YES\"\n        else\
    \ if (length == length2 + 34) \"YES\"\n        else if (length == length2 + 35)\
    \ \"YES\"\n        else if (length == length2 + 36) \"YES\"\n        else if (length\
    \ == length2 + 37) \"YES\"\n        else if (length == length2 + 38) \"YES\"\n\
    \        else if (length == length2 + 39) \"YES\"\n        else if (length ==\
    \ length2 + 40) \"YES\"\n        else if (length == length2 + 41) \"YES\"\n  \
    \      else if (length == length2 + 42) \"YES\"\n        else if (", "       \
    \ val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isPrime = length2 %\
    \ length == 0 \n        if (isPrime) {\n            return \"YES\"\n        }\
    \ else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            val start5\
    \ = start3\n            val end5 = end3\n            val start6 = start4\n   \
    \         val end6 = end4\n            val start7 = start5\n            val end7\
    \ = end5\n            val start8 = start6\n            val end8 = end6\n     \
    \       val start9 = start7\n            val end9 = end7\n            val start10\
    \ = start8\n            val end10 = end8\n            val start11 = start9\n \
    \           val end11 = end9\n            val start12 = start10\n            val\
    \ end12 = end10\n            val start13 = start11\n            val end13 = end11\n\
    \            val start14 = start12\n            val end14 = end12\n          \
    \  val start15 = start13\n            val end15 = end13\n            val start16\
    \ = start14\n            val end16 = end14\n            val start17 = start15\n\
    \            val end17 = end15\n            val start18 = start16\n          \
    \  val end18 = end16\n            val start19 = start17\n            val end19\
    \ = end17\n            val start20 = start18\n            val end20 = end18\n\
    \            val start21 = start19\n            val end21 = end19\n          \
    \  val start22 = start20\n            val end22 = end20\n            val start23\
    \ = start21\n            val end23 = end21\n            val start24 = start22\n\
    \            val end24 = end22\n            val start25 = start23\n          \
    \  val end25 = end23\n            val start26 = start24\n            val end26\
    \ = end24\n            val start27 = start25\n            val end27 = end25\n\
    \            val start28 = start26\n            val end28 = end26\n          \
    \  val start29 = start27\n            val end29 = end27\n            val start30\
    \ = start28\n            val end30 = end28\n            val start31 = start29\n\
    \            val end31 = end29\n            val start32 = start30\n          \
    \  val end32 = end30\n            val start33 = start31\n            val end33\
    \ = end", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMin = math.min(start, start2)\n        val startMax = math.max(start, start2)\n\
    \        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val startMin2 = math.min(start2, end2)\n        val startMax2\
    \ = math.max(start2, end2)\n        val endMin2 = math.min(end2, start2)\n   \
    \     val endMax2 = math.max(end2, start2)\n        val startMin3 = math.min(start2,\
    \ end2)\n        val startMax3 = math.max(start2, end2)\n        val endMin3 =\
    \ math.min(end2, start2)\n        val endMax3 = math.max(end2, start2)\n     \
    \   val startMin4 = math.min(start2, end2)\n        val startMax4 = math.max(start2,\
    \ end2)\n        val endMin4 = math.min(end2, start2)\n        val endMax4 = math.max(end2,\
    \ start2)\n        val startMin5 = math.min(start2, end2)\n        val startMax5\
    \ = math.max(start2, end2)\n        val endMin5 = math.min(end2, start2)\n   \
    \     val endMax5 = math.max(end2, start2)\n        val startMin6 = math.min(start2,\
    \ end2)\n        val startMax6 = math.max(start2, end2)\n        val endMin6 =\
    \ math.min(end2, start2)\n        val endMax6 = math.max(end2, start2)\n     \
    \   val startMin7 = math.min(start2, end2)\n        val startMax7 = math.max(start2,\
    \ end2)\n        val endMin7 = math.min(end2, start2)\n        val endMax7 = math.max(end2,\
    \ start2)\n        val startMin8 = math.min(start2, end2)\n        val startMax8\
    \ = math.max(start2, end2)\n        val endMin8 = math.min(end2, start2)\n   \
    \     val endMax8 = math.max(end2, start2)\n        val startMin9 = math.min(start2,\
    \ end2)\n        val startMax9 = math.max(start2, end2)\n        val endMin9 =\
    \ math.min(end2, start2)\n        val endMax9 = math.max(end2, start2)\n     \
    \   val startMin10 = math.min(start2, end2)\n        val startMax10 = math.max(start2,\
    \ end2)\n        val endMin10 = math.min(end2, start2)\n        val endMax10 =\
    \ math.max(end2, start2)\n        val startMin11 = math.", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val start = start2\n            val end = end2\n            val length\
    \ = end - start\n            if (length == 1) {\n                return \"YES\"\
    \n            } else if (length == 2 && start % 2 == 0 && end % 2 == 0) {\n  \
    \              return \"YES\"\n            } else if (length == 2 && start % 2\
    \ == 1 && end % 2 == 1) {\n                return \"YES\"\n            } else\
    \ if (length == 2 && start % 2 == 0 && end % 2 == 1) {\n                return\
    \ \"NO\"\n            } else if (length == 2 && start % 2 == 1 && end % 2 == 0)\
    \ {\n                return \"NO\"\n            } else if (length == 3 && start\
    \ % 3 == 0 && end % 3 == 0) {\n                return \"YES\"\n            } else\
    \ if (length == 3 && start % 3 == 1 && end % 3 == 1) {\n                return\
    \ \"YES\"\n            } else if (length == 3 && start % 3 == 0 && end % 3 ==\
    \ 1) {\n                return \"NO\"\n            } else if (length == 3 && start\
    \ % 3 == 1 && end % 3 == 0) {\n                return \"NO\"\n            } else\
    \ if (length == 4 && start % 4 == 0 && end % 4 == 0) {\n                return\
    \ \"YES\"\n            } else if (length == 4 && start % 4 == 1 && end % 4 ==\
    \ 1) {\n                return \"YES\"\n            } else if (length == 4 &&\
    \ start % 4 == 0 && end % 4 == 1) {\n                return \"NO\"\n         \
    \   } else if (length == 4 && start % 4 == 1 && end % 4 == 0) {\n            \
    \    return \"NO\"\n            } else if (length == 5 && start % 5 == 0 && end\
    \ % 5 == 0) {\n                return \"YES\"\n            } else if (length ==\
    \ 5 && start % 5 == 1 && end % 5 == 1) {\n                return \"YES\"\n   \
    \         } else if (length == 5 && start % 5 == 0 && end % 5 == 1) {\n      \
    \          return \"NO\"\n            } else if (length == 5 && start % 5 == 1\
    \ && end % 5 == 0) {\n                return \"NO\"\n            } else if (length\
    \ == 6 && start % 6 == 0 && end % 6 == 0) {\n                return \"YES\"\n\
    \            } else if (length == 6 && start % 6 == 1 && end % 6 == 1) {\n   \
    \             return \"YES\"\n            } else if (length == 6 && start % 6\
    \ == 0 && end % 6 == 1) {\n                return \"NO\"\n            } else if\
    \ (length == 6 && start % 6 == 1 && end % 6 == 0) {\n                return \"\
    NO\"\n            } else if (length == 7 && start % 7 == 0 && end % 7 == 0) {\n\
    \                return \"YES\"\n            } else if (length == 7 && start %\
    \ 7 == 1 && end % 7 == 1) {\n                return \"YES\"\n            } else\
    \ if (length == 7 && start % 7 == 0 && end % 7 == 1) {\n                return\
    \ \"NO\"\n            } else if (length == 7 && start % 7", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start2 = interval2._2\n        val end2 = interval1._2\n        val\
    \ start3 = interval1._1\n        val end3 = interval2._1\n        val start4 =\
    \ interval2._2\n        val end4 = interval1._2\n        val start5 = interval1._1\n\
    \        val end5 = interval2._1\n        val start6 = interval2._2\n        val\
    \ end6 = interval1._2\n        val start7 = interval1._1\n        val end7 = interval2._1\n\
    \        val start8 = interval2._2\n        val end8 = interval1._2\n        val\
    \ start9 = interval1._1\n        val end9 = interval2._1\n        val start10\
    \ = interval2._2\n        val end10 = interval1._2\n        val start11 = interval1._1\n\
    \        val end11 = interval2._1\n        val start12 = interval2._2\n      \
    \  val end12 = interval1._2\n        val start13 = interval1._1\n        val end13\
    \ = interval2._1\n        val start14 = interval2._2\n        val end14 = interval1._2\n\
    \        val start15 = interval1._1\n        val end15 = interval2._1\n      \
    \  val start16 = interval2._2\n        val end16 = interval1._2\n        val start17\
    \ = interval1._1\n        val end17 = interval2._1\n        val start18 = interval2._2\n\
    \        val end18 = interval1._2\n        val start19 = interval1._1\n      \
    \  val end19 = interval2._1\n        val start20 = interval2._2\n        val end20\
    \ = interval1._2\n        val start21 = interval1._1\n        val end21 = interval2._1\n\
    \        val start22 = interval2._2\n        val end22 = interval1._2\n      \
    \  val start23 = interval1._1\n        val end23 = interval2._1\n        val start24\
    \ = interval2._2\n        val end24 = interval1._2\n        val start25 = interval1._1\n\
    \        val end25 = interval2._1\n        val start26 = interval2._2\n      \
    \  val end26 = interval1._2\n        val start27 = interval1._1\n        val end27\
    \ = interval2._1\n        val start28 = interval2._2\n        val end28 = interval1._2\n\
    \        val start29 = interval1._1\n        val end29 = interval2._1\n      \
    \  val start30 = interval2._2\n        val end30 = interval1.", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ > 1) {\n            val start = start + length\n            val end = end -\
    \ length\n            val start2 = start2 + length2\n            val end2 = end2\
    \ - length2\n            val length = end - start\n            val length2 = end2\
    \ - start2\n            if (length2 == 0) {\n                if (length == 0)\
    \ {\n                    return \"NO\"\n                } else {\n           \
    \         return \"YES\"\n                }\n            }\n            if (length2\
    \ == 1) {\n                if (length == 1) {\n                    return \"YES\"\
    \n                } else {\n                    return \"NO\"\n              \
    \  }\n            }\n            if (length2 > 1) {\n                val start\
    \ = start + length\n                val end = end - length\n                val\
    \ start2 = start2 + length2\n                val end2 = end2 - length2\n     \
    \           val length = end - start\n                val length2 = end2 - start2\n\
    \                if (length2 == 0) {\n                    if (length == 0) {\n\
    \                        return \"NO\"\n                    } else {\n       \
    \                 return \"YES\"\n                    }\n                }\n \
    \               if (length2 == 1) {\n                    if (length == 1) {\n\
    \                        return \"YES\"\n                    } else {\n      \
    \                  return \"NO\"\n                    }\n                }\n \
    \               if (length2 > 1) {\n                    val start = start + length\n\
    \                    val end = end - length\n                    val start2 =\
    \ start2 + length2\n                    val end2 = end2 - length2\n          \
    \          val length = end - start\n                    val length2 = end2 -\
    \ start2\n                    if (length2 == 0) {\n                        if\
    \ (length == 0) {\n                            return \"NO\"\n               \
    \         } else {\n                            return \"YES\"\n             \
    \           }\n                    }\n                    if (length2 == 1) {\n\
    \                        if (length == 1) {\n                            return\
    \ \"YES\"\n                        } else {\n                            return\
    \ \"NO\"\n                        }\n                    }\n                 \
    \   if (length2 > 1) {\n                        val start = start + length\n \
    \                       val end = end - length\n                        val start2\
    \ = start2 + length2\n                        val end2 = end2 - length2\n    \
    \                    val length = end - start\n                        val length2\
    \ = end2 - start2\n                        if (length2 == 0) {\n             \
    \               if (length == 0) {\n                                return \"\
    NO\"\n                            } else {\n                                return\
    \ \"YES\"\n                            }\n                        }\n        \
    \                if (length2 == 1) {\n                            if (length ==\
    \ 1) {\n                                return \"YES\"\n                     \
    \       } else {\n                                return \"NO\"\n", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 2) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 == 3) {\n            if (length == 1) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length2 == 4) {\n            if (length == 1)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 == 5) {\n           \
    \ if (length == 1) {\n                return \"NO\"\n            } else {\n  \
    \              return \"YES\"\n            }\n        }\n        if (length2 ==\
    \ 6) {\n            if (length == 1) {\n                return \"NO\"\n      \
    \      } else {\n                return \"YES\"\n            }\n        }\n  \
    \      if (length2 == 7) {\n            if (length == 1) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 == 8) {\n            if (length == 1) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 == 9) {\n            if (length\
    \ == 1) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 10) {\n \
    \           if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 11) {\n            if (length == 1) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 == 12) {\n            if (length == 1) {\n              \
    \  return \"NO\"\n            } else {\n                return \"YES\"\n     \
    \       }\n        }\n        if (length2 == 13) {\n            if (length ==\
    \ 1) {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 == 14) {\n          \
    \  if (length == 1) {\n                return \"NO\"\n            } else {\n \
    \               return \"YES\"\n            }\n        }\n        if (length2\
    \ == 15) {\n            if (length == 1) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 == 16) {\n            if (length == 1) {\n              \
    \  return \"NO\"\n            } else {\n                return \"YES\"\n     \
    \       }\n        }\n        if (length2 == 17) {\n            if (length ==\
    \ 1) {\n                return \"NO", "        val start = interval1._1\n    \
    \    val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val startMin = math.min(start, start2)\n        val\
    \ startMax = math.max(start, start2)\n        val endMin = math.min(end, end2)\n\
    \        val endMax = math.max(end, end2)\n        val startMin2 = math.min(start2,\
    \ end)\n        val startMax2 = math.max(start2, end)\n        val endMin2 = math.min(end2,\
    \ start)\n        val endMax2 = math.max(end2, start)\n        val startMin3 =\
    \ math.min(start2, end2)\n        val startMax3 = math.max(start2, end2)\n   \
    \     val endMin3 = math.min(end2, start2)\n        val endMax3 = math.max(end2,\
    \ start2)\n        val startMin4 = math.min(start2, end2)\n        val startMax4\
    \ = math.max(start2, end2)\n        val endMin4 = math.min(end2, start2)\n   \
    \     val endMax4 = math.max(end2, start2)\n        val startMin5 = math.min(start2,\
    \ end2)\n        val startMax5 = math.max(start2, end2)\n        val endMin5 =\
    \ math.min(end2, start2)\n        val endMax5 = math.max(end2, start2)\n     \
    \   val startMin6 = math.min(start2, end2)\n        val startMax6 = math.max(start2,\
    \ end2)\n        val endMin6 = math.min(end2, start2)\n        val endMax6 = math.max(end2,\
    \ start2)\n        val startMin7 = math.min(start2, end2)\n        val startMax7\
    \ = math.max(start2, end2)\n        val endMin7 = math.min(end2, start2)\n   \
    \     val endMax7 = math.max(end2, start2)\n        val startMin8 = math.min(start2,\
    \ end2)\n        val startMax8 = math.max(start2, end2)\n        val endMin8 =\
    \ math.min(end2, start2)\n        val endMax8 = math.max(end2, start2)\n     \
    \   val startMin9 = math.min(start2, end2)\n        val startMax9 = math.max(start2,\
    \ end2)\n        val endMin9 = math.min(end2, start2)\n        val endMax9 = math.max(end2,\
    \ start2)\n        val startMin10 = math.min(start2, end2)\n        val startMax10\
    \ = math.max(start2, end2)\n        val endMin10 = math.min(end2, start2)\n  \
    \      val endMax10 = math.max(end2, start2)\n        val startMin11 = math.min(start2,\
    \ end", "        val start = interval1._1\n        val end = interval2._1\n  \
    \      val start2 = interval2._2\n        val end2 = interval2._2\n        val\
    \ start = interval1._2\n        val end = interval1._2\n        val start2 = interval1._2\n\
    \        val end2 = interval1._2\n        val start = interval2._2\n        val\
    \ end = interval2._2\n        val start2 = interval2._2\n        val end2 = interval2._2\n\
    \        val start = interval1._1\n        val end = interval1._1\n        val\
    \ start2 = interval1._1\n        val end2 = interval1._1\n        val start =\
    \ interval2._1\n        val end = interval2._1\n        val start2 = interval2._1\n\
    \        val end2 = interval2._1\n        val start = interval1._1\n        val\
    \ end = interval1._1\n        val start2 = interval1._1\n        val end2 = interval1._1\n\
    \        val start = interval2._1\n        val end = interval2._1\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._1\n        val start =\
    \ interval1._1\n        val end = interval1._1\n        val start2 = interval1._1\n\
    \        val end2 = interval1._1\n        val start = interval2._1\n        val\
    \ end = interval2._1\n        val start2 = interval2._1\n        val end2 = interval2._1\n\
    \        val start = interval1._1\n        val end = interval1._1\n        val\
    \ start2 = interval1._1\n        val end2 = interval1._1\n        val start =\
    \ interval2._1\n        val end = interval2._1\n        val start2 = interval2._1\n\
    \        val end2 = interval2._1\n        val start = interval1._1\n        val\
    \ end = interval1._1\n        val start2 = interval1._1\n        val end2 = interval1._1\n\
    \        val start = interval2._1\n        val end = interval2._1\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._1\n        val start =\
    \ interval1._1\n        val end = interval1._1\n        val start2 = interval1._1\n\
    \        val end2 = interval1._1\n        val start = interval2._1\n        val\
    \ end = interval2._1\n        val start2 = interval2._1\n        val end2 = interval2._1\n\
    \        val start = interval1._1\n        val end = interval1._1\n        val\
    \ start2 = interval1._1\n        val end2 = interval1._1\n        val start =\
    \ interval2._1\n        val end = interval2._1\n        val start2 = interval2._1\n\
    \        val end2 = interval2._1\n        val ", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == end) {\n  \
    \          if (start2 == end2) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start\n     \
    \   val end4 = end\n        val start5 = start3\n        val end5 = end3\n   \
    \     val start6 = start4\n        val end6 = end4\n        val start7 = start5\n\
    \        val end7 = end5\n        val start8 = start6\n        val end8 = end6\n\
    \        val start9 = start7\n        val end9 = end7\n        val start10 = start8\n\
    \        val end10 = end8\n        val start11 = start9\n        val end11 = end9\n\
    \        val start12 = start10\n        val end12 = end10\n        val start13\
    \ = start11\n        val end13 = end11\n        val start14 = start12\n      \
    \  val end14 = end12\n        val start15 = start13\n        val end15 = end13\n\
    \        val start16 = start14\n        val end16 = end14\n        val start17\
    \ = start15\n        val end17 = end15\n        val start18 = start16\n      \
    \  val end18 = end16\n        val start19 = start17\n        val end19 = end17\n\
    \        val start20 = start18\n        val end20 = end18\n        val start21\
    \ = start19\n        val end21 = end19\n        val start22 = start20\n      \
    \  val end22 = end20\n        val start23 = start21\n        val end23 = end21\n\
    \        val start24 = start22\n        val end24 = end22\n        val start25\
    \ = start23\n        val end25 = end23\n        val start26 = start24\n      \
    \  val end26 = end24\n        val start27 = start25\n        val end27 = end25\n\
    \        val start28 = start26\n        val end28 = end26\n        val start29\
    \ = start27\n        val end29 = end", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.min(start, start2)\n        val end\
    \ = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        val primes = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primes2\
    \ = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97)\n        val primes3 = List(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primes4 = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primes5 = List(2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97)\n        val primes6 = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primes7\
    \ = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97)\n        val primes8 = List(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primes9 = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primes10 = List(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primes11 = List(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primes12 = List(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, ", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start\n        val end4 = end\n        val start5\
    \ = start3\n        val end5 = end3\n        val start6 = start4\n        val\
    \ end6 = end4\n        val start7 = start5\n        val end7 = end5\n        val\
    \ start8 = start6\n        val end8 = end6\n        val start9 = start7\n    \
    \    val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end27\n        val start30 = start28\n        val end30 = end28\n  \
    \      val start31 = start29\n        val end31 = end29\n        val start32 =\
    \ start30\n        val end32 = end30\n        val start33 = start31\n        val\
    \ end33 = end31\n        val start34 = start32\n", "        val start = interval1._1\n\
    \        val end = interval2._1\n        val start2 = interval2._2\n        val\
    \ end2 = interval1._2\n        val start = math.max(start, start2)\n        val\
    \ end = math.min(end, end2)\n        val length = end - start\n        val prime\
    \ = length.toString.toInt\n        if (prime == 0) {\n            \"NO\"\n   \
    \     } else {\n            \"YES\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) \"\
    NO\" else \"YES\"\n        } else {\n            if (length == 0) \"NO\" else\
    \ \"YES\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length2 == 1) {\n            if (length == 1) {\n                \"YES\"\n\
    \            } else {\n                \"NO\"\n            }\n        } else {\n\
    \            val mid = (start + end) / 2\n            val mid2 = start2 + end2\n\
    \            val mid3 = mid / 2\n            val mid4 = mid3 / 2\n           \
    \ val mid5 = mid4 / 2\n            val mid6 = mid5 / 2\n            val mid7 =\
    \ mid6 / 2\n            val mid8 = mid7 / 2\n            val mid9 = mid8 / 2\n\
    \            val mid10 = mid9 / 2\n            val mid11 = mid10 / 2\n       \
    \     val mid12 = mid11 / 2\n            val mid13 = mid12 / 2\n            val\
    \ mid14 = mid13 / 2\n            val mid15 = mid14 / 2\n            val mid16\
    \ = mid15 / 2\n            val mid17 = mid16 / 2\n            val mid18 = mid17\
    \ / 2\n            val mid19 = mid18 / 2\n            val mid20 = mid19 / 2\n\
    \            val mid21 = mid20 / 2\n            val mid22 = mid21 / 2\n      \
    \      val mid23 = mid22 / 2\n            val mid24 = mid23 / 2\n            val\
    \ mid25 = mid24 / 2\n            val mid26 = mid25 / 2\n            val mid27\
    \ = mid26 / 2\n            val mid28 = mid27 / 2\n            val mid29 = mid28\
    \ / 2\n            val mid30 = mid29 / 2\n            val mid31 = mid30 / 2\n\
    \            val mid32 = mid31 / 2\n            val mid33 = mid32 / 2\n      \
    \      val mid34 = mid33 / 2\n            val mid35 = mid34 / 2\n            val\
    \ mid36 = mid35 / 2\n            val mid37 = mid36 / 2\n            val mid38\
    \ = mid37 / 2\n            val mid39 = mid38 / 2\n            val mid40 = mid39\
    \ / 2\n            val mid41 = mid40 / 2\n            val mid42 = mid41 / 2\n\
    \            val mid43 = mid42 / 2\n            val mid44 = mid43 / 2\n      \
    \      val mid", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start2 = interval2._2\n        val end2 = interval1._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length == length2\n        if (isPrime) {\n            return \"YES\"\n  \
    \      } else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length2 > length)\
    \ \"NO\"\n        else if (length2 < length) \"NO\"\n        else if (length2\
    \ <= length && length <= length2) \"YES\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) {\n            \"NO\"\n        } else {\n            if (length2 > length)\
    \ {\n                val temp = start\n                start = end\n         \
    \       end = temp\n                val temp2 = start2\n                start2\
    \ = end2\n                end2 = temp2\n            }\n            val length\
    \ = end - start\n            val length2 = end2 - start2\n            if (length\
    \ == 0 || length2 == 0) {\n                \"NO\"\n            } else {\n    \
    \            if (length2 > length) {\n                    val temp = start\n \
    \                   start = end\n                    end = temp\n            \
    \        val temp2 = start2\n                    start2 = end2\n             \
    \       end2 = temp2\n                }\n                val length = end - start\n\
    \                val length2 = end2 - start2\n                if (length == 0\
    \ || length2 == 0) {\n                    \"NO\"\n                } else {\n \
    \                   if (length2 > length) {\n                        val temp\
    \ = start\n                        start = end\n                        end =\
    \ temp\n                        val temp2 = start2\n                        start2\
    \ = end2\n                        end2 = temp2\n                    }\n      \
    \              val length = end - start\n                    val length2 = end2\
    \ - start2\n                    if (length == 0 || length2 == 0) {\n         \
    \               \"NO\"\n                    } else {\n                       \
    \ if (length2 > length) {\n                            val temp = start\n    \
    \                        start = end\n                            end = temp\n\
    \                            val temp2 = start2\n                            start2\
    \ = end2\n                            end2 = temp2\n                        }\n\
    \                        val length = end - start\n                        val\
    \ length2 = end2 - start2\n                        if (length == 0 || length2\
    \ == 0) {\n                            \"NO\"\n                        } else\
    \ {\n                            if (length2 > length) {\n                   \
    \             val temp = start\n                                start = end\n\
    \                                end = temp\n                                val\
    \ temp2 = start2\n                                start2 = end2\n            \
    \                    end2 = temp2\n                            }\n           \
    \                 val length = end - start\n                            val length2\
    \ = end2 - start2\n                            if (length == 0 || length2 == 0)\
    \ {\n                                \"NO\"\n                            } else\
    \ {\n                                if (length2 > length) {\n               \
    \                     val temp = start\n                                    start\
    \ = end\n                                    end = temp\n                    \
    \                val temp2 = start2\n                                    start2\
    \ = end2\n                                    end2 = temp2\n                 \
    \               }\n                                val length = end - start\n\
    \                                val length2 = end2 - start2\n               \
    \                 if (length == 0 || length2 == 0) {\n                       \
    \             \"NO\"\n                                } else {\n             \
    \                       if (length2 > length) {\n                            \
    \            val temp = start\n                                        start =\
    \ end\n                                        end = temp\n                  \
    \                      val temp2 = start2\n                                  \
    \      start2 = ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val length3 = length / length2\n        if (length3 == 1) {\n       \
    \     if (length == 1) {\n                return \"YES\"\n            } else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length3\
    \ == 2) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length3 == 3) {\n            if (length == 1) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length3 == 4) {\n            if (length == 1)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length3 == 5) {\n           \
    \ if (length == 1) {\n                return \"NO\"\n            } else {\n  \
    \              return \"YES\"\n            }\n        }\n        if (length3 ==\
    \ 6) {\n            if (length == 1) {\n                return \"NO\"\n      \
    \      } else {\n                return \"YES\"\n            }\n        }\n  \
    \      if (length3 == 7) {\n            if (length == 1) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length3 == 8) {\n            if (length == 1) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length3 == 9) {\n            if (length\
    \ == 1) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length3 == 10) {\n \
    \           if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length3\
    \ == 11) {\n            if (length == 1) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length3 == 12) {\n            if (length == 1) {\n              \
    \  return \"NO\"\n            } else {\n                return \"YES\"\n     \
    \       }\n        }\n        if (length3 == 13) {\n            if (length ==\
    \ 1) {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length3 == 14) {\n          \
    \  if (length == 1) {\n                return \"NO\"\n            } else {\n \
    \               return \"YES\"\n            }\n        }\n        if (length3\
    \ == 15) {\n            if (length == 1) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length3 == 16) {\n            if (", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) {\n         \
    \   val start = interval1._1\n            val end = interval1._2\n           \
    \ val start2 = interval2._1\n            val end2 = interval2._2\n           \
    \ val start = interval1._1\n            val end = interval1._2\n            val\
    \ start2 = interval2._1\n            val end2 = interval2._2\n            val\
    \ start = interval1._1\n            val end = interval1._2\n            val start2\
    \ = interval2._1\n            val end2 = interval2._2\n            val start =\
    \ interval1._1\n            val end = interval1._2\n            val start2 = interval2._1\n\
    \            val end2 = interval2._2\n            val start = interval1._1\n \
    \           val end = interval1._2\n            val start2 = interval2._1\n  \
    \          val end2 = interval2._2\n            val start = interval1._1\n   \
    \         val end = interval1._2\n            val start2 = interval2._1\n    \
    \        val end2 = interval2._2\n            val start = interval1._1\n     \
    \       val end = interval1._2\n            val start2 = interval2._1\n      \
    \      val end2 = interval2._2\n            val start = interval1._1\n       \
    \     val end = interval1._2\n            val start2 = interval2._1\n        \
    \    val end2 = interval2._2\n            val start = interval1._1\n         \
    \   val end = interval1._2\n            val start2 = interval2._1\n          \
    \  val end2 = interval2._2\n            val start = interval1._1\n           \
    \ val end = interval1._2\n            val start2 = interval2._1\n            val\
    \ end2 = interval2._2\n            val start = interval1._1\n            val end\
    \ = interval1._2\n            val start2 = interval2._1\n            val end2\
    \ = interval2._2\n            val start = interval1._1\n            val end =\
    \ interval1._2\n            val start2 = interval2._1\n            val end2 =\
    \ interval2._2\n            val start = interval1._1\n            val end = interval1._2\n\
    \            val start2 = interval2._1\n            val end2 = interval2._2\n\
    \            val start = interval1._1\n            val end = interval1._2\n  \
    \          val start2 = interval2._1\n            val end2 = interval2._2\n  \
    \          val start = interval1._1\n            val end = interval1._2\n    \
    \        val start2 = interval2._1\n            val end2 = interval2._2\n    \
    \        val start = interval1._1\n            val end = interval1._2\n      \
    \      val start2 = interval2._1\n", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        val isPrime = length\
    \ == length2\n        if (isPrime) {\n            return \"YES\"\n        } else\
    \ {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        val mid = length / 2\n        val mid2\
    \ = length2 / 2\n        if (mid == mid2) {\n            if (length == 1) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        val mid3 = mid * mid\n        val\
    \ mid4 = mid2 * mid2\n        if (mid3 == mid4) {\n            if (length == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        val mid5 = mid * mid2\n        val\
    \ mid6 = mid2 * mid2\n        if (mid5 == mid6) {\n            if (length == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        val mid7 = mid * mid3\n        val\
    \ mid8 = mid3 * mid3\n        if (mid7 == mid8) {\n            if (length == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        val mid9 = mid * mid4\n        val\
    \ mid10 = mid * mid5\n        val mid11 = mid * mid6\n        val mid12 = mid\
    \ * mid7\n        val mid13 = mid * mid8\n        val mid14 = mid * mid9\n   \
    \     val mid15 = mid * mid10\n        val mid16 = mid * mid11\n        val mid17\
    \ = mid * mid12\n        val mid18 = mid * mid13\n        val mid19 = mid * mid14\n\
    \        val mid20 = mid * mid15\n        val mid21 = mid * mid16\n        val\
    \ mid22 = mid * mid17\n        val mid23 = mid * mid18\n        val mid24 = mid\
    \ * mid19\n        val mid25 = mid * mid20\n        val mid26 = mid * mid21\n\
    \        val mid27 = mid * mid22\n        val mid28 = mid * mid23\n        val\
    \ mid29 = mid * mid24\n        val mid30 = mid * mid25\n        val mid31 = mid\
    \ * mid26\n        val mid32 = mid * mid27\n        val mid33 = mid * mid28\n\
    \        val mid34 = mid ", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length == 1) \"YES\"\n        else if (length2 == 1) \"YES\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length == length2 - 1) \"NO\"\
    \n        else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval2._2\n        val end2 = interval1._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == end) {\n            if (start2 == end2) {\n                return \"YES\"\
    \n            } else {\n                return \"NO\"\n            }\n       \
    \ }\n        val start3 = start2\n        val end3 = end2\n        val start4\
    \ = start\n        val end4 = end\n        val start5 = start3\n        val end5\
    \ = end3\n        val start6 = start4\n        val end6 = end4\n        val start7\
    \ = start5\n        val end7 = end5\n        val start8 = start6\n        val\
    \ end8 = end6\n        val start9 = start7\n        val end9 = end7\n        val\
    \ start10 = start8\n        val end10 = end8\n        val start11 = start9\n \
    \       val end11 = end9\n        val start12 = start10\n        val end12 = end10\n\
    \        val start13 = start11\n        val end13 = end11\n        val start14\
    \ = start12\n        val end14 = end12\n        val start15 = start13\n      \
    \  val end15 = end13\n        val start16 = start14\n        val end16 = end14\n\
    \        val start17 = start15\n        val end17 = end15\n        val start18\
    \ = start16\n        val end18 = end16\n        val start19 = start17\n      \
    \  val end19 = end17\n        val start20 = start18\n        val end20 = end18\n\
    \        val start21 = start19\n        val end21 = end19\n        val start22\
    \ = start20\n        val end22 = end20\n        val start23 = start21\n      \
    \  val end23 = end21\n        val start24 = start22\n        val end24 = end22\n\
    \        val start25 = start23\n        val end25 = end23\n        val start26\
    \ = start24\n        val end26 = end24\n        val start27 = start25\n      \
    \  val end27 = end25\n        val start28 = start26\n        val end28 = end26\n\
    \        val start29 = start27\n        val end29 = end", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length2 == 1) {\n            if (length == 1) {\n                \"YES\"\n\
    \            } else {\n                \"NO\"\n            }\n        } else {\n\
    \            val start3 = start2 + 1\n            val end3 = end2 - 1\n      \
    \      val start4 = start2 + 1\n            val end4 = end2 - 1\n            val\
    \ start5 = start2 + 1\n            val end5 = end2 - 1\n            val start6\
    \ = start2 + 1\n            val end6 = end2 - 1\n            val start7 = start2\
    \ + 1\n            val end7 = end2 - 1\n            val start8 = start2 + 1\n\
    \            val end8 = end2 - 1\n            val start9 = start2 + 1\n      \
    \      val end9 = end2 - 1\n            val start10 = start2 + 1\n           \
    \ val end10 = end2 - 1\n            val start11 = start2 + 1\n            val\
    \ end11 = end2 - 1\n            val start12 = start2 + 1\n            val end12\
    \ = end2 - 1\n            val start13 = start2 + 1\n            val end13 = end2\
    \ - 1\n            val start14 = start2 + 1\n            val end14 = end2 - 1\n\
    \            val start15 = start2 + 1\n            val end15 = end2 - 1\n    \
    \        val start16 = start2 + 1\n            val end16 = end2 - 1\n        \
    \    val start17 = start2 + 1\n            val end17 = end2 - 1\n            val\
    \ start18 = start2 + 1\n            val end18 = end2 - 1\n            val start19\
    \ = start2 + 1\n            val end19 = end2 - 1\n            val start20 = start2\
    \ + 1\n            val end20 = end2 - 1\n            val start21 = start2 + 1\n\
    \            val end21 = end2 - 1\n            val start22 = start2 + 1\n    \
    \        val end22 = end2 - 1\n            val start23 = start2 + 1\n        \
    \    val end23 = end2 - 1\n            val start24 = start2 + 1\n            val\
    \ end24 = end2 - 1\n            val start25 = start2 + 1\n            val end25\
    \ = end2 - 1\n            val start26 = start2 + 1\n            val end26 = end2\
    \ - 1\n            val start27 = start2 + 1\n            val end27 = end2 - 1\n\
    \            ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        val prime = length / length2\n        if (prime == 1) {\n\
    \            return \"YES\"\n        } else {\n            return \"NO\"\n   \
    \     }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) \n        {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            if (start3 < end4 && start4 < end3) \n            {\n\
    \                val start5 = start3\n                val end5 = end3\n      \
    \          val start6 = start4\n                val end6 = end4\n            \
    \    if (start5 < end6 && start6 < end5) \n                {\n               \
    \     val start7 = start5\n                    val end7 = end5\n             \
    \       val start8 = start6\n                    val end8 = end6\n           \
    \         if (start7 < end8 && start8 < end7) \n                    {\n      \
    \                  val start9 = start7\n                        val end9 = end7\n\
    \                        val start10 = start8\n                        val end10\
    \ = end8\n                        if (start9 < end10 && start10 < end9) \n   \
    \                     {\n                            val start11 = start9\n  \
    \                          val end11 = end9\n                            val start12\
    \ = start10\n                            val end12 = end10\n                 \
    \           if (start11 < end12 && start12 < end11) \n                       \
    \     {\n                                val start13 = start11\n             \
    \                   val end13 = end11\n                                val start14\
    \ = start12\n                                val end14 = end12\n             \
    \                   if (start13 < end14 && start14 < end13) \n               \
    \                 {\n                                    val start15 = start13\n\
    \                                    val end15 = end13\n                     \
    \               val start16 = start14\n                                    val\
    \ end16 = end14\n                                    if (start15 < end16 && start16\
    \ < end15) \n                                    {\n                         \
    \               val start17 = start15\n                                      \
    \  val end17 = end15\n                                        val start18 = start16\n\
    \                                        val end18 = end16\n                 \
    \                       if (start17 < end18 && start18 < end17) \n           \
    \                             {\n                                            return\
    \ \"YES\"\n                                        }\n                       \
    \                 else \n                                        {\n         \
    \                                   return \"NO\"\n                          \
    \              }\n                                    }\n                    \
    \                else \n                                    {\n              \
    \                          return \"NO\"\n                                   \
    \ }\n                                }\n                                else \n\
    \                                {\n                                    return\
    \ \"NO\"\n                                }\n                            }\n \
    \                           else \n                            {\n           \
    \                     return \"NO\"\n                            }\n         \
    \               }\n                        else \n                        {\n\
    \                            return \"NO\"\n                        }\n      \
    \              }\n                    else \n                    {\n         \
    \               return \"NO\"\n                    }\n                }", "  \
    \      val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) \"NO\" else \"YES\"\n        } else if (length2 ==\
    \ 1) {\n            if (length == 1) \"YES\" else \"NO\"\n        } else {\n \
    \           val mid = (start + end2) / 2\n            if (length == 1) \"YES\"\
    \ else \"NO\"\n        }", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else if (length == 1) \"YES\" else \"NO\"", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            val start5\
    \ = start3\n            val end5 = end3\n            val start6 = start4\n   \
    \         val end6 = end4\n            val start7 = start5\n            val end7\
    \ = end5\n            val start8 = start6\n            val end8 = end6\n     \
    \       val start9 = start7\n            val end9 = end7\n            val start10\
    \ = start8\n            val end10 = end8\n            val start11 = start9\n \
    \           val end11 = end9\n            val start12 = start10\n            val\
    \ end12 = end10\n            val start13 = start11\n            val end13 = end11\n\
    \            val start14 = start12\n            val end14 = end12\n          \
    \  val start15 = start13\n            val end15 = end13\n            val start16\
    \ = start14\n            val end16 = end14\n            val start17 = start15\n\
    \            val end17 = end15\n            val start18 = start16\n          \
    \  val end18 = end16\n            val start19 = start17\n            val end19\
    \ = end17\n            val start20 = start18\n            val end20 = end18\n\
    \            val start21 = start19\n            val end21 = end19\n          \
    \  val start22 = start20\n            val end22 = end20\n            val start23\
    \ = start21\n            val end23 = end21\n            val start24 = start22\n\
    \            val end24 = end22\n            val start25 = start23\n          \
    \  val end25 = end23\n            val start26 = start24\n            val end26\
    \ = end24\n            val start27 = start25\n            val end27 = end25\n\
    \            val start28 = start26\n            val end28 = end26\n          \
    \  val start29 = start27\n            val end29 = end27\n            val start30\
    \ = start28\n            val end30 = end28\n            val start31 = start29\n\
    \            val end31 = end29\n            val start32 = start30\n          \
    \  val end32 = end30\n            val start33 = start31\n            val end33\
    \ = end", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length2 == 1)\
    \ {\n            if (length == 1) {\n                \"YES\"\n            } else\
    \ {\n                \"NO\"\n            }\n        } else if (length == 1) {\n\
    \            if (length2 == 1) {\n                \"YES\"\n            } else\
    \ {\n                \"NO\"\n            }\n        } else {\n            val\
    \ start3 = start + length\n            val end3 = start + length2\n          \
    \  val start4 = start2 + length2\n            val end4 = start2 + length\n   \
    \         val start5 = start2 + length\n            val end5 = start2 + length2\n\
    \            val start6 = start2 + length2\n            val end6 = start2 + length\n\
    \            val start7 = start2 + length2\n            val end7 = start2 + length\n\
    \            val start8 = start2 + length2\n            val end8 = start2 + length\n\
    \            val start9 = start2 + length2\n            val end9 = start2 + length\n\
    \            val start10 = start2 + length2\n            val end10 = start2 +\
    \ length\n            val start11 = start2 + length2\n            val end11 =\
    \ start2 + length\n            val start12 = start2 + length2\n            val\
    \ end12 = start2 + length\n            val start13 = start2 + length2\n      \
    \      val end13 = start2 + length\n            val start14 = start2 + length2\n\
    \            val end14 = start2 + length\n            val start15 = start2 + length2\n\
    \            val end15 = start2 + length\n            val start16 = start2 + length2\n\
    \            val end16 = start2 + length\n            val start17 = start2 + length2\n\
    \            val end17 = start2 + length\n            val start18 = start2 + length2\n\
    \            val end18 = start2 + length\n            val start19 = start2 + length2\n\
    \            val end19 = start2 + length\n            val start20 = start2 + length2\n\
    \            val end20 = start2 + length\n            val start21 = start2 + length2\n\
    \            val end21 = start2 + length\n            val start22 = start2 + length2\n\
    \            val end22 = start2 + length\n            val start23 = start2 + length2\n\
    \            val end23 = start2 + length\n            val start24 = start2 + length2\n\
    \            val end24 = start2 + length\n            val start25 = start2 + length2\n\
    \            val end", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start < start2) {\n            if (end < start2) {\n      \
    \          return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        } else if (end < start2) {\n            return \"NO\"\
    \n        } else {\n            return \"YES\"\n        }", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length2 == 2) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length\
    \ == 3) {\n            if (length2 == 3) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == 4) {\n            if (length2 == 4) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length == 5) {\n            if (length2 == 5)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 6) {\n            if\
    \ (length2 == 6) {\n                return \"YES\"\n            } else {\n   \
    \             return \"NO\"\n            }\n        }\n        if (length == 7)\
    \ {\n            if (length2 == 7) {\n                return \"YES\"\n       \
    \     } else {\n                return \"NO\"\n            }\n        }\n    \
    \    if (length == 8) {\n            if (length2 == 8) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == 9) {\n            if (length2 == 9) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length == 10) {\n            if (length2\
    \ == 10) {\n                return \"YES\"\n            } else {\n           \
    \     return \"NO\"\n            }\n        }\n        if (length == 11) {\n \
    \           if (length2 == 11) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length == 12) {\n            if (length2 == 12) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length == 13) {\n            if (length2 == 13) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length == 14) {\n            if (length2\
    \ == 14) {\n                return \"YES\"\n            } else {\n           \
    \     return \"NO\"\n            }\n        }\n        if (length == 15) {\n \
    \           if (length2 == 15) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length == 16) {\n            if (length2 == 16) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length == 17) {\n            if (length2 == 17", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        } else {\n       \
    \     val length = length / 2\n            val length2 = length2 / 2\n       \
    \     val isPrime = length == length2\n            if (isPrime) {\n          \
    \      return \"YES\"\n            } else {\n                return \"NO\"\n \
    \           }\n        }", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length == length2) {\n            \"YES\"\n        } else {\n            val\
    \ start3 = start + length\n            val end3 = end + length\n            val\
    \ start4 = start2 + length2\n            val end4 = end2 + length2\n         \
    \   if (start3 <= start4 && end3 >= end4) {\n                \"YES\"\n       \
    \     } else {\n                \"NO\"\n            }\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) \"NO\" else \"YES\"\n        } else {\n            if (length == 0) \"\
    NO\" else \"YES\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval2._1\n        val start2 = interval2._2\n        val end2 = interval1._2\n\
    \        val start3 = interval1._1\n        val end3 = interval2._1\n        val\
    \ start4 = interval1._2\n        val end4 = interval2._2\n        val start5 =\
    \ interval2._1\n        val end5 = interval1._1\n        val start6 = interval2._2\n\
    \        val end6 = interval1._2\n        val start7 = interval1._1\n        val\
    \ end7 = interval2._1\n        val start8 = interval2._2\n        val end8 = interval1._2\n\
    \        val start9 = interval1._1\n        val end9 = interval2._1\n        val\
    \ start10 = interval2._2\n        val end10 = interval1._2\n        val start11\
    \ = interval1._1\n        val end11 = interval2._1\n        val start12 = interval2._2\n\
    \        val end12 = interval1._2\n        val start13 = interval1._1\n      \
    \  val end13 = interval2._1\n        val start14 = interval2._2\n        val end14\
    \ = interval1._2\n        val start15 = interval1._1\n        val end15 = interval2._1\n\
    \        val start16 = interval2._2\n        val end16 = interval1._2\n      \
    \  val start17 = interval1._1\n        val end17 = interval2._1\n        val start18\
    \ = interval2._2\n        val end18 = interval1._2\n        val start19 = interval1._1\n\
    \        val end19 = interval2._1\n        val start20 = interval2._2\n      \
    \  val end20 = interval1._2\n        val start21 = interval1._1\n        val end21\
    \ = interval2._1\n        val start22 = interval2._2\n        val end22 = interval1._2\n\
    \        val start23 = interval1._1\n        val end23 = interval2._1\n      \
    \  val start24 = interval2._2\n        val end24 = interval1._2\n        val start25\
    \ = interval1._1\n        val end25 = interval2._1\n        val start26 = interval2._2\n\
    \        val end26 = interval1._2\n        val start27 = interval1._1\n      \
    \  val end27 = interval2._1\n        val start28 = interval2._2\n        val end28\
    \ = interval1._2\n        val start29 = interval1._1\n        val end29 = interval2._1\n\
    \        val start30 = interval2._2\n        val end30 = interval1.", "      \
    \  val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length\
    \ == 2) \"YES\"\n        else if (length == 3) \"YES\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length == length2 + 1) \"YES\"\n     \
    \   else if (length == length2 + 2) \"YES\"\n        else if (length == length2\
    \ + 3) \"YES\"\n        else if (length == length2 + 4) \"YES\"\n        else\
    \ if (length == length2 + 5) \"YES\"\n        else if (length == length2 + 6)\
    \ \"YES\"\n        else if (length == length2 + 7) \"YES\"\n        else if (length\
    \ == length2 + 8) \"YES\"\n        else if (length == length2 + 9) \"YES\"\n \
    \       else if (length == length2 + 10) \"YES\"\n        else if (length == length2\
    \ + 11) \"YES\"\n        else if (length == length2 + 12) \"YES\"\n        else\
    \ if (length == length2 + 13) \"YES\"\n        else if (length == length2 + 14)\
    \ \"YES\"\n        else if (length == length2 + 15) \"YES\"\n        else if (length\
    \ == length2 + 16) \"YES\"\n        else if (length == length2 + 17) \"YES\"\n\
    \        else if (length == length2 + 18) \"YES\"\n        else if (length ==\
    \ length2 + 19) \"YES\"\n        else if (length == length2 + 20) \"YES\"\n  \
    \      else if (length == length2 + 21) \"YES\"\n        else if (length == length2\
    \ + 22) \"YES\"\n        else if (length == length2 + 23) \"YES\"\n        else\
    \ if (length == length2 + 24) \"YES\"\n        else if (length == length2 + 25)\
    \ \"YES\"\n        else if (length == length2 + 26) \"YES\"\n        else if (length\
    \ == length2 + 27) \"YES\"\n        else if (length == length2 + 28) \"YES\"\n\
    \        else if (length == length2 + 29) \"YES\"\n        else if (length ==\
    \ length2 + 30) \"YES\"\n        else if (length == length2 + 31) \"YES\"\n  \
    \      else if (length == length2 + 32) \"YES\"\n        else if (length == length2\
    \ + 33) \"YES\"\n        else if (length == length2 + 34) \"YES\"\n        else\
    \ if (length == length2 + 35) \"YES\"\n        else if (length == length2 + 36)\
    \ \"YES\"\n        else if (length == length2 + 37) \"YES\"\n        else if (length\
    \ == length2 + 38) \"YES\"\n        else if (length == length2 + 39) \"YES\"\n\
    \        else if (length == length2 + 40) \"YES\"\n        else if (length ==\
    \ length2 + 41) \"YES\"\n        else if (length == length2 + 42) \"YES\"\n  \
    \      else if (", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start = interval1._2\n        val end = interval2._2\n        val\
    \ length = end - start\n        if (length == 0) \"NO\" else \"YES\"", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        val isPrime = length == 2 || length == 3 && start % length == 0 && end\
    \ % length == 0\n        if (isPrime)\n            \"YES\"\n        else\n   \
    \         \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"YES\"\n \
    \       }\n        if (start == start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end < end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end == end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end == end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end == end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end == end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length == 1) \"\
    YES\"\n        else if (length2 == 1) \"YES\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val result = length * length2\n        val isPrime =\
    \ result % 2 == 0\n        if (isPrime) {\n            \"YES\"\n        } else\
    \ {\n            \"NO\"\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        val result = length\
    \ * length2\n        if (result < 2) \"NO\"\n        else if (result % 2 == 0)\
    \ \"YES\"\n        else \"NO\"", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val length = end - start\n\
    \            val length2 = end2 - start2\n            if (length == length2) {\n\
    \                if (length == 2) {\n                    if (start <= end2 &&\
    \ start2 <= end) {\n                        val prime = length\n             \
    \           if (prime == 1) {\n                            return \"YES\"\n  \
    \                      } else {\n                            return \"NO\"\n \
    \                       }\n                    } else {\n                    \
    \    return \"NO\"\n                    }\n                } else {\n        \
    \            if (start <= end2 && start2 <= end) {\n                        val\
    \ prime = length\n                        if (prime == 1) {\n                \
    \            return \"YES\"\n                        } else {\n              \
    \              return \"NO\"\n                        }\n                    }\
    \ else {\n                        return \"NO\"\n                    }\n     \
    \           }\n            } else {\n                if (length == 2) {\n    \
    \                if (start <= end2 && start2 <= end) {\n                     \
    \   val prime = length\n                        if (prime == 1) {\n          \
    \                  return \"YES\"\n                        } else {\n        \
    \                    return \"NO\"\n                        }\n              \
    \      } else {\n                        return \"NO\"\n                    }\n\
    \                } else {\n                    if (start <= end2 && start2 <=\
    \ end) {\n                        val prime = length\n                       \
    \ if (prime == 1) {\n                            return \"YES\"\n            \
    \            } else {\n                            return \"NO\"\n           \
    \             }\n                    } else {\n                        return\
    \ \"NO\"\n                    }\n                }\n            }\n        } else\
    \ {\n            if (start < end2 && start2 < end) {\n                val length\
    \ = end - start\n                val length2 = end2 - start2\n               \
    \ if (length == length2) {\n                    if (length == 2) {\n         \
    \               if (start <= end2 && start2 <= end) {\n                      \
    \      val prime = length\n                            if (prime == 1) {\n   \
    \                             return \"YES\"\n                            } else\
    \ {\n                                return \"NO\"\n                         \
    \   }\n                        } else {\n                            return \"\
    NO\"\n                        }\n                    } else {\n              \
    \          if (start <= end2 && start2 <= end) {\n                           \
    \ val prime = length\n                            if (prime == 1) {\n        \
    \                        return \"YES\"\n                            } else {\n\
    \                                return \"NO\"\n                            }\n\
    \                        } else {\n                            return \"NO\"\n\
    \                        }\n                    }\n                } else {\n\
    \                    if (length == 2) {\n                        if (start <=\
    \ end2 && start2 <= end) {\n                            val prime = length\n \
    \                           if (prime == 1) {\n                              \
    \  return \"YES\"\n                            } else {\n                    \
    \            return \"NO\"\n                            }\n                  \
    \      } else {\n                            return \"NO\"\n                 \
    \       }\n                    } else {\n                        if (start <=\
    \ end2 && start2 <= end) {\n                            val prime = length\n \
    \                           if (prime == 1) {\n                              \
    \  return \"YES\"\n                            } else {\n                    \
    \            return \"NO\"\n", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val start3 = start2\n            val end3 = end2\n            val\
    \ start4 = start\n            val end4 = end\n            if (start3 < end4 &&\
    \ start4 < end3) {\n                val start5 = start3\n                val end5\
    \ = end3\n                val start6 = start4\n                val end6 = end4\n\
    \                if (start5 < end6 && start6 < end5) {\n                    val\
    \ start7 = start5\n                    val end7 = end5\n                    val\
    \ start8 = start6\n                    val end8 = end6\n                    if\
    \ (start7 < end8 && start8 < end7) {\n                        val start9 = start7\n\
    \                        val end9 = end7\n                        val start10\
    \ = start8\n                        val end10 = end8\n                       \
    \ if (start9 < end10 && start10 < end9) {\n                            val start11\
    \ = start9\n                            val end11 = end9\n                   \
    \         val start12 = start10\n                            val end12 = end10\n\
    \                            if (start11 < end12 && start12 < end11) {\n     \
    \                           val start13 = start11\n                          \
    \      val end13 = end11\n                                val start14 = start12\n\
    \                                val end14 = end12\n                         \
    \       if (start13 < end14 && start14 < end13) {\n                          \
    \          val start15 = start13\n                                    val end15\
    \ = end13\n                                    val start16 = start14\n       \
    \                             val end16 = end14\n                            \
    \        if (start15 < end16 && start16 < end15) {\n                         \
    \               val start17 = start15\n                                      \
    \  val end17 = end15\n                                        val start18 = start16\n\
    \                                        val end18 = end16\n                 \
    \                       if (start17 < end18 && start18 < end17) {\n          \
    \                                  return \"YES\"\n                          \
    \              } else {\n                                            return \"\
    NO\"\n                                        }\n                            \
    \        } else {\n                                        return \"NO\"\n   \
    \                                 }\n                                } else {\n\
    \                                    return \"NO\"\n                         \
    \       }\n                            } else {\n                            \
    \    return \"NO\"\n                            }\n                        } else\
    \ {\n                            return \"NO\"\n                        }\n  \
    \                  } else {\n                        return \"NO\"\n         \
    \           }\n                } else {\n                    return \"NO\"\n \
    \               }\n            } else {\n                return \"NO\"\n     \
    \       }\n        } else {\n            return \"NO\"\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        if (startMinusEnd < 0 || start2MinusEnd2\
    \ < 0 || start2MinusEnd2 > startMinusEnd) {\n            return \"NO\"\n     \
    \   }\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        if (startMinusEnd2 < 0 || start2MinusEnd2 < 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        if (startMinusEnd2\
    \ == startMinusEnd) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == start2MinusEnd) {\n            return \"YES\"\n        }\n        if (start2MinusEnd2\
    \ == startMinusEnd2) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ end - start\n        val start2MinusEnd2 = end2 - start2\n        val startMinusEnd2\
    \ = start2 - start\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = end - start2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        val isPrime\
    \ = length2 % length == 0\n        if (isPrime) {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) \n\
    \            if (start < start2 && end < end2) \"YES\" else \"NO\"\n         \
    \   else intersection(interval2, interval1)\n        else \n            if (start\
    \ < start2 && end < end2) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val isPrime = length2 % length == 0 \n        if (isPrime) {\n           \
    \ return \"YES\"\n        } else {\n            return \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start >\
    \ end) {\n            val temp = start\n            start = end\n            end\
    \ = temp\n        }\n        if (start2 > end2) {\n            val temp = start2\n\
    \            start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == length2) {\n            if (length == 1) {\n                return \"YES\"\
    \n            }\n            val prime = length\n            var flag = true\n\
    \            var flag2 = true\n            var flag3 = true\n            var flag4\
    \ = true\n            var flag5 = true\n            var flag6 = true\n       \
    \     var flag7 = true\n            var flag8 = true\n            var flag9 =\
    \ true\n            var flag10 = true\n            var flag11 = true\n       \
    \     var flag12 = true\n            var flag13 = true\n            var flag14\
    \ = true\n            var flag15 = true\n            var flag16 = true\n     \
    \       var flag17 = true\n            var flag18 = true\n            var flag19\
    \ = true\n            var flag20 = true\n            var flag21 = true\n     \
    \       var flag22 = true\n            var flag23 = true\n            var flag24\
    \ = true\n            var flag25 = true\n            var flag26 = true\n     \
    \       var flag27 = true\n            var flag28 = true\n            var flag29\
    \ = true\n            var flag30 = true\n            var flag31 = true\n     \
    \       var flag32 = true\n            var flag33 = true\n            var flag34\
    \ = true\n            var flag35 = true\n            var flag36 = true\n     \
    \       var flag37 = true\n            var flag38 = true\n            var flag39\
    \ = true\n            var flag40 = true\n            var flag41 = true\n     \
    \       var flag42 = true\n            var flag43 = true\n            var flag44\
    \ = true\n            var flag45 = true\n            var flag46 = true\n     \
    \       var flag47 = true\n            var flag48 = true\n            var flag49\
    \ = true\n            var flag50 = true\n            var flag51 = true\n     \
    \       var flag52 = true\n            var flag53 = true\n            var flag54\
    \ = true\n            var flag55 = true\n            var flag56 = true\n     \
    \       var flag57 = true\n            var flag58 = true\n            var flag59\
    \ = true\n            var flag60 = true\n            var flag61 = true\n     \
    \       var flag62 = true\n            var flag63 = true\n            var flag64\
    \ = true\n            var flag65 = true\n            var flag66 = true\n     \
    \       var flag67 = true\n            var flag68 = true\n            var flag69\
    \ = true\n            var flag70 = true\n            var flag71 = true\n     \
    \       var flag72 = true\n            var flag73 = true\n            var ", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start > end) {\n            val temp = start\n \
    \           start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == end) {\n            if (start2\
    \ == end2) {\n                return \"YES\"\n            } else {\n         \
    \       return \"NO\"\n            }\n        }\n        val length = end - start\n\
    \        val length2 = end2 - start2\n        if (length == length2) {\n     \
    \       if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        } else {\n        \
    \    return \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        val length = end - start\n\
    \        val length2 = end2 - start2\n        if (length == 0 || length2 == 0)\
    \ {\n            \"NO\"\n        } else if (length == 1) {\n            \"YES\"\
    \n        } else if (length2 == 1) {\n            \"YES\"\n        } else if (length\
    \ == length2) {\n            if (length == 1) {\n                \"YES\"\n   \
    \         } else {\n                \"NO\"\n            }\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n  \
    \      } else {\n            if (length == 0) \"NO\" else \"YES\"\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"YES\"\n  \
    \          } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 > 1) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                val primes = mutable.Set[Long]()\n\
    \                val primes2 = mutable.Set[Long]()\n                val primes3\
    \ = mutable.Set[Long]()\n                val primes4 = mutable.Set[Long]()\n \
    \               val primes5 = mutable.Set[Long]()\n                val primes6\
    \ = mutable.Set[Long]()\n                val primes7 = mutable.Set[Long]()\n \
    \               val primes8 = mutable.Set[Long]()\n                val primes9\
    \ = mutable.Set[Long]()\n                val primes10 = mutable.Set[Long]()\n\
    \                val primes11 = mutable.Set[Long]()\n                val primes12\
    \ = mutable.Set[Long]()\n                val primes13 = mutable.Set[Long]()\n\
    \                val primes14 = mutable.Set[Long]()\n                val primes15\
    \ = mutable.Set[Long]()\n                val primes16 = mutable.Set[Long]()\n\
    \                val primes17 = mutable.Set[Long]()\n                val primes18\
    \ = mutable.Set[Long]()\n                val primes19 = mutable.Set[Long]()\n\
    \                val primes20 = mutable.Set[Long]()\n                val primes21\
    \ = mutable.Set[Long]()\n                val primes22 = mutable.Set[Long]()\n\
    \                val primes23 = mutable.Set[Long]()\n                val primes24\
    \ = mutable.Set[Long]()\n                val primes25 = mutable.Set[Long]()\n\
    \                val primes26 = mutable.Set[Long]()\n                val primes27\
    \ = mutable.Set[Long]()\n                val primes28 = mutable.Set[Long]()\n\
    \                val primes29 = mutable.Set[Long]()\n                val primes30\
    \ = mut", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length2 % length == 0 \n        if(isPrime) {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 2) {\n            if (length == 2) {\n                return \"YES\"\n  \
    \          } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 3) {\n            if (length == 3) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length2 == 4) {\n            if (length == 4)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 5) {\n            if\
    \ (length == 5) {\n                return \"YES\"\n            } else {\n    \
    \            return \"NO\"\n            }\n        }\n        if (length2 == 6)\
    \ {\n            if (length == 6) {\n                return \"YES\"\n        \
    \    } else {\n                return \"NO\"\n            }\n        }\n     \
    \   if (length2 == 7) {\n            if (length == 7) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 8) {\n            if (length == 8) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 9) {\n            if (length\
    \ == 9) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 10) {\n \
    \           if (length == 10) {\n                return \"YES\"\n            }\
    \ else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length2 == 11) {\n            if (length == 11) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length2 == 12) {\n            if (length == 12) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 13) {\n            if (length\
    \ == 13) {\n                return \"YES\"\n            } else {\n           \
    \     return \"NO\"\n            }\n        }\n        if (length2 == 14) {\n\
    \            if (length == 14) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length2 == 15) {\n            if (length == 15) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length2 == 16) {\n            if (length == 16) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 17) {\n            if (length\
    \ == 17", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n        } else if\
    \ (length2 == 1) {\n            if (length == 1) \"YES\" else \"NO\"\n       \
    \ } else {\n            val start3 = start2 + length2\n            val end3 =\
    \ end2 + length2\n            val start4 = start2 + length\n            val end4\
    \ = end2 + length\n            val start5 = start2 + length2\n            val\
    \ end5 = end2 + length2\n            val start6 = start2 + length\n          \
    \  val end6 = end2 + length\n            val start7 = start2 + length2\n     \
    \       val end7 = end2 + length2\n            val start8 = start2 + length\n\
    \            val end8 = end2 + length\n            val start9 = start2 + length2\n\
    \            val end9 = end2 + length2\n            val start10 = start2 + length\n\
    \            val end10 = end2 + length\n            val start11 = start2 + length2\n\
    \            val end11 = end2 + length2\n            val start12 = start2 + length\n\
    \            val end12 = end2 + length\n            val start13 = start2 + length2\n\
    \            val end13 = end2 + length2\n            val start14 = start2 + length\n\
    \            val end14 = end2 + length\n            val start15 = start2 + length2\n\
    \            val end15 = end2 + length2\n            val start16 = start2 + length\n\
    \            val end16 = end2 + length\n            val start17 = start2 + length2\n\
    \            val end17 = end2 + length2\n            val start18 = start2 + length\n\
    \            val end18 = end2 + length\n            val start19 = start2 + length2\n\
    \            val end19 = end2 + length2\n            val start20 = start2 + length\n\
    \            val end20 = end2 + length\n            val start21 = start2 + length2\n\
    \            val end21 = end2 + length2\n            val start22 = start2 + length\n\
    \            val end22 = end2 + length\n            val start23 = start2 + length2\n\
    \            val end23 = end2 + length2\n            val start24 = start2 + length\n\
    \            val end24 = end2 + length\n            val start25 = start2 + length2\n\
    \            val end25 = end2 + length2\n            val start26 = start2 + length\n\
    \            val end26 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length2 > length) \"NO\"\n        else if (length2 < length)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length2\
    \ % length == 0) \"YES\"\n        else intersection(interval1, interval2)", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if\
    \ (length2 == 1) \"YES\"\n        else if (length == length2) \"YES\"\n      \
    \  else if (length == length2 - 1) \"YES\"\n        else if (length == length2\
    \ - 2) \"YES\"\n        else if (length == length2 - 3) \"YES\"\n        else\
    \ if (length == length2 - 4) \"YES\"\n        else if (length == length2 - 5)\
    \ \"YES\"\n        else if (length == length2 - 6) \"YES\"\n        else if (length\
    \ == length2 - 7) \"YES\"\n        else if (length == length2 - 8) \"YES\"\n \
    \       else if (length == length2 - 9) \"YES\"\n        else if (length == length2\
    \ - 10) \"YES\"\n        else if (length == length2 - 11) \"YES\"\n        else\
    \ if (length == length2 - 12) \"YES\"\n        else if (length == length2 - 13)\
    \ \"YES\"\n        else if (length == length2 - 14) \"YES\"\n        else if (length\
    \ == length2 - 15) \"YES\"\n        else if (length == length2 - 16) \"YES\"\n\
    \        else if (length == length2 - 17) \"YES\"\n        else if (length ==\
    \ length2 - 18) \"YES\"\n        else if (length == length2 - 19) \"YES\"\n  \
    \      else if (length == length2 - 20) \"YES\"\n        else if (length == length2\
    \ - 21) \"YES\"\n        else if (length == length2 - 22) \"YES\"\n        else\
    \ if (length == length2 - 23) \"YES\"\n        else if (length == length2 - 24)\
    \ \"YES\"\n        else if (length == length2 - 25) \"YES\"\n        else if (length\
    \ == length2 - 26) \"YES\"\n        else if (length == length2 - 27) \"YES\"\n\
    \        else if (length == length2 - 28) \"YES\"\n        else if (length ==\
    \ length2 - 29) \"YES\"\n        else if (length == length2 - 30) \"YES\"\n  \
    \      else if (length == length2 - 31) \"YES\"\n        else if (length == length2\
    \ - 32) \"YES\"\n        else if (length == length2 - 33) \"YES\"\n        else\
    \ if (length == length2 - 34) \"YES\"\n        else if (length == length2 - 35)\
    \ \"YES\"\n        else if (length == length2 - 36) \"YES\"\n        else if (length\
    \ == length2 - 37) \"YES\"\n        else if (length == length2 - 38) \"YES\"\n\
    \        else if (length == length2 - 39) \"YES\"\n        else if (length ==\
    \ length2 - 40) \"YES\"\n        else if (length == length2 - 41) \"YES\"\n  \
    \      else if (length == length2 - 42) \"YES\"\n        else if (length == length2\
    \ - 43) \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if(length2\
    \ == 0){\n            return \"NO\"\n        }\n        val result = length /\
    \ length2\n        if(result == 0){\n            return \"NO\"\n        }\n  \
    \      if(result == 1){\n            return \"YES\"\n        }\n        if(result\
    \ == 2){\n            return \"YES\"\n        }\n        if(result == 3){\n  \
    \          return \"YES\"\n        }\n        if(result == 4){\n            return\
    \ \"YES\"\n        }\n        if(result == 5){\n            return \"YES\"\n \
    \       }\n        if(result == 6){\n            return \"YES\"\n        }\n \
    \       if(result == 7){\n            return \"YES\"\n        }\n        if(result\
    \ == 8){\n            return \"YES\"\n        }\n        if(result == 9){\n  \
    \          return \"YES\"\n        }\n        if(result == 10){\n            return\
    \ \"YES\"\n        }\n        if(result == 11){\n            return \"YES\"\n\
    \        }\n        if(result == 12){\n            return \"YES\"\n        }\n\
    \        if(result == 13){\n            return \"YES\"\n        }\n        if(result\
    \ == 14){\n            return \"YES\"\n        }\n        if(result == 15){\n\
    \            return \"YES\"\n        }\n        if(result == 16){\n          \
    \  return \"YES\"\n        }\n        if(result == 17){\n            return \"\
    YES\"\n        }\n        if(result == 18){\n            return \"YES\"\n    \
    \    }\n        if(result == 19){\n            return \"YES\"\n        }\n   \
    \     if(result == 20){\n            return \"YES\"\n        }\n        if(result\
    \ == 21){\n            return \"YES\"\n        }\n        if(result == 22){\n\
    \            return \"YES\"\n        }\n        if(result == 23){\n          \
    \  return \"YES\"\n        }\n        if(result == 24){\n            return \"\
    YES\"\n        }\n        if(result == 25){\n            return \"YES\"\n    \
    \    }\n        if(result == 26){\n            return \"YES\"\n        }\n   \
    \     if(result == 27){\n            return \"YES\"\n        }\n        if(result\
    \ == 28){\n            return \"YES\"\n        }\n        if(result == 29){\n\
    \            return \"YES\"\n        }\n        if(result == 30){\n          \
    \  return \"YES\"\n        }\n        if(result == 31){\n            return \"\
    YES\"\n        }\n        if(result == 32){\n            return \"YES\"\n    \
    \    }\n        if(result == 33){\n            return \"YES\"\n        }\n   \
    \     if(result == 34){\n            return \"YES\"\n        }\n        if(result\
    \ == 35){\n            return \"YES\"\n        }\n        if(result == 36){\n\
    \            return \"YES\"\n        }\n        if(result == 37){\n          \
    \  return \"YES\"\n        }\n        if(result == 38){\n            return \"\
    YES\"\n        }\n        if(result == 39){\n            return \"YES\"\n    \
    \    }\n        if(result == 40){\n            return \"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd3 = start2 - end\n        val start2MinusEnd3\
    \ = start2 - end2\n        val startMinusEnd3 = start2 - end\n        val startMinusEnd4\
    \ = start2 - end\n        val start2MinusEnd4 = start2 - end2\n        val startMinusEnd4\
    \ = start2 - end\n        val startMinusEnd5 = start2 - end\n        val start2MinusEnd5\
    \ = start2 - end2\n        val startMinusEnd5 = start2 - end\n        val startMinusEnd6\
    \ = start2 - end\n        val start2MinusEnd6 = start2 - end2\n        val startMinusEnd6\
    \ = start2 - end\n        val startMinusEnd7 = start2 - end\n        val start2MinusEnd7\
    \ = start2 - end2\n        val startMinusEnd7 = start2 - end\n        val startMinusEnd8\
    \ = start2 - end\n        val start2MinusEnd8 = start2 - end2\n        val startMinusEnd8\
    \ = start2 - end\n        val startMinusEnd9 = start2 - end\n        val start2MinusEnd9\
    \ = start2 - end2\n        val startMinusEnd9 = start2 - end\n        val startMinusEnd10\
    \ = start2 - end\n        val start2MinusEnd10 = start2 - end2\n        val startMinusEnd10\
    \ = start2 - end\n        val startMinusEnd11 = start2 - end\n        val start2MinusEnd11\
    \ = start2 - end2\n        val startMinusEnd11 = start2 - end\n        val startMinusEnd12\
    \ = start2 - end\n        val start2MinusEnd12 = start2 - end2\n        val startMinusEnd12\
    \ = start2 - end\n        val startMinusEnd13 = start2 - end\n        val start2MinusEnd13\
    \ = start2 - end2\n        val startMinusEnd13 = start2 - end\n        val startMinusEnd14\
    \ = start2 - end\n        val start2MinusEnd14 = start2 - end2\n        val startMinusEnd14\
    \ = start2 - end\n        val startMinusEnd15 = start2 - end\n        val start2MinusEnd15\
    \ = ", "        val start = interval1._1\n        val end = interval1._2\n   \
    \     val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        val isPrime = length == 2 || length ==\
    \ 3 && length == start % length\n        if (isPrime) {\n            return \"\
    YES\"\n        }\n        else {\n            return \"NO\"\n        }", "   \
    \     val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval2._2\n        val end2 = interval1._2\n        val start3 = interval1._1\n\
    \        val end3 = interval2._1\n        val start4 = interval1._2\n        val\
    \ end4 = interval2._2\n        val start5 = interval1._1\n        val end5 = interval2._2\n\
    \        val start6 = interval1._2\n        val end6 = interval2._1\n        val\
    \ start7 = interval1._1\n        val end7 = interval2._2\n        val start8 =\
    \ interval1._2\n        val end8 = interval2._1\n        val start9 = interval1._1\n\
    \        val end9 = interval2._2\n        val start10 = interval1._2\n       \
    \ val end10 = interval2._1\n        val start11 = interval1._1\n        val end11\
    \ = interval2._2\n        val start12 = interval1._2\n        val end12 = interval2._1\n\
    \        val start13 = interval1._1\n        val end13 = interval2._2\n      \
    \  val start14 = interval1._2\n        val end14 = interval2._1\n        val start15\
    \ = interval1._1\n        val end15 = interval2._2\n        val start16 = interval1._2\n\
    \        val end16 = interval2._1\n        val start17 = interval1._1\n      \
    \  val end17 = interval2._2\n        val start18 = interval1._2\n        val end18\
    \ = interval2._1\n        val start19 = interval1._1\n        val end19 = interval2._2\n\
    \        val start20 = interval1._2\n        val end20 = interval2._1\n      \
    \  val start21 = interval1._1\n        val end21 = interval2._2\n        val start22\
    \ = interval1._2\n        val end22 = interval2._1\n        val start23 = interval1._1\n\
    \        val end23 = interval2._2\n        val start24 = interval1._2\n      \
    \  val end24 = interval2._1\n        val start25 = interval1._1\n        val end25\
    \ = interval2._2\n        val start26 = interval1._2\n        val end26 = interval2._1\n\
    \        val start27 = interval1._1\n        val end27 = interval2._2\n      \
    \  val start28 = interval1._2\n        val end28 = interval2._1\n        val start29\
    \ = interval1._1\n        val end29 = interval2._2\n        val start30 = interval1._2\n\
    \        val end30 = interval2."]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcv5cuzgu.scala:11)\n\tat Problem.main(tmpcv5cuzgu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978707
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6k_rwp1.scala:20)\n\tat Problem.main(tmph6k_rwp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ true\n        else {\n            val sqrt = (sqrt(n).toLong).toInt\n      \
    \      val isPrime2 = true\n            for(i <- 2 to sqrt) {\n              \
    \  if(n % i == 0) isPrime2 = false\n            }\n            isPrime\n     \
    \   }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmppxcf9b2w.scala:9:24 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36msqrt\e[0m = (sqrt(n).toLong).toInt\n\
    \e[31m\e[31m  |\e[0m                        ^\e[0m\n\e[31m  |\e[0m           \
    \             Recursive \e[33mvalue\e[0m \e[35msqrt\e[0m needs type\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmppxcf9b2w.scala:12:40 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                \e[33mif\e[0m(n % i == \e[31m0\e[0m)\
    \ isPrime2 = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                         \
    \      ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                               Reassignment\
    \ to val isPrime2\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else { \n\
    \            val m = math.ceil(math.sqrt(n))\n            for(i = 3; i <= m; i\
    \ += 2)\n                if (n % i == 0) false\n            true\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt4g1rypn.scala:11:18 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mfor\e[0m(i = \e[31m3\e[0m; i <= m;\
    \ i += \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                  ^\e[0m\n\e[31m  \
    \ |\e[0m                  ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmpt4g1rypn.scala:11:29 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m            \e[33mfor\e[0m(i = \e[31m3\e[0m; i <= m; i += \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m\
    \                             '<-' expected, but ';' found\n\e[31m\e[31m-- [E040]\
    \ Syntax Error: /tmp/tmpt4g1rypn.scala:11:37 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m            \e[33mfor\e[0m(i = \e[31m3\e[0m; i <= m; i +=\
    \ \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                                     ^\e\
    [0m\n\e[31m   |\e[0m                                     '<-' expected, but ')'\
    \ found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt4g1rypn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mfor\e[0m(i = \e[31m3\e[0m; i <= m;\
    \ i += \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m\
    \   |\e[0mvalue foreach is not a member of Null, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.set asScala\n\e\
    [31m   |\e[0"
  stdout: ''
  timestamp: 1659978707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 1) return false\n    \
    \    if (n == 2) return true\n        if (n % 2 == 0) return false\n        val\
    \ i = 3\n        while (i <= n / 2) {\n            if (n % i == 0) return false\n\
    \            i += 2\n        }\n        return true\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjegtwf8s.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            i += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to (sqrt(n).toInt)) {\n            if (n % i == 0) {\n             \
    \   isPrime = false\n                break\n            }\n        }\n       \
    \ isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmplqv_sgg6.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplqv_sgg6.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978703
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpte28nd2z.scala:11)\n\tat Problem.main(tmpte28nd2z.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ 2.\n        if (n < 2) false\n        // Return true if the number is evenly\
    \ divisible by any number between 2 and n.\n        else if (n % 2 == 0) true\n\
    \        // Return true if the number is evenly divisible by any number between\
    \ 2 and n/2.\n        else if (n % 3 == 0) true\n        // Otherwise, return\
    \ false if n is greater than n/2.\n        else false\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsywwls7.scala:16)\n\tat Problem.main(tmpgsywwls7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && isPrime(n / 2))\n        for(i <- 3 to Math.sqrt(n) by 2)\n\
    \            if(!isPrime && (n % i == 0 || n % (i + 2) == 0))\n              \
    \  isPrime = false\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpem44tgqr.scala:6:57 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = n <= \e[31m1\e\
    [0m || (n % \e[31m2\e[0m == \e[31m0\e[0m && n != \e[31m1\e[0m && isPrime(n / \e\
    [31m2\e[0m))\n\e[31m\e[31m  |\e[0m                                           \
    \              ^\e[0m\n\e[31m  |\e[0m                                        Recursive\
    \ \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpem44tgqr.scala:7:31 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m3\e[0m to Math.sqrt(n)\
    \ by \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m         \
    \             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpem44tgqr.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ {\n            true\n        } else {\n            val isPrime2 = isPrime(n\
    \ / 2)\n            if(isPrime2) {\n                true\n            } else {\n\
    \                val isPrime3 = isPrime(n / 3)\n                if(isPrime3) {\n\
    \                    true\n                } else {\n                    val isPrime4\
    \ = isPrime(n / 4)\n                    if(isPrime4) {\n                     \
    \   true\n                    } else {\n                        val isPrime5 =\
    \ isPrime(n / 5)\n                        if(isPrime5) {\n                   \
    \         true\n                        } else {\n                           \
    \ val isPrime6 = isPrime(n / 6)\n                            if(isPrime6) {\n\
    \                                true\n                            } else {\n\
    \                                val isPrime7 = isPrime(n / 7)\n             \
    \                   if(isPrime7) {\n                                    true\n\
    \                                } else {\n                                  \
    \  val isPrime8 = isPrime(n / 8)\n                                    if(isPrime8)\
    \ {\n                                        true\n                          \
    \          } else {\n                                        val isPrime9 = isPrime(n\
    \ / 9)\n                                        if(isPrime9) {\n             \
    \                               true\n                                       \
    \ } else {\n                                            val isPrime10 = isPrime(n\
    \ / 10)\n                                            if(isPrime10) {\n       \
    \                                         true\n                             \
    \               } else {\n                                                val\
    \ isPrime11 = isPrime(n / 11)\n                                              \
    \  if(isPrime11) {\n                                                    true\n\
    \                                                } else {\n                  \
    \                                  val isPrime12 = isPrime(n / 12)\n         \
    \                                           if(isPrime12) {\n                \
    \                                        true\n                              \
    \                      } else {\n                                            \
    \            val isPrime13 = isPrime(n / 13)\n                               \
    \                         if(isPrime13) {\n                                  \
    \                          true\n                                            \
    \            } else {\n                                                      \
    \      val isPrime14 = isPrime(n / 14)\n                                     \
    \                       if(isPrime14) {\n                                    \
    \                            true\n                                          \
    \                  } else {\n                                                \
    \                val isPrime15 = isPrime(n / 15)\n                           \
    \                                     if(isPrime15) {\n                      \
    \                                              true\n                        \
    \                                        } else {\n                          \
    \                                          val isPrime16 = isPrime(n / 16)\n \
    \                                                                   if(isPrime16)\
    \ {\n                                                                        true\n\
    \                                                                    } else {\n\
    \                                                                        val isPrime17\
    \ = isPrime(n / 17)\n                                                        \
    \                if(isPrime17) {\n                                           \
    \                                 true\n                                     \
    \                                   } else {\n                               \
    \                                             val isPrime18 = isPrime(n / 18)\n\
    \                                                                            if(isPrime18)\
    \ {\n                                                                        \
    \        true\n                                                              \
    \              } else {\n                                                    \
    \                            val isPrime19 = isPrime(\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpau_qnllq.scala:78:104 --------------------------\e\
    [0m\e[0m\n\e[31m78 |\e[0m                                                    \
    \                            \e[33mval\e[0m \e[36misPrime19\e[0m = isPrime(\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                                              ^\e[0m\n\e[31m   |\e[0m       \
    \                                expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpau_qnllq.scala:97:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m97 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E050] Type\
    \ Error: /tmp/tmpau_qnllq.scala:10:27 -----------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m            \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime(n / \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpau_qnllq.scala:14:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                \e[33mval\e\
    [0m \e[36misPrime3\e[0m = isPrime(n / \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                            ^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \            \e[33mvalue\e[0m \e[35misPrime\e[0m does not take parameters\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpau_qnllq.scala:18:35 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    \e[33mval\e[0m \e[36misPrime4\e[0m\
    \ = isPrime(n / \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                         \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                                  \e[33mvalue\e\
    [0m \e[35misPrime\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E050] "
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        val\
    \ isPrime2 = isPrime && n != 2\n        val isPrime3 = isPrime && n != 3\n   \
    \     val isPrime4 = isPrime && n != 4\n        val isPrime5 = isPrime && n !=\
    \ 5\n        val isPrime6 = isPrime && n != 6\n        val isPrime7 = isPrime\
    \ && n != 7\n        val isPrime8 = isPrime && n != 8\n        val isPrime9 =\
    \ isPrime && n != 9\n        val isPrime10 = isPrime && n != 10\n        val isPrime11\
    \ = isPrime && n != 11\n        val isPrime12 = isPrime && n != 12\n        val\
    \ isPrime13 = isPrime && n != 13\n        val isPrime14 = isPrime && n != 14\n\
    \        val isPrime15 = isPrime && n != 15\n        val isPrime16 = isPrime &&\
    \ n != 16\n        val isPrime17 = isPrime && n != 17\n        val isPrime18 =\
    \ isPrime && n != 18\n        val isPrime19 = isPrime && n != 19\n        val\
    \ isPrime20 = isPrime && n != 20\n        val isPrime21 = isPrime && n != 21\n\
    \        val isPrime22 = isPrime && n != 22\n        val isPrime23 = isPrime &&\
    \ n != 23\n        val isPrime24 = isPrime && n != 24\n        val isPrime25 =\
    \ isPrime && n != 25\n        val isPrime26 = isPrime && n != 26\n        val\
    \ isPrime27 = isPrime && n != 27\n        val isPrime28 = isPrime && n != 28\n\
    \        val isPrime29 = isPrime && n != 29\n        val isPrime30 = isPrime &&\
    \ n != 30\n        val isPrime31 = isPrime && n != 31\n        val isPrime32 =\
    \ isPrime && n != 32\n        val isPrime33 = isPrime && n != 33\n        val\
    \ isPrime34 = isPrime && n != 34\n        val isPrime35 = isPrime && n != 35\n\
    \        val isPrime36 = isPrime && n != 36\n        val isPrime37 = isPrime &&\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) ==\
    \ (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpd51zz900.scala:42:34 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m \e[36misPrime37\e[0m = isPrime\
    \ && \n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m \
    \  |\e[0m                                  expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd51zz900.scala:43:5\
    \ ---------------------\e[0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        for (i <- 2 to n by 2) {\n            if (n % i == 0)\
    \ isPrime = false\n        }\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcnggevlh.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n by \e[31m2\e[0m) {\n\e[31m\e[31m  |\e[0m                 \
    \      ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e[31m\
    \  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpcnggevlh.scala:8:36 ------------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33mif\e[0m (n % i == \e[31m0\e[0m) isPrime\
    \ = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m                            ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Reassignment to val isPrime\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to Math.sqrt(n)) {\n            if (n % i == 0) {\n     \
    \           isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zsn9vyy.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6zsn9vyy.scala:7:32 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                       Found:    Double\n\e[31m  |\e[0m                   \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return true if the number is\
    \ evenly divisible by any number between 2 and its square root.\n        val isPrime\
    \ = (n % 2 == 0) && {\n            val sqrt = (math.sqrt(n).toInt)\n         \
    \   n <= sqrt * sqrt\n        }\n        // Return false if the number is odd.\n\
    \        !isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnuv5bdg6.scala:15)\n\tat Problem.main(tmpnuv5bdg6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        val\
    \ primes = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i < n) {\n\
    \            if (n % i == 0) {\n                primes += i\n                isPrime\
    \ = false\n            }\n            i += 1\n        }\n        isPrime\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4rl4_7n_.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp4rl4_7n_.scala:12:24 -----------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     isPrime += i\n            }\n        }\n        isPrime.length == n\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnfpvs05c.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpnfpvs05c.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) true\n        else n % 2 != 0 && n % 3 != 0 && n % 5 != 0\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp09rdfog_.scala:17)\n\tat Problem.main(tmp09rdfog_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val sqrtN = math.sqrt(n)\n    \
    \    val isPrime = true\n        for (i <- 2 to sqrtN) {\n            if (n %\
    \ i == 0) {\n                isPrime = false\n                break\n        \
    \    }\n        }\n        isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptr7qx6di.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to sqrtN) {\n\e[31m\e[31m  |\e[0m                       ^^^^^\e\
    [0m\n\e[31m  |\e[0m                       Found:    (sqrtN : Double)\n\e[31m \
    \ |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmptr7qx6di.scala:10:24 -----------------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmptr7qx6di.scala:11:16 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m                break\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to n by 2)\n            if (n % i == 0)\n                isPrime = false\n\
    \        isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxv0wv1nh.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n by \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \    ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e[31m\
    \  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpxv0wv1nh.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ if n % i == 0 => false\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmptnyfr8or.scala:6:60 ------------------------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m =>\
    \ \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m                                     \
    \                 ^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                            \
    \                  not a legal formal parameter\n\e[31m\e[31m-- [E018] Syntax\
    \ Error: /tmp/tmptnyfr8or.scala:7:15 ----------------------------\e[0m\e[0m\n\e\
    [31m7 |\e[0m        isPrime\n\e[31m\e[31m  |\e[0m               ^\e[0m\n\e[31m\
    \  |\e[0m               expression expected but \e[31m'}'\e[0m found\n\e[31m \
    \ |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptnyfr8or.scala:6:46 ---------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m =>\
    \ \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                     Found:    Double\n\e[31m\
    \  |\e[0m                                     Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptnyfr8or.scala:8:5 ----------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m    }\n\e[31m\e[31m  |\e[0m     ^\e[0m\n\e[31m  |\e[0m\
    \     Found:    Unit\n\e[31m  |\e[0m     Required: Boolean\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to n).forall(x\
    \ => n % x == 0)\n        !isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpaqgm0pxr.scala:6:28\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = (\e[31m2\e[0m to n).forall(\e[36mx\e[0m => n % x == \e[31m0\e[0m)\n\e[31m\e\
    [31m  |\e[0m                            ^\e[0m\n\e[31m  |\e[0m               \
    \             Found:    (n : Long)\n\e[31m  |\e[0m                           \
    \ Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to math.ceil(n/2))\n\
    \            if (n % i == 0)\n                return false\n        return true\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg87l1_6r.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.ceil(n/\e[31m2\e[0m))\n\e[31m\e\
    [31m  |\e[0m                                     ^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \ |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978713
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ 2.\n        if (n < 2) false\n        // Return true if n is even.\n       \
    \ else if (n % 2 == 0) true\n        // Return true if n is odd.\n        else\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdf8iikwk.scala:14)\n\tat Problem.main(tmpdf8iikwk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978713
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 2)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpoe7vqi1f.scala:11)\n\tat Problem.main(tmpoe7vqi1f.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978714
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        if (isPrime)\n            true\n        else\n     \
    \       false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4qatc4bt.scala:13)\n\tat Problem.main(tmp4qatc4bt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime(scala.math.BigInt(2))\n\
    \        if (isPrime) true\n        else false\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsdgkp9ez.scala:6:76\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = scala.math.BigInt(n).isProbablePrime(scala.math.BigInt(\e[31m2\e[0m))\n\e\
    [31m\e[31m  |\e[0m                                                           ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                          Found:\
    \    BigInt\n\e[31m  |\e[0m                                                  \
    \        Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // If n is even, return false.\n\
    \        if (n % 2 == 0) return false\n        // If n is odd, return true only\
    \ if n is odd and even.\n        if (n % 2 == 1) return (n % 4 == 0)\n       \
    \ // If n is odd, return true only if n is odd and odd.\n        return (n % 4\
    \ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuu255b1e.scala:15)\n\tat Problem.main(tmpuu255b1e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        isPrime.contains(true)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd09qxdn3.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && isPrime(n / 2))\n        if (isPrime) true\n        else false\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpg0onxwux.scala:6:57 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = n <= \e[31m1\e\
    [0m || (n % \e[31m2\e[0m == \e[31m0\e[0m && n != \e[31m1\e[0m && isPrime(n / \e\
    [31m2\e[0m))\n\e[31m\e[31m  |\e[0m                                           \
    \              ^\e[0m\n\e[31m  |\e[0m                                        Recursive\
    \ \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(i\
    \ => n % i == 0)\n        !isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3z3w9q9r.scala:20)\n\tat Problem.main(tmp3z3w9q9r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978718
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to n by 2)\n            if (n % i == 0)\n                isPrime = false\n\
    \        isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxv0wv1nh.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n by \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \    ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e[31m\
    \  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpxv0wv1nh.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ or equal to 1.\n        if (n <= 1) return false\n        // Return true if\
    \ n is even.\n        if (n % 2 == 0) return false\n        // Return true if\
    \ n is odd.\n        if (n % 2 == 1) return true\n        // Otherwise, loop from\
    \ 3 to sqrt(n).\n        var i = 2\n        while (i <= math.sqrt(n)) {\n    \
    \        if (n % i == 0) return false\n            i += 2\n        }\n       \
    \ return true\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpd9yzu2_p.scala:31)\n\tat Problem.main(tmpd9yzu2_p.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else { \n            val isPrime = true\n   \
    \         val i = 3\n            while (i <= Math.sqrt(n)) {\n               \
    \ if (n % i == 0) false\n                else {\n                    isPrime =\
    \ false\n                    break\n                }\n                i += 1\n\
    \            }\n            isPrime\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpi8kz9hes.scala:14:28 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                    isPrime = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpi8kz9hes.scala:15:20 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m                    break\n\e[31m\e[31m   |\e[0m         \
    \           ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi8kz9hes.scala:17:18\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && n != 3)\n        for(i <- 2 to n/2){\n            if(n % i\
    \ == 0)\n                isPrime = false\n        }\n        isPrime\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpiqc__jj8.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n/\e[31m2\e[0m){\n\e[31m\e[31m  |\e[0m                      ^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Long\n\e[31m  |\e[0m      \
    \                Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpiqc__jj8.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to math.floor(math.sqrt(n).toInt)) {\n            if (n %\
    \ i == 0) {\n                isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8tjtbpn6.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8tjtbpn6.scala:7:33 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.floor(math.sqrt(n).toInt))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                       Found:    Double\n\e[31m  |\e[0m   \
    \                    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        isPrime.contains(true)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd09qxdn3.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else { \n            val sq = math.sqrt(n)\n\
    \            val i = 3\n            while (i <= sq) {\n                if (n %\
    \ i == 0) false\n                i += 2\n            }\n            true\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj6t39g4q.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                i += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean i.!=?\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmpj6t39g4q.scala:12:32 ----------------\e[0m\e[0m\n\e[33m12 |\e[0m   \
    \             \e[33mif\e[0m (n % i == \e[31m0\e[0m) \e[31mfalse\e[0m\n\e[33m\e\
    [33m   |\e[0m                                ^^^^^\e[0m\n\e[33m   |\e[0mA pure\
    \ expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Write your code here.\n    \
    \    val primes = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n / 2) {\n            if (n % i == 0) {\n                primes += i\n\
    \            }\n            i += 1\n        }\n        primes.forall(x => n %\
    \ x == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62xkc1vv.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp62xkc1vv.scala:13:14 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) {\n            true\n        } else {\n            val sqrt = (math.sqrt(n).toInt).toLong\n\
    \            val isPrime2 = true\n            val isPrime3 = true\n          \
    \  val isPrime4 = true\n            val isPrime5 = true\n            val isPrime6\
    \ = true\n            val isPrime7 = true\n            val isPrime8 = true\n \
    \           val isPrime9 = true\n            val isPrime10 = true\n          \
    \  val isPrime11 = true\n            val isPrime12 = true\n            val isPrime13\
    \ = true\n            val isPrime14 = true\n            val isPrime15 = true\n\
    \            val isPrime16 = true\n            val isPrime17 = true\n        \
    \    val isPrime18 = true\n            val isPrime19 = true\n            val isPrime20\
    \ = true\n            val isPrime21 = true\n            val isPrime22 = true\n\
    \            val isPrime23 = true\n            val isPrime24 = true\n        \
    \    val isPrime25 = true\n            val isPrime26 = true\n            val isPrime27\
    \ = true\n            val isPrime28 = true\n            val isPrime29 = true\n\
    \            val isPrime30 = true\n            val isPrime31 = true\n        \
    \    val isPrime32 = true\n            val isPrime33 = true\n            val isPrime34\
    \ = true\n            val isPrime35 = true\n            val isPrime36 = true\n\
    \            val isPrime37 = true\n            val isPrime38 = true\n        \
    \    val isPrime39 = true\n            val isPrime40 = true\n            val isPrime41\
    \ = true\n            val isPrime42 = true\n            val isPrime43 = true\n\
    \            val isPrime44 = true\n            val isPrime45 = true\n        \
    \    val isPrime46 = true\n            val isPrime47 = true\n            val isPrime48\
    \ = true\n            val isPrime49 = true\n            val isPrime50 = true\n\
    \            val isPrime51 = true\n            val isPrime52 = true\n        \
    \    val isPrime53 = true\n            val isPrime54 = true\n            val isPrime55\
    \ = true\n            val isPrime56 = true\n            val isPrime57 = true\n\
    \            val isPrime58 = true\n            val isPrime59 = true\n        \
    \    val isPrime60 = true\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy5gu26m8.scala:88:0 ----------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpy5gu26m8.scala:72:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m72 |\e[0m    assert(isPrime((\e\
    [31m6l\e[0m)) == (\e[31mfalse\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvalue\e[0m \e[35misPrime\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpy5gu26m8.scala:73:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m73 |\e[0m    assert(isPrime((\e\
    [31m101l\e[0m)) == (\e[31mtrue\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvalue\e[0m \e[35misPrime\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpy5gu26m8.scala:74:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m74 |\e[0m    assert(isPrime((\e\
    [31m11l\e[0m)) == (\e[31mtrue\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvalue\e[0m \e[35misPrime\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpy5gu26m8.scala:75:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m75 |\e[0m    assert(isPrime((\e\
    [31m13441l\e[0m)) == (\e[31mtrue\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvalue\e[0m \e[35misPrime\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpy5gu26m8.scala:76:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m76 |\e[0m    assert(isPrime((\e\
    [31m61l\e[0m)) == (\e[31mtrue\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvalue\e[0m \e[35misPrime\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ co"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for {\n         \
    \   i <- 2 to math.sqrt(n)\n        } yield {\n            if (n % i == 0) false\n\
    \            else isPrime\n        }\n        !isPrime.head\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzur4kck_.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m            i <- \e[31m2\e[0m\
    \ to math.sqrt(n)\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m         \
    \             Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpzur4kck_.scala:10:17 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m   |\e[0m           \
    \      ^\e[0m\n\e[31m   |\e[0m                 Recursive \e[33mvalue\e[0m \e[35misPrime\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ != 0 && n % 3 != 0)\n        val isPrime2 = isPrime && (n % 4 == 0 || n % 6\
    \ == 0)\n        val isPrime3 = isPrime && (n % 8 == 0 || n % 12 == 0)\n     \
    \   val isPrime4 = isPrime && (n % 16 == 0 || n % 32 == 0)\n        val isPrime5\
    \ = isPrime && (n % 32 == 0 || n % 64 == 0)\n        val isPrime6 = isPrime &&\
    \ (n % 64 == 0 || n % 128 == 0)\n        val isPrime7 = isPrime && (n % 128 ==\
    \ 0 || n % 256 == 0)\n        val isPrime8 = isPrime && (n % 256 == 0 || n % 512\
    \ == 0)\n        val isPrime9 = isPrime && (n % 512 == 0 || n % 1024 == 0)\n \
    \       val isPrime10 = isPrime && (n % 1024 == 0 || n % 2048 == 0)\n        val\
    \ isPrime11 = isPrime && (n % 2048 == 0 || n % 4096 == 0)\n        val isPrime12\
    \ = isPrime && (n % 4096 == 0 || n % 8192 == 0)\n        val isPrime13 = isPrime\
    \ && (n % 8192 == 0 || n % 16384 == 0)\n        val isPrime14 = isPrime && (n\
    \ % 16384 == 0 || n % 32768 == 0)\n        val isPrime15 = isPrime && (n % 32768\
    \ == 0 || n % 65536 == 0)\n        val isPrime16 = isPrime && (n % 65536 == 0\
    \ || n % 131072 == 0)\n        val isPrime17 = isPrime && (n % 131072 == 0 ||\
    \ n % 262144 == 0)\n        val isPrime18 = isPrime && (n % 262144 == 0 || n %\
    \ 524288 == 0)\n        val isPrime19 = isPrime && (n % 524288 == 0 || n % 1048576\
    \ == 0)\n        val isPrime20 = isPrime && (n % 1048576 == 0 || n % 2097152 ==\
    \ 0)\n        val isPrime21 = isPrime && (n % 2097152 == 0 || n % 4194304 == 0)\n\
    \        val isPrime22 = isPrime && (n % 4194304 == 0 || n % 8388608 == 0)\n \
    \       val isPrime23 = isPrime && (n % 8388608 == 0 || n % 16777216 == 0)\n \
    \       val isPrime24 = isPrime && (n % 16777216 == 0 || n % 33554432 == 0)\n\
    \        val isPrime25 = isPrime && (n % 33554\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp25eb6g6x.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp25eb6g6x.scala:30:36 --------------------\e[0m\e[0m\n\e[31m30 |\e[0m\
    \        \e[33mval\e[0m \e[36misPrime25\e[0m = isPrime && (n % \e[31m33554\e[0m\n\
    \e[31m\e[31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                    Found:    Long\n\e[31m   |\e[0m\
    \                                    Required: Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp25eb6g6x.scala:31:5 ---------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        val\
    \ factors = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to math.floor(math.sqrt(n).toInt))\
    \ {\n            if(n % i == 0) {\n                isPrime = false\n         \
    \       break\n            }\n            factors += i\n        }\n        if(factors.isEmpty)\
    \ {\n            isPrime = true\n        }\n        return isPrime\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n4l7kb5.scala:7:22 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp3n4l7kb5.scala:8:32 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to math.floor(math.sqrt(n).toInt))\
    \ {\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp3n4l7kb5.scala:10:24 -----------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n4l7kb5.scala:11:16\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp3n4l7kb5.scala:16:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            isPrime\
    \ = \e[31mtrue\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to math.sqrt(n)) {\n            if (n % i == 0) {\n                isPrime\
    \ = false\n                break\n            }\n        }\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphubmelw3.scala:7:32\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to math.sqrt(n)) {\n\e[31m\e[31m  |\e[0m                      \
    \ ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                       Found:    Double\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmphubmelw3.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphubmelw3.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || !(n % 2\
    \ != 0 && n % 3 != 0)\n        val isPrime2 = n <= 1 || !(n % 2 != 0 && n % 3\
    \ != 0 && n % 5 != 0)\n        val isPrime3 = n <= 1 || !(n % 2 != 0 && n % 3\
    \ != 0 && n % 5 != 0 && n % 7 != 0)\n        val isPrime5 = n <= 1 || !(n % 2\
    \ != 0 && n % 3 != 0 && n % 5 != 0 && n % 7 != 0 && n % 11 != 0)\n        val\
    \ isPrime7 = n <= 1 || !(n % 2 != 0 && n % 3 != 0 && n % 5 != 0 && n % 7 != 0\
    \ && n % 11 != 0 && n % 13 != 0)\n        val isPrime11 = n <= 1 || !(n % 2 !=\
    \ 0 && n % 3 != 0 && n % 5 != 0 && n % 7 != 0 && n % 11 != 0 && n % 13 != 0 &&\
    \ n % 17 != 0)\n        val isPrime13 = n <= 1 || !(n % 2 != 0 && n % 3 != 0 &&\
    \ n % 5 != 0 && n % 7 != 0 && n % 11 != 0 && n % 13 != 0 && n % 17 != 0 && n %\
    \ 19 != 0)\n        val isPrime17 = n <= 1 || !(n % 2 != 0 && n % 3 != 0 && n\
    \ % 5 != 0 && n % 7 != 0 && n % 11 != 0 && n % 13 != 0 && n % 17 != 0 && n % 19\
    \ != 0 && n % 23 != 0)\n        val isPrime19 = n <= 1 || !(n % 2 != 0 && n %\
    \ 3 != 0 && n % 5 != 0 && n % 7 != 0 && n % 11 != 0 && n % 13 != 0 && n % 17 !=\
    \ 0 && n % 19 != 0 && n % 23 != 0 && n % 29 != 0)\n        val isPrime23 = n <=\
    \ 1 || !(n % 2 != 0 && n % 3 != 0 && n % 5 != 0 && n % 7 != 0 && n % 11 != 0 &&\
    \ n % 13 != 0 && n % 17 != 0 && n % 19 != 0 && n % 23 != 0 && n % 29 != 0 && n\
    \ % 31 != 0)\n        val isPrime29 = n <= 1 || !(n % 2 != 0 && n % 3 != 0 &&\
    \ n % 5 != 0 && n % 7 != 0 && n % 11 != 0 && n % 13 != 0 && n % 17 != 0 && n %\
    \ 19 != 0 && n % 23 != 0 && n % 29 != 0 && n % 31 != 0 && n % 37 != 0)\n     \
    \   val isPrime31 = n <= 1 || !(n % 2 != 0 && n % 3 != 0 && n % 5 != 0 && n %\
    \ 7 != 0 && n % 11 != 0 && n % 13 != 0 && n % 17 != 0 && n % 19 != 0 && n % 23\
    \ != 0 && n % 29 != 0 && n % 31 != 0 && n % 37 != 0 && n % 41 != 0)\n        val\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) ==\
    \ (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpw77vp1df.scala:18:11 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw77vp1df.scala:19:5 ---------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978718
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else { \n            val i = 3\n            while\
    \ (i <= Math.sqrt(n)) {\n                if (n % i == 0) false\n             \
    \   i += 2\n            }\n            true\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8c55pycp.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                i += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean i.!=?\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmp8c55pycp.scala:11:32 ----------------\e[0m\e[0m\n\e[33m11 |\e[0m   \
    \             \e[33mif\e[0m (n % i == \e[31m0\e[0m) \e[31mfalse\e[0m\n\e[33m\e\
    [33m   |\e[0m                                ^^^^^\e[0m\n\e[33m   |\e[0mA pure\
    \ expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6k_rwp1.scala:20)\n\tat Problem.main(tmph6k_rwp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else { \n            val i = 3\n            while (i\
    \ <= Math.sqrt(n)) {\n                if (n % i == 0) false\n                i\
    \ += 2\n            }\n            true\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyuwu7m_5.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                i += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean i.!=?\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmpyuwu7m_5.scala:13:32 ----------------\e[0m\e[0m\n\e[33m13 |\e[0m   \
    \             \e[33mif\e[0m (n % i == \e[31m0\e[0m) \e[31mfalse\e[0m\n\e[33m\e\
    [33m   |\e[0m                                ^^^^^\e[0m\n\e[33m   |\e[0mA pure\
    \ expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659978718
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to n by 2)\n            if (n % i == 0)\n               \
    \ isPrime += i\n        isPrime.toSet.size == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsmapg50l.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpsmapg50l.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        for(i <- 2 to n/2) if(!isPrime) return(false)\n    \
    \    return(true)\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjwz29io9.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n/\e[31m2\e[0m) \e[33mif\e[0m(!isPrime) \e[33mreturn\e[0m(\e[31mfalse\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^^^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    Long\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for {\n         \
    \   i <- 2 to math.floor(math.sqrt(n))\n        } yield {\n            if (n %\
    \ i == 0) false\n            else isPrime.takeWhile(_ => n % i != 0).forall(n\
    \ => n % i == 0)\n        }\n        !isPrime.head\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf6nj_dsz.scala:7:32\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m            i <- \e[31m2\e[0m\
    \ to math.floor(math.sqrt(n))\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpf6nj_dsz.scala:10:17 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m            \e[33melse\e[0m isPrime.takeWhile(_ => n % i != \e[31m0\e\
    [0m).forall(n => n % i == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m               \
    \  ^\e[0m\n\e[31m   |\e[0m                 Recursive \e[33mvalue\e[0m \e[35misPrime\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ 2.\n        if (n < 2) return false\n        // Return true if the number is\
    \ greater than or equal to 3.\n        if (n > 3) return true\n        // Return\
    \ true if the number is even.\n        if (n % 2 == 0) return false\n        //\
    \ Return true if the number is odd.\n        if (n % 2 == 1) return true\n   \
    \     // Otherwise, loop through the numbers starting from 3\n        // and divide\
    \ the number by each number between 2 and the\n        // number minus one.\n\
    \        var i = 2\n        while (i <= Math.sqrt(n)) {\n            if (n % i\
    \ == 0) return false\n            i += 2\n        }\n        return true\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphuqg3j5h.scala:25)\n\tat Problem.main(tmphuqg3j5h.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978725
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpte28nd2z.scala:11)\n\tat Problem.main(tmpte28nd2z.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && isPrime(n / 2))\n        !isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwjy9zr2e.scala:6:57 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = n <= \e[31m1\e\
    [0m || (n % \e[31m2\e[0m == \e[31m0\e[0m && n != \e[31m1\e[0m && isPrime(n / \e\
    [31m2\e[0m))\n\e[31m\e[31m  |\e[0m                                           \
    \              ^\e[0m\n\e[31m  |\e[0m                                        Recursive\
    \ \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978722
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to math.sqrt(n)) {\n            if (n % i == 0) {\n     \
    \           isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwp573kd5.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpwp573kd5.scala:7:32 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.sqrt(n))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                       Found:    Double\n\e[31m  |\e[0m                   \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // If n is even, return false.\n\
    \        if (n % 2 == 0) return false\n        // If n is odd, return true if\
    \ the number is greater than 1 and\n        // is divisible by any number between\
    \ 2 and sqrt(n).\n        if (n % 2 == 1) return (n > 1 && isDivisibleBy(n, 2L))\
    \ || isDivisibleBy(n, nL) \n        // Otherwise, return true if the number is\
    \ greater than 1 and is\n        // divisible by any number between 2 and sqrt(n).\n\
    \        return isDivisibleBy(n, 2L)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtr8mt7x.scala:10:41 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mif\e[0m (n % \e[31m2\e[0m == \e[31m1\e\
    [0m) \e[33mreturn\e[0m (n > \e[31m1\e[0m && isDivisibleBy(n, \e[31m2L\e[0m)) ||\
    \ isDivisibleBy(n, nL) \n\e[31m\e[31m   |\e[0m                               \
    \          ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                               \
    \          Not found: isDivisibleBy\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpbtr8mt7x.scala:10:66 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mif\e[0m (n % \e[31m2\e[0m == \e[31m1\e[0m) \e[33mreturn\e[0m\
    \ (n > \e[31m1\e[0m && isDivisibleBy(n, \e[31m2L\e[0m)) || isDivisibleBy(n, nL)\
    \ \n\e[31m\e[31m   |\e[0m                                                    \
    \              ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                           \
    \                     Not found: isDivisibleBy\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpbtr8mt7x.scala:10:83 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mif\e[0m (n % \e[31m2\e[0m == \e[31m1\e\
    [0m) \e[33mreturn\e[0m (n > \e[31m1\e[0m && isDivisibleBy(n, \e[31m2L\e[0m)) ||\
    \ isDivisibleBy(n, nL) \n\e[31m\e[31m   |\e[0m                               \
    \                                                    ^^\e[0m\n\e[31m   |\e[0m\
    \                                                           Not found: nL\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtr8mt7x.scala:13:15\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mreturn\e[0m\
    \ isDivisibleBy(n, \e[31m2L\e[0m)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m               Not found: isDivisibleBy\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659978722
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime(scala.math.BigInt(2))\n\
    \        if (isPrime)\n            true\n        else\n            false\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6xtic1ce.scala:6:76\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = scala.math.BigInt(n).isProbablePrime(scala.math.BigInt(\e[31m2\e[0m))\n\e\
    [31m\e[31m  |\e[0m                                                           ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                          Found:\
    \    BigInt\n\e[31m  |\e[0m                                                  \
    \        Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        val\
    \ primes = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2) {\n    \
    \        if (n % i == 0) {\n                isPrime = false\n                break\n\
    \            }\n            primes += i\n        }\n        isPrime\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2m4np6fg.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2m4np6fg.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp2m4np6fg.scala:10:24\
    \ -----------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                isPrime\
    \ = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp2m4np6fg.scala:11:16 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        if (isPrime)\n            true\n        else\n     \
    \       false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplaccqhd5.scala:13)\n\tat Problem.main(tmplaccqhd5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978728
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) {\n            return true\n        }\n        val sqrt = (math.sqrt(n).toInt)\
    \ + 1\n        for (i <- 2 to sqrt) {\n            if (n % i == 0) {\n       \
    \         isPrime = false\n                break\n            }\n        }\n \
    \       isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpyklilykt.scala:13:24 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpyklilykt.scala:14:16 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m                break\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.BitSet(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val primes = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes2 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes3 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes4 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes5 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes6 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes7 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes8 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes9 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes10 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes11 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes12 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes13 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes14 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes15 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes16 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes17 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes18 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes19 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes20 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes21 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes22 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val isPrimes23 = mutable.ArrayBuffer(2\
    \ to math.floor(math.sqrt(n).toInt))\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp77_iyd45.scala:32:4 ----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp77_iyd45.scala:6:22\
    \ -------------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.BitSet(\e[31m2\e[0m to math.floor(math.sqrt(n).toInt))\n\
    \e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m  |\e[0m       \
    \               Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp77_iyd45.scala:7:21 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m\
    \ to math.floor(math.sqrt(n).toInt))\n\e[31m\e[31m  |\e[0m                   \
    \  ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp77_iyd45.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m to math.floor(math.sqrt(n).toInt))\n\e[31m\e[31m  |\e[0m          \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp77_iyd45.scala:9:24\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimes2\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m to math.floor(math.sqrt(n).toInt))\n\
    \e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e[31m  |\e[0m     \
    \                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp77_iyd45.scala:10:24 ------------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrimes3\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m to math.floor(math.sqrt(n).toInt))\n\e[31m\e[3"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(n\
    \ => n % _ == 0)\n        !isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E081] Type Error: /tmp/tmpa51p1oxm.scala:6:64 ------------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = (\e[31m2\e\
    [0m to Math.sqrt(n).toInt).forall(\e[36mn\e[0m => n % _ == \e[31m0\e[0m)\n\e[31m\e\
    [31m  |\e[0m                                                                ^\e\
    [0m\n\e[31m  |\e[0m     Missing parameter type\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \     I could not infer the type of the parameter _$1 of expanded function:\n\e\
    [31m  |\e[0m     _$1 => n % _$1 == 0.\n1 error found\n"
  stdout: ''
  timestamp: 1659978725
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return true if the number is\
    \ evenly divisible by any number other than 1 and itself.\n        if (n % 2 ==\
    \ 0) return false\n        // Return true if the number is greater than 1 and\
    \ is divisible by only 1 and itself.\n        if (n > 1 && n % 1 == 0) return\
    \ false\n        // Otherwise, return true if the number is greater than 1 and\
    \ is divisible by all odd numbers except 1 and itself.\n        val odd = 2 to\
    \ (n - 1)\n        for (i <- odd) if (n % i == 0) return false\n        true\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvi__neul.scala:11:24\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36modd\e\
    [0m = \e[31m2\e[0m to (n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m              \
    \          ^^^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\
    \e[31m   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else isPrime\n     \
    \   }\n        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplmpr5xg4.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmplmpr5xg4.scala:8:17 ----------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m  |\e\
    [0m                 ^\e[0m\n\e[31m  |\e[0m                 Recursive \e[33mvalue\e\
    [0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && isPrime(n / 2))\n        if (isPrime) true\n        else false\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpg0onxwux.scala:6:57 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = n <= \e[31m1\e\
    [0m || (n % \e[31m2\e[0m == \e[31m0\e[0m && n != \e[31m1\e[0m && isPrime(n / \e\
    [31m2\e[0m))\n\e[31m\e[31m  |\e[0m                                           \
    \              ^\e[0m\n\e[31m  |\e[0m                                        Recursive\
    \ \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to Math.sqrt(n)) {\n            if (n % i == 0) {\n     \
    \           isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zsn9vyy.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6zsn9vyy.scala:7:32 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                       Found:    Double\n\e[31m  |\e[0m                   \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        if (isPrime)\n            true\n        else\n     \
    \       false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplaccqhd5.scala:13)\n\tat Problem.main(tmplaccqhd5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978728
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ {\n            true\n        } else {\n            val isPrime2 = isPrime(n\
    \ - 1)\n            val isPrime3 = isPrime(n - 2)\n            if(isPrime2 &&\
    \ isPrime3) {\n                true\n            } else {\n                false\n\
    \            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpn0uw2bq1.scala:10:27 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpn0uw2bq1.scala:11:27 -----------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m            \e[33mval\e[0m \e[36misPrime3\e[0m = isPrime(n - \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime)\n            return true\n        val sqrtN = math.sqrt(n)\n     \
    \   val isPrime2 = true\n        for (i <- 2 to sqrtN) {\n            if (n %\
    \ i == 0) {\n                isPrime2 = false\n                break\n       \
    \     }\n        }\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpir1ezif1.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to sqrtN) {\n\e[31m\e[31m   |\e[0m                       ^^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    (sqrtN : Double)\n\e[31m\
    \   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpir1ezif1.scala:13:25 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                isPrime2 = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \      Reassignment to val isPrime2\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpir1ezif1.scala:14:16 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m                break\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ if n%i==0 \n        !isPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn_xb7g3s.scala:8:4 -----------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m    }\n\e[31m\e[31m  |\e[0m    ^\e[0m\n\e[31m  |\e[0m\
    \    'then' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpn_xb7g3s.scala:6:46 ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m\
    \        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m\
    \ to Math.sqrt(n)) \e[33mif\e[0m n%i==\e[31m0\e[0m \n\e[31m\e[31m  |\e[0m    \
    \                                 ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \                           Found:    Double\n\e[31m  |\e[0m                 \
    \                    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpn_xb7g3s.scala:7:8 --------------------------\e[0m\e[0m\n\e[31m6 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e[0m (i <- \e[31m2\e\
    [0m to Math.sqrt(n)) \e[33mif\e[0m n%i==\e[31m0\e[0m \n\e[31m7 |\e[0m        !isPrime\n\
    \e[31m\e[31m  |\e[0m                                                      ^\e\
    [0m\n\e[31m  |\e[0m              value ! is not a member of Boolean.\n\e[31m \
    \ |\e[0m              Note that `!` is treated as an infix operator in Scala 3.\n\
    \e[31m  |\e[0m              If you do not want that, insert a `;` or empty line\
    \ in front\n\e[31m  |\e[0m              or drop any spaces behind the operator.\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn_xb7g3s.scala:8:5 ----------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m    }\n\e[31m\e[31m  |\e[0m     ^\e[0m\n\e[31m  |\e[0m\
    \     Found:    Unit\n\e[31m  |\e[0m     Required: Boolean\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978728
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else { \n            val sq = math.sqrt(n)\n\
    \            val i = 3\n            while (i <= sq) {\n                if (n %\
    \ i == 0) false\n                else i += 2\n            }\n            true\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5gy3t1q7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                \e[33melse\e[0m i += \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m                     ^^^^\e[0m\n\e[31m   |\e[0m           \
    \         value += is not a member of Int - did you mean i.!=?\n\e[33m\e[33m--\
    \ [E129] Potential Issue Warning: /tmp/tmp5gy3t1q7.scala:12:32 ----------------\e\
    [0m\e[0m\n\e[33m12 |\e[0m                \e[33mif\e[0m (n % i == \e[31m0\e[0m)\
    \ \e[31mfalse\e[0m\n\e[33m\e[33m   |\e[0m                                ^^^^^\e\
    [0m\n\e[33m   |\e[0mA pure expression does nothing in statement position; you\
    \ may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 warning found\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978728
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else { \n\
    \            val sqrt = (math.sqrt(n).toInt)\n            val i = 3\n        \
    \    while (i <= sqrt) {\n                if (n % i == 0) false\n            \
    \    i += 2\n            }\n            true\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp77kwcmhj.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                i += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean i.!=?\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmp77kwcmhj.scala:13:32 ----------------\e[0m\e[0m\n\e[33m13 |\e[0m   \
    \             \e[33mif\e[0m (n % i == \e[31m0\e[0m) \e[31mfalse\e[0m\n\e[33m\e\
    [33m   |\e[0m                                ^^^^^\e[0m\n\e[33m   |\e[0mA pure\
    \ expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659978728
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ if n % i == 0 yield i\n        !isPrime.exists(_ == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0swi32ky.scala:6:65 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m \e\
    [33myield\e[0m i\n\e[31m\e[31m  |\e[0m                                       \
    \                          ^^^^^\e[0m\n\e[31m  |\e[0m                        \
    \                'then' expected, but 'yield' found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp0swi32ky.scala:6:46 ---------------------\e[0m\e[0m\n\
    \e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m \e[33myield\e\
    [0m i\n\e[31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                     Found:    Double\n\e[31m\
    \  |\e[0m                                     Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp0swi32ky.scala:7:9 -----------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        !isPrime.exists(_ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \  |\e[0m         ^\e[0m\n\e[31m  |\e[0m         Recursive \e[33mvalue\e[0m \e\
    [35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp0swi32ky.scala:8:5 ----------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m    }\n\e[31m\e[31m  |\e[0m     ^\e[0m\n\e[31m  |\e[0m     Found:    Unit\n\
    \e[31m  |\e[0m     Required: Boolean\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        val\
    \ isPrime2 = isPrime && (n % 2 != 0)\n        val isPrime3 = isPrime && (n % 3\
    \ != 0)\n        val isPrime4 = isPrime && (n % 4 != 0)\n        val isPrime5\
    \ = isPrime && (n % 5 != 0)\n        val isPrime6 = isPrime && (n % 6 != 0)\n\
    \        val isPrime7 = isPrime && (n % 7 != 0)\n        val isPrime8 = isPrime\
    \ && (n % 8 != 0)\n        val isPrime9 = isPrime && (n % 9 != 0)\n        val\
    \ isPrime10 = isPrime && (n % 10 != 0)\n        val isPrime11 = isPrime && (n\
    \ % 11 != 0)\n        val isPrime12 = isPrime && (n % 12 != 0)\n        val isPrime13\
    \ = isPrime && (n % 13 != 0)\n        val isPrime14 = isPrime && (n % 14 != 0)\n\
    \        val isPrime15 = isPrime && (n % 15 != 0)\n        val isPrime16 = isPrime\
    \ && (n % 16 != 0)\n        val isPrime17 = isPrime && (n % 17 != 0)\n       \
    \ val isPrime18 = isPrime && (n % 18 != 0)\n        val isPrime19 = isPrime &&\
    \ (n % 19 != 0)\n        val isPrime20 = isPrime && (n % 20 != 0)\n        val\
    \ isPrime21 = isPrime && (n % 21 != 0)\n        val isPrime22 = isPrime && (n\
    \ % 22 != 0)\n        val isPrime23 = isPrime && (n % 23 != 0)\n        val isPrime24\
    \ = isPrime && (n % 24 != 0)\n        val isPrime25 = isPrime && (n % 25 != 0)\n\
    \        val isPrime26 = isPrime && (n % 26 != 0)\n        val isPrime27 = isPrime\
    \ && (n % 27 != 0)\n        val isPrime28 = isPrime && (n % 28 != 0)\n       \
    \ val isPrime29 = isPrime && (n % 29 != 0)\n        val isPrime30 = isPrime &&\
    \ (n % 30 != 0)\n        val isPrime31 = isPrime && (n % 31 != 0)\n        val\
    \ isPrime32 = isPrime && (n % 32 != 0)\n        val isPrime33 = isPrime && (n\
    \ % 33 != 0)\n        val isPrime34 = isPrime && (n % 34 != 0)\n        val isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsx3cmhjp.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpsx3cmhjp.scala:41:5 ---------------------\e[0m\e[0m\n\e[31m41 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) {\n            true\n        } else {\n            val isPrime2 =\
    \ isPrime(n - 1)\n            if (isPrime2) {\n                true\n        \
    \    } else {\n                val isPrime3 = isPrime(n - 2)\n               \
    \ if (isPrime3) {\n                    true\n                } else {\n      \
    \              false\n                }\n            }\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmptme6rln8.scala:10:27 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmptme6rln8.scala:14:31 -----------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m                \e[33mval\e[0m \e[36misPrime3\e[0m = isPrime(n - \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               \e[33mvalue\e[0m \e[35misPrime\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (n <= 1) || (n %\
    \ 2 == 0)\n        if (isPrime) {\n            for (i <- 3 to (n / 2)) {\n   \
    \             if (n % i == 0) {\n                    isPrime = false\n       \
    \             break\n                }\n            }\n        }\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbb3tm_06.scala:8:28\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m            \e[33mfor\e[0m (i\
    \ <- \e[31m3\e[0m to (n / \e[31m2\e[0m)) {\n\e[31m\e[31m  |\e[0m             \
    \               ^^^^^\e[0m\n\e[31m  |\e[0m                            Found: \
    \   Long\n\e[31m  |\e[0m                            Required: Int\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpbb3tm_06.scala:10:28 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m                    isPrime = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpbb3tm_06.scala:11:20 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m                    break\n\e[31m\e[31m   |\e[0m         \
    \           ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978733
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        !isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv5c2afs3.scala:20)\n\tat Problem.main(tmpv5c2afs3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        for(i\
    \ <- 2 to math.ceil(math.sqrt(n).toInt)) {\n            if(!isPrime && n % i ==\
    \ 0) {\n                isPrime = false\n            }\n        }\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg39n5bld.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to math.ceil(math.sqrt(n).toInt)) {\n\e[31m\e[31m  |\e[0m         \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m             \
    \         Found:    Double\n\e[31m  |\e[0m                      Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpg39n5bld.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) {\n            true\n        } else {\n            val sqrt = (math.sqrt(n).toInt).toLong\n\
    \            val i = 2\n            while (i <= sqrt) {\n                if (n\
    \ % i == 0) {\n                    false\n                } else {\n         \
    \           i += 1\n                }\n            }\n            true\n     \
    \   }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplk839kvm.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                    i += \e[31m1\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ += is not a member of Int - did you mean i.!=?\n\e[33m\e[33m-- [E129] Potential\
    \ Issue Warning: /tmp/tmplk839kvm.scala:14:20 ----------------\e[0m\e[0m\n\e[33m14\
    \ |\e[0m                    \e[31mfalse\e[0m\n\e[33m\e[33m   |\e[0m          \
    \          ^^^^^\e[0m\n\e[33m   |\e[0mA pure expression does nothing in statement\
    \ position; you may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 warning\
    \ found\n1 error found\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else { for (i <- 3 until Math.sqrt(n)) {\n  \
    \              if (n % i == 0) false\n                else if (i == n) true\n\
    \                else false\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5dotov5v.scala:8:42\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33melse\e[0m { \e\
    [33mfor\e[0m (i <- \e[31m3\e[0m until Math.sqrt(n)) {\n\e[31m\e[31m  |\e[0m  \
    \                               ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m            \
    \                     Found:    Double\n\e[31m  |\e[0m                       \
    \          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime\n\
    \        if (isPrime)\n            return true\n        else\n            return\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyefi0u9s.scala:7:12\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mif\e[0m (isPrime)\n\
    \e[31m\e[31m  |\e[0m            ^^^^^^^\e[0m\n\e[31m  |\e[0m            Found:\
    \    (isPrime : Int => Boolean)\n\e[31m  |\e[0m            Required: Boolean\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && n != 3)\n        for(i <- 2 to (Math.sqrt(n).toInt)) {\n \
    \           if(n % i == 0)\n                isPrime = false\n        }\n     \
    \   isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpkc3xul5j.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978732
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else { \n            val sqrt = (math.sqrt(n).toInt).toLong\n\
    \            val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n          \
    \  val isPrime = primes.takeWhile(x => x <= sqrt).forall(x => n % x == 0)\n  \
    \          isPrime\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yviqbok.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978733
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to math.ceil(math.sqrt(n).toInt)) {\n            if (n %\
    \ i == 0) {\n                isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyb1o2qo1.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpyb1o2qo1.scala:7:32 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.ceil(math.sqrt(n).toInt))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                       Found:    Double\n\e[31m  |\e[0m   \
    \                    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978736
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && isPrime(n / 2))\n        if (isPrime) true\n        else false\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpg0onxwux.scala:6:57 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = n <= \e[31m1\e\
    [0m || (n % \e[31m2\e[0m == \e[31m0\e[0m && n != \e[31m1\e[0m && isPrime(n / \e\
    [31m2\e[0m))\n\e[31m\e[31m  |\e[0m                                           \
    \              ^\e[0m\n\e[31m  |\e[0m                                        Recursive\
    \ \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else isPrime\n     \
    \   }\n        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplmpr5xg4.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmplmpr5xg4.scala:8:17 ----------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m  |\e\
    [0m                 ^\e[0m\n\e[31m  |\e[0m                 Recursive \e[33mvalue\e\
    [0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to n/2)\n            if (n % i == 0)\n                isPrime = false\n\
    \        if (isPrime)\n            return true\n        else\n            return\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdrwxjjqf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n/\e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                      \
    \ ^^^\e[0m\n\e[31m  |\e[0m                       Found:    Long\n\e[31m  |\e[0m\
    \                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpdrwxjjqf.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978736
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else { \n            val sqrt = (math.sqrt(n).toInt).toLong\n\
    \            val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n          \
    \  val primesCount = primes.count(_ == n)\n            if (primesCount > sqrt)\
    \ false\n            else primes.takeWhile(_ <= sqrt).forall(n => n % _ == 0)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps71dpnyq.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        for(i\
    \ <- 2 to math.sqrt(n)) {\n            if(n % i == 0) {\n                isPrime\
    \ = false\n                break\n            }\n        }\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr5umg8c3.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to math.sqrt(n)) {\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpr5umg8c3.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr5umg8c3.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978737
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        !isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv5c2afs3.scala:20)\n\tat Problem.main(tmpv5c2afs3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to n/2) if (!(n % i).isPrime) isPrime = false\n        isPrime\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplcfa5bq_.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n/\e[31m2\e[0m) \e[33mif\e[0m (!(n % i).isPrime) isPrime = \e\
    [31mfalse\e[0m\n\e[31m\e[31m  |\e[0m                       ^^^\e[0m\n\e[31m  |\e\
    [0m                       Found:    Long\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplcfa5bq_.scala:7:41\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i\
    \ <- \e[31m2\e[0m to n/\e[31m2\e[0m) \e[33mif\e[0m (!(n % i).isPrime) isPrime\
    \ = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m                                 ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                 value isPrime is not a member\
    \ of Long\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmplcfa5bq_.scala:7:58 ------------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n/\e[31m2\e\
    [0m) \e[33mif\e[0m (!(n % i).isPrime) isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                                                  ^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                                               Reassignment to val\
    \ isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978738
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6k_rwp1.scala:20)\n\tat Problem.main(tmph6k_rwp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ true\n        else {\n            val isPrime2 = isPrime(n - 2)\n          \
    \  val isPrime3 = isPrime(n - 3)\n            if(isPrime2 || isPrime3) true\n\
    \            else false\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpguv862ui.scala:9:27 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m            \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime(n\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m does\
    \ not take parameters\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpguv862ui.scala:10:27\
    \ -----------------------------\e[0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e\
    [0m \e[36misPrime3\e[0m = isPrime(n - \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \    \e[33mvalue\e[0m \e[35misPrime\e[0m does not take parameters\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978734
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for(i <- 2 to math.ceil(math.sqrt(n).toInt)) {\n            if(n % i\
    \ == 0) {\n                isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == 1\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphxw33qnb.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphxw33qnb.scala:7:31 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to math.ceil(math.sqrt(n).toInt))\
    \ {\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978738
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to n by 2)\n            if (n % i == 0)\n               \
    \ isPrime += i\n        isPrime.toSet.size == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsmapg50l.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpsmapg50l.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ 2.\n        if (n < 2) false\n        // Return false if n is divisible by 2\
    \ or 3.\n        else if (n % 2 == 0 || n % 3 == 0) false\n        // Return true\
    \ if the number is greater than 1.\n        else if (n > 1) true\n        // Otherwise,\
    \ loop from 2 to n and check for factors.\n        else {\n            var i :\
    \ Long = 2\n            while (i <= n) {\n                if (n % i == 0 || n\
    \ % (i + 2) == 0) return false\n                i += 2\n            }\n      \
    \      return true\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_oqj_dhh.scala:33)\n\tat Problem.main(tmp_oqj_dhh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else {\n\
    \            var i = 5\n            while (i <= Math.sqrt(n)) {\n            \
    \    if (n % i == 0) return false\n                i += 2\n            }\n   \
    \         return true\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime\n\
    \        if (isPrime) println(\"The number \" + n + \" is prime.\") else println(\"\
    The number \" + n + \" is not prime.\")\n        isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1hlnwy5e.scala:7:12\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mif\e[0m (isPrime)\
    \ println(\e[31m\"The number \"\e[0m + n + \e[31m\" is prime.\"\e[0m) \e[33melse\e\
    [0m println(\e[31m\"The number \"\e[0m + n + \e[31m\" is not prime.\"\e[0m)\n\e\
    [31m\e[31m  |\e[0m            ^^^^^^^\e[0m\n\e[31m  |\e[0m            Found: \
    \   (isPrime : Int => Boolean)\n\e[31m  |\e[0m            Required: Boolean\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1hlnwy5e.scala:8:8\
    \ ----------------------\e[0m\e[0m\n\e[31m8 |\e[0m        isPrime\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^\e[0m\n\e[31m  |\e[0m        Found:    (isPrime : Int\
    \ => Boolean)\n\e[31m  |\e[0m        Required: Boolean\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for {\n         \
    \   i <- 2 to math.floor(math.sqrt(n))\n        } yield {\n            if (n %\
    \ i == 0) false\n            else isPrime\n        }\n        isPrime.forall(identity)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5rr8pda5.scala:7:32\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m            i <- \e[31m2\e[0m\
    \ to math.floor(math.sqrt(n))\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmp5rr8pda5.scala:10:17 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m   |\e[0m           \
    \      ^\e[0m\n\e[31m   |\e[0m                 Recursive \e[33mvalue\e[0m \e[35misPrime\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978739
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        !isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv5c2afs3.scala:20)\n\tat Problem.main(tmpv5c2afs3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || !(n % 2\
    \ ==0 && n % 3 ==0)\n        for(i <- 3 until Math.sqrt(n)) {\n            if(n\
    \ % i == 0) return false\n        }\n        return isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbes8frqv.scala:7:34\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m3\e[0m until Math.sqrt(n)) {\n\e[31m\e[31m  |\e[0m                       \
    \  ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                         Found:    Double\n\
    \e[31m  |\e[0m                         Required: Int\n\e[31m  |\e[0m\n\e[31m \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978740
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is 0 or 1.\n\
    \        if (n == 0 || n == 1) return false\n        // If n is even, return false\
    \ if its square root is odd.\n        if (n % 2 == 0) return (math.sqrt(n) % 2\
    \ == 1)\n        // If n is odd, return true if its square root is odd.\n    \
    \    return (math.sqrt(n) % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzmqqsswz.scala:15)\n\tat Problem.main(tmpzmqqsswz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for(i <- 2 to n/2){\n            if(n % i == 0){\n                isPrime\
    \ += i\n            }\n        }\n        isPrime.toSet.size == n\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsus3y4sa.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpsus3y4sa.scala:7:22 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n/\e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^^^\e[0m\n\e[31m  |\e[0m    \
    \                  Found:    Long\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ {\n            for(i <- 2 to (Math.sqrt(n).toInt)) {\n                if(n %\
    \ i == 0) {\n                    isPrime = false\n                    break\n\
    \                }\n            }\n        }\n        isPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmptfnmg4qv.scala:10:28 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m                    isPrime = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmptfnmg4qv.scala:11:20 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m                    break\n\e[31m\e[31m   |\e[0m         \
    \           ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978738
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else { \n\
    \            val sqrt = (math.sqrt(n).toInt).toLong\n            val i = 2\n \
    \           while (i <= sqrt) {\n                if (n % i == 0) false\n     \
    \           else i := i + 1\n            }\n            true\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptsryb5b0.scala:14:23 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                \e[33melse\e[0m i := i + \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                     ^^^^\e[0m\n\e[31m   |\e[0m         \
    \           value := is not a member of Int - did you mean i.!=?\n\e[33m\e[33m--\
    \ [E129] Potential Issue Warning: /tmp/tmptsryb5b0.scala:13:32 ----------------\e\
    [0m\e[0m\n\e[33m13 |\e[0m                \e[33mif\e[0m (n % i == \e[31m0\e[0m)\
    \ \e[31mfalse\e[0m\n\e[33m\e[33m   |\e[0m                                ^^^^^\e\
    [0m\n\e[33m   |\e[0mA pure expression does nothing in statement position; you\
    \ may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 warning found\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978744
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ if n % i == 0 yield i\n        !isPrime.exists(_ == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0swi32ky.scala:6:65 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m \e\
    [33myield\e[0m i\n\e[31m\e[31m  |\e[0m                                       \
    \                          ^^^^^\e[0m\n\e[31m  |\e[0m                        \
    \                'then' expected, but 'yield' found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp0swi32ky.scala:6:46 ---------------------\e[0m\e[0m\n\
    \e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m \e[33myield\e\
    [0m i\n\e[31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                     Found:    Double\n\e[31m\
    \  |\e[0m                                     Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp0swi32ky.scala:7:9 -----------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        !isPrime.exists(_ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \  |\e[0m         ^\e[0m\n\e[31m  |\e[0m         Recursive \e[33mvalue\e[0m \e\
    [35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp0swi32ky.scala:8:5 ----------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m    }\n\e[31m\e[31m  |\e[0m     ^\e[0m\n\e[31m  |\e[0m     Found:    Unit\n\
    \e[31m  |\e[0m     Required: Boolean\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978729
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else if (n % 7 == 0) false\n        else true\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqsgc6pw4.scala:21)\n\tat Problem.main(tmpqsgc6pw4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978743
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ != 0 && n % 3 != 0 && n % 5 != 0)\n        if (isPrime) {\n            val sqrtN\
    \ = math.sqrt(n)\n            val i = 3\n            while (i <= sqrtN) {\n  \
    \              if (n % i == 0) {\n                    isPrime = false\n      \
    \              break\n                }\n                i += 2\n            }\n\
    \        }\n        isPrime\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp6lvaj5rj.scala:12:28 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                    isPrime = \e[31mfalse\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp6lvaj5rj.scala:13:20 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m                    break\n\e[31m\e[31m   |\e[0m         \
    \           ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6lvaj5rj.scala:15:18\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                i += \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659978743
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for {\n         \
    \   i <- 2 to math.floor(math.sqrt(n))\n        } yield {\n            if (n %\
    \ i == 0) false\n            else isPrime.takeWhile(_ => n % _ != 0).length ==\
    \ 0\n        }\n        !isPrime.head\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqxaa14_2.scala:7:32\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m            i <- \e[31m2\e[0m\
    \ to math.floor(math.sqrt(n))\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpqxaa14_2.scala:10:17 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m            \e[33melse\e[0m isPrime.takeWhile(_ => n % _ != \e[31m0\e\
    [0m).length == \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e\
    [31m   |\e[0m                 Recursive \e[33mvalue\e[0m \e[35misPrime\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 2) true\n        else\
    \ if (n % 2 == 0) false\n        else { \n            val sqrt = (math.sqrt(n).toInt).toLong\n\
    \            val i = 3\n            while (i <= sqrt) {\n                if (n\
    \ % i == 0) false\n                i += 2\n            }\n            true\n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj1pjkkd4.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                i += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean i.!=?\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmpj1pjkkd4.scala:12:32 ----------------\e[0m\e[0m\n\e[33m12 |\e[0m   \
    \             \e[33mif\e[0m (n % i == \e[31m0\e[0m) \e[31mfalse\e[0m\n\e[33m\e\
    [33m   |\e[0m                                ^^^^^\e[0m\n\e[33m   |\e[0mA pure\
    \ expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659978746
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ 2.\n        if (n < 2) false\n        // Return true if n is even.\n       \
    \ else if (n % 2 == 0) true\n        // Return true if n is odd.\n        else\
    \ (n % 2 != 0 && isPrime(n / 2))\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0vn6wse1.scala:14)\n\tat Problem.main(tmp0vn6wse1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978745
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpte28nd2z.scala:11)\n\tat Problem.main(tmpte28nd2z.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcv5cuzgu.scala:11)\n\tat Problem.main(tmpcv5cuzgu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 1) return true\n     \
    \   if (n == 2) return true\n        if (n % 2 == 0) return false\n        if\
    \ (n % 3 == 0) return false\n        val i = 3\n        while (i <= Math.sqrt(n))\
    \ {\n            if (n % i == 0) return false\n            i += 2\n        }\n\
    \        return true\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6v93yrhn.scala:13:14 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            i += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978745
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ 2.\n        if (n < 2) return false\n        // Return true if the number is\
    \ greater than or equal to 3.\n        if (n > 3) return true\n        // Return\
    \ true if the number is divisible by 2 or 3.\n        if (n % 2 == 0 || n % 3\
    \ == 0) return false\n        // Otherwise, return true if the number is divisible\
    \ by any number between 2 and sqrt(n).\n        val sqrt = (math.sqrt(n).toLong)\n\
    \        for (i <- 2 to sqrt) {\n            if (n % i == 0 || n % (i + 2) ==\
    \ 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi26ra907.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to sqrt) {\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    (sqrt : Long)\n\e[31m   |\e\
    [0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime\n\
    \        if (isPrime) true\n        else false\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmu4x_y2h.scala:7:12\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mif\e[0m (isPrime)\
    \ \e[31mtrue\e[0m\n\e[31m\e[31m  |\e[0m            ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \            Found:    (isPrime : Int => Boolean)\n\e[31m  |\e[0m            Required:\
    \ Boolean\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for(i\
    \ <- 2 to math.ceil(n/2)){\n            if(n % i == 0){\n                isPrime\
    \ = false\n                break\n            }\n        }\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwk0gu9sc.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to math.ceil(n/\e[31m2\e[0m)){\n\e[31m\e[31m  |\e[0m              \
    \        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                      Found:    Double\n\
    \e[31m  |\e[0m                      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpwk0gu9sc.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwk0gu9sc.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to math.ceil(math.sqrt(n).toInt)) {\n            if (n %\
    \ i == 0) {\n                isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyb1o2qo1.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpyb1o2qo1.scala:7:32 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.ceil(math.sqrt(n).toInt))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                       Found:    Double\n\e[31m  |\e[0m   \
    \                    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978736
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     isPrime += i\n            }\n        }\n        isPrime.toSet.size == n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgdyplo6v.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpgdyplo6v.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978747
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) {\n            true\n        } else {\n            val isPrime2 =\
    \ isPrime(n - 1)\n            if (isPrime2) {\n                true\n        \
    \    } else {\n                val isPrime3 = isPrime(n - 2)\n               \
    \ if (isPrime3) {\n                    true\n                } else {\n      \
    \              false\n                }\n            }\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n \
    \   assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmptme6rln8.scala:10:27 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmptme6rln8.scala:14:31 -----------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m                \e[33mval\e[0m \e[36misPrime3\e[0m = isPrime(n - \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               \e[33mvalue\e[0m \e[35misPrime\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else isPrime\n     \
    \   }\n        !isPrime.head\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp044t4baj.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmp044t4baj.scala:8:17 ----------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m  |\e\
    [0m                 ^\e[0m\n\e[31m  |\e[0m                 Recursive \e[33mvalue\e\
    [0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978747
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        val\
    \ isPrime2 = true\n        val isPrime3 = true\n        val isPrime4 = true\n\
    \        val isPrime5 = true\n        val isPrime6 = true\n        val isPrime7\
    \ = true\n        val isPrime8 = true\n        val isPrime9 = true\n        val\
    \ isPrime10 = true\n        val isPrime11 = true\n        val isPrime12 = true\n\
    \        val isPrime13 = true\n        val isPrime14 = true\n        val isPrime15\
    \ = true\n        val isPrime16 = true\n        val isPrime17 = true\n       \
    \ val isPrime18 = true\n        val isPrime19 = true\n        val isPrime20 =\
    \ true\n        val isPrime21 = true\n        val isPrime22 = true\n        val\
    \ isPrime23 = true\n        val isPrime24 = true\n        val isPrime25 = true\n\
    \        val isPrime26 = true\n        val isPrime27 = true\n        val isPrime28\
    \ = true\n        val isPrime29 = true\n        val isPrime30 = true\n       \
    \ val isPrime31 = true\n        val isPrime32 = true\n        val isPrime33 =\
    \ true\n        val isPrime34 = true\n        val isPrime35 = true\n        val\
    \ isPrime36 = true\n        val isPrime37 = true\n        val isPrime38 = true\n\
    \        val isPrime39 = true\n        val isPrime40 = true\n        val isPrime41\
    \ = true\n        val isPrime42 = true\n        val isPrime43 = true\n       \
    \ val isPrime44 = true\n        val isPrime45 = true\n        val isPrime46 =\
    \ true\n        val isPrime47 = true\n        val isPrime48 = true\n        val\
    \ isPrime49 = true\n        val isPrime50 = true\n        val isPrime51 = true\n\
    \        val isPrime52 = true\n        val isPrime53 = true\n        val isPrime54\
    \ = true\n        val isPrime55 = true\n        val isPrime56 = true\n       \
    \ val isPrime57 = true\n        val isPrime58 = true\n        val isPrime59 =\
    \ true\n        val isPrime60 = true\n        val isPrime61 = true\n        val\
    \ isPrime62 = true\n        val isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbyilq0ki.scala:69:4 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpbyilq0ki.scala:69:5 ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978748
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to Math.sqrt(n)) {\n            if (n % i == 0) {\n     \
    \           isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zsn9vyy.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6zsn9vyy.scala:7:32 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                       Found:    Double\n\e[31m  |\e[0m                   \
    \    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime\n\
    \        if (isPrime)\n            true\n        else\n            false\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3h0juqbu.scala:7:12\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mif\e[0m (isPrime)\n\
    \e[31m\e[31m  |\e[0m            ^^^^^^^\e[0m\n\e[31m  |\e[0m            Found:\
    \    (isPrime : Int => Boolean)\n\e[31m  |\e[0m            Required: Boolean\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ true\n        else {\n            val sqrt = (math.sqrt(n).toInt) + 1\n    \
    \        for(i <- 2 to sqrt) {\n                if(n % i == 0) false\n       \
    \     }\n            true\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp31b7_7o.scala:17)\n\tat Problem.main(tmpp31b7_7o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978749
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ true\n        else {\n            val sqrt = (math.sqrt(n).toInt)\n        \
    \    for(i <- 2 to sqrt) {\n                if(n % i == 0) false\n           \
    \ }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7w0c4wah.scala:17)\n\tat Problem.main(tmp7w0c4wah.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978750
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1kjcgw4c.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978749
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        // Return false if n is less than\
    \ or equal to 1.\n        if (n <= 1) return false\n        // Return true if\
    \ n is even.\n        if (n % 2 == 0) return false\n        // Return true if\
    \ n is greater than 1.\n        if (n <= 3) return true\n        // Otherwise,\
    \ loop from 3 to sqrt(n).\n        var i = math.ceil(math.sqrt(n))\n        while\
    \ (i <= math.floor(math.sqrt(n))) {\n            // If n is divisible by any number\
    \ between 3 and sqrt(n), then it is not prime.\n            if (n % i == 0) return\
    \ false\n            i = i + 2\n        }\n        // If n is prime, then return\
    \ true.\n        return true\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpmx7xdcfk.scala:33)\n\tat Problem.main(tmpmx7xdcfk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978749
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else isPrime\n     \
    \   }\n        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplmpr5xg4.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmplmpr5xg4.scala:8:17 ----------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m  |\e\
    [0m                 ^\e[0m\n\e[31m  |\e[0m                 Recursive \e[33mvalue\e\
    [0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 2)\n        if (isPrime)\n            true\n        else\n    \
    \        false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpx35pghuu.scala:13)\n\tat Problem.main(tmpx35pghuu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978749
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for {\n         \
    \   i <- 2 to math.floor(math.sqrt(n))\n        } yield {\n            if (n %\
    \ i == 0) false\n            else isPrime\n        }\n        !isPrime.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqs9xaj9g.scala:7:32\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m            i <- \e[31m2\e[0m\
    \ to math.floor(math.sqrt(n))\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpqs9xaj9g.scala:10:17 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m   |\e[0m           \
    \      ^\e[0m\n\e[31m   |\e[0m                 Recursive \e[33mvalue\e[0m \e[35misPrime\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978750
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1)\n        for(i <- 2 to n by 2){\n            if(n % i == 0){\n\
    \                isPrime = false\n                break\n            }\n     \
    \   }\n        isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0kmk5u2z.scala:7:22\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n by \e[31m2\e[0m){\n\e[31m\e[31m  |\e[0m                      ^\e\
    [0m\n\e[31m  |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m\
    \                      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp0kmk5u2z.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0kmk5u2z.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978750
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6k_rwp1.scala:20)\n\tat Problem.main(tmph6k_rwp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1 && isPrime(n / 2))\n        if (isPrime)\n            true\n\
    \        else\n            false\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp7famt0db.scala:6:57 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = n <= \e[31m1\e\
    [0m || (n % \e[31m2\e[0m == \e[31m0\e[0m && n != \e[31m1\e[0m && isPrime(n / \e\
    [31m2\e[0m))\n\e[31m\e[31m  |\e[0m                                           \
    \              ^\e[0m\n\e[31m  |\e[0m                                        Recursive\
    \ \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978747
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 1) return false\n    \
    \    if (n == 2) return true\n        if (n % 2 == 0) return false\n        val\
    \ d = 2\n        while (d <= n / 2) {\n            if (n % d == 0) return false\n\
    \            d += 2\n        }\n        return true\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxjrt_3qs.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            d += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean d.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978751
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for {\n         \
    \   i <- 2 to math.sqrt(n) if (n % i == 0)\n        } yield i\n        !isPrime.exists(_\
    \ == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp99i0p_4i.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m            i <- \e[31m2\e[0m\
    \ to math.sqrt(n) \e[33mif\e[0m (n % i == \e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m\
    \                      ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    Double\n\e[31m  |\e[0m                      Required: Int\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978754
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val sqrtN = math.sqrt(n)\n    \
    \    val isPrime = true\n        for (i <- 2 to sqrtN) {\n            if (n %\
    \ i == 0) {\n                isPrime = false\n                break\n        \
    \    }\n        }\n        isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptr7qx6di.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to sqrtN) {\n\e[31m\e[31m  |\e[0m                       ^^^^^\e\
    [0m\n\e[31m  |\e[0m                       Found:    (sqrtN : Double)\n\e[31m \
    \ |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmptr7qx6di.scala:10:24 -----------------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Reassignment to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmptr7qx6di.scala:11:16 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m                break\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        for(i\
    \ <- 2 to Math.sqrt(n)) {\n            if(n % i == 0) {\n                isPrime\
    \ = false\n                break\n            }\n        }\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjy6a30jb.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to Math.sqrt(n)) {\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Found:    Double\n\e[31m  |\e[0m    \
    \                  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpjy6a30jb.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjy6a30jb.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978754
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to math.floor(math.sqrt(n).toInt)).forall(x\
    \ => n % x == 0)\n        isPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpekhxo8_p.scala:6:38\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = (\e[31m2\e[0m to math.floor(math.sqrt(n).toInt)).forall(\e[36mx\e[0m =>\
    \ n % x == \e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Found:    Double\n\e[31m  |\e[0m\
    \                            Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978754
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ if n % i == 0 yield i\n        !isPrime.exists(_ == 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0swi32ky.scala:6:65 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m \e\
    [33myield\e[0m i\n\e[31m\e[31m  |\e[0m                                       \
    \                          ^^^^^\e[0m\n\e[31m  |\e[0m                        \
    \                'then' expected, but 'yield' found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp0swi32ky.scala:6:46 ---------------------\e[0m\e[0m\n\
    \e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to Math.sqrt(n)) \e[33mif\e[0m n % i == \e[31m0\e[0m \e[33myield\e\
    [0m i\n\e[31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                     Found:    Double\n\e[31m\
    \  |\e[0m                                     Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmp0swi32ky.scala:7:9 -----------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        !isPrime.exists(_ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \  |\e[0m         ^\e[0m\n\e[31m  |\e[0m         Recursive \e[33mvalue\e[0m \e\
    [35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp0swi32ky.scala:8:5 ----------------------\e[0m\e[0m\n\e[31m8\
    \ |\e[0m    }\n\e[31m\e[31m  |\e[0m     ^\e[0m\n\e[31m  |\e[0m     Found:    Unit\n\
    \e[31m  |\e[0m     Required: Boolean\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ true\n        else {\n            val sqrtN = math.sqrt(n)\n            for(i\
    \ <- 2 to sqrtN) {\n                if(n % i == 0) false\n            }\n    \
    \        true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp81fm43jl.scala:10:26\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m            \e[33mfor\e[0m(i\
    \ <- \e[31m2\e[0m to sqrtN) {\n\e[31m\e[31m   |\e[0m                         \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m                          Found:    (sqrtN : Double)\n\
    \e[31m   |\e[0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[33m\e\
    [33m-- [E129] Potential Issue Warning: /tmp/tmp81fm43jl.scala:11:31 ----------------\e\
    [0m\e[0m\n\e[33m11 |\e[0m                \e[33mif\e[0m(n % i == \e[31m0\e[0m)\
    \ \e[31mfalse\e[0m\n\e[33m\e[33m   |\e[0m                               ^^^^^\e\
    [0m\n\e[33m   |\e[0mA pure expression does nothing in statement position; you\
    \ may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 warning found\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n)\
    \ by 2) if (n % i == 0) yield false\n        !isPrime.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplpmmmkex.scala:6:72 ----------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = \e[33mfor\e\
    [0m (i <- \e[31m2\e[0m to Math.sqrt(n) by \e[31m2\e[0m) \e[33mif\e[0m (n % i ==\
    \ \e[31m0\e[0m) \e[33myield\e[0m \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m      \
    \                                                                  ^^^^^\e[0m\n\
    \e[31m  |\e[0m                                        'then' expected, but 'yield'\
    \ found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplpmmmkex.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n) by \e[31m2\e[0m) \e[33mif\e\
    [0m (n % i == \e[31m0\e[0m) \e[33myield\e[0m \e[31mfalse\e[0m\n\e[31m\e[31m  |\e\
    [0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                                 Found:    Double\n\e[31m  |\e[0m           \
    \                          Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmplpmmmkex.scala:7:9 -----------------------------\e[0m\e\
    [0m\n\e[31m7 |\e[0m        !isPrime.last\n\e[31m\e[31m  |\e[0m         ^\e[0m\n\
    \e[31m  |\e[0m         Recursive \e[33mvalue\e[0m \e[35misPrime\e[0m needs type\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplpmmmkex.scala:8:5\
    \ ----------------------\e[0m\e[0m\n\e[31m8 |\e[0m    }\n\e[31m\e[31m  |\e[0m\
    \     ^\e[0m\n\e[31m  |\e[0m     Found:    Unit\n\e[31m  |\e[0m     Required:\
    \ Boolean\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n != 1)\n        for(i <- 2 until n by 2)\n            if(!isPrime)\n\
    \                return false\n        return true\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1ovaeq.scala:7:25\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m until n by \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                    \
    \     ^\e[0m\n\e[31m  |\e[0m                         Found:    (n : Long)\n\e\
    [31m  |\e[0m                         Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1 || (n % 2\
    \ == 0 && n > 1)\n        if (isPrime) {\n            val isDivisibleByThree =\
    \ n % 3 == 0\n            val isDivisibleByFive = n % 5 == 0\n            if (isDivisibleByThree\
    \ || isDivisibleByFive) {\n                false\n            } else {\n     \
    \           val isDivisibleBySix = (n % 6 == 0)\n                if (isDivisibleBySix)\
    \ {\n                    false\n                } else {\n                   \
    \ true\n                }\n            }\n        } else {\n            false\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9u5dzf5f.scala:26)\n\tat Problem.main(tmp9u5dzf5f.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6k_rwp1.scala:20)\n\tat Problem.main(tmph6k_rwp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if(isPrime)\
    \ true\n        else {\n            val sqrtN = math.sqrt(n)\n            val\
    \ isPrime2 = isPrime(sqrtN-1)\n            val isPrime3 = isPrime(sqrtN+2)\n \
    \           val isPrime4 = isPrime(sqrtN+3)\n            val isPrime5 = isPrime(sqrtN+4)\n\
    \            val isPrime6 = isPrime(sqrtN+5)\n            val isPrime7 = isPrime(sqrtN+6)\n\
    \            val isPrime8 = isPrime(sqrtN+7)\n            val isPrime9 = isPrime(sqrtN+8)\n\
    \            val isPrime10 = isPrime(sqrtN+9)\n            val isPrime11 = isPrime(sqrtN+10)\n\
    \            val isPrime12 = isPrime(sqrtN+11)\n            val isPrime13 = isPrime(sqrtN+12)\n\
    \            val isPrime14 = isPrime(sqrtN+13)\n            val isPrime15 = isPrime(sqrtN+14)\n\
    \            val isPrime16 = isPrime(sqrtN+15)\n            val isPrime17 = isPrime(sqrtN+16)\n\
    \            val isPrime18 = isPrime(sqrtN+17)\n            val isPrime19 = isPrime(sqrtN+18)\n\
    \            val isPrime20 = isPrime(sqrtN+19)\n            val isPrime21 = isPrime(sqrtN+20)\n\
    \            val isPrime22 = isPrime(sqrtN+21)\n            val isPrime23 = isPrime(sqrtN+22)\n\
    \            val isPrime24 = isPrime(sqrtN+23)\n            val isPrime25 = isPrime(sqrtN+24)\n\
    \            val isPrime26 = isPrime(sqrtN+25)\n            val isPrime27 = isPrime(sqrtN+26)\n\
    \            val isPrime28 = isPrime(sqrtN+27)\n            val isPrime29 = isPrime(sqrtN+28)\n\
    \            val isPrime30 = isPrime(sqrtN+29)\n            val isPrime31 = isPrime(sqrtN+30)\n\
    \            val isPrime32 = isPrime(sqrtN+31)\n            val isPrime33 = isPrime(sqrtN\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgakjpftp.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgakjpftp.scala:60:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m60 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E050] Type\
    \ Error: /tmp/tmpgakjpftp.scala:10:27 -----------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m            \e[33mval\e[0m \e[36misPrime2\e[0m = isPrime(sqrtN-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpgakjpftp.scala:11:27\
    \ -----------------------------\e[0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e\
    [0m \e[36misPrime3\e[0m = isPrime(sqrtN+\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \      \e[33mvalue\e[0m \e[35misPrime\e[0m does not take parameters\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E050] Type Error: /tmp/tmpgakjpftp.scala:12:27 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36misPrime4\e[0m = isPrime(sqrtN+\e\
    [31m3\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                           \e[33mvalue\e[0m \e[35misPrime\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpgakjpftp.scala:13:27\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e\
    [0m \e[36misPrime5\e[0m = isPrime(sqrtN+\e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \      \e[33mvalue\e[0m \e[35misPrime\e[0m does not take parameters\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compi"
  stdout: ''
  timestamp: 1659978756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else isPrime\n     \
    \   }\n        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplmpr5xg4.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmplmpr5xg4.scala:8:17 ----------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m            \e[33melse\e[0m isPrime\n\e[31m\e[31m  |\e\
    [0m                 ^\e[0m\n\e[31m  |\e[0m                 Recursive \e[33mvalue\e\
    [0m \e[35misPrime\e[0m needs type\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978727
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else true\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6k_rwp1.scala:20)\n\tat Problem.main(tmph6k_rwp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        if (isPrime) true else false\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0rd8g46n.scala:10)\n\tat Problem.main(tmp0rd8g46n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978757
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        if\
    \ (isPrime) {\n            return true\n        }\n        val sqrt = (sqrt(n).toInt)\
    \ + 1\n        for (i <- 2 to sqrt) {\n            if (n % i == 0) {\n       \
    \         return false\n            }\n        }\n        return true\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp_e0zkjf2.scala:10:20 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msqrt\e[0m = (sqrt(n).toInt)\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e\
    [0m                    Recursive \e[33mvalue\e[0m \e[35msqrt\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978754
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrime2 = mutable.Set[Long]()\n        val isPrime3 = mutable.Set[Long]()\n\
    \        val isPrime4 = mutable.Set[Long]()\n        val isPrime5 = mutable.Set[Long]()\n\
    \        val isPrime6 = mutable.Set[Long]()\n        val isPrime7 = mutable.Set[Long]()\n\
    \        val isPrime8 = mutable.Set[Long]()\n        val isPrime9 = mutable.Set[Long]()\n\
    \        val isPrime10 = mutable.Set[Long]()\n        val isPrime11 = mutable.Set[Long]()\n\
    \        val isPrime12 = mutable.Set[Long]()\n        val isPrime13 = mutable.Set[Long]()\n\
    \        val isPrime14 = mutable.Set[Long]()\n        val isPrime15 = mutable.Set[Long]()\n\
    \        val isPrime16 = mutable.Set[Long]()\n        val isPrime17 = mutable.Set[Long]()\n\
    \        val isPrime18 = mutable.Set[Long]()\n        val isPrime19 = mutable.Set[Long]()\n\
    \        val isPrime20 = mutable.Set[Long]()\n        val isPrime21 = mutable.Set[Long]()\n\
    \        val isPrime22 = mutable.Set[Long]()\n        val isPrime23 = mutable.Set[Long]()\n\
    \        val isPrime24 = mutable.Set[Long]()\n        val isPrime25 = mutable.Set[Long]()\n\
    \        val isPrime26 = mutable.Set[Long]()\n        val isPrime27 = mutable.Set[Long]()\n\
    \        val isPrime28 = mutable.Set[Long]()\n        val isPrime29 = mutable.Set[Long]()\n\
    \        val isPrime30 = mutable.Set[Long]()\n        val isPrime31 = mutable.Set[Long]()\n\
    \        val isPrime32 = mutable.Set[Long]()\n        val isPrime33 = mutable.Set[Long]()\n\
    \        val isPrime34 = mutable.Set[Long]()\n        val isPrime35 = mutable.Set[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkucwnotd.scala:7:23 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36misPrime4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36misPrime5\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkucwnotd.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime6\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        val\
    \ isPrime2 = true\n        val isPrime3 = true\n        val isPrime4 = true\n\
    \        val isPrime5 = true\n        val isPrime6 = true\n        val isPrime7\
    \ = true\n        val isPrime8 = true\n        val isPrime9 = true\n        val\
    \ isPrime10 = true\n        val isPrime11 = true\n        val isPrime12 = true\n\
    \        val isPrime13 = true\n        val isPrime14 = true\n        val isPrime15\
    \ = true\n        val isPrime16 = true\n        val isPrime17 = true\n       \
    \ val isPrime18 = true\n        val isPrime19 = true\n        val isPrime20 =\
    \ true\n        val isPrime21 = true\n        val isPrime22 = true\n        val\
    \ isPrime23 = true\n        val isPrime24 = true\n        val isPrime25 = true\n\
    \        val isPrime26 = true\n        val isPrime27 = true\n        val isPrime28\
    \ = true\n        val isPrime29 = true\n        val isPrime30 = true\n       \
    \ val isPrime31 = true\n        val isPrime32 = true\n        val isPrime33 =\
    \ true\n        val isPrime34 = true\n        val isPrime35 = true\n        val\
    \ isPrime36 = true\n        val isPrime37 = true\n        val isPrime38 = true\n\
    \        val isPrime39 = true\n        val isPrime40 = true\n        val isPrime41\
    \ = true\n        val isPrime42 = true\n        val isPrime43 = true\n       \
    \ val isPrime44 = true\n        val isPrime45 = true\n        val isPrime46 =\
    \ true\n        val isPrime47 = true\n        val isPrime48 = true\n        val\
    \ isPrime49 = true\n        val isPrime50 = true\n        val isPrime51 = true\n\
    \        val isPrime52 = true\n        val isPrime53 = true\n        val isPrime54\
    \ = true\n        val isPrime55 = true\n        val isPrime56 = true\n       \
    \ val isPrime57 = true\n        val isPrime58 = true\n        val isPrime59 =\
    \ true\n        val isPrime60 = true\n        val isPrime61 = true\n        val\
    \ isPrime62 = true\n        val isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbyilq0ki.scala:69:4 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpbyilq0ki.scala:69:5 ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978748
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = scala.math.BigInt(n).isProbablePrime\n\
    \        !isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkzq8b4de.scala:7:8 --------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        !isPrime\n\e[31m\e[31m  |\e[0m        ^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        value unary_! is not a member of Int => Boolean\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     isPrime += i\n            }\n        }\n        isPrime.toSet.size == n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgdyplo6v.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpgdyplo6v.scala:7:23 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n).toInt).forall(x\
    \ => n % x == 0)\n        if (isPrime) true\n        else false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcv5cuzgu.scala:11)\n\tat Problem.main(tmpcv5cuzgu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n == 1) return true\n     \
    \   if (n == 2) return true\n        if (n % 2 == 0) return false\n        val\
    \ sqrt = (math.sqrt(n).toInt).toLong\n        for (i <- 3 to sqrt) {\n       \
    \     if (n % i == 0) return false\n        }\n        return true\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isPrime((6l)) == (false));\n\
    \    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l)) == (true));\n\
    \    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) == (false));\n\
    \    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) == (true));\n\
    \    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) == (false));\n\
    \    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpazev32ll.scala:10:23\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m3\e[0m to sqrt) {\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    (sqrt : Long)\n\e[31m   |\e\
    [0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ n % 2 == 0 && isPrime(n / 2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l)) == (true));\n\
    \    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l)) == (false));\n\
    \    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l)) == (true));\n\
    \    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l)) == (true));\n\
    \    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l)) == (false));\n\
    \    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpeoci7awc.scala:11)\n\tat Problem.main(tmpeoci7awc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to Math.sqrt(n)).forall(n\
    \ => n % _ == 0)\n        if (isPrime) true else false\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isPrime((6l)) == (false));\n    assert(isPrime((101l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((13441l))\
    \ == (true));\n    assert(isPrime((61l)) == (true));\n    assert(isPrime((4l))\
    \ == (false));\n    assert(isPrime((1l)) == (false));\n    assert(isPrime((5l))\
    \ == (true));\n    assert(isPrime((11l)) == (true));\n    assert(isPrime((17l))\
    \ == (true));\n    assert(isPrime((85l)) == (false));\n    assert(isPrime((77l))\
    \ == (false));\n    assert(isPrime((255379l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz18bc0v7.scala:6:37\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = (\e[31m2\e[0m to Math.sqrt(n)).forall(\e[36mn\e[0m => n % _ == \e[31m0\e\
    [0m)\n\e[31m\e[31m  |\e[0m                            ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                            Found:    Double\n\e[31m  |\e[0m        \
    \                    Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E081] Type Error:\
    \ /tmp/tmpz18bc0v7.scala:6:58 ------------------------------\e[0m\e[0m\n\e[31m6\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = (\e[31m2\e[0m to Math.sqrt(n)).forall(\e\
    [36mn\e[0m => n % _ == \e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \                                       ^\e[0m\n\e[31m  |\e[0m     Missing parameter\
    \ type\n\e[31m  |\e[0m\n\e[31m  |\e[0m     I could not infer the type of the parameter\
    \ _$1 of expanded function:\n\e[31m  |\e[0m     _$1 => n % _$1 == 0.\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = (2 to math.floor(math.sqrt(n).toInt)).forall(x\
    \ => n % x == 0)\n        if (isPrime)\n            true\n        else\n     \
    \       false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqac2e9fg.scala:6:38\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = (\e[31m2\e[0m to math.floor(math.sqrt(n).toInt)).forall(\e[36mx\e[0m =>\
    \ n % x == \e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                            Found:    Double\n\e[31m  |\e[0m\
    \                            Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978757
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to n by 2)\n            if (n % i == 0)\n                isPrime = false\n\
    \        if (isPrime)\n            return true\n        else\n            return\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3z3wfh8x.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n by \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                   \
    \    ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e[31m\
    \  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmp3z3wfh8x.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978757
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = mutable.Set[Long]()\n\
    \        for (i <- 2 to math.floor(math.sqrt(n))) {\n            if (n % i ==\
    \ 0) {\n                isPrime += i\n            }\n        }\n        isPrime.toSet.size\
    \ == n\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuys4_m5u.scala:6:22 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpuys4_m5u.scala:7:33 ---------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to math.floor(math.sqrt(n)))\
    \ {\n\e[31m\e[31m  |\e[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                       Found:    Double\n\e[31m  |\e[0m        \
    \               Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978757
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = for (i <- 2 to Math.sqrt(n))\
    \ yield {\n            if (n % i == 0) false\n            else true\n        }\n\
    \        !isPrime.last\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdxb5oc1z.scala:6:46\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36misPrime\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m2\e[0m to Math.sqrt(n)) \e[33myield\e[0m {\n\e\
    [31m\e[31m  |\e[0m                                     ^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                     Found:    Double\n\e[31m  |\e[0m\
    \                                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = n <= 1\n        for(i\
    \ <- 2 to math.ceil(math.sqrt(n).toInt)) {\n            if(n % i == 0) {\n   \
    \             isPrime = false\n                break\n            }\n        }\n\
    \        isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp38drlmu.scala:7:31\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to math.ceil(math.sqrt(n).toInt)) {\n\e[31m\e[31m  |\e[0m         \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m             \
    \         Found:    Double\n\e[31m  |\e[0m                      Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpp38drlmu.scala:9:24 ------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m\
    \  |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp38drlmu.scala:10:16\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978757
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        val isPrime = true\n        for\
    \ (i <- 2 to n/2)\n            if (n % i == 0)\n                isPrime = false\n\
    \        if (isPrime)\n            return true\n        else\n            return\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdrwxjjqf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n/\e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m                      \
    \ ^^^\e[0m\n\e[31m  |\e[0m                       Found:    Long\n\e[31m  |\e[0m\
    \                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpdrwxjjqf.scala:9:24 ------------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m  |\e[0m     \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                Reassignment to\
    \ val isPrime\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978736
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return true if a given number is prime, and false otherwise.\n   \
    \ def isPrime(n : Long) : Boolean = {\n        if (n <= 1) false\n        else\
    \ if (n % 2 == 0) false\n        else if (n % 3 == 0) false\n        else if (n\
    \ % 5 == 0) false\n        else { \n            val sqrt = (math.sqrt(n).toInt)\n\
    \            var i = 2\n            while (i <= sqrt) {\n                if (n\
    \ % i == 0) false\n                i += 2\n            }\n            true\n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(isPrime((6l))\
    \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
    \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l))\
    \ == (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l))\
    \ == (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l))\
    \ == (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpif7c4gh0.scala:28)\n\tat Problem.main(tmpif7c4gh0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978757

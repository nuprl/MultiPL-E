name: HumanEval_76_is_simple_power
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Your task is to write a function that returns true if a number x is a simple\n\
  \    // power of n and false in other cases.\n    // x is a simple power of n if\
  \ n**int=x\n    // For example:\n    def isSimplePower(x : Long, n : Long) : Boolean\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isSimplePower((16l),\
  \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n \
  \   assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
  \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
  \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n    assert(isSimplePower((12l),\
  \ (6l)) == (false));\n    assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
  \ (12l)) == (true));\n    }\n\n}\n"
completions: ["        val pow = math.pow(n, x)\n        val pow2 = math.pow(pow,\
    \ n)\n        val pow3 = math.pow(pow2, n)\n        val pow4 = math.pow(pow3,\
    \ n)\n        val pow5 = math.pow(pow4, n)\n        val pow6 = math.pow(pow5,\
    \ n)\n        val pow7 = math.pow(pow6, n)\n        val pow8 = math.pow(pow7,\
    \ n)\n        val pow9 = math.pow(pow8, n)\n        val pow10 = math.pow(pow9,\
    \ n)\n        val pow11 = math.pow(pow10, n)\n        val pow12 = math.pow(pow11,\
    \ n)\n        val pow13 = math.pow(pow12, n)\n        val pow14 = math.pow(pow13,\
    \ n)\n        val pow15 = math.pow(pow14, n)\n        val pow16 = math.pow(pow15,\
    \ n)\n        val pow17 = math.pow(pow16, n)\n        val pow18 = math.pow(pow17,\
    \ n)\n        val pow19 = math.pow(pow18, n)\n        val pow20 = math.pow(pow19,\
    \ n)\n        val pow21 = math.pow(pow20, n)\n        val pow22 = math.pow(pow21,\
    \ n)\n        val pow23 = math.pow(pow22, n)\n        val pow24 = math.pow(pow23,\
    \ n)\n        val pow25 = math.pow(pow24, n)\n        val pow26 = math.pow(pow25,\
    \ n)\n        val pow27 = math.pow(pow26, n)\n        val pow28 = math.pow(pow27,\
    \ n)\n        val pow29 = math.pow(pow28, n)\n        val pow30 = math.pow(pow29,\
    \ n)\n        val pow31 = math.pow(pow30, n)\n        val pow32 = math.pow(pow31,\
    \ n)\n        val pow33 = math.pow(pow32, n)\n        val pow34 = math.pow(pow33,\
    \ n)\n        val pow35 = math.pow(pow34, n)\n        val pow36 = math.pow(pow35,\
    \ n)\n        val pow37 = math.pow(pow36, n)\n        val pow38 = math.pow(pow37,\
    \ n)\n        val pow39 = math.pow(pow38, n)\n        val pow40 = math.pow(pow39,\
    \ n)\n        val pow41 = math.pow(pow40, n)\n        val pow42 = math.pow(pow41,\
    \ n)\n        val pow43 = math.pow(pow42, n)\n        val pow44 = math.pow(pow43,\
    \ n)\n        val pow45 = math.pow(pow44, n)\n        val pow46 = math.pow(pow",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toDouble == x", "        val power = math.pow(n, x)\n    \
    \    val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n      \
    \  val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n        val\
    \ power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n        val power8\
    \ = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n        val power10 =\
    \ math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n        val power12\
    \ = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n        val power14\
    \ = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n        val power16\
    \ = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n        val power18\
    \ = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n        val power20\
    \ = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n        val power22\
    \ = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n        val power24\
    \ = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n        val power26\
    \ = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n        val power28\
    \ = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n        val power30\
    \ = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n        val power32\
    \ = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n        val power34\
    \ = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n        val power36\
    \ = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n        val power38\
    \ = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n        val power40\
    \ = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n        val power42\
    \ = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n        val power44\
    \ = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n        val power46\
    \ = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n        val power48\
    \ = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n        val power50\
    \ = math.pow(n, 50)\n        val ", "        val power = math.pow(n, x)\n    \
    \    power.toLong == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        val power2 = math.pow(n,\
    \ 2)\n        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n\
    \        val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n  \
    \      val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n    \
    \    val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n    \
    \    val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n  \
    \      val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n\
    \        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        val result = math.abs(x - power) < 1e-10\n        result", "   \
    \     val power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n        val\
    \ power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n        val power6\
    \ = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n        val power8 =\
    \ math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n        val power10 = math.pow(n,\
    \ 10)\n        val power11 = math.pow(n, 11)\n        val power12 = math.pow(n,\
    \ 12)\n        val power13 = math.pow(n, 13)\n        val power14 = math.pow(n,\
    \ 14)\n        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n,\
    \ 16)\n        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n,\
    \ 18)\n        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n,\
    \ 20)\n        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n,\
    \ 22)\n        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n,\
    \ 24)\n        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n,\
    \ 26)\n        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n,\
    \ 28)\n        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n,\
    \ 30)\n        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n,\
    \ 32)\n        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n,\
    \ 34)\n        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n,\
    \ 36)\n        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n,\
    \ 38)\n        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n,\
    \ 40)\n        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n,\
    \ 42)\n        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n,\
    \ 44)\n        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n,\
    \ 46)\n        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n,\
    \ 48)\n        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n,\
    \ 50)\n        val ", "        val int = x\n        val power = n\n        val\
    \ result = power * power == x\n        result", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  val power2 = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n\
    \        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        power == x",
  "        val pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n       \
    \ val pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n        val\
    \ pow5 = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n        val pow7\
    \ = math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n        val pow9 =\
    \ math.pow(pow, 9)\n        val pow10 = math.pow(pow, 10)\n        val pow11 =\
    \ math.pow(pow, 11)\n        val pow12 = math.pow(pow, 12)\n        val pow13\
    \ = math.pow(pow, 13)\n        val pow14 = math.pow(pow, 14)\n        val pow15\
    \ = math.pow(pow, 15)\n        val pow16 = math.pow(pow, 16)\n        val pow17\
    \ = math.pow(pow, 17)\n        val pow18 = math.pow(pow, 18)\n        val pow19\
    \ = math.pow(pow, 19)\n        val pow20 = math.pow(pow, 20)\n        val pow21\
    \ = math.pow(pow, 21)\n        val pow22 = math.pow(pow, 22)\n        val pow23\
    \ = math.pow(pow, 23)\n        val pow24 = math.pow(pow, 24)\n        val pow25\
    \ = math.pow(pow, 25)\n        val pow26 = math.pow(pow, 26)\n        val pow27\
    \ = math.pow(pow, 27)\n        val pow28 = math.pow(pow, 28)\n        val pow29\
    \ = math.pow(pow, 29)\n        val pow30 = math.pow(pow, 30)\n        val pow31\
    \ = math.pow(pow, 31)\n        val pow32 = math.pow(pow, 32)\n        val pow33\
    \ = math.pow(pow, 33)\n        val pow34 = math.pow(pow, 34)\n        val pow35\
    \ = math.pow(pow, 35)\n        val pow36 = math.pow(pow, 36)\n        val pow37\
    \ = math.pow(pow, 37)\n        val pow38 = math.pow(pow, 38)\n        val pow39\
    \ = math.pow(pow, 39)\n        val pow40 = math.pow(pow, 40)\n        val pow41\
    \ = math.pow(pow, 41)\n        val pow42 = math.pow(pow, 42)\n        val pow43\
    \ = math.pow(pow, 43)\n        val pow44 = math.pow(pow, 44)\n        val pow45\
    \ = math.pow(pow, 45)\n        val pow46 = math.pow(pow, 46)\n", "        val\
    \ power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        val power2 = math.pow(power, 2)\n        val\
    \ power3 = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n     \
    \   val power5 = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n\
    \        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        val power2 = math.pow(power, 2)\n        val\
    \ power3 = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n     \
    \   val power5 = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n\
    \        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power.toLong == x", " \
    \       val pow = math.pow(n, x)\n        val pow2 = math.pow(n, 2)\n        val\
    \ pow3 = math.pow(n, 3)\n        val pow4 = math.pow(n, 4)\n        val pow5 =\
    \ math.pow(n, 5)\n        val pow6 = math.pow(n, 6)\n        val pow7 = math.pow(n,\
    \ 7)\n        val pow8 = math.pow(n, 8)\n        val pow9 = math.pow(n, 9)\n \
    \       val pow10 = math.pow(n, 10)\n        val pow11 = math.pow(n, 11)\n   \
    \     val pow12 = math.pow(n, 12)\n        val pow13 = math.pow(n, 13)\n     \
    \   val pow14 = math.pow(n, 14)\n        val pow15 = math.pow(n, 15)\n       \
    \ val pow16 = math.pow(n, 16)\n        val pow17 = math.pow(n, 17)\n        val\
    \ pow18 = math.pow(n, 18)\n        val pow19 = math.pow(n, 19)\n        val pow20\
    \ = math.pow(n, 20)\n        val pow21 = math.pow(n, 21)\n        val pow22 =\
    \ math.pow(n, 22)\n        val pow23 = math.pow(n, 23)\n        val pow24 = math.pow(n,\
    \ 24)\n        val pow25 = math.pow(n, 25)\n        val pow26 = math.pow(n, 26)\n\
    \        val pow27 = math.pow(n, 27)\n        val pow28 = math.pow(n, 28)\n  \
    \      val pow29 = math.pow(n, 29)\n        val pow30 = math.pow(n, 30)\n    \
    \    val pow31 = math.pow(n, 31)\n        val pow32 = math.pow(n, 32)\n      \
    \  val pow33 = math.pow(n, 33)\n        val pow34 = math.pow(n, 34)\n        val\
    \ pow35 = math.pow(n, 35)\n        val pow36 = math.pow(n, 36)\n        val pow37\
    \ = math.pow(n, 37)\n        val pow38 = math.pow(n, 38)\n        val pow39 =\
    \ math.pow(n, 39)\n        val pow40 = math.pow(n, 40)\n        val pow41 = math.pow(n,\
    \ 41)\n        val pow42 = math.pow(n, 42)\n        val pow43 = math.pow(n, 43)\n\
    \        val pow44 = math.pow(n, 44)\n        val pow45 = math.pow(n, 45)\n  \
    \      val pow46 = math.pow(n, 46)\n        val pow47 = math.pow(n, 47)\n    \
    \    val pow48 = math.pow(n, 48)\n        val pow49 = math.pow(n, 49)\n      \
    \  val pow50 = math.pow(n, 50)\n        val ", "        val pow = math.pow(n,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n\
    \        pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n   \
    \     pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = ", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val pow = math.pow(n, x)\n        pow\
    \ = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow,\
    \ Long.MinValue)\n        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n\
    \        pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n   \
    \     pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = ", "        val power = math.pow(n, x)\n        power.toDouble ==\
    \ x", "        val power = math.pow(n, x)\n        power.toLong == x", "     \
    \   val power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val int = x\n       \
    \ val power = n\n        val result = power * power == x\n        result ", " \
    \       val pow = math.pow(n, x)\n        pow = pow * pow\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n        pow = math.abs(pow)\n        pow = pow / 2\n \
    \       pow = math.abs(pow)\n        pow = pow / 2\n        pow = math.abs(pow)\n\
    \        pow = pow / 2\n", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        power.toLong == x", "        val pow = math.pow(n,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow =\
    \ math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n  \
    \      pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        val power2 = math.pow(n,\
    \ 2)\n        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n\
    \        val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n  \
    \      val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n    \
    \    val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n    \
    \    val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n  \
    \      val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n\
    \        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power == x", "        val power = math.pow(n, x)\n\
    \        power.toLong == x", "        val pow = math.pow(n, x)\n        if (pow\
    \ == x) {\n            return true\n        }\n        else {\n            return\
    \ false\n        }", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n    \
    \    pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.floor(pow)\n\
    \        pow = math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow\
    \ = math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.floor(pow)\n        pow =\
    \ math.ceil(pow)", "        val power = math.pow(n, x)\n        power.toLong ==\
    \ x", "        val power = math.pow(n, x)\n        power.toLong == x", "     \
    \   val pow = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n", "        val power\
    \ = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3 =\
    \ math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n,\
    \ 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n\
    \        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n  \
    \      val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val pow = math.pow(n, x)\n        pow\
    \ = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow,\
    \ Long.MinValue)\n        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n\
    \        pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n   \
    \     pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = ", "        val power = math.pow(n, x)\n        power.toDouble ==\
    \ x", "        val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n\
    \        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n  \
    \      val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n    \
    \    val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n      \
    \  val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n      \
    \  val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n    \
    \    val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n  \
    \      val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val pow = math.pow(n,\
    \ x)\n        val pow2 = math.pow(pow, 2)\n        val pow3 = math.pow(pow, 3)\n\
    \        val pow4 = math.pow(pow, 4)\n        val pow5 = math.pow(pow, 5)\n  \
    \      val pow6 = math.pow(pow, 6)\n        val pow7 = math.pow(pow, 7)\n    \
    \    val pow8 = math.pow(pow, 8)\n        val pow9 = math.pow(pow, 9)\n      \
    \  val pow10 = math.pow(pow, 10)\n        val pow11 = math.pow(pow, 11)\n    \
    \    val pow12 = math.pow(pow, 12)\n        val pow13 = math.pow(pow, 13)\n  \
    \      val pow14 = math.pow(pow, 14)\n        val pow15 = math.pow(pow, 15)\n\
    \        val pow16 = math.pow(pow, 16)\n        val pow17 = math.pow(pow, 17)\n\
    \        val pow18 = math.pow(pow, 18)\n        val pow19 = math.pow(pow, 19)\n\
    \        val pow20 = math.pow(pow, 20)\n        val pow21 = math.pow(pow, 21)\n\
    \        val pow22 = math.pow(pow, 22)\n        val pow23 = math.pow(pow, 23)\n\
    \        val pow24 = math.pow(pow, 24)\n        val pow25 = math.pow(pow, 25)\n\
    \        val pow26 = math.pow(pow, 26)\n        val pow27 = math.pow(pow, 27)\n\
    \        val pow28 = math.pow(pow, 28)\n        val pow29 = math.pow(pow, 29)\n\
    \        val pow30 = math.pow(pow, 30)\n        val pow31 = math.pow(pow, 31)\n\
    \        val pow32 = math.pow(pow, 32)\n        val pow33 = math.pow(pow, 33)\n\
    \        val pow34 = math.pow(pow, 34)\n        val pow35 = math.pow(pow, 35)\n\
    \        val pow36 = math.pow(pow, 36)\n        val pow37 = math.pow(pow, 37)\n\
    \        val pow38 = math.pow(pow, 38)\n        val pow39 = math.pow(pow, 39)\n\
    \        val pow40 = math.pow(pow, 40)\n        val pow41 = math.pow(pow, 41)\n\
    \        val pow42 = math.pow(pow, 42)\n        val pow43 = math.pow(pow, 43)\n\
    \        val pow44 = math.pow(pow, 44)\n        val pow45 = math.pow(pow, 45)\n\
    \        val pow46 = math.pow(pow, 46)\n", "        val power = math.pow(n, x)\n\
    \        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n    \
    \    pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)", "        val power\
    \ = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3 =\
    \ math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n,\
    \ 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n\
    \        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n  \
    \      val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val int = (x % n).toInt\n        if (int == 0) true\n      \
    \  else isSimplePower(x, n)", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power == x", "        val power = math.pow(n, x)\n\
    \        power.toLong == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n\
    \        val pow3 = math.pow(pow2, 3)\n        val pow4 = math.pow(pow3, 4)\n\
    \        val pow5 = math.pow(pow4, 5)\n        val pow6 = math.pow(pow5, 6)\n\
    \        val pow7 = math.pow(pow6, 7)\n        val pow8 = math.pow(pow7, 8)\n\
    \        val pow9 = math.pow(pow8, 9)\n        val pow10 = math.pow(pow9, 10)\n\
    \        val pow11 = math.pow(pow10, 11)\n        val pow12 = math.pow(pow11,\
    \ 12)\n        val pow13 = math.pow(pow12, 13)\n        val pow14 = math.pow(pow13,\
    \ 14)\n        val pow15 = math.pow(pow14, 15)\n        val pow16 = math.pow(pow15,\
    \ 16)\n        val pow17 = math.pow(pow16, 17)\n        val pow18 = math.pow(pow17,\
    \ 18)\n        val pow19 = math.pow(pow18, 19)\n        val pow20 = math.pow(pow19,\
    \ 20)\n        val pow21 = math.pow(pow20, 21)\n        val pow22 = math.pow(pow21,\
    \ 22)\n        val pow23 = math.pow(pow22, 23)\n        val pow24 = math.pow(pow23,\
    \ 24)\n        val pow25 = math.pow(pow24, 25)\n        val pow26 = math.pow(pow25,\
    \ 26)\n        val pow27 = math.pow(pow26, 27)\n        val pow28 = math.pow(pow27,\
    \ 28)\n        val pow29 = math.pow(pow28, 29)\n        val pow30 = math.pow(pow29,\
    \ 30)\n        val pow31 = math.pow(pow30, 31)\n        val pow32 = math.pow(pow31,\
    \ 32)\n        val pow33 = math.pow(pow32, 33)\n        val pow34 = math.pow(pow33,\
    \ 34)\n        val pow35 = math.pow(pow34, 35)\n        val pow36 = math.pow(pow35,\
    \ 36)\n        val pow37 = math.pow(pow36, 37)\n        val pow38 = math.pow(pow37,\
    \ 38)\n        val pow39 = math.pow(pow38, 39)\n        val pow40 = math.pow(pow39,\
    \ 40)\n        val pow41 = math.pow(pow40, 41)\n        val pow42 = math.pow(pow41,\
    \ 42)\n        val pow43 = math.pow(pow42, 43)\n        val pow44 = math.pow(pow43,\
    \ 44)\n        val pow45 = math.pow(pow44, 45)\n        val pow46 = math.pow(pow45,\
    \ 46)", "        val power = math.pow(n, x)\n        power.toLong == x", "   \
    \     val power = math.pow(n, x)\n        power.toLong == x", "        val pow\
    \ = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n\
    \        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow =\
    \ math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power == x", "        val pow = math.pow(n, x)\n \
    \       pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.floor(pow)\n        pow = math.abs(pow)\n        pow = math.floor(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.floor(pow)\n        pow = math.abs(pow)",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3 =\
    \ math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n,\
    \ 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n\
    \        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n  \
    \      val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n    \
    \    pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)", "        val power\
    \ = math.pow(n, x)\n        power == x", "        val power = math.pow(n, x)\n\
    \        power.toLong == x", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val power = math.pow(n, x)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)", "        val pow = math.pow(n, x)\n        pow\
    \ = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow =\
    \ pow * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow = pow\
    \ * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow = pow *\
    \ pow\n        pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n\
    \        pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n \
    \       pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n  \
    \      pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n   \
    \     pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n    \
    \    pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n     \
    \   pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n      \
    \  pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n       \
    \ pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow\
    \ = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow =\
    \ pow * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow = pow\
    \ * pow\n        pow = pow * pow\n        pow = pow * pow\n        pow = pow *\
    \ pow\n        pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n\
    \        pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n \
    \       pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n  \
    \      pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n   \
    \     pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n    \
    \    pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n     \
    \   pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n      \
    \  pow = pow * pow\n        pow = pow * pow\n        pow = pow * pow\n       \
    \ pow = pow * pow", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n    \
    \    pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)", "        val power\
    \ = math.pow(n, x)\n        power == x", "        val power = math.pow(n, x)\n\
    \        power.toLong == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n        val pow3\
    \ = math.pow(pow2, 3)\n        val pow4 = math.pow(pow3, 4)\n        val pow5\
    \ = math.pow(pow4, 5)\n        val pow6 = math.pow(pow5, 6)\n        val pow7\
    \ = math.pow(pow6, 7)\n        val pow8 = math.pow(pow7, 8)\n        val pow9\
    \ = math.pow(pow8, 9)\n        val pow10 = math.pow(pow9, 10)\n        val pow11\
    \ = math.pow(pow10, 11)\n        val pow12 = math.pow(pow11, 12)\n        val\
    \ pow13 = math.pow(pow12, 13)\n        val pow14 = math.pow(pow13, 14)\n     \
    \   val pow15 = math.pow(pow14, 15)\n        val pow16 = math.pow(pow15, 16)\n\
    \        val pow17 = math.pow(pow16, 17)\n        val pow18 = math.pow(pow17,\
    \ 18)\n        val pow19 = math.pow(pow18, 19)\n        val pow20 = math.pow(pow19,\
    \ 20)\n        val pow21 = math.pow(pow20, 21)\n        val pow22 = math.pow(pow21,\
    \ 22)\n        val pow23 = math.pow(pow22, 23)\n        val pow24 = math.pow(pow23,\
    \ 24)\n        val pow25 = math.pow(pow24, 25)\n        val pow26 = math.pow(pow25,\
    \ 26)\n        val pow27 = math.pow(pow26, 27)\n        val pow28 = math.pow(pow27,\
    \ 28)\n        val pow29 = math.pow(pow28, 29)\n        val pow30 = math.pow(pow29,\
    \ 30)\n        val pow31 = math.pow(pow30, 31)\n        val pow32 = math.pow(pow31,\
    \ 32)\n        val pow33 = math.pow(pow32, 33)\n        val pow34 = math.pow(pow33,\
    \ 34)\n        val pow35 = math.pow(pow34, 35)\n        val pow36 = math.pow(pow35,\
    \ 36)\n        val pow37 = math.pow(pow36, 37)\n        val pow38 = math.pow(pow37,\
    \ 38)\n        val pow39 = math.pow(pow38, 39)\n        val pow40 = math.pow(pow39,\
    \ 40)\n        val pow41 = math.pow(pow40, 41)\n        val pow42 = math.pow(pow41,\
    \ 42)\n        val pow43 = math.pow(pow42, 43)\n        val pow44 = math.pow(pow43,\
    \ 44)\n        val pow45 = math.pow(pow44, 45)\n        val pow46 = math.pow(pow45,\
    \ 46)", "        val power = math.pow(n, x)\n        val power2 = math.pow(n,\
    \ 2)\n        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n\
    \        val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n  \
    \      val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n    \
    \    val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n    \
    \    val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n  \
    \      val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n\
    \        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toDouble == x", "        val\
    \ power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3\
    \ = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 =\
    \ math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n,\
    \ 7)\n        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n\
    \        val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val pow = math.pow(n, x)\n        val pow2\
    \ = math.pow(pow, 2)\n        val pow3 = math.pow(pow, 3)\n        val pow4 =\
    \ math.pow(pow, 4)\n        val pow5 = math.pow(pow, 5)\n        val pow6 = math.pow(pow,\
    \ 6)\n        val pow7 = math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n\
    \        val pow9 = math.pow(pow, 9)\n        val pow10 = math.pow(pow, 10)\n\
    \        val pow11 = math.pow(pow, 11)\n        val pow12 = math.pow(pow, 12)\n\
    \        val pow13 = math.pow(pow, 13)\n        val pow14 = math.pow(pow, 14)\n\
    \        val pow15 = math.pow(pow, 15)\n        val pow16 = math.pow(pow, 16)\n\
    \        val pow17 = math.pow(pow, 17)\n        val pow18 = math.pow(pow, 18)\n\
    \        val pow19 = math.pow(pow, 19)\n        val pow20 = math.pow(pow, 20)\n\
    \        val pow21 = math.pow(pow, 21)\n        val pow22 = math.pow(pow, 22)\n\
    \        val pow23 = math.pow(pow, 23)\n        val pow24 = math.pow(pow, 24)\n\
    \        val pow25 = math.pow(pow, 25)\n        val pow26 = math.pow(pow, 26)\n\
    \        val pow27 = math.pow(pow, 27)\n        val pow28 = math.pow(pow, 28)\n\
    \        val pow29 = math.pow(pow, 29)\n        val pow30 = math.pow(pow, 30)\n\
    \        val pow31 = math.pow(pow, 31)\n        val pow32 = math.pow(pow, 32)\n\
    \        val pow33 = math.pow(pow, 33)\n        val pow34 = math.pow(pow, 34)\n\
    \        val pow35 = math.pow(pow, 35)\n        val pow36 = math.pow(pow, 36)\n\
    \        val pow37 = math.pow(pow, 37)\n        val pow38 = math.pow(pow, 38)\n\
    \        val pow39 = math.pow(pow, 39)\n        val pow40 = math.pow(pow, 40)\n\
    \        val pow41 = math.pow(pow, 41)\n        val pow42 = math.pow(pow, 42)\n\
    \        val pow43 = math.pow(pow, 43)\n        val pow44 = math.pow(pow, 44)\n\
    \        val pow45 = math.pow(pow, 45)\n        val pow46 = math.pow(pow, 46)\n",
  "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n", "        val power\
    \ = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3 =\
    \ math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n,\
    \ 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n\
    \        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n  \
    \      val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        power == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val pow = math.pow(n,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow =\
    \ math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n  \
    \      pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        power == x", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toDouble == x", "        val\
    \ power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3\
    \ = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 =\
    \ math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n,\
    \ 7)\n        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n\
    \        val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  val result = math.pow(x, x) == power\n        result", "        val power =\
    \ math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n,\
    \ 3)\n        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n\
    \        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n  \
    \      val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n    \
    \    val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n  \
    \      val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toDouble == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow\
    \ = math.max(pow, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        pow\
    \ = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow\
    \ = math.max(pow, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        pow\
    \ = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow\
    \ = math.max(pow, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        pow\
    \ = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        ", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val power = math.pow(n, x)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n     \
    \   val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n       \
    \ val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val\
    \ power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n        val power9\
    \ = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n        val power11\
    \ = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n        val power13\
    \ = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n        val power15\
    \ = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n        val power17\
    \ = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n        val power19\
    \ = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n        val power21\
    \ = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n        val power23\
    \ = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n        val power25\
    \ = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n        val power27\
    \ = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n        val power29\
    \ = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n        val power31\
    \ = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n        val power33\
    \ = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n        val power35\
    \ = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n        val power37\
    \ = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n        val power39\
    \ = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n        val power41\
    \ = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n        val power43\
    \ = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n        val power45\
    \ = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n        val power47\
    \ = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n        val power49\
    \ = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n        val ", " \
    \       val power = math.pow(n, x)\n        power.toDouble == x", "        val\
    \ int = x\n        val power = n\n        val result = power * power == int\n\
    \        result", "        val power = math.pow(n, x)\n        power.toLong ==\
    \ x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n       \
    \ pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = ", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val int = (x - 1).toInt\n        val power = math.pow(n, int)\n       \
    \ power.toLong == x", "        val power = math.pow(n, x)\n        power == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power == x", "        val power = math.pow(n, x)\n\
    \        power.toLong == x", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val int = x\n        val power = n\n        val result = power\
    \ * power == int\n        result", "        val power = math.pow(n, x)\n     \
    \   power.toLong == x", "        val int = x\n        val power = n\n        val\
    \ result = power * power == x\n        result", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n    \
    \    pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val int = x\n        val pow = math.pow(n, int)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.min(pow, x)\n       \
    \ pow = math.max(pow, x)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n       \
    \ pow = math.", "        val power = math.pow(n, x)\n        power == x", "  \
    \      val power = math.pow(n, x)\n        power == x"]
stop_tokens:
- "\n    }\n"

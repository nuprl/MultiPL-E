language: rs
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpmf8odbf7.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpmf8odbf7.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpr2a4yq5e.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot add `f64` to `{integer}`\n  --> /tmp/tmpr2a4yq5e.rs:12:19\n\
    \   |\n12 |         mad = mad + f64::abs(n - mean);\n   |                   ^\
    \ no implementation for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>`\
    \ is not implemented for `{integer}`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpr2a4yq5e.rs:15:5\n   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>)\
    \ -> f64 {\n   |                                                  --- expected\
    \ `f64` because of return type\n...\n15 |     mad\n   |     ^^^ expected `f64`,\
    \ found integer\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpr2a4yq5e.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot add `f64` to `{integer}`\n  --> /tmp/tmpr2a4yq5e.rs:12:19\n\
    \   |\n12 |         mad = mad + f64::abs(n - mean);\n   |                   ^\
    \ no implementation for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>`\
    \ is not implemented for `{integer}`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpr2a4yq5e.rs:15:5\n   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>)\
    \ -> f64 {\n   |                                                  --- expected\
    \ `f64` because of return type\n...\n15 |     mad\n   |     ^^^ expected `f64`,\
    \ found integer\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpbirbiygj.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5pnjet71.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpwz9btgqa.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpwz9btgqa.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp3bjf1wfj.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpnensqu9l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpnensqu9l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpz59d5kki.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmphmu75siz.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n        mean = n;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkpny0o6_.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkpny0o6_.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += std::f64::abs(n\
    \ - numbers.iter().sum::<f64>() / numbers.len());\n    }\n    sum / numbers.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmpbf6111p2.rs:11:26\n\
    \   |\n11 |         sum += std::f64::abs(n - numbers.iter().sum::<f64>() / numbers.len());\n\
    \   |                          ^^^ not found in `std::f64`\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpbf6111p2.rs:11:62\n   |\n11 |       \
    \  sum += std::f64::abs(n - numbers.iter().sum::<f64>() / numbers.len());\n  \
    \ |                                                              ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpbf6111p2.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `{float}\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpzfkt41j4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpzfkt41j4.rs:14:36\n\
    \   |\n14 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpwz9btgqa.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n        mean = n;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkpny0o6_.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkpny0o6_.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpnensqu9l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmprk77fa2l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpmf8odbf7.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpmf8odbf7.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpwz9btgqa.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmprk77fa2l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += std::f64::abs(n\
    \ - numbers.iter().sum::<f64>() / numbers.len());\n    }\n    sum / numbers.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmpbf6111p2.rs:11:26\n\
    \   |\n11 |         sum += std::f64::abs(n - numbers.iter().sum::<f64>() / numbers.len());\n\
    \   |                          ^^^ not found in `std::f64`\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpbf6111p2.rs:11:62\n   |\n11 |       \
    \  sum += std::f64::abs(n - numbers.iter().sum::<f64>() / numbers.len());\n  \
    \ |                                                              ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpbf6111p2.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `{float}\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for number in numbers {\n        deviations.push(number\
    \ - mean);\n        mean += number;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpg886h8tq.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpg886h8tq.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5pnjet71.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpr2a4yq5e.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot add `f64` to `{integer}`\n  --> /tmp/tmpr2a4yq5e.rs:12:19\n\
    \   |\n12 |         mad = mad + f64::abs(n - mean);\n   |                   ^\
    \ no implementation for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>`\
    \ is not implemented for `{integer}`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpr2a4yq5e.rs:15:5\n   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>)\
    \ -> f64 {\n   |                                                  --- expected\
    \ `f64` because of return type\n...\n15 |     mad\n   |     ^^^ expected `f64`,\
    \ found integer\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += std::f64::abs(n\
    \ - numbers.iter().sum::<f64>() / numbers.len());\n    }\n    sum / numbers.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmpbf6111p2.rs:11:26\n\
    \   |\n11 |         sum += std::f64::abs(n - numbers.iter().sum::<f64>() / numbers.len());\n\
    \   |                          ^^^ not found in `std::f64`\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpbf6111p2.rs:11:62\n   |\n11 |       \
    \  sum += std::f64::abs(n - numbers.iter().sum::<f64>() / numbers.len());\n  \
    \ |                                                              ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror[E0277]: cannot divide `{float}` by `usize`\n  --> /tmp/tmpbf6111p2.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `{float}\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5pnjet71.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpzfkt41j4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpzfkt41j4.rs:14:36\n\
    \   |\n14 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpwz9btgqa.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmprk77fa2l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7gyurehx.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5pnjet71.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpnensqu9l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpmf8odbf7.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpmf8odbf7.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for number in numbers {\n        deviations.push(number\
    \ - mean);\n        mean = number;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmppo2sr1t5.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppo2sr1t5.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + std::f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmp1i40qx_q.rs:12:31\n\
    \   |\n12 |         mad = mad + std::f64::abs(n - mean);\n   |               \
    \                ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide `f64`\
    \ by `usize`\n --> /tmp/tmp1i40qx_q.rs:9:48\n  |\n9 |     let mut mean = numbers.iter().sum::<f64>()\
    \ / numbers.len();\n  |                                                ^ no implementation\
    \ for `f64 / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1i40qx_q.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308, E0425.\nFor more information about an error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += std::f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmpyawbjq3b.rs:12:32\n\
    \   |\n12 |         deviation += std::f64::abs(n - mean);\n   |              \
    \                  ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide\
    \ `f64` by `usize`\n --> /tmp/tmpyawbjq3b.rs:9:48\n  |\n9 |     let mut mean =\
    \ numbers.iter().sum::<f64>() / numbers.len();\n  |                          \
    \                      ^ no implementation for `f64 / usize`\n  |\n  = help: the\
    \ trait `Div<usize>` is not implemented for `f64`\n\nerror[E0277]: cannot divide\
    \ `{float}` by `usize`\n  --> /tmp/tmpyawbjq3b.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `{float} / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `{float}`\n\n\
    error: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7mrrvx5n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp7mrrvx5n.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpnensqu9l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5pnjet71.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpzfkt41j4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpzfkt41j4.rs:14:36\n\
    \   |\n14 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp3bjf1wfj.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpnensqu9l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpuwq5eysd.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpr2a4yq5e.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot add `f64` to `{integer}`\n  --> /tmp/tmpr2a4yq5e.rs:12:19\n\
    \   |\n12 |         mad = mad + f64::abs(n - mean);\n   |                   ^\
    \ no implementation for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>`\
    \ is not implemented for `{integer}`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpr2a4yq5e.rs:15:5\n   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>)\
    \ -> f64 {\n   |                                                  --- expected\
    \ `f64` because of return type\n...\n15 |     mad\n   |     ^^^ expected `f64`,\
    \ found integer\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpwz9btgqa.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp3bjf1wfj.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += std::f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmp4ja2tt11.rs:12:26\n\
    \   |\n12 |         mad += std::f64::abs(n - mean);\n   |                    \
    \      ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide `f64` by `usize`\n\
    \ --> /tmp/tmp4ja2tt11.rs:9:48\n  |\n9 |     let mut mean = numbers.iter().sum::<f64>()\
    \ / numbers.len();\n  |                                                ^ no implementation\
    \ for `f64 / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0425.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmppc9tebs2.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmprk77fa2l.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpeonny80n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpq3g3j_ew.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmptaqz5zsi.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5m8b4gqt.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpkmke_ip2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkmke_ip2.rs:15:15\n\
    \   |\n15 |     deviation / numbers.len()\n   |               ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpmf8odbf7.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpmf8odbf7.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp5q2v2sq4.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp5q2v2sq4.rs:15:36\n\
    \   |\n15 |     deviations.iter().sum::<f64>() / deviations.len()\n   |      \
    \                              ^ no implementation for `f64 / usize`\n   |\n \
    \  = help: the trait `Div<usize>` is not implemented for `f64`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142
- exit_code: 1
  program: "/// For a given vector of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp7gyurehx.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748142

name: HumanEval_59_largest_prime_factor
language: rs
prompt: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  /// >>> largest_prime_factor(13195)\n/// 29\n/// >>> largest_prime_factor(2048)\n\
  /// 2\nfn largest_prime_factor(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = largest_prime_factor;\n    assert_eq!(candidate(15),\
  \ 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63), 7);\n  \
  \  assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n}\n"
completions: ["    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <=\
    \ n {\n        if n % i == 0 {\n            max_factor = i;\n        }\n     \
    \   i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut factor =\
    \ 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n\
    \            n /= i;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while i *\
    \ i <= n {\n        if n % i == 0 {\n            max_factor = i;\n        }\n\
    \        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    let mut largest = i;\n    while i * i <= n {\n        if n % i == 0 {\n \
    \           largest = i;\n            i += 1;\n        } else {\n            i\
    \ += 1;\n        }\n    }\n    largest", "    let mut i = 2;\n    let mut factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor =\
    \ i;\n            i += 1;\n        }\n        else {\n            i += 1;\n  \
    \      }\n    }\n    factor", "    let mut i = 2;\n    let mut factor = 1;\n \
    \   while i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n  \
    \          n /= i;\n        }\n        i += 1;\n    }\n    factor", "    let mut\
    \ i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n \
    \   max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n        }\n\
    \        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor *=\
    \ i;\n            n /= i;\n        }\n        i += 1;\n    }\n    factor", " \
    \   let mut i = 2;\n    let mut j = 2;\n    let mut k = 2;\n    let mut max_factor\
    \ = 1;\n    while i * j <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        }\n        if n % j == 0 {\n            j += 1;\n        }\n        if\
    \ k * j <= n {\n            if n % k == 0 {\n                k += 1;\n       \
    \     }\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_factor < i {\n            max_factor\
    \ = i;\n        }\n        if k * j <= n && max_factor < k {\n            max_factor\
    \ = k;\n        }\n        if k * j <= n && max_factor < j {\n            max_factor\
    \ = j;\n        }\n        if k * j <= n && max_", "    let mut i = 2;\n    let\
    \ mut largest = i;\n    while i <= n {\n        if n % i == 0 {\n            largest\
    \ = i;\n        }\n        i += 1;\n    }\n    largest", "    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            return i;\n    \
    \    }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n    let mut j = 2;\n\
    \    let mut max_factor = 1;\n    while i * j <= n {\n        if n % i == 0 {\n\
    \            i += 1;\n        } else {\n            j += 1;\n        }\n     \
    \   if j > max_factor {\n            max_factor = j;\n        }\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n  \
    \  while i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n\
    \        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n   \
    \ let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n     \
    \       factor *= i;\n            n /= i;\n        }\n        i += 1;\n    }\n\
    \    factor", "    let mut i = 2;\n    let mut prime = 1;\n    while i * i <=\
    \ n {\n        if n % i == 0 {\n            prime = i;\n            i += 1;\n\
    \        } else {\n            i += 1;\n        }\n    }\n    prime", "    let\
    \ mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            factor *= i;\n            n /= i;\n        } else {\n\
    \            i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n   \
    \ let mut largest = i;\n    while i * i <= n {\n        if n % i == 0 {\n    \
    \        largest = i;\n        }\n        i += 1;\n    }\n    largest"]
stop_tokens:
- "\n}"

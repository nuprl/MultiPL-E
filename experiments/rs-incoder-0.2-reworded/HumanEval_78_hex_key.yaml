name: HumanEval_78_hex_key
language: rs
prompt: "/// You have been tasked to write a function that receives \n/// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n/// digits that are\
  \ primes (prime number, or a prime, is a natural number \n/// greater than 1 that\
  \ is not a product of two smaller natural numbers).\n/// Hexadecimal digits are\
  \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n/// Prime numbers are 2, 3, 5,\
  \ 7, 11, 13, 17,...\n/// So you have to determine a number of the following digits:\
  \ 2, 3, 5, 7, \n/// B (=decimal 11), D (=decimal 13).\n/// Note: you may assume\
  \ the input is always correct or empty string, \n/// and symbols A,B,C,D,E,F are\
  \ always uppercase.\n/// Examples:\n/// >>> hex_key(String::from(\"AB\"))\n/// 1\n\
  /// >>> hex_key(String::from(\"1077E\"))\n/// 2\n/// >>> hex_key(String::from(\"\
  ABED1A33\"))\n/// 4\n/// >>> hex_key(String::from(\"123456789ABCDEF0\"))\n/// 6\n\
  /// >>> hex_key(String::from(\"2020\"))\n/// 2\nfn hex_key(num: String) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = hex_key;\n    assert_eq!(candidate(String::from(\"\
  AB\")), 1);\n    assert_eq!(candidate(String::from(\"1077E\")), 2);\n    assert_eq!(candidate(String::from(\"\
  ABED1A33\")), 4);\n    assert_eq!(candidate(String::from(\"2020\")), 2);\n    assert_eq!(candidate(String::from(\"\
  123456789ABCDEF0\")), 6);\n    assert_eq!(candidate(String::from(\"112233445566778899AABBCCDDEEFF00\"\
  )), 12);\n}\n"
completions: ["    let mut num: Vec<u8> = num.to_string().chars().collect();\n   \
    \ let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize\
    \ = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits: Vec<u8> = vec![2, 3, 4, 5, 7, 11, 13, 17];\n    let\
    \ mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as u", "    let mut num: isize = 0;\n\
    \    let mut num_digits = num.len();\n    let mut num_digits_div2 = num_digits\
    \ / 2;\n    let mut num_digits_div4 = num_digits / 4;\n    let mut num_digits_div6\
    \ = num_digits / 6;\n    let mut num_digits_div8 = num_digits / 8;\n    let mut\
    \ num_digits_div10 = num_digits / 10;\n    let mut num_digits_div12 = num_digits\
    \ / 12;\n    let mut num_digits_div14 = num_digits / 14;\n    let mut num_digits_div16\
    \ = num_digits / 16;\n    let mut num_digits_div18 = num_digits / 18;\n    let\
    \ mut num_digits_div20 = num_digits / 20;\n    let mut num_digits_div22 = num_digits\
    \ / 22;\n    let mut num_digits_div24 = num_digits / 24;\n    let mut num_digits_div26\
    \ = num_digits / 26;\n    let mut num_digits_div28 = num_digits / 28;\n    let\
    \ mut num_digits_div30 = num_digits / 30;\n    let mut num_digits_div32 = num_digits\
    \ / 32;\n    let mut num_digits_div34 = num_digits / 34;\n    let mut num_digits_div36\
    \ = num_digits / 36;\n    let mut num_digits_div38 = num_digits / 38;\n    let\
    \ mut num_digits_div40 = num_digits / 40;\n    let mut num_digits_div42 = num_digits\
    \ / 42;\n    let mut num_digits_div44 = num_digits / 44;\n    let mut num_digits_div46\
    \ = num_digits / 46;\n    let mut num_digits_div48 = num_digits / 48;\n    let\
    \ mut num_digits_div50 = num_digits / 50;\n    let mut num_digits_div52 = num_digits\
    \ / 52;\n    let mut num_digits_div54 = num_digits / 54;\n    let mut num_digits_div56\
    \ = num_digits / 56;\n    let mut num_digits_div58 = num_digits / 58;\n    let\
    \ mut num_digits_div60 = num_digits / 60;\n    let mut num_digits_div62 = num_digits\
    \ / 62;\n    let mut num_digits_div64 = num_digits / 64;\n    let mut num_digits_div66\
    \ = num_digits / 66;\n    let mut num_digits_div68 = num_digits / 6", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value_count: usize = 0;\n    let mut prime_digit_value_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_count: usize = 0;\n    let mut\
    \ prime_digit_value_prime_prime: u8 = 0;\n    let mut prime_digit_value_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime: u8 = 0;\n    let\
    \ mut prime_digit_value_prime_prime_prime_count: usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_count: usize\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime: u8 = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_count: usize = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_prime: u8 = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_count: usize = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_prime: u8 = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_count: usize\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut prime_found53 = false;", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_sum: isize = 0;\n    let mut prime_digit_sum2:\
    \ isize = 0;\n    let mut prime_digit_sum3: isize = 0;\n    let mut prime_digit_sum4:\
    \ isize = 0;\n    let mut prime_digit_sum5: isize = 0;\n    let mut prime_digit_sum6:\
    \ isize = 0;\n    let mut prime_digit_sum7: isize = 0;\n    let mut prime_digit_sum8:\
    \ isize = 0;\n    let mut prime_digit_sum9: isize = 0;\n    let mut prime_digit_sum10:\
    \ isize = 0;\n    let mut prime_digit_sum11: isize = 0;\n    let mut prime_digit_sum12:\
    \ isize = 0;\n    let mut prime_digit_sum13: isize = 0;\n    let mut prime_digit_sum14:\
    \ isize = 0;\n    let mut prime_digit_sum15: isize = 0;\n    let mut prime_digit_sum16:\
    \ isize = 0;\n    let mut prime_digit_sum17: isize = 0;\n    let mut prime_digit_sum18:\
    \ isize = 0;\n    let mut prime_digit_sum19: isize = 0;\n    let mut prime_digit_sum20:\
    \ isize = 0;\n    let mut prime_digit_sum21: isize = 0;\n    let mut prime_digit_sum22:\
    \ isize = 0;\n    let mut prime_digit_sum23: isize = 0;\n    let mut prime_digit_sum24:\
    \ isize = 0;\n    let mut prime_digit_sum25: isize = 0;\n    let mut prime_digit_sum26:\
    \ isize = 0;\n    let mut prime_digit_sum27: isize = 0;\n    let mut prime_digit_sum28:\
    \ isize = 0;\n    let mut prime_digit_sum29: isize = 0;\n    let mut prime_digit_sum30:\
    \ isize = 0;\n    let mut prime_digit_sum31: isize = 0;\n    let mut prime_digit_sum32:\
    \ isize = 0;\n    let mut prime_digit_sum33: isize = 0;\n    let mut prime_digit_sum34:\
    \ isize = 0;\n    let mut prime_digit_sum35: isize = 0;\n    let mut prime_digit_sum36:\
    \ isize = 0;", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut\
    \ num_digits = nums.len();\n    let mut num_primes = 0;\n    let mut num_primes_found\
    \ = 0;\n    let mut prime_found = false;\n    let mut prime_found2 = false;\n\
    \    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n    let\
    \ mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let mut prime_found7\
    \ = false;\n    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n\
    \    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let\
    \ mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut\
    \ prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut prime_found16\
    \ = false;\n    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n\
    \    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let\
    \ mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut\
    \ prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut prime_found25\
    \ = false;\n    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n\
    \    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let\
    \ mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut\
    \ prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut prime_found34\
    \ = false;\n    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n\
    \    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let\
    \ mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut\
    \ prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut prime_found43\
    \ = false;\n    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n\
    \    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let\
    \ mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut\
    \ prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut ", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'a' && c != 'b' && c != 'c' && c\
    \ != 'd' && c != 'e' && c != 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '0').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '1').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != '2').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != '3').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != '4').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != '5').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != '6').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '7').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '8').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'A').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'B').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != 'C').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'D').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != 'E').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != 'a').collect();\n    let mut num: ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize\
    \ = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize\
    \ = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize\
    \ = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize\
    \ = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize\
    \ = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ digit: u8 = 0;\n    let mut digit_counter: usize = 0;\n    let mut digit_prime:\
    \ u8 = 0;\n    let mut digit_prime_counter: usize = 0;\n    let mut digit_prime_counter2:\
    \ usize = 0;\n    let mut digit_prime_counter3: usize = 0;\n    let mut digit_prime_counter4:\
    \ usize = 0;\n    let mut digit_prime_counter5: usize = 0;\n    let mut digit_prime_counter6:\
    \ usize = 0;\n    let mut digit_prime_counter7: usize = 0;\n    let mut digit_prime_counter8:\
    \ usize = 0;\n    let mut digit_prime_counter9: usize = 0;\n    let mut digit_prime_counter10:\
    \ usize = 0;\n    let mut digit_prime_counter11: usize = 0;\n    let mut digit_prime_counter12:\
    \ usize = 0;\n    let mut digit_prime_counter13: usize = 0;\n    let mut digit_prime_counter14:\
    \ usize = 0;\n    let mut digit_prime_counter15: usize = 0;\n    let mut digit_prime_counter16:\
    \ usize = 0;\n    let mut digit_prime_counter17: usize = 0;\n    let mut digit_prime_counter18:\
    \ usize = 0;\n    let mut digit_prime_counter19: usize = 0;\n    let mut digit_prime_counter20:\
    \ usize = 0;\n    let mut digit_prime_counter21: usize = 0;\n    let mut digit_prime_counter22:\
    \ usize = 0;\n    let mut digit_prime_counter23: usize = 0;\n    let mut digit_prime_counter24:\
    \ usize = 0;\n    let mut digit_prime_counter25: usize = 0;\n    let mut digit_prime_counter26:\
    \ usize = 0;\n    let mut digit_prime_counter27: usize = 0;\n    let mut digit_prime_counter28:\
    \ usize = 0;\n    let mut digit_prime_counter29: usize = 0;\n    let mut digit_prime_counter30:\
    \ usize = 0;\n    let mut digit_prime_counter31: usize = 0;\n    let mut digit_prime_counter32:\
    \ usize = 0;\n    let mut digit_prime_counter33: usize = 0;\n    let mut digit_prime_counter34:\
    \ u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut num_digits = num.len();\n    let mut prime_digits = 0;\n    let mut prime_digits_counter\
    \ = 0;\n    let mut prime_digits_counter2 = 0;\n    let mut prime_digits_counter3\
    \ = 0;\n    let mut prime_digits_counter4 = 0;\n    let mut prime_digits_counter5\
    \ = 0;\n    let mut prime_digits_counter6 = 0;\n    let mut prime_digits_counter7\
    \ = 0;\n    let mut prime_digits_counter8 = 0;\n    let mut prime_digits_counter9\
    \ = 0;\n    let mut prime_digits_counter10 = 0;\n    let mut prime_digits_counter11\
    \ = 0;\n    let mut prime_digits_counter12 = 0;\n    let mut prime_digits_counter13\
    \ = 0;\n    let mut prime_digits_counter14 = 0;\n    let mut prime_digits_counter15\
    \ = 0;\n    let mut prime_digits_counter16 = 0;\n    let mut prime_digits_counter17\
    \ = 0;\n    let mut prime_digits_counter18 = 0;\n    let mut prime_digits_counter19\
    \ = 0;\n    let mut prime_digits_counter20 = 0;\n    let mut prime_digits_counter21\
    \ = 0;\n    let mut prime_digits_counter22 = 0;\n    let mut prime_digits_counter23\
    \ = 0;\n    let mut prime_digits_counter24 = 0;\n    let mut prime_digits_counter25\
    \ = 0;\n    let mut prime_digits_counter26 = 0;\n    let mut prime_digits_counter27\
    \ = 0;\n    let mut prime_digits_counter28 = 0;\n    let mut prime_digits_counter29\
    \ = 0;\n    let mut prime_digits_counter30 = 0;\n    let mut prime_digits_counter31\
    \ = 0;\n    let mut prime_digits_counter32 = 0;\n    let mut prime_digits_counter33\
    \ = 0;\n    let mut prime_digits_counter34 = 0;\n    let mut prime_digits_counter35\
    \ = 0;\n    let mut prime_digits_counter36 = 0;\n    let mut prime_digits_counter37\
    \ = 0;\n    let mut prime_digits_counter38 = 0;\n    let mut prime_digits_counter39\
    \ = 0;\n    let mut prime_digits_counter40 = 0;\n    let mut prime_digits_counter41\
    \ = 0;\n    let mut prime_digits_counter42 = 0;\n    let mut prime_digits_counter43\
    \ = 0;\n    let mut prime_digit", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index: usize\
    \ = 0;\n    let mut prime_counter_index2: usize = 0;\n    let mut prime_counter_index3:\
    \ usize = 0;\n    let mut prime_counter_index4: usize = 0;\n    let mut prime_counter_index5:\
    \ usize = 0;\n    let mut prime_counter_index6: usize = 0;\n    let mut prime_counter_index7:\
    \ usize = 0;\n    let mut prime_counter_index8: usize = 0;\n    let mut prime_counter_index9:\
    \ usize = 0;\n    let mut prime_counter_index10: usize = 0;\n    let mut prime_counter_index11:\
    \ usize = 0;\n    let mut prime_counter_index12: usize = 0;\n    let mut prime_counter_index13:\
    \ usize = 0;\n    let mut prime_counter_index14: usize = 0;\n    let mut prime_counter_index15:\
    \ usize = 0;\n    let mut prime_counter_index16: usize = 0;\n    let mut prime_counter_index17:\
    \ usize = 0;\n    let mut prime_counter_index18: usize = 0;\n    let mut prime_counter_index19:\
    \ usize = 0;\n    let mut prime_counter_index20: usize = 0;\n    let mut prime_counter_index21:\
    \ usize = 0;\n    let mut prime_counter_index22: usize = 0;\n    let mut prime_counter_index23:\
    \ usize = 0;\n    let mut prime_counter_index24: usize = 0;\n    let mut prime_counter_index25:\
    \ usize = 0;\n    let mut prime_counter_index26: usize = 0;\n    let mut prime_counter_index27:\
    \ usize = 0;\n    let mut prime_counter_index28: usize = 0;\n    let mut prime_counter_index29:\
    \ usize = 0;\n    let mut prime_counter_index30: usize = 0;\n    let mut prime_counter_index31:\
    \ usize = 0;\n    let mut prime_counter_index32: usize = 0;\n    let mut prime_counter_index33:\
    \ usize = 0;\n    let mut prime_", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut primes = vec![true; nums_len];\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut primes = vec![false; 26];\n \
    \   let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len = primes.len();\n\
    \    let mut primes_len = primes.len();", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = Vec::new();\n    let mut num_prime_counter:\
    \ usize = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_2: Vec<u8> =\
    \ vec![];\n    let mut num_prime_3: Vec<u8> = vec![];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![];\n    let mut num_prime_5: Vec<u8> = vec![];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![];\n    let mut num_prime_7: Vec<u8> = vec![];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_9: Vec<u8> = vec![];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![];\n    let mut num_prime_11: Vec<u8> = vec![];\n    let mut\
    \ num_prime_12: Vec<u8> = vec![];\n    let mut num_prime_13: Vec<u8> = vec![];\n\
    \    let mut num_prime_14: Vec<u8> = vec![];\n    let mut num_prime_15: Vec<u8>\
    \ = vec![];\n    let mut num_prime_16: Vec<u8> = vec![];\n    let mut num_prime_17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_18: Vec<u8> = vec![];\n    let mut\
    \ num_prime_19: Vec<u8> = vec![];\n    let mut num_prime_20: Vec<u8> = vec![];\n\
    \    let mut num_prime_21: Vec<u8> = vec![];\n    let mut num_prime_22: Vec<u8>\
    \ = vec![];\n    let mut num_prime_23: Vec<u8> = vec![];\n    let mut num_prime_24:\
    \ Vec<u8> = vec![];\n    let mut num_prime_25: Vec<u8> = vec![];\n    let mut\
    \ num_prime_26: Vec<u8> = vec![];\n    let mut num_prime_27: Vec<u8> = vec![];\n\
    \    let mut num_prime_28: Vec<u8> = vec![];\n    let mut num_prime_29: Vec<u8>\
    \ = vec![];\n    let mut num_prime_", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_iter = nums.iter();\n    let mut nums_len = nums.len();\n  \
    \  let mut nums_prime: Vec<_> = Vec::new();\n    let mut nums_prime_len = nums_prime.len();\n\
    \    let mut nums_prime_iter = nums_prime.iter();\n    let mut nums_prime_len\
    \ = nums_prime.len();\n    let mut nums_prime_iter = nums_prime.iter();\n    let\
    \ mut nums_prime_len = nums_prime.len();\n    let mut nums_prime_iter = nums_prime.iter();\n\
    \    let mut nums_prime_len = nums_prime.len();\n    let mut nums_prime_iter =\
    \ nums_prime.iter();\n    let mut nums_prime_len = nums_prime.len();\n    let\
    \ mut nums_prime_iter = nums_prime.iter();\n    let mut nums_prime_len = nums_prime.len();\n\
    \    let mut nums_prime_iter = nums_prime.iter();\n    let mut nums_prime_len\
    \ = nums_prime.len();\n    let mut nums_prime_iter = nums_prime.iter();\n    let\
    \ mut nums_prime_len = nums_prime.len();\n    let mut nums_prime_iter = nums_prime.iter();\n\
    \    let mut nums_prime_len = nums_prime.len();\n    let mut nums_prime_iter =\
    \ nums_prime.iter();\n    let mut nums_prime_len = nums_prime.len();\n    let\
    \ mut nums_prime_iter = nums_prime.iter();\n    let mut nums_prime_len = nums_prime.len();\n\
    \    let mut nums_prime_iter = nums_prime.iter();\n    let mut nums_prime_len\
    \ = nums_prime.len();\n    let mut nums_prime_iter = nums_prime.iter();\n    let\
    \ mut nums_prime_len = nums_prime.len();\n    let mut nums_prime_iter = nums_prime.iter();\n\
    \    let mut nums_prime_len = nums_prime.len();\n    let mut nums_prime_iter =\
    \ nums_prime.iter();\n    let mut nums_prime_len = nums_prime.len();\n    let\
    \ mut nums_prime_iter = nums_prime.iter();\n    let mut nums_prime_", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_counter40:\
    \ usize = 0;\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: isize = 0;\n    let mut prime_digit_sum: isize = 0;\n\
    \    let mut prime_digit_sum2: isize = 0;\n    let mut prime_digit_sum3: isize\
    \ = 0;\n    let mut prime_digit_sum4: isize = 0;\n    let mut prime_digit_sum5:\
    \ isize = 0;\n    let mut prime_digit_sum6: isize = 0;\n    let mut prime_digit_sum7:\
    \ isize = 0;\n    let mut prime_digit_sum8: isize = 0;\n    let mut prime_digit_sum9:\
    \ isize = 0;\n    let mut prime_digit_sum10: isize = 0;\n    let mut prime_digit_sum11:\
    \ isize = 0;\n    let mut prime_digit_sum12: isize = 0;\n    let mut prime_digit_sum13:\
    \ isize = 0;\n    let mut prime_digit_sum14: isize = 0;\n    let mut prime_digit_sum15:\
    \ isize = 0;\n    let mut prime_digit_sum16: isize = 0;\n    let mut prime_digit_sum17:\
    \ isize = 0;\n    let mut prime_digit_sum18: isize = 0;\n    let mut prime_digit_sum19:\
    \ isize = 0;\n    let mut prime_digit_sum20: isize = 0;\n    let mut prime_digit_sum21:\
    \ isize = 0;\n    let mut prime_digit_sum22: isize = 0;\n    let mut prime_digit_sum23:\
    \ isize = 0;\n    let mut prime_digit_sum24: isize = 0;\n    let mut prime_digit_sum25:\
    \ isize = 0;\n    let mut prime_digit_sum26: isize = 0;\n    let mut prime_digit_sum27:\
    \ isize = 0;\n    let mut prime_digit_sum28: isize = 0;\n    let mut prime_digit_sum29:\
    \ isize = 0;\n    let mut prime_digit_sum30: isize = 0;\n    let mut prime_digit_sum31:\
    \ isize = 0;\n    let mut prime_digit_sum32: isize = 0;\n    let mut prime_digit_sum33:\
    \ isize = 0;\n    let mut prime_digit_sum34: isize = 0;\n    let mut prime_digit_sum35:\
    \ isize = 0;\n    let mut prime_digit_sum36: isize = 0;", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![];\n\
    \    let mut num_prime_2: Vec<u8> = vec![];\n    let mut num_prime_3: Vec<u8>\
    \ = vec![];\n    let mut num_prime_4: Vec<u8> = vec![];\n    let mut num_prime_5:\
    \ Vec<u8> = vec![];\n    let mut num_prime_6: Vec<u8> = vec![];\n    let mut num_prime_7:\
    \ Vec<u8> = vec![];\n    let mut num_prime_8: Vec<u8> = vec![];\n    let mut num_prime_9:\
    \ Vec<u8> = vec![];\n    let mut num_prime_10: Vec<u8> = vec![];\n    let mut\
    \ num_prime_11: Vec<u8> = vec![];\n    let mut num_prime_12: Vec<u8> = vec![];\n\
    \    let mut num_prime_13: Vec<u8> = vec![];\n    let mut num_prime_14: Vec<u8>\
    \ = vec![];\n    let mut num_prime_15: Vec<u8> = vec![];\n    let mut num_prime_16:\
    \ Vec<u8> = vec![];\n    let mut num_prime_17: Vec<u8> = vec![];\n    let mut\
    \ num_prime_18: Vec<u8> = vec![];\n    let mut num_prime_19: Vec<u8> = vec![];\n\
    \    let mut num_prime_20: Vec<u8> = vec![];\n    let mut num_prime_21: Vec<u8>\
    \ = vec![];\n    let mut num_prime_22: Vec<u8> = vec![];\n    let mut num_prime_23:\
    \ Vec<u8> = vec![];\n    let mut num_prime_24: Vec<u8> = vec![];\n    let mut\
    \ num_prime_25: Vec<u8> = vec![];\n    let mut num_prime_26: Vec<u8> = vec![];\n\
    \    let mut num_prime_27: Vec<u8> = vec![];\n    let mut num_prime_28: Vec<u8>\
    \ = vec![];\n    let mut num_prime_29: Vec<u8> = vec![];\n    let mut num_prime_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_str:\
    \ String = String::new();\n    let mut num_str2: String = String::new();\n   \
    \ let mut num_str3: String = String::new();\n    let mut num_str4: String = String::new();\n\
    \    let mut num_str5: String = String::new();\n    let mut num_str6: String =\
    \ String::new();\n    let mut num_str7: String = String::new();\n    let mut num_str8:\
    \ String = String::new();\n    let mut num_str9: String = String::new();\n   \
    \ let mut num_str10: String = String::new();\n    let mut num_str11: String =\
    \ String::new();\n    let mut num_str12: String = String::new();\n    let mut\
    \ num_str13: String = String::new();\n    let mut num_str14: String = String::new();\n\
    \    let mut num_str15: String = String::new();\n    let mut num_str16: String\
    \ = String::new();\n    let mut num_str17: String = String::new();\n    let mut\
    \ num_str18: String = String::new();\n    let mut num_str19: String = String::new();\n\
    \    let mut num_str20: String = String::new();\n    let mut num_str21: String\
    \ = String::new();\n    let mut num_str22: String = String::new();\n    let mut\
    \ num_str23: String = String::new();\n    let mut num_str24: String = String::new();\n\
    \    let mut num_str25: String = String::new();\n    let mut num_str26: String\
    \ = String::new();\n    let mut num_str27: String = String::new();\n    let mut\
    \ num_str28: String = String::new();\n    let mut num_str29: String = String::new();\n\
    \    let mut num_str30: String = String::new();\n    let mut num_str31: String\
    \ = String::new();\n    let mut num_str32: String = String::new();\n    let mut\
    \ num_str33: String = String::new();\n    let mut num_str34: String = String::new();\n\
    \    let mut num_str35: String = String::new();\n    let mut num_str36: String\
    \ = String::new();\n    let mut num_str37: String = String::new();\n    let mut\
    \ num_str38: String = String::new();\n    let mut num_", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let\
    \ mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut prime_found2\
    \ = false;\n    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n\
    \    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let\
    \ mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let mut prime_found9\
    \ = false;\n    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n\
    \    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let\
    \ mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut\
    \ prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut prime_found18\
    \ = false;\n    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n\
    \    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let\
    \ mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut\
    \ prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut prime_found27\
    \ = false;\n    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n\
    \    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let\
    \ mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut\
    \ prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut prime_found36\
    \ = false;\n    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n\
    \    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let\
    \ mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut\
    \ prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut prime_found45\
    \ = false;\n    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n\
    \    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let\
    \ mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut\
    \ prime_found52 = false;\n    let mut prime_found53 = false;", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_counter40:\
    \ usize = 0;\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x != 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&x| x % 2 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|&x| x % 3 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x % 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x| x\
    \ % 7 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x| x %\
    \ 11 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x| x % 13\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x| x % 17 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x| x % 19 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x % 23 == 0).collect();\n \
    \   let mut num: Vec<u8> = num.iter().filter(|&x| x % 29 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|&x| x % 31 == 0).collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x % 37 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&x| x % 41 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x % 43 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x % 47 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&x| x % 53 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut\
    \ num_digits = nums.len();\n    let mut num_primes = 0;\n    let mut num_primes_digits\
    \ = 0;\n    let mut num_primes_digits_prime = 0;\n    let mut num_primes_digits_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime = 0;\n   \
    \ let mut num_primes_digits_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n\
    \    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7];\n    let mut prime_counter: usize = 0;\n    let\
    \ mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n   \
    \ let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let ", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 2 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 3 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 7 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 11 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 13 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 17 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 19 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 23 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 29 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 31 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 37 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 41 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 43 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 47 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 53\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 59 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 61 == 0).collect",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: u8 = 0;\n    let mut prime_digit_sum: u8 = 0;\n    let\
    \ mut prime_digit_sum2: u8 = 0;\n    let mut prime_digit_sum3: u8 = 0;\n    let\
    \ mut prime_digit_sum4: u8 = 0;\n    let mut prime_digit_sum5: u8 = 0;\n    let\
    \ mut prime_digit_sum6: u8 = 0;\n    let mut prime_digit_sum7: u8 = 0;\n    let\
    \ mut prime_digit_sum8: u8 = 0;\n    let mut prime_digit_sum9: u8 = 0;\n    let\
    \ mut prime_digit_sum10: u8 = 0;\n    let mut prime_digit_sum11: u8 = 0;\n   \
    \ let mut prime_digit_sum12: u8 = 0;\n    let mut prime_digit_sum13: u8 = 0;\n\
    \    let mut prime_digit_sum14: u8 = 0;\n    let mut prime_digit_sum15: u8 = 0;\n\
    \    let mut prime_digit_sum16: u8 = 0;\n    let mut prime_digit_sum17: u8 = 0;\n\
    \    let mut prime_digit_sum18: u8 = 0;\n    let mut prime_digit_sum19: u8 = 0;\n\
    \    let mut prime_digit_sum20: u8 = 0;\n    let mut prime_digit_sum21: u8 = 0;\n\
    \    let mut prime_digit_sum22: u8 = 0;\n    let mut prime_digit_sum23: u8 = 0;\n\
    \    let mut prime_digit_sum24: u8 = 0;\n    let mut prime_digit_sum25: u8 = 0;\n\
    \    let mut prime_digit_sum26: u8 = 0;\n    let mut prime_digit_sum27: u8 = 0;\n\
    \    let mut prime_digit_sum28: u8 = 0;\n    let mut prime_digit_sum29: u8 = 0;\n\
    \    let mut prime_digit_sum30: u8 = 0;\n    let mut prime_digit_sum31: u8 = 0;\n\
    \    let mut prime_digit_sum32: u8 = 0;\n    let mut prime_digit_sum33: u8 = 0;\n\
    \    let mut prime_digit_sum34: u8 = 0;\n    let mut prime_digit_sum35: u8 = 0;\n\
    \    let mut prime_digit_sum36: u8 = 0;\n    let mut prime_digit_sum37: u8 = 0;\n\
    \    let mut prime_digit_sum38: u8 = 0;\n    let mut prime_digit_sum39: u8 = 0;\n",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut count:\
    \ usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;\n    let ", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut nums: Vec<u8> = num.chars().collect();\n\
    \    let mut num_prime: Vec<u8> = nums.clone();\n    let mut num_prime_prime:\
    \ Vec<u8> = num_prime.clone();\n    let mut num_prime_prime_prime: Vec<u8> = num_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = num_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n    let\
    \ mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime", "    let mut num: isize = 0;\n    let mut num_str: String\
    \ = num.to_string();\n    let mut num_str: Vec<&str> = num_str.chars().collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().map(|&x| x.to_string()).collect();\n\
    \    let mut num_str: Vec<&str> = num_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'a' && c != 'b' && c !=\
    \ 'c' && c != 'd' && c != 'e' && c != 'f').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '0').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '1').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '2').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != '3').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != '4').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != '5').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != '6').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != '7').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '8').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ 'A').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'B').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'C').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != 'D').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'E').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != 'F').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != 'a').collect();\n    let mut num: ", "    let\
    \ mut num: isize = 0;\n    let mut digit: isize = 0;\n    let mut prime: isize\
    \ = 0;\n    let mut prime_found = false;\n    let mut digits_found = 0;\n    let\
    \ mut digits_not_found = 0;\n    let mut digits_not_found_prime = 0;\n    let\
    \ mut digits_not_found_prime_found = false;\n    let mut digits_not_found_prime_not_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime = false;\n    let\
    \ mut digits_not_found_prime_not_found_prime_found = false;\n    let mut digits_not_found_prime_not_found_prime_not_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime\
    \ = false;\n    let mut digits_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_not_found_prime_found\
    \ = false;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: usize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: usize = 0;\n    let mut prime_digit_sum: usize = 0;\n\
    \    let mut prime_digit_sum2: usize = 0;\n    let mut prime_digit_sum3: usize\
    \ = 0;\n    let mut prime_digit_sum4: usize = 0;\n    let mut prime_digit_sum5:\
    \ usize = 0;\n    let mut prime_digit_sum6: usize = 0;\n    let mut prime_digit_sum7:\
    \ usize = 0;\n    let mut prime_digit_sum8: usize = 0;\n    let mut prime_digit_sum9:\
    \ usize = 0;\n    let mut prime_digit_sum10: usize = 0;\n    let mut prime_digit_sum11:\
    \ usize = 0;\n    let mut prime_digit_sum12: usize = 0;\n    let mut prime_digit_sum13:\
    \ usize = 0;\n    let mut prime_digit_sum14: usize = 0;\n    let mut prime_digit_sum15:\
    \ usize = 0;\n    let mut prime_digit_sum16: usize = 0;\n    let mut prime_digit_sum17:\
    \ usize = 0;\n    let mut prime_digit_sum18: usize = 0;\n    let mut prime_digit_sum19:\
    \ usize = 0;\n    let mut prime_digit_sum20: usize = 0;\n    let mut prime_digit_sum21:\
    \ usize = 0;\n    let mut prime_digit_sum22: usize = 0;\n    let mut prime_digit_sum23:\
    \ usize = 0;\n    let mut prime_digit_sum24: usize = 0;\n    let mut prime_digit_sum25:\
    \ usize = 0;\n    let mut prime_digit_sum26: usize = 0;\n    let mut prime_digit_sum27:\
    \ usize = 0;\n    let mut prime_digit_sum28: usize = 0;\n    let mut prime_digit_sum29:\
    \ usize = 0;\n    let mut prime_digit_sum30: usize = 0;\n    let mut prime_digit_sum31:\
    \ usize = 0;\n    let mut prime_digit_sum32: usize = 0;\n    let mut prime_digit_sum33:\
    \ usize = 0;\n    let mut prime_digit_sum34: usize = 0;\n    let mut prime_digit_sum35:\
    \ usize = 0;\n    let mut prime_digit_sum36: usize = 0;", "    let mut num: isize\
    \ = 0;\n    let mut num_str: String = num.to_string();\n    let mut num_str: Vec<&str>\
    \ = num_str.chars().collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'a", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime: isize = 0;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut ", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter2: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter3: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_counter4: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter5: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n \
    \   let mut prime_counter6: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_counter7: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter8:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter9: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter10: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter11: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter12: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter13: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter14: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_counter15: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_counter16: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter17:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter18: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter19: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter20: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter21: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter22: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter23: Vec<u8> = ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut ", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_digits = num.len();\n    let mut num_primes = 0;\n    let mut num_primes_digits\
    \ = 0;\n    let mut num_primes_digits_prime = 0;\n    let mut num_primes_digits_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime = 0;\n   \
    \ let mut num_primes_digits_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n\
    \    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n \
    \   let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        'A'..'F' =>\
    \ c - 'A' as u8,\n        '0'..'9' => c - '0' as u8,\n        _ => panic!(\"Invalid\
    \ hex digit: {}\", c)\n    }).collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8>", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_primes = 0;\n    let mut num_primes_digits_primes_primes =\
    \ 0;\n    let mut num_primes_digits_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digit", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime: isize = 2;\n    let mut\
    \ digit: u8;\n    while num.len() > 0 {\n        digit = num.chars().nth(1).unwrap();\n\
    \        if digit == 'a' || digit == 'b' || digit == 'c' || digit == 'd' || digit\
    \ == 'e' || digit == 'f' {\n            prime = prime * digit as isize + digit\
    \ as isize;\n        } else {\n            prime_count = prime_count + 1;\n  \
    \      }\n        num.pop();\n    }\n    prime_count", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_primes = 0;\n    let mut num_primes_digits_primes_primes =\
    \ 0;\n    let mut num_primes_digits_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime.len();\n    let mut prime_len\
    \ = prime.", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter2: Vec<u8> = vec![];\n    let mut num_prime_counter3:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter4: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter5: Vec<u8> = vec![];\n    let mut num_prime_counter6: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter7: Vec<u8> = vec![];\n    let mut num_prime_counter8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter9: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter10: Vec<u8> = vec![];\n    let mut num_prime_counter11:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter12: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter13: Vec<u8> = vec![];\n    let mut num_prime_counter14:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter15: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter16: Vec<u8> = vec![];\n    let mut num_prime_counter17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter18: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter19: Vec<u8> = vec![];\n    let mut num_prime_counter20:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter21: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter22: Vec<u8> = vec![];\n    let mut num_prime_counter23:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter24: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter25: Vec<u8> = vec![];\n    let mut num_prime_counter26:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter27: Vec<u8> = vec", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime_prime_prime: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut count: usize = 0;\n    let mut\
    \ digit: u8 = 0;\n    let mut i: usize = 0;\n    while i < num.len() {\n     \
    \   digit = num[i] - '0';\n        if prime == digit {\n            count += 1;\n\
    \        }\n        i += 1;\n    }\n    count", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n    let mut\
    \ num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digit", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut counter:\
    \ usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter: usize\
    \ = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3: usize\
    \ = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5: usize\
    \ = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7: usize\
    \ = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9: usize\
    \ = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter", "  \
    \  let mut num: isize = 0;\n    let mut digits = num.chars().collect::<Vec<_>>();\n\
    \    let mut prime_digits = vec![false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_sum = 0;\n    let mut\
    \ num_primes_digits_product = 1;\n    let mut num_primes_digits_product2 = 1;\n\
    \    let mut num_primes_digits_product3 = 1;\n    let mut num_primes_digits_product4\
    \ = 0;\n    let mut num_primes_digits_product5 = 1;\n    let mut num_primes_digits_product6\
    \ = 1;\n    let mut num_primes_digits_product7 = 1;\n    let mut num_primes_digits_product8\
    \ = 1;\n    let mut num_primes_digits_product9 = 1;\n    let mut num_primes_digits_product10\
    \ = 1;\n    let mut num_primes_digits_product11 = 1;\n    let mut num_primes_digits_product12\
    \ = 1;\n    let mut num_primes_digits_product13 = 1;\n    let mut num_primes_digits_product14\
    \ = 1;\n    let mut num_primes_digits_product15 = 1;\n    let mut num_primes_digits_product16\
    \ = 1;\n    let mut num_primes_digits_product17 = 1;\n    let mut num_primes_digits_product18\
    \ = 1;\n    let mut num_primes_digits_product19 = 1;\n    let mut num_primes_digits_product20\
    \ = 1;\n    let mut num_primes_digits_product21 = 1;\n    let mut num_primes_digits_product22\
    \ = 1;\n    let mut num_primes_digits_product23 = 1;\n    let mut num_primes_digits_product24\
    \ = 1;\n    let mut num_primes_digits_product25 = 1;\n    let mut num_primes_digits_product26\
    \ = 1;\n    let mut num_primes_digits_product27 = 1;\n    let mut num_primes_digits_product28\
    \ = 1;\n    let mut num_primes_digits_product29 = 1;\n    let mut num_primes_digits_product30\
    \ = 1;\n    let mut num_primes_digits_product31 = 1;\n    let mut num_primes_digits_product32\
    \ = 1;\n    let mut num_primes_digits_product33 = 1;\n    let mut num_primes_digits_product34\
    \ = 1;\n    let mut num_primes_digits_product35 = 1;\n    let mut num_primes_digits_product36\
    \ = 1;\n    let mut num_primes_digits_product37 = 1;\n    let mut num_primes_digits_product38\
    \ = 1;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut prime_digits = vec![];\n    let\
    \ mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: isize = num.chars().filter(|&c| c >= '0' && c <= '9').count();\n\
    \    let mut prime: isize = 2;\n    while prime <= num {\n        if num % prime\
    \ == 0 {\n            num += 1;\n        } else {\n            prime += 1;\n \
    \       }\n    }\n    num", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut counter: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter:\
    \ usize = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3:\
    \ usize = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5:\
    \ usize = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7:\
    \ usize = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9:\
    \ usize = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let\
    \ mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_len\
    \ = num_prime.len();\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut prime_digits = vec![2, 3];\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_count\
    \ = prime_digits_len;\n    let mut prime_digits_count_2 = prime_digits_count_2;\n\
    \    let mut prime_digits_count_3 = prime_digits_count_3;\n    let mut prime_digits_count_4\
    \ = prime_digits_count_4;\n    let mut prime_digits_count_5 = prime_digits_count_5;\n\
    \    let mut prime_digits_count_6 = prime_digits_count_6;\n    let mut prime_digits_count_7\
    \ = prime_digits_count_7;\n    let mut prime_digits_count_8 = prime_digits_count_8;\n\
    \    let mut prime_digits_count_9 = prime_digits_count_9;\n    let mut prime_digits_count_10\
    \ = prime_digits_count_10;\n    let mut prime_digits_count_11 = prime_digits_count_11;\n\
    \    let mut prime_digits_count_12 = prime_digits_count_12;\n    let mut prime_digits_count_13\
    \ = prime_digits_count_13;\n    let mut prime_digits_count_14 = prime_digits_count_14;\n\
    \    let mut prime_digits_count_15 = prime_digits_count_15;\n    let mut prime_digits_count_16\
    \ = prime_digits_count_16;\n    let mut prime_digits_count_17 = prime_digits_count_17;\n\
    \    let mut prime_digits_count_18 = prime_digits_count_18;\n    let mut prime_digits_count_19\
    \ = prime_digits_count_19;\n    let mut prime_digits_count_20 = prime_digits_count_20;\n\
    \    let mut prime_digits_count_21 = prime_digits_count_21;\n    let mut prime_digits_count_22\
    \ = prime_digits_count_22;\n    let mut prime_digits_count_23 = prime_digits_count_23;\n\
    \    let mut prime_digits_count_24 = prime_digits_count_24;\n    let mut prime_digits_count_25\
    \ = prime_digits_count_25;\n    let mut prime_digits_count_26 = prime_digits_count_26;\n\
    \    let mut prime_digits_count_27 = prime_digits_count_27;\n    let mu", "  \
    \  let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut\
    \ num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_iter = nums.iter();\n    let mut num_digits = nums.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_iter = 0;\n    let mut num_primes_digits_iter2 = 0;\n    let\
    \ mut num_primes_digits_iter3 = 0;\n    let mut num_primes_digits_iter4 = 0;\n\
    \    let mut num_primes_digits_iter5 = 0;\n    let mut num_primes_digits_iter6\
    \ = 0;\n    let mut num_primes_digits_iter7 = 0;\n    let mut num_primes_digits_iter8\
    \ = 0;\n    let mut num_primes_digits_iter9 = 0;\n    let mut num_primes_digits_iter10\
    \ = 0;\n    let mut num_primes_digits_iter11 = 0;\n    let mut num_primes_digits_iter12\
    \ = 0;\n    let mut num_primes_digits_iter13 = 0;\n    let mut num_primes_digits_iter14\
    \ = 0;\n    let mut num_primes_digits_iter15 = 0;\n    let mut num_primes_digits_iter16\
    \ = 0;\n    let mut num_primes_digits_iter17 = 0;\n    let mut num_primes_digits_iter18\
    \ = 0;\n    let mut num_primes_digits_iter19 = 0;\n    let mut num_primes_digits_iter20\
    \ = 0;\n    let mut num_primes_digits_iter21 = 0;\n    let mut num_primes_digits_iter22\
    \ = 0;\n    let mut num_primes_digits_iter23 = 0;\n    let mut num_primes_digits_iter24\
    \ = 0;\n    let mut num_primes_digits_iter25 = 0;\n    let mut num_primes_digits_iter26\
    \ = 0;\n    let mut num_primes_digits_iter27 = 0;\n    let mut num_primes_digits_iter28\
    \ = 0;\n    let mut num_primes_digits_iter29 = 0;\n    let mut num_primes_digits_iter30\
    \ = 0;\n    let mut num_primes_digits_iter31 = 0;\n    let mut num_primes_digits_iter32\
    \ = 0;\n    let mut num_primes_digits_iter33 = 0;\n    let mut num_primes_digits_iter34\
    \ = 0;\n    let mut num_primes_digits_iter35 = 0;\n    let mut num_primes_digits_iter36\
    \ = 0;\n    let mut num_primes_digits_iter37 = 0;\n    let mut num_primes_digits_iter38\
    \ = 0;\n    let mut num_primes_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_idx = 0;\n    let mut prime_digits_idx2:\
    \ usize = 0;\n    let mut prime_digits_idx3: usize = 0;\n    let mut prime_digits_idx4:\
    \ usize = 0;\n    let mut prime_digits_idx5: usize = 0;\n    let mut prime_digits_idx6:\
    \ usize = 0;\n    let mut prime_digits_idx7: usize = 0;\n    let mut prime_digits_idx8:\
    \ usize = 0;\n    let mut prime_digits_idx9: usize = 0;\n    let mut prime_digits_idx10:\
    \ usize = 0;\n    let mut prime_digits_idx11: usize = 0;\n    let mut prime_digits_idx12:\
    \ usize = 0;\n    let mut prime_digits_idx13: usize = 0;\n    let mut prime_digits_idx14:\
    \ usize = 0;\n    let mut prime_digits_idx15: usize = 0;\n    let mut prime_digits_idx16:\
    \ usize = 0;\n    let mut prime_digits_idx17: usize = 0;\n    let mut prime_digits_idx18:\
    \ usize = 0;\n    let mut prime_digits_idx19: usize = 0;\n    let mut prime_digits_idx20:\
    \ usize = 0;\n    let mut prime_digits_idx21: usize = 0;\n    let mut prime_digits_idx22:\
    \ usize = 0;\n    let mut prime_digits_idx23: usize = 0;\n    let mut prime_digits_idx24:\
    \ usize = 0;\n    let mut prime_digits_idx25: usize = 0;\n    let mut prime_digits_idx26:\
    \ usize = 0;\n    let mut prime_digits_idx27: usize = 0;\n    let mut prime_digits_idx28:\
    \ usize = 0;\n    let mut prime_digits_idx29: usize = 0;\n    let mut prime_digits_idx30:\
    \ usize = 0;\n    let mut prime_digits_idx31: usize = 0;\n    let mut prime_digit",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_counter: usize =\
    \ 0;\n    let mut prime_digits_counter2: usize = 0;\n    let mut prime_digits_counter3:\
    \ usize = 0;\n    let mut prime_digits_counter4: usize = 0;\n    let mut prime_digits_counter5:\
    \ usize = 0;\n    let mut prime_digits_counter6: usize = 0;\n    let mut prime_digits_counter7:\
    \ usize = 0;\n    let mut prime_digits_counter8: usize = 0;\n    let mut prime_digits_counter9:\
    \ usize = 0;\n    let mut prime_digits_counter10: usize = 0;\n    let mut prime_digits_counter11:\
    \ usize = 0;\n    let mut prime_digits_counter12: usize = 0;\n    let mut prime_digits_counter13:\
    \ usize = 0;\n    let mut prime_digits_counter14: usize = 0;\n    let mut prime_digits_counter15:\
    \ usize = 0;\n    let mut prime_digits_counter16: usize = 0;\n    let mut prime_digits_counter17:\
    \ usize = 0;\n    let mut prime_digits_counter18: usize = 0;\n    let mut prime_digits_counter19:\
    \ usize = 0;\n    let mut prime_digits_counter20: usize = 0;\n    let mut prime_digits_counter21:\
    \ usize = 0;\n    let mut prime_digits_counter22: usize = 0;\n    let mut prime_digits_counter23:\
    \ usize = 0;\n    let mut prime_digits_counter24: usize = 0;\n    let mut prime_digits_counter25:\
    \ usize = 0;\n    let mut prime_digits_counter26: usize = 0;\n    let mut prime_digits_counter27:\
    \ usize = 0;\n    let mut prime_digits_counter28: usize = 0;\n    let mut prime_digits_counter29:\
    \ usize = 0;\n    let mut prime_digits_counter30: usize = 0;\n    let mut prime_digits_counter31:\
    \ usize = 0;\n    let mut prime_digits_counter32: usize = 0;\n    let mut prime_digits_counter33:\
    \ usize = 0;\n    let mut prime_digits_counter34: usize = 0;\n    let mut prime_digits_counter35:\
    \ u", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut nums_len\
    \ = nums.len();\n    let mut nums_prime = 0;\n    let mut nums_prime_len = nums_len;\n\
    \    let mut nums_prime_prime = 0;\n    let mut nums_prime_prime_len = nums_len;\n\
    \    let mut nums_prime_prime_prime = 0;\n    let mut nums_prime_prime_prime_len\
    \ = nums_len;\n    let mut nums_prime_prime_prime_prime = 0;\n    let mut nums_prime_prime_prime_prime_len\
    \ = nums_len;\n    let mut nums_prime_prime_prime_prime_prime = 0;\n    let mut\
    \ nums_prime_prime_prime_prime_prime_len = nums_len;\n    let mut nums_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut nums_prime_prime_prime_prime_prime_prime_len = nums_len;\n\
    \    let mut nums_prime_prime_prime_prime_prime_prime_prime = 0;\n    let mut\
    \ nums_prime_prime_prime_prime_prime_prime_prime_len = nums_len;\n    let mut\
    \ nums_prime_prime_prime_prime_prime_prime_prime_len = nums_len;\n    let mut\
    \ nums_prime_prime_prime_prime_prime_prime_prime_len = nums_len;\n    let mut\
    \ nums_prime_prime_prime_prime_prime_prime_prime_prime_len = nums_len;\n    let\
    \ mut nums_prime_prime_prime_prime_prime_prime_prime_prime_len = nums_len;\n \
    \   let mut nums_prime_prime_prime_prime_prime_prime_prime_prime_prime_len = nums_len;\n\
    \    let mut nums_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_len\
    \ = nums_len;\n    let mut nums_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_len\
    \ = nums_len;\n    let mut nums_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_len\
    \ = nums_len;\n    let mut nums_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut count\
    \ = 1;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n    while\
    \ !num.is_empty() {\n        if num[0] == b'a' || num[0] == b'b'\n           \
    \ || num[0] == b'c' || num[0] == b'd'\n            || num[0] == b'e' || num[0]\
    \ == b'f'\n            || num[0] == b'A' || num[0] == b'B'\n            || num[0]\
    \ == b'C' || num[0] == b'D'\n            || num[0] == b'E' || num[0] == b'F' {\n\
    \            prime_found = true;\n            break;\n        }\n        prime\
    \ = prime * 2;\n        prime_found = false;\n        for &c in num.iter().rev()\
    \ {\n            if prime % 10 == 0 {\n                prime_found = true;\n \
    \               break;\n            }\n            prime /= 10;\n        }\n \
    \       if !prime_found {\n            count += 1;\n        }\n        num = num.iter().rev().collect();\n\
    \    }\n    count", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: isize = 0;\n    let mut prime: Vec<u8> = vec![2, 3, 5, 7];\n\
    \    let mut prime_found = false;\n    let mut prime_found2 = false;\n    let\
    \ mut prime_found3 = false;\n    let mut prime_found4 = false;\n    let mut prime_found5\
    \ = false;\n    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n\
    \    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let\
    \ mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let mut\
    \ prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut prime_found14\
    \ = false;\n    let mut prime_found15 = false;\n    let mut prime_found16 = false;\n\
    \    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n    let\
    \ mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let mut\
    \ prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut prime_found23\
    \ = false;\n    let mut prime_found24 = false;\n    let mut prime_found25 = false;\n\
    \    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n    let\
    \ mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let mut\
    \ prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut prime_found32\
    \ = false;\n    let mut prime_found33 = false;\n    let mut prime_found34 = false;\n\
    \    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n    let\
    \ mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let mut\
    \ prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut prime_found41\
    \ = false;\n    let mut prime_found42 = false;\n    let mut prime_found43 = false;\n\
    \    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n    let\
    \ mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let mut\
    \ prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut prime_found50\
    \ = false;\n    let mut prime_found51 = false;\n    let mut ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_counter = vec![];\n\
    \    let mut prime_digits_counter2 = vec![];\n    let mut prime_digits_counter3\
    \ = vec![];\n    let mut prime_digits_counter4 = vec![];\n    let mut prime_digits_counter5\
    \ = vec![];\n    let mut prime_digits_counter6 = vec![];\n    let mut prime_digits_counter7\
    \ = vec![];\n    let mut prime_digits_counter8 = vec![];\n    let mut prime_digits_counter9\
    \ = vec![];\n    let mut prime_digits_counter10 = vec![];\n    let mut prime_digits_counter11\
    \ = vec![];\n    let mut prime_digits_counter12 = vec![];\n    let mut prime_digits_counter13\
    \ = vec![];\n    let mut prime_digits_counter14 = vec![];\n    let mut prime_digits_counter15\
    \ = vec![];\n    let mut prime_digits_counter16 = vec![];\n    let mut prime_digits_counter17\
    \ = vec![];\n    let mut prime_digits_counter18 = vec![];\n    let mut prime_digits_counter19\
    \ = vec![];\n    let mut prime_digits_counter20 = vec![];\n    let mut prime_digits_counter21\
    \ = vec![];\n    let mut prime_digits_counter22 = vec![];\n    let mut prime_digits_counter23\
    \ = vec![];\n    let mut prime_digits_counter24 = vec![];\n    let mut prime_digits_counter25\
    \ = vec![];\n    let mut prime_digits_counter26 = vec![];\n    let mut prime_digits_counter27\
    \ = vec![];\n    let mut prime_digits_counter28 = vec![];\n    let mut prime_digits_counter29\
    \ = vec![];\n    let mut prime_digits_counter30 = vec![];\n    let mut prime_digits_counter31\
    \ = vec![];\n    let mut prime_digits_counter32 = vec![];\n    let mut prime_digits_counter33\
    \ = vec![];\n    let mut prime_digits_counter34 = vec![];\n    let mut prime_digits_",
  "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut primes = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut primes_len = primes.len();\n    let mut\
    \ primes_sum = 0;\n    let mut primes_sum2 = 0;\n    let mut primes_sum3 = 0;\n\
    \    let mut primes_sum4 = 0;\n    let mut primes_sum5 = 0;\n    let mut primes_sum6\
    \ = 0;\n    let mut primes_sum7 = 0;\n    let mut primes_sum8 = 0;\n    let mut\
    \ primes_sum9 = 0;\n    let mut primes_sum10 = 0;\n    let mut primes_sum11 =\
    \ 0;\n    let mut primes_sum12 = 0;\n    let mut primes_sum13 = 0;\n    let mut\
    \ primes_sum14 = 0;\n    let mut primes_sum15 = 0;\n    let mut primes_sum16 =\
    \ 0;\n    let mut primes_sum17 = 0;\n    let mut primes_sum18 = 0;\n    let mut\
    \ primes_sum19 = 0;\n    let mut primes_sum20 = 0;\n    let mut primes_sum21 =\
    \ 0;\n    let mut primes_sum22 = 0;\n    let mut primes_sum23 = 0;\n    let mut\
    \ primes_sum24 = 0;\n    let mut primes_sum25 = 0;\n    let mut primes_sum26 =\
    \ 0;\n    let mut primes_sum27 = 0;\n    let mut primes_sum28 = 0;\n    let mut\
    \ primes_sum29 = 0;\n    let mut primes_sum30 = 0;\n    let mut primes_sum31 =\
    \ 0;\n    let mut primes_sum32 = 0;\n    let mut primes_sum33 = 0;\n    let mut\
    \ primes_sum34 = 0;\n    let mut primes_sum35 = 0;\n    let mut primes_sum36 =\
    \ 0;\n    let mut primes_sum37 = 0;\n    let mut primes_sum38 = 0;\n    let mut\
    \ primes_sum39 = 0;\n    let mut primes_sum40 = 0;\n    let mut primes_sum41 =\
    \ 0;\n    let mut primes_sum42 = 0;\n    let mut primes_sum43 = 0;\n    let mut\
    \ primes_sum44 = 0;\n    let mut primes_sum45 = 0;\n    let mut primes_sum46 =\
    \ 0;\n    let mut primes_sum47 = 0;\n    let mut primes_sum48 = 0;\n    let mut\
    \ primes_sum49 = 0;\n    let mut primes_sum50 = 0;\n    let mut primes_sum51 =\
    \ 0;\n    let mut primes_sum52 = 0;\n    let mut primes_", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_len = num_prime.len();\n    let mut\
    \ num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value_count: usize = 0;\n    let mut prime_digit_value_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_count: usize = 0;\n    let mut\
    \ prime_digit_value_prime_prime: u8 = 0;\n    let mut prime_digit_value_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime: u8 = 0;\n    let\
    \ mut prime_digit_value_prime_prime_prime_count: usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_count: usize\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime: u8 = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_count: usize = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_prime: u8 = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_count: usize\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ usize = 0;\n    let mut prime_digit_value_prime_", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|&c| match c {\n        '0' => 0,\n        '1' => 1,\n\
    \        '2' => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n\
    \        '6' => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n\
    \        'a' => 10,\n        'b' => 11,\n        'c' => 12,\n        'd' => 13,\n\
    \        'e' => 14,\n        'f' => 15,\n        _ => panic!(\"Invalid hexadecimal\
    \ digit: {}\", c)\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c|\
    \ match c {\n        0 => 2,\n        1 => 3,\n        2 => 5,\n        3 => 7,\n\
    \        4 => 11,\n        5 => 13,\n        6 => 17,\n        7 => 19,\n    \
    \    8 => 23,\n        9 => 29,\n        10 => 31,\n        11 => 37,\n      \
    \  12 => 41,\n        13 => 43,\n        14 => 47,\n        15 => 53,\n      \
    \  _ => panic!(\"Invalid hexadecimal digit: {}\", c)\n    }).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|&c| match c {\n        0 => 2,\n        1\
    \ => 3,\n        2 => 5,\n        3 => 7,\n        4 => 11,\n        5 => 13,\n\
    \        6 => 17,\n        7 => 19,\n        8 => 23,\n        9 => 29,\n    \
    \    10 => 31,\n        11 => 37,\n        12 => 41,\n        13 => 43,\n    \
    \    14 => 47,\n        15 => 53,\n        _ => panic!(\"Invalid hexadecimal digit:\
    \ {}\", c)\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c|\
    \ match c {\n        0 => 2,\n        1 => 3,\n        2 => 5,\n        3 => 7,\n\
    \        4 => 11,\n        5 => 13,\n        6 => 17,\n        7 => 19,\n    \
    \    8 => 23,\n        9 => 29,\n        10 => 31,\n        11 => 37,\n      \
    \  12 => 41,\n        13 => 43,\n        14 => 47,\n        15 => 53,\n      \
    \  _ => panic!", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut prime_found53 = false;", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n    let\
    \ mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n   \
    \ let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: isize = num.chars().filter(|c|\
    \ c.is_ascii_uppercase()).count() + 1;\n    let mut prime: isize = 2;\n    let\
    \ mut digit: isize = 2;\n    while num > 1 {\n        if num % prime == 0 {\n\
    \            digit += 1;\n        }\n        prime += 2;\n        num /= 10;\n\
    \    }\n    digit", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter2: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter3: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter4:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter5: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter6: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter7:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter8: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter9: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter10:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter11: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter12: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter13:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter14: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter15: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter16:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter17: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter18: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter19:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter20: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter21: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter22:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter23: Vec<u8> = vec![0; 8];\n\
    \    let mut num_prime_counter24: Vec<u8> = vec![0; 8];\n    let ", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter: usize = 0;\n    let mut num_prime_counter2:\
    \ usize = 0;\n    let mut num_prime_counter3: usize = 0;\n    let mut num_prime_counter4:\
    \ usize = 0;\n    let mut num_prime_counter5: usize = 0;\n    let mut num_prime_counter6:\
    \ usize = 0;\n    let mut num_prime_counter7: usize = 0;\n    let mut num_prime_counter8:\
    \ usize = 0;\n    let mut num_prime_counter9: usize = 0;\n    let mut num_prime_counter10:\
    \ usize = 0;\n    let mut num_prime_counter11: usize = 0;\n    let mut num_prime_counter12:\
    \ usize = 0;\n    let mut num_prime_counter13: usize = 0;\n    let mut num_prime_counter14:\
    \ usize = 0;\n    let mut num_prime_counter15: usize = 0;\n    let mut num_prime_counter16:\
    \ usize = 0;\n    let mut num_prime_counter17: usize = 0;\n    let mut num_prime_counter18:\
    \ usize = 0;\n    let mut num_prime_counter19: usize = 0;\n    let mut num_prime_counter20:\
    \ usize = 0;\n    let mut num_prime_counter21: usize = 0;\n    let mut num_prime_counter22:\
    \ usize = 0;\n    let mut num_prime_counter23: usize = 0;\n    let mut num_prime_counter24:\
    \ usize = 0;\n    let mut num_prime_counter25: usize = 0;\n    let mut num_prime_counter26:\
    \ usize = 0;\n    let mut num_prime_counter27: usize = 0;\n    let mut num_prime_counter28:\
    \ usize = 0;\n    let mut num_prime_counter29: usize = 0;\n    let mut num_prime_counter30:\
    \ usize = 0;\n    let mut num_prime_counter31: usize = 0;\n    let mut num_prime_counter32:\
    \ usize = 0;\n    let mut num_prime_counter33: usize = 0;\n    let mut num_prime_counter34:\
    \ usize = 0;\n    let mut num_prime_counter35: usize = 0;\n    let mut num_prime_counter36:\
    \ usize = 0;\n    let mut num_prime_counter37: usize = 0;\n    let mu", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut digit:\
    \ Vec<u8> = vec![2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\n    let mut result: Vec<u8> = vec![];\n    let mut i: usize = 0;\n   \
    \ let mut j: usize = 0;\n    let mut k: usize = 0;\n    let mut l: usize = 0;\n\
    \    let mut m: usize = 0;\n    let mut n: usize = 0;\n    let mut o: usize =\
    \ 0;\n    let mut p: usize = 0;\n    let mut q: usize = 0;\n    let mut r: usize\
    \ = 0;\n    let mut s: usize = 0;\n    let mut t: usize = 0;\n    let mut u: usize\
    \ = 0;\n    let mut v: usize = 0;\n    let mut w: usize = 0;\n    let mut x: usize\
    \ = 0;\n    let mut y: usize = 0;\n    let mut z: usize = 0;\n    let mut a: usize\
    \ = 0;\n    let mut b: usize = 0;\n    let mut c: usize = 0;\n    let mut d: usize\
    \ = 0;\n    let mut e: usize = 0;\n    let mut f: usize = 0;\n    let mut g: usize\
    \ = 0;\n    let mut h: usize = 0;\n    let mut i: usize = 0;\n    let mut j: usize\
    \ = 0;\n    let mut k: usize = 0;\n    let mut l: usize = 0;\n    let mut m: usize\
    \ = 0;\n    let mut n: usize = 0;\n    let mut o: usize = 0;\n    let mut p: usize\
    \ = 0;\n    let mut q: usize = 0;\n    let mut r: usize = 0;\n    let mut s: usize\
    \ = 0;\n    let mut t: usize = 0;\n    let mut u: usize = 0;\n    let mut v: usize\
    \ = 0;\n    let mut w: usize = 0;\n    let mut x: usize = 0;\n    let mut y: usize\
    \ = 0;\n    let mut z: usize = 0;\n    let mut a: usize = 0;\n    let mut b: usize\
    \ = 0;\n    let mut c: usize = 0;\n    let mut d: usize = 0;\n    let mut e: usize\
    \ = 0;\n    let mut f: usize = 0;\n    let mut g: usize = 0;\n    let mut h: usize\
    \ = 0;", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digits:\
    \ Vec<u8> = vec![];\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_",
  "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut nums_len = nums.len();\n\
    \    let mut prime_nums = vec![];\n    let mut prime_nums_len = prime_nums.len();\n\
    \    let mut prime_nums_counter = 0;\n    let mut prime_nums_counter_len = prime_nums_counter.len();\n\
    \    let mut prime_nums_counter_counter = 0;\n    let mut prime_nums_counter_counter_len\
    \ = prime_nums_counter_counter.len();\n    let mut prime_nums_counter_counter_counter\
    \ = 0;\n    let mut prime_nums_counter_counter_counter_len = prime_nums_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter = 0;\n    let mut prime_nums_counter_counter_counter_counter_len\
    \ = prime_nums_counter_counter_counter_counter.len();\n    let mut prime_nums_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_nums_counter_counter_counter_counter_counter_len = prime_nums_counter_counter_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter_counter_counter = 0;\n\
    \    let mut prime_nums_counter_counter_counter_counter_counter_counter_len =\
    \ prime_nums_counter_counter_counter_counter_counter_counter.len();\n    let mut\
    \ prime_nums_counter_counter_counter_counter_counter_counter_counter = 0;\n  \
    \  let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_len\
    \ = prime_nums_counter_counter_counter_counter_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_len\
    \ = prime_nums_counter_counter_counter_counter_counter_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_len\
    \ = prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_len\
    \ = prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_len\
    \ = prime_nums_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter.len();\n\
    \    let mut prime_nums_counter_counter_counter_counter_", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_counter: usize =\
    \ 0;\n    let mut prime_digits_counter2: usize = 0;\n    let mut prime_digits_counter3:\
    \ usize = 0;\n    let mut prime_digits_counter4: usize = 0;\n    let mut prime_digits_counter5:\
    \ usize = 0;\n    let mut prime_digits_counter6: usize = 0;\n    let mut prime_digits_counter7:\
    \ usize = 0;\n    let mut prime_digits_counter8: usize = 0;\n    let mut prime_digits_counter9:\
    \ usize = 0;\n    let mut prime_digits_counter10: usize = 0;\n    let mut prime_digits_counter11:\
    \ usize = 0;\n    let mut prime_digits_counter12: usize = 0;\n    let mut prime_digits_counter13:\
    \ usize = 0;\n    let mut prime_digits_counter14: usize = 0;\n    let mut prime_digits_counter15:\
    \ usize = 0;\n    let mut prime_digits_counter16: usize = 0;\n    let mut prime_digits_counter17:\
    \ usize = 0;\n    let mut prime_digits_counter18: usize = 0;\n    let mut prime_digits_counter19:\
    \ usize = 0;\n    let mut prime_digits_counter20: usize = 0;\n    let mut prime_digits_counter21:\
    \ usize = 0;\n    let mut prime_digits_counter22: usize = 0;\n    let mut prime_digits_counter23:\
    \ usize = 0;\n    let mut prime_digits_counter24: usize = 0;\n    let mut prime_digits_counter25:\
    \ usize = 0;\n    let mut prime_digits_counter26: usize = 0;\n    let mut prime_digits_counter27:\
    \ usize = 0;\n    let mut prime_digits_counter28: usize = 0;\n    let mut prime_digits_counter29:\
    \ usize = 0;\n    let mut prime_digits_counter30: usize = 0;\n    let mut prime_digits_counter31:\
    \ usize = 0;\n    let mut prime_digits_counter32: usize = 0;\n    let mut prime_digits_counter33:\
    \ usize = 0;\n    let mut prime_digits_counter34: usize = 0;\n", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.to_owned();\n    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime:\
    \ Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n\
    \    let mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8>\
    \ = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n    let\
    \ mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n\
    \    let mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8>\
    \ = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n    let\
    \ mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n\
    \    let mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8>\
    \ = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n    let\
    \ mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n\
    \    let mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8>\
    \ = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n    let\
    \ mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n\
    \    let mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8>\
    \ = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n    let\
    \ mut num_prime: Vec<u8> = num.to_owned();\n    let mut num_prime: Vec<u8> = num.to_owned();\n\
    \    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3];\n    let mut num_prime_prime: Vec<u8>\
    \ = vec![5, 7];\n    let mut num_prime_prime_prime: Vec<u8> = vec![11, 13];\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = vec![17, 19];\n    let mut\
    \ num_prime_prime_prime_prime_prime: Vec<u8> = vec![29, 31];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![37, 41];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![49, 53];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![57, 59];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![61, 63];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![67, 71];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![73, 79];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![83, 89];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![87, 91];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![93, 97];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![99, 101];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![103, 107];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: isize = 0;\n    let mut digits: Vec<&str> = num.chars().collect();\n\
    \    let mut prime_digits: Vec<&str> = vec![];\n    let mut prime_digits_len:\
    \ usize = 0;\n    let mut prime_digits_len2: usize = 0;\n    let mut prime_digits_len3:\
    \ usize = 0;\n    let mut prime_digits_len4: usize = 0;\n    let mut prime_digits_len5:\
    \ usize = 0;\n    let mut prime_digits_len6: usize = 0;\n    let mut prime_digits_len7:\
    \ usize = 0;\n    let mut prime_digits_len8: usize = 0;\n    let mut prime_digits_len9:\
    \ usize = 0;\n    let mut prime_digits_len10: usize = 0;\n    let mut prime_digits_len11:\
    \ usize = 0;\n    let mut prime_digits_len12: usize = 0;\n    let mut prime_digits_len13:\
    \ usize = 0;\n    let mut prime_digits_len14: usize = 0;\n    let mut prime_digits_len15:\
    \ usize = 0;\n    let mut prime_digits_len16: usize = 0;\n    let mut prime_digits_len17:\
    \ usize = 0;\n    let mut prime_digits_len18: usize = 0;\n    let mut prime_digits_len19:\
    \ usize = 0;\n    let mut prime_digits_len20: usize = 0;\n    let mut prime_digits_len21:\
    \ usize = 0;\n    let mut prime_digits_len22: usize = 0;\n    let mut prime_digits_len23:\
    \ usize = 0;\n    let mut prime_digits_len24: usize = 0;\n    let mut prime_digits_len25:\
    \ usize = 0;\n    let mut prime_digits_len26: usize = 0;\n    let mut prime_digits_len27:\
    \ usize = 0;\n    let mut prime_digits_len28: usize = 0;\n    let mut prime_digits_len29:\
    \ usize = 0;\n    let mut prime_digits_len30: usize = 0;\n    let mut prime_digits_len31:\
    \ usize = 0;\n    let mut prime_digits_len32: usize = 0;\n    let mut prime_digits_len33:\
    \ usize = 0;\n    let mut prime_digits_len34: u", "    let mut num: Vec<u8> =\
    \ num.to_string().chars().collect();\n    let mut num_digits = num.len();\n  \
    \  let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut num_primes_digits_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime = 0;\n    let mut\
    \ num_primes_digits_prime_prime_prime_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n \
    \   let mut prime: Vec<u8> = vec![2, 3];\n    let mut counter: usize = 0;\n  \
    \  let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize = 0;\n\
    \    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize = 0;\n\
    \    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize = 0;\n\
    \    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize = 0;\n\
    \    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize =\
    \ 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12: usize\
    \ = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter2: Vec<u8> = vec![];\n    let mut num_prime_counter3:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter4: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter5: Vec<u8> = vec![];\n    let mut num_prime_counter6: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter7: Vec<u8> = vec![];\n    let mut num_prime_counter8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter9: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter10: Vec<u8> = vec![];\n    let mut num_prime_counter11:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter12: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter13: Vec<u8> = vec![];\n    let mut num_prime_counter14:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter15: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter16: Vec<u8> = vec![];\n    let mut num_prime_counter17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter18: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter19: Vec<u8> = vec![];\n    let mut num_prime_counter20:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter21: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter22: Vec<u8> = vec![];\n    let mut num_prime_counter23:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter24: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter25: Vec<u8> = vec![];\n    let mut num_prime_counter26:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter27: Vec<u8> = vec", "    let\
    \ mut nums = num.chars().collect::<Vec<_>>();\n    let mut primes = vec![false;\
    \ 26];\n    let mut primes_count = vec![0; 26];\n    let mut primes_count_index\
    \ = vec![0; 26];\n    let mut primes_count_index2 = vec![0; 26];\n    let mut\
    \ primes_count_index3 = vec![0; 26];\n    let mut primes_count_index4 = vec![0;\
    \ 26];\n    let mut primes_count_index5 = vec![0; 26];\n    let mut primes_count_index6\
    \ = vec![0; 26];\n    let mut primes_count_index7 = vec![0; 26];\n    let mut\
    \ primes_count_index8 = vec![0; 26];\n    let mut primes_count_index9 = vec![0;\
    \ 26];\n    let mut primes_count_index10 = vec![0; 26];\n    let mut primes_count_index11\
    \ = vec![0; 26];\n    let mut primes_count_index12 = vec![0; 26];\n    let mut\
    \ primes_count_index13 = vec![0; 26];\n    let mut primes_count_index14 = vec![0;\
    \ 26];\n    let mut primes_count_index15 = vec![0; 26];\n    let mut primes_count_index16\
    \ = vec![0; 26];\n    let mut primes_count_index17 = vec![0; 26];\n    let mut\
    \ primes_count_index18 = vec![0; 26];\n    let mut primes_count_index19 = vec![0;\
    \ 26];\n    let mut primes_count_index20 = vec![0; 26];\n    let mut primes_count_index21\
    \ = vec![0; 26];\n    let mut primes_count_index22 = vec![0; 26];\n    let mut\
    \ primes_count_index23 = vec![0; 26];\n    let mut primes_count_index24 = vec![0;\
    \ 26];\n    let mut primes_count_index25 = vec![0; 26];\n    let mut primes_count_index26\
    \ = vec![0; 26];\n    let mut primes_count_index27 = vec![0; 26];\n    let mut\
    \ primes_count_index28 = vec![0; 26];\n    let mut primes_count_index29 = vec![0;\
    \ 26];\n    let mut primes_count_index30 = vec![0; 26];\n    let mut primes_count_index31\
    \ = vec![0; 26];\n    let mut primes_count_index32 = vec![0; 26];\n    let mut\
    \ prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n   \
    \ let mut num_digits = num.len();\n    let mut prime_digits = vec![];\n    let\
    \ mut prime_digits_counter = 0;\n    let mut prime_digits_counter_max = num.len()\
    \ / 2;\n    let mut prime_digits_counter_min = num.len() / 2;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut prime_digits_counter_min_index = 0;\n    let mut prime_digits_counter_max:\
    \ usize = 0;\n    let mut prime_digits_counter_min: usize = 0;\n    let mut prime_digits_counter_max_index\
    \ = 0;\n    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let\
    \ mut num_primes = 0;\n    let mut num_hex = 0;\n    let mut num_hex_digits =\
    \ 0;\n    let mut num_hex_digits_prime = 0;\n    let mut num_hex_digits_prime_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex = 0;\n    let mut num_hex_digits_prime_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex = 0;\n    let\
    \ mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex =\
    \ 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_hex_digits_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = 0;\n    let mut num_", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut prime_digits = vec![2, 3];\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_counter\
    \ = vec![2, 3];\n    let mut prime_digits_counter_len = prime_digits_counter.len();\n\
    \    let mut prime_digits_counter2 = vec![2, 3];\n    let mut prime_digits_counter2_len\
    \ = prime_digits_counter2.len();\n    let mut prime_digits_counter3 = vec![2,\
    \ 3];\n    let mut prime_digits_counter3_len = prime_digits_counter3.len();\n\
    \    let mut prime_digits_counter4 = vec![2, 3];\n    let mut prime_digits_counter4_len\
    \ = prime_digits_counter4.len();\n    let mut prime_digits_counter5 = vec![2,\
    \ 3];\n    let mut prime_digits_counter5_len = prime_digits_counter5.len();\n\
    \    let mut prime_digits_counter6 = vec![2, 3];\n    let mut prime_digits_counter6_len\
    \ = prime_digits_counter6.len();\n    let mut prime_digits_counter7 = vec![2,\
    \ 3];\n    let mut prime_digits_counter7_len = prime_digits_counter7.len();\n\
    \    let mut prime_digits_counter8 = vec![2, 3];\n    let mut prime_digits_counter8_len\
    \ = prime_digits_counter8.len();\n    let mut prime_digits_counter9 = vec![2,\
    \ 3];\n    let mut prime_digits_counter9_len = prime_digits_counter9.len();\n\
    \    let mut prime_digits_counter10 = vec![2, 3];\n    let mut prime_digits_counter10_len\
    \ = prime_digits_counter10.len();\n    let mut prime_digits_counter11 = vec![2,\
    \ 3];\n    let mut prime_digits_counter11_len = prime_digits_counter11.len();\n\
    \    let mut prime_digits_counter12 = vec![2, 3];\n    let mut prime_digits_counter12_len\
    \ = prime_digits_counter12.len();\n    let mut prime_digits_counter13 = vec![2,\
    \ 3];\n    let mut prime_digits_counter13_len = prime_digits_counter13.len();\n\
    \    let mut prime_digits_counter14 = vec![2, 3];", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut count = 1;\n    let mut prime:\
    \ isize = 2;\n    let mut prime_found = false;\n    let mut prime_found2 = false;\n\
    \    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n    let\
    \ mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let mut prime_found7\
    \ = false;\n    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n\
    \    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let\
    \ mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut\
    \ prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut prime_found16\
    \ = false;\n    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n\
    \    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let\
    \ mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut\
    \ prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut prime_found25\
    \ = false;\n    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n\
    \    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let\
    \ mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut\
    \ prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut prime_found34\
    \ = false;\n    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n\
    \    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let\
    \ mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut\
    \ prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut prime_found43\
    \ = false;\n    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n\
    \    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let\
    \ mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut\
    \ prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut prime_found52\
    \ = false;\n    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n \
    \   let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime_count = 0;\n    let mut prime_number:\
    \ Vec<u8> = vec![];\n    let mut prime_number_count: usize = 0;\n    let mut prime_number_digit:\
    \ usize = 0;\n    let mut prime_number_digits: Vec<u8> = vec![];\n    let mut\
    \ prime_number_digits_count: usize = 0;\n    let mut prime_number_digits_digit:\
    \ usize = 0;\n    let mut prime_number_digits_digits: Vec<u8> = vec![];\n    let\
    \ mut prime_number_digits_digits_count: usize = 0;\n    let mut prime_number_digits_digits_digit:\
    \ usize = 0;\n    let mut prime_number_digits_digits_digits: Vec<u8> = vec![];\n\
    \    let mut prime_number_digits_digits_digits_count: usize = 0;\n    let mut\
    \ prime_number_digits_digits_digits_digit: usize = 0;\n    let mut prime_number_digits_digits_digits_digits:\
    \ Vec<u8> = vec![];\n    let mut prime_number_digits_digits_digits_digits_count:\
    \ usize = 0;\n    let mut prime_number_digits_digits_digits_digits_digit: usize\
    \ = 0;\n    let mut prime_number_digits_digits_digits_digits: Vec<u8> = vec![];\n\
    \    let mut prime_number_digits_digits_digits_digits_count: usize = 0;\n    let\
    \ mut prime_number_digits_digits_digits_digits_digit: usize = 0;\n    let mut\
    \ prime_number_digits_digits_digits_digits_digits: Vec<u8> = vec![];\n    let\
    \ mut prime_number_digits_digits_digits_digits_digits_count: usize = 0;\n    let\
    \ mut prime_number_digits_digits_digits_digits_digits_digit: usize = 0;\n    let\
    \ mut prime_number_digits_digits_digits_digits_digits: Vec<u8> = vec![];\n   \
    \ let mut prime_number_digits_digits_digits_digits_digits_count: usize = 0;\n\
    \    let mut prime_number_digits_digits_digits_digits_digits_digit: usize = 0;\n\
    \    let mut prime_number_digits_digits_digits_digits_digits_digits: Vec<u8> =\
    \ vec![];\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 2 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 3 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 7 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 11 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 13\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 17 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 19 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 23 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 29 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 31 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 37 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 41 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 43 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 47 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 53 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 59 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 61 == 0).collect();\n    let mut ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut count: usize = 0;\n    let mut i: usize = 0;\n\
    \    while i < num.len() {\n        if num[i] == num[num.len() - 1] {\n      \
    \      i += 1;\n        } else {\n            prime = prime.iter().filter(|&x|\
    \ num[i] == x).collect();\n            i += 1;\n        }\n    }\n    for i in\
    \ prime {\n        if num.len() - 1 < i {\n            count += 1;\n        }\n\
    \    }\n    count", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter2: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter3: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter4: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_counter5: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter6: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n \
    \   let mut prime_counter7: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_counter8: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter9:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter10: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter11: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter12: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter13: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter14: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter15: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_counter16: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_counter17: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter18:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter19: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter20: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter21: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter22: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter23: Vec<u8> = ", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime_count: isize = 0;\n\
    \    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count: usize = 0;\n\
    \    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_value: u8\
    \ = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n\
    \    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_number: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_number_index\
    \ = 0;\n    let mut prime_number_length = prime_number.len();\n    let mut prime_number_counter\
    \ = 0;\n    let mut prime_number_counter_index = 0;\n    let mut prime_number_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter = 0;\n    let\
    \ mut prime_number_counter_counter_index = 0;\n    let mut prime_number_counter_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter_counter = 0;\n\
    \    let mut prime_number_counter_counter_counter_index = 0;\n    let mut prime_number_counter_counter_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_index = 0;\n\
    \    let mut prime_number_counter_counter_counter_counter_length = prime_number.len();\n\
    \    let mut prime_number_counter_counter_counter_counter_counter = 0;\n    let\
    \ mut prime_number_counter_counter_counter_counter_counter_index = 0;\n    let\
    \ mut prime_number_counter_counter_counter_counter_counter_length = prime_number.len();\n\
    \    let mut prime_number_counter_counter_counter_counter_counter_counter = 0;\n\
    \    let mut prime_number_counter_counter_counter_counter_counter_counter_index\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_index\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_index\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_counter_index\
    \ = 0;\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_length\
    \ = prime_number.len();\n    let mut prime_number_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n \
    \   let mut count = 1;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut ", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found =\
    \ false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_flag: u8 = 0;\n\
    \    let mut prime_flag2: u8 = 0;\n    let mut prime_flag3: u8 = 0;\n    let mut\
    \ prime_flag4: u8 = 0;\n    let mut prime_flag5: u8 = 0;\n    let mut prime_flag6:\
    \ u8 = 0;\n    let mut prime_flag7: u8 = 0;\n    let mut prime_flag8: u8 = 0;\n\
    \    let mut prime_flag9: u8 = 0;\n    let mut prime_flag10: u8 = 0;\n    let\
    \ mut prime_flag11: u8 = 0;\n    let mut prime_flag12: u8 = 0;\n    let mut prime_flag13:\
    \ u8 = 0;\n    let mut prime_flag14: u8 = 0;\n    let mut prime_flag15: u8 = 0;\n\
    \    let mut prime_flag16: u8 = 0;\n    let mut prime_flag17: u8 = 0;\n    let\
    \ mut prime_flag18: u8 = 0;\n    let mut prime_flag19: u8 = 0;\n    let mut prime_flag20:\
    \ u8 = 0;\n    let mut prime_flag21: u8 = 0;\n    let mut prime_flag22: u8 = 0;\n\
    \    let mut prime_flag23: u8 = 0;\n    let mut prime_flag24: u8 = 0;\n    let\
    \ mut prime_flag25: u8 = 0;\n    let mut prime_flag26: u8 = 0;\n    let mut prime_flag27:\
    \ u8 = 0;\n    let mut prime_flag28: u8 = 0;\n    let mut prime_flag29: u8 = 0;\n\
    \    let mut prime_flag30: u8 = 0;\n    let mut prime_flag31: u8 = 0;\n    let\
    \ mut prime_flag32: u8 = 0;\n    let mut prime_flag33: u8 = 0;\n    let mut prime_flag34:\
    \ u8 = 0;\n    let mut prime_flag35: u8 = 0;\n    let mut prime_flag36: u8 = 0;\n\
    \    let mut prime_flag37: u8 = 0;\n    let mut prime_flag38: u8 = 0;\n    let\
    \ mut prime_flag39: u8 = 0;\n    let mut prime_flag40: u8 = 0;\n    let mut prime_flag41:\
    \ u8 = 0;\n    let mut prime_flag42: u8 = 0;\n    let mut prime_flag43: u8 = 0;\n\
    \    let mut prime_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut counter:\
    \ usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter: usize\
    \ = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3: usize\
    \ = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5: usize\
    \ = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7: usize\
    \ = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9: usize\
    \ = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: isize\
    \ = 0;\n    let mut num_digits = num.len();\n    let mut num_primes = 0;\n   \
    \ let mut num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_prime", "  \
    \  let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut prime_digits = vec![];\n    let\
    \ mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n    let mut prime_digits_len\
    \ = prime_digits_len as usize;\n    let mut prime_digits_len = prime_digits_len\
    \ as usize;\n    let mut prime_digits_len = prime_digits_len as usize;\n    let\
    \ mut prime_digits_len = prime_digits_len as usize;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: isize = 0;\n   \
    \ let mut prime_digit: usize = 0;\n    let mut prime_digit_count: usize = 0;\n\
    \    let mut prime_digit_count_max: usize = 10;\n    let mut prime_digit_count_min:\
    \ usize = 2;\n    let mut prime_digit_count_max_prime: usize = 10;\n    let mut\
    \ prime_digit_count_min_prime: usize = 2;\n    let mut prime_digit_count_max_prime_prime:\
    \ usize = 10;\n    let mut prime_digit_count_min_prime_prime: usize = 2;\n   \
    \ let mut prime_digit_count_max_prime_prime_prime: usize = 10;\n    let mut prime_digit_count_min_prime_prime_prime:\
    \ usize = 2;\n    let mut prime_digit_count_max_prime_prime_prime_prime: usize\
    \ = 10;\n    let mut prime_digit_count_min_prime_prime_prime_prime: usize = 2;\n\
    \    let mut prime_digit_count_max_prime_prime_prime_prime_prime: usize = 10;\n\
    \    let mut prime_digit_count_min_prime_prime_prime_prime_prime: usize = 2;\n\
    \    let mut prime_digit_count_max_prime_prime_prime_prime_prime_prime: usize\
    \ = 10;\n    let mut prime_digit_count_min_prime_prime_prime_prime_prime_prime:\
    \ usize = 2;\n    let mut prime_digit_count_max_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 10;\n    let mut prime_digit_count_min_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 2;\n    let mut prime_digit_count_max_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 10;\n    let mut prime_digit_count_min_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 2;\n    let mut prime_digit_count_max_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 10;\n    let mut prime_digit_count_min_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 2;\n    let mut prime_digit_count_max_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ usize = 10;\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_len = num.len();\n    let mut num_prime: isize = 0;\n    let\
    \ mut num_prime_len = num_len;\n    let mut num_prime_prime: isize = 0;\n    let\
    \ mut num_prime_prime_len = num_len;\n    let mut num_prime_prime_prime: isize\
    \ = 0;\n    let mut num_prime_prime_prime_len = num_len;\n    let mut num_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut num_prime_prime_prime_prime_len = num_len;\n    let\
    \ mut num_prime_prime_prime_prime_prime: isize = 0;\n    let mut num_prime_prime_prime_prime_prime_len\
    \ = num_len;\n    let mut num_prime_prime_prime_prime_prime_prime: isize = 0;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_len = num_len;\n    let mut\
    \ num_prime_prime_prime_prime_prime_prime_prime: isize = 0;\n    let mut num_prime_prime_prime_prime_prime_prime_prime_len\
    \ = num_len;\n    let mut num_prime_prime_prime_prime_prime_prime_prime_len =\
    \ num_len;\n    let mut num_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_len = num_len;\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_len\
    \ = num_len;\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_len\
    \ = num_len;\n    let mut num_prime_prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut\
    \ num_prime_2: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23];\n    let mut num_prime_3:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31];\n    let mut num_prime_5:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 43];\n    let mut\
    \ num_prime_7: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 43,\
    \ 49];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 43, 49, 57];\n    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 43, 49, 57, 61];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 43, 49, 57, 61, 67];\n\
    \    let mut num_prime_11: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 43, 49, 57, 61, 67, 71];\n    let mut num_prime_12: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 43, 49, 57, 61, 67, 71, 73];\n    let\
    \ mut num_prime_13: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 43, 49, 57, 61, 67, 71, 73, 79];\n    let mut num_prime_14: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 43, 49, 57, 61, 67, 71, 73, 79, 83];\n\
    \    let mut num_prime_15: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 43, 49, 57, 61, 67, 71, 73, 79, 83, 89];\n    let mu", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ u8 = 0;\n    let mut prime_digit_index: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_set\
    \ = prime_digits.iter().cloned().collect::<HashSet<usize>>();\n    let mut prime_digits_count\
    \ = prime_digits.len();\n    let mut prime_digits_index = 0;\n    let mut prime_digits_index2\
    \ = 0;\n    let mut prime_digits_index3 = 0;\n    let mut prime_digits_index4\
    \ = 0;\n    let mut prime_digits_index5 = 0;\n    let mut prime_digits_index6\
    \ = 0;\n    let mut prime_digits_index7 = 0;\n    let mut prime_digits_index8\
    \ = 0;\n    let mut prime_digits_index9 = 0;\n    let mut prime_digits_index10\
    \ = 0;\n    let mut prime_digits_index11 = 0;\n    let mut prime_digits_index12\
    \ = 0;\n    let mut prime_digits_index13 = 0;\n    let mut prime_digits_index14\
    \ = 0;\n    let mut prime_digits_index15 = 0;\n    let mut prime_digits_index16\
    \ = 0;\n    let mut prime_digits_index17 = 0;\n    let mut prime_digits_index18\
    \ = 0;\n    let mut prime_digits_index19 = 0;\n    let mut prime_digits_index20\
    \ = 0;\n    let mut prime_digits_index21 = 0;\n    let mut prime_digits_index22\
    \ = 0;\n    let mut prime_digits_index23 = 0;\n    let mut prime_digits_index24\
    \ = 0;\n    let mut prime_digits_index25 = 0;\n    let mut prime_digits_index26\
    \ = 0;\n    let mut prime_digits_index27 = 0;\n    let mut prime_digits_index28\
    \ = 0;\n    let mut prime_digits_index29 = 0;\n    let mut prime_digits_index30\
    \ = 0;\n    let mut prime_digits_index31 = 0;\n    let mut prime_digits_index32\
    \ = 0;\n    let mut prime_digits_index33 = 0;\n    let mut prime_digits_index34\
    \ = 0;\n    let mut prime_digits_index35 = 0;\n    let mut prime_digits_index36\
    \ = 0;\n    let mut prime_digits_index37 = 0;\n    let mut prime_digits_index",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_sum = 0;\n    let mut num_prime_product = 1;\n    let mut\
    \ num_prime_product2 = 1;\n    let mut num_prime_product3 = 1;\n    let mut num_prime_product4\
    \ = 0;\n    let mut num_prime_product5 = 1;\n    let mut num_prime_product6 =\
    \ 1;\n    let mut num_prime_product7 = 1;\n    let mut num_prime_product8 = 1;\n\
    \    let mut num_prime_product9 = 1;\n    let mut num_prime_product10 = 1;\n \
    \   let mut num_prime_product11 = 1;\n    let mut num_prime_product12 = 1;\n \
    \   let mut num_prime_product13 = 1;\n    let mut num_prime_product14 = 1;\n \
    \   let mut num_prime_product15 = 1;\n    let mut num_prime_product16 = 1;\n \
    \   let mut num_prime_product17 = 1;\n    let mut num_prime_product18 = 1;\n \
    \   let mut num_prime_product19 = 1;\n    let mut num_prime_product20 = 1;\n \
    \   let mut num_prime_product21 = 1;\n    let mut num_prime_product22 = 1;\n \
    \   let mut num_prime_product23 = 1;\n    let mut num_prime_product24 = 1;\n \
    \   let mut num_prime_product25 = 1;\n    let mut num_prime_product26 = 1;\n \
    \   let mut num_prime_product27 = 1;\n    let mut num_prime_product28 = 1;\n \
    \   let mut num_prime_product29 = 1;\n    let mut num_prime_product30 = 1;\n \
    \   let mut num_prime_product31 = 1;\n    let mut num_prime_product32 = 1;\n \
    \   let mut num_prime_product33 = 1;\n    let mut num_prime_product34 = 1;\n \
    \   let mut num_prime_product35 = 1;\n    let mut num_prime_product36 = 1;\n \
    \   let mut num_prime_product37 = 1;\n    let mut num_prime_product38 = 1;\n \
    \   let mut num_prime_product39 = 1;\n    let mut num_prime_product40 = 1;\n \
    \   let mut num_prime_product41 = 1;\n    let mut num_prime_product42 = 1;\n \
    \   let mut num_prime_product", "    let mut nums = num.to_string().chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![true; 26];\n    let mut primes_counter = 0;\n    let\
    \ mut primes_counter2 = 0;\n    let mut primes_counter3 = 0;\n    let mut primes_counter4\
    \ = 0;\n    let mut primes_counter5 = 0;\n    let mut primes_counter6 = 0;\n \
    \   let mut primes_counter7 = 0;\n    let mut primes_counter8 = 0;\n    let mut\
    \ primes_counter9 = 0;\n    let mut primes_counter10 = 0;\n    let mut primes_counter11\
    \ = 0;\n    let mut primes_counter12 = 0;\n    let mut primes_counter13 = 0;\n\
    \    let mut primes_counter14 = 0;\n    let mut primes_counter15 = 0;\n    let\
    \ mut primes_counter16 = 0;\n    let mut primes_counter17 = 0;\n    let mut primes_counter18\
    \ = 0;\n    let mut primes_counter19 = 0;\n    let mut primes_counter20 = 0;\n\
    \    let mut primes_counter21 = 0;\n    let mut primes_counter22 = 0;\n    let\
    \ mut primes_counter23 = 0;\n    let mut primes_counter24 = 0;\n    let mut primes_counter25\
    \ = 0;\n    let mut primes_counter26 = 0;\n    let mut primes_counter27 = 0;\n\
    \    let mut primes_counter28 = 0;\n    let mut primes_counter29 = 0;\n    let\
    \ mut primes_counter30 = 0;\n    let mut primes_counter31 = 0;\n    let mut primes_counter32\
    \ = 0;\n    let mut primes_counter33 = 0;\n    let mut primes_counter34 = 0;\n\
    \    let mut primes_counter35 = 0;\n    let mut primes_counter36 = 0;\n    let\
    \ mut primes_counter37 = 0;\n    let mut primes_counter38 = 0;\n    let mut primes_counter39\
    \ = 0;\n    let mut primes_counter40 = 0;\n    let mut primes_counter41 = 0;\n\
    \    let mut primes_counter42 = 0;\n    let mut primes_counter43 = 0;\n    let\
    \ mut primes_counter44 = 0;\n    let mut primes_counter45 = 0;\n    let mut primes_counter46\
    \ = 0;\n    let mut primes_counter47 = 0;\n    let mut primes_counter48 = 0;\n\
    \    let mut primes_counter49 = 0;\n    let mut primes_counter50 = 0;\n    let\
    \ mut primes_counter51 = 0;\n    let mut primes_counter52 = 0;\n    let mut primes_counter53\
    \ = 0;\n    let mut primes_counter54 = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mu", "    let mut num: isize = 0;\n    let mut\
    \ digits: Vec<isize> = num.to_digits().collect();\n    let mut primes: Vec<isize>\
    \ = vec![2, 3];\n    let mut primes_count: isize = 0;\n    let mut primes_count_max:\
    \ isize = 3;\n    let mut primes_count_min: isize = 2;\n    let mut primes_count_step:\
    \ isize = 2;\n    let mut primes_count_max2: isize = 3;\n    let mut primes_count_min2:\
    \ isize = 2;\n    let mut primes_count_step2: isize = 2;\n    let mut primes_count_max3:\
    \ isize = 3;\n    let mut primes_count_min3: isize = 2;\n    let mut primes_count_step3:\
    \ isize = 2;\n    let mut primes_count_max4: isize = 3;\n    let mut primes_count_min4:\
    \ isize = 2;\n    let mut primes_count_step4: isize = 2;\n    let mut primes_count_max5:\
    \ isize = 3;\n    let mut primes_count_min5: isize = 2;\n    let mut primes_count_step5:\
    \ isize = 2;\n    let mut primes_count_max6: isize = 3;\n    let mut primes_count_min6:\
    \ isize = 2;\n    let mut primes_count_step6: isize = 2;\n    let mut primes_count_max7:\
    \ isize = 3;\n    let mut primes_count_min7: isize = 2;\n    let mut primes_count_step7:\
    \ isize = 2;\n    let mut primes_count_max8: isize = 3;\n    let mut primes_count_min8:\
    \ isize = 2;\n    let mut primes_count_step8: isize = 2;\n    let mut primes_count_max9:\
    \ isize = 3;\n    let mut primes_count_min9: isize = 2;\n    let mut primes_count_step9:\
    \ isize = 2;\n    let mut primes_count_max10: isize = 3;\n    let mut primes_count_min10:\
    \ isize = 2;\n    let mut primes_count_step10: isize = 2;\n    let mut primes_count_max11:\
    \ isize = 3;\n    let mut primes_count_min11: isize = 2;\n    let mut primes_count_step11:\
    \ isize = 2;\n    let mut primes_count_max12: isize = 3;\n    let mut primes_count_min12:\
    \ isize = 2;\n    let mut primes_count_step12: isize = 2;\n    let mut primes_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_counter40:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize\
    \ = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut primes_count = primes.len();\n\
    \    let mut primes_count_2 = primes_count / 2;\n    let mut primes_count_3 =\
    \ primes_count / 3;\n    let mut primes_count_4 = primes_count / 4;\n    let mut\
    \ primes_count_5 = primes_count / 5;\n    let mut primes_count_6 = primes_count\
    \ / 6;\n    let mut primes_count_7 = primes_count / 7;\n    let mut primes_count_8\
    \ = primes_count / 8;\n    let mut primes_count_9 = primes_count / 9;\n    let\
    \ mut primes_count_10 = primes_count / 10;\n    let mut primes_count_11 = primes_count\
    \ / 11;\n    let mut primes_count_12 = primes_count / 12;\n    let mut primes_count_13\
    \ = primes_count / 13;\n    let mut primes_count_14 = primes_count / 14;\n   \
    \ let mut primes_count_15 = primes_count / 15;\n    let mut primes_count_16 =\
    \ primes_count / 16;\n    let mut primes_count_17 = primes_count / 17;\n    let\
    \ mut primes_count_18 = primes_count / 18;\n    let mut primes_count_19 = primes_count\
    \ / 19;\n    let mut primes_count_20 = primes_count / 20;\n    let mut primes_count_21\
    \ = primes_count / 21;\n    let mut primes_count_22 = primes_count / 22;\n   \
    \ let mut primes_count_23 = primes_count / 23;\n    let mut primes_count_24 =\
    \ primes_count / 24;\n    let mut primes_count_25 = primes_count / 25;\n    let\
    \ mut primes_count_26 = primes_count / 26;\n    let mut primes_count_27 = primes_count\
    \ / 27;\n    let mut primes_count_28 = primes_count / 28;\n    let mut primes_count_29\
    \ = primes_count / 29;\n    let mut primes_count_30 = primes_count / 30;\n   \
    \ let mut primes_count_31 = primes_count / 31;\n    let mut primes_count_32 =\
    \ primes_count / 32;\n    let mut primes_count_33", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n", "    let mut num: isize = 0;\n    let mut digit: isize = 0;\n\
    \    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut prime_found53 = false;\n", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime_prime_prime: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime", "    let\
    \ mut nums = num.to_string().chars().collect::<Vec<_>>();\n    let mut nums_iter\
    \ = nums.iter();\n    let mut num_digits = nums.len();\n    let mut num_primes\
    \ = 0;\n    let mut num_primes_iter = 0;\n    let mut num_primes_iter_prime =\
    \ 0;\n    let mut num_primes_iter_prime_prime = 0;\n    let mut num_primes_iter_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime = 0;\n    let mut\
    \ num_primes_iter_prime_prime_prime_prime_prime = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_iter_prime_prime_prime_prime_prime_prime_prime_prime_",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_digits\
    \ = num.len();\n    let mut prime_digits = false;\n    let mut prime_count = 0;\n\
    \    let mut prime_digit = -1;\n    let mut prime_digit_count = 0;\n    let mut\
    \ prime_digit_index = 0;\n    let mut prime_digit_index2 = 0;\n    let mut prime_digit_index3\
    \ = 0;\n    let mut prime_digit_index4 = 0;\n    let mut prime_digit_index5 =\
    \ 0;\n    let mut prime_digit_index6 = 0;\n    let mut prime_digit_index7 = 0;\n\
    \    let mut prime_digit_index8 = 0;\n    let mut prime_digit_index9 = 0;\n  \
    \  let mut prime_digit_index10 = 0;\n    let mut prime_digit_index11 = 0;\n  \
    \  let mut prime_digit_index12 = 0;\n    let mut prime_digit_index13 = 0;\n  \
    \  let mut prime_digit_index14 = 0;\n    let mut prime_digit_index15 = 0;\n  \
    \  let mut prime_digit_index16 = 0;\n    let mut prime_digit_index17 = 0;\n  \
    \  let mut prime_digit_index18 = 0;\n    let mut prime_digit_index19 = 0;\n  \
    \  let mut prime_digit_index20 = 0;\n    let mut prime_digit_index21 = 0;\n  \
    \  let mut prime_digit_index22 = 0;\n    let mut prime_digit_index23 = 0;\n  \
    \  let mut prime_digit_index24 = 0;\n    let mut prime_digit_index25 = 0;\n  \
    \  let mut prime_digit_index26 = 0;\n    let mut prime_digit_index27 = 0;\n  \
    \  let mut prime_digit_index28 = 0;\n    let mut prime_digit_index29 = 0;\n  \
    \  let mut prime_digit_index30 = 0;\n    let mut prime_digit_index31 = 0;\n  \
    \  let mut prime_digit_index32 = 0;\n    let mut prime_digit_index33 = 0;\n  \
    \  let mut prime_digit_index34 = 0;\n    let mut prime_digit_index35 = 0;\n  \
    \  let mut prime_digit_index36 = 0;\n    let mut prime_digit_index37 = 0;\n  \
    \  let mut prime_digit_index38 = 0;\n    let mut prime_digit_index39 = 0;\n  \
    \  let mut prime_digit_index40 = 0;\n    let mut prime_digit_index41 = 0;\n  \
    \  let mut prime_digit_index42 = 0;\n    let mut prime_digit_index43 = 0;\n  \
    \  let mut prime_digit_index44 = 0;\n    let mut prime_digit_index45 = 0;\n  \
    \  let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_sum = 0;\n    let mut prime_digits_product\
    \ = 1;\n    let mut prime_digits_product2 = 0;\n    let mut prime_digits_product3\
    \ = 0;\n    let mut prime_digits_product4 = 0;\n    let mut prime_digits_product5\
    \ = 0;\n    let mut prime_digits_product6 = 0;\n    let mut prime_digits_product7\
    \ = 0;\n    let mut prime_digits_product8 = 0;\n    let mut prime_digits_product9\
    \ = 0;\n    let mut prime_digits_product10 = 0;\n    let mut prime_digits_product11\
    \ = 0;\n    let mut prime_digits_product12 = 0;\n    let mut prime_digits_product13\
    \ = 0;\n    let mut prime_digits_product14 = 0;\n    let mut prime_digits_product15\
    \ = 0;\n    let mut prime_digits_product16 = 0;\n    let mut prime_digits_product17\
    \ = 0;\n    let mut prime_digits_product18 = 0;\n    let mut prime_digits_product19\
    \ = 0;\n    let mut prime_digits_product20 = 0;\n    let mut prime_digits_product21\
    \ = 0;\n    let mut prime_digits_product22 = 0;\n    let mut prime_digits_product23\
    \ = 0;\n    let mut prime_digits_product24 = 0;\n    let mut prime_digits_product25\
    \ = 0;\n    let mut prime_digits_product26 = 0;\n    let mut prime_digits_product27\
    \ = 0;\n    let mut prime_digits_product28 = 0;\n    let mut prime_digits_product29\
    \ = 0;\n    let mut prime_digits_product30 = 0;\n    let mut prime_digits_product31\
    \ = 0;\n    let mut prime_digits_product32 = 0;\n    let mut prime_digits_product33\
    \ = 0;\n    let mut prime_digits_product34 = 0;\n    let mut prime_digits_product35\
    \ = 0;\n    let mut prime_digits_product36 = 0;\n    let mut prime_digits_product37\
    \ = 0;\n    let mut prime_digits_product38 = 0;\n    let mut prime_digits_product39",
  "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut primes = vec![true;\
    \ 16];\n    let mut primes_counter = 0;\n    let mut primes_counter2 = 0;\n  \
    \  let mut primes_counter3 = 0;\n    let mut primes_counter4 = 0;\n    let mut\
    \ primes_counter5 = 0;\n    let mut primes_counter6 = 0;\n    let mut primes_counter7\
    \ = 0;\n    let mut primes_counter8 = 0;\n    let mut primes_counter9 = 0;\n \
    \   let mut primes_counter10 = 0;\n    let mut primes_counter11 = 0;\n    let\
    \ mut primes_counter12 = 0;\n    let mut primes_counter13 = 0;\n    let mut primes_counter14\
    \ = 0;\n    let mut primes_counter15 = 0;\n    let mut primes_counter16 = 0;\n\
    \    let mut primes_counter17 = 0;\n    let mut primes_counter18 = 0;\n    let\
    \ mut primes_counter19 = 0;\n    let mut primes_counter20 = 0;\n    let mut primes_counter21\
    \ = 0;\n    let mut primes_counter22 = 0;\n    let mut primes_counter23 = 0;\n\
    \    let mut primes_counter24 = 0;\n    let mut primes_counter25 = 0;\n    let\
    \ mut primes_counter26 = 0;\n    let mut primes_counter27 = 0;\n    let mut primes_counter28\
    \ = 0;\n    let mut primes_counter29 = 0;\n    let mut primes_counter30 = 0;\n\
    \    let mut primes_counter31 = 0;\n    let mut primes_counter32 = 0;\n    let\
    \ mut primes_counter33 = 0;\n    let mut primes_counter34 = 0;\n    let mut primes_counter35\
    \ = 0;\n    let mut primes_counter36 = 0;\n    let mut primes_counter37 = 0;\n\
    \    let mut primes_counter38 = 0;\n    let mut primes_counter39 = 0;\n    let\
    \ mut primes_counter40 = 0;\n    let mut primes_counter41 = 0;\n    let mut primes_counter42\
    \ = 0;\n    let mut primes_counter43 = 0;\n    let mut primes_counter44 = 0;\n\
    \    let mut primes_counter45 = 0;\n    let mut primes_counter46 = 0;\n    let\
    \ mut primes_counter47 = 0;\n    let mut primes_counter48 = 0;\n    let mut primes_counter49\
    \ = 0;\n    let mut primes_counter50 = 0;\n    let mut primes_counter51 = 0;\n\
    \    let mut primes_counter52 = 0;\n    let mut primes_counter53 = 0;\n    let\
    \ mut primes_counter54 = 0;\n    let mu", "    let mut num: isize = 0;\n    let\
    \ mut num_digits = num.len();\n    let mut num_digits_div2 = 0;\n    let mut num_digits_div3\
    \ = 0;\n    let mut num_digits_div4 = 0;\n    let mut num_digits_div5 = 0;\n \
    \   let mut num_digits_div6 = 0;\n    let mut num_digits_div7 = 0;\n    let mut\
    \ num_digits_div8 = 0;\n    let mut num_digits_div9 = 0;\n    let mut num_digits_div10\
    \ = 0;\n    let mut num_digits_div11 = 0;\n    let mut num_digits_div12 = 0;\n\
    \    let mut num_digits_div13 = 0;\n    let mut num_digits_div14 = 0;\n    let\
    \ mut num_digits_div15 = 0;\n    let mut num_digits_div16 = 0;\n    let mut num_digits_div17\
    \ = 0;\n    let mut num_digits_div18 = 0;\n    let mut num_digits_div19 = 0;\n\
    \    let mut num_digits_div20 = 0;\n    let mut num_digits_div21 = 0;\n    let\
    \ mut num_digits_div22 = 0;\n    let mut num_digits_div23 = 0;\n    let mut num_digits_div24\
    \ = 0;\n    let mut num_digits_div25 = 0;\n    let mut num_digits_div26 = 0;\n\
    \    let mut num_digits_div27 = 0;\n    let mut num_digits_div28 = 0;\n    let\
    \ mut num_digits_div29 = 0;\n    let mut num_digits_div30 = 0;\n    let mut num_digits_div31\
    \ = 0;\n    let mut num_digits_div32 = 0;\n    let mut num_digits_div33 = 0;\n\
    \    let mut num_digits_div34 = 0;\n    let mut num_digits_div35 = 0;\n    let\
    \ mut num_digits_div36 = 0;\n    let mut num_digits_div37 = 0;\n    let mut num_digits_div38\
    \ = 0;\n    let mut num_digits_div39 = 0;\n    let mut num_digits_div40 = 0;\n\
    \    let mut num_digits_div41 = 0;\n    let mut num_digits_div42 = 0;\n    let\
    \ mut num_digits_div43 = 0;\n    let mut num_digits_div44 = 0;\n    let mut num_digits_div45\
    \ = 0;\n    let mut num_digits_div46 = 0;\n    let mut num_digits_div47 = 0;\n\
    \    let mut num_digits_div48 = 0;\n    let mut num_digits_div49 = 0;\n    let\
    \ mut num_digits_div50 = 0;\n    let mut num_digits_", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![false; 26];\n    let mut primes_counter = vec![0; 26];\n\
    \    let mut primes_counter2 = vec![0; 26];\n    let mut primes_counter3 = vec![0;\
    \ 26];\n    let mut primes_counter4 = vec![0; 26];\n    let mut primes_counter5\
    \ = vec![0; 26];\n    let mut primes_counter6 = vec![0; 26];\n    let mut primes_counter7\
    \ = vec![0; 26];\n    let mut primes_counter8 = vec![0; 26];\n    let mut primes_counter9\
    \ = vec![0; 26];\n    let mut primes_counter10 = vec![0; 26];\n    let mut primes_counter11\
    \ = vec![0; 26];\n    let mut primes_counter12 = vec![0; 26];\n    let mut primes_counter13\
    \ = vec![0; 26];\n    let mut primes_counter14 = vec![0; 26];\n    let mut primes_counter15\
    \ = vec![0; 26];\n    let mut primes_counter16 = vec![0; 26];\n    let mut primes_counter17\
    \ = vec![0; 26];\n    let mut primes_counter18 = vec![0; 26];\n    let mut primes_counter19\
    \ = vec![0; 26];\n    let mut primes_counter20 = vec![0; 26];\n    let mut primes_counter21\
    \ = vec![0; 26];\n    let mut primes_counter22 = vec![0; 26];\n    let mut primes_counter23\
    \ = vec![0; 26];\n    let mut primes_counter24 = vec![0; 26];\n    let mut primes_counter25\
    \ = vec![0; 26];\n    let mut primes_counter26 = vec![0; 26];\n    let mut primes_counter27\
    \ = vec![0; 26];\n    let mut primes_counter28 = vec![0; 26];\n    let mut primes_counter29\
    \ = vec![0; 26];\n    let mut primes_counter30 = vec![0; 26];\n    let mut primes_counter31\
    \ = vec![0; 26];\n    let mut primes_counter32 = vec![0; 26];\n    let mut primes_counter33\
    \ = vec![0; 26];\n    let mut primes_counter34 = vec![0; 26];\n    let mut primes_counter35\
    \ = vec![0; 26];\n    let mut primes_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut\
    \ num_prime_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut count:\
    \ usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;\n    let ", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.iter", "  \
    \  let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0];\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let\
    \ mut prime_digit_count: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_digit_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_prime = 0;\n    let mut num_primes_digits_prime_prime = 0;\n\
    \    let mut num_primes_digits_prime_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime = 0;\n   \
    \ let mut num_primes_digits_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n\
    \    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
  "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut num_primes = 0;\n\
    \    let mut num_primes_found = 0;\n    let mut num_primes_found2 = 0;\n    let\
    \ mut num_primes_found3 = 0;\n    let mut num_primes_found4 = 0;\n    let mut\
    \ num_primes_found5 = 0;\n    let mut num_primes_found6 = 0;\n    let mut num_primes_found7\
    \ = 0;\n    let mut num_primes_found8 = 0;\n    let mut num_primes_found9 = 0;\n\
    \    let mut num_primes_found10 = 0;\n    let mut num_primes_found11 = 0;\n  \
    \  let mut num_primes_found12 = 0;\n    let mut num_primes_found13 = 0;\n    let\
    \ mut num_primes_found14 = 0;\n    let mut num_primes_found15 = 0;\n    let mut\
    \ num_primes_found16 = 0;\n    let mut num_primes_found17 = 0;\n    let mut num_primes_found18\
    \ = 0;\n    let mut num_primes_found19 = 0;\n    let mut num_primes_found20 =\
    \ 0;\n    let mut num_primes_found21 = 0;\n    let mut num_primes_found22 = 0;\n\
    \    let mut num_primes_found23 = 0;\n    let mut num_primes_found24 = 0;\n  \
    \  let mut num_primes_found25 = 0;\n    let mut num_primes_found26 = 0;\n    let\
    \ mut num_primes_found27 = 0;\n    let mut num_primes_found28 = 0;\n    let mut\
    \ num_primes_found29 = 0;\n    let mut num_primes_found30 = 0;\n    let mut num_primes_found31\
    \ = 0;\n    let mut num_primes_found32 = 0;\n    let mut num_primes_found33 =\
    \ 0;\n    let mut num_primes_found34 = 0;\n    let mut num_primes_found35 = 0;\n\
    \    let mut num_primes_found36 = 0;\n    let mut num_primes_found37 = 0;\n  \
    \  let mut num_primes_found38 = 0;\n    let mut num_primes_found39 = 0;\n    let\
    \ mut num_primes_found40 = 0;\n    let mut num_primes_found41 = 0;\n    let mut\
    \ num_primes_found42 = 0;\n    let mut num_primes_found43 = 0;\n    let mut num_primes_found44\
    \ = 0;\n    let mut num_primes_found45 = 0;\n    let mut num_primes_found46 =\
    \ 0;\n    let mut num_primes_found47 = 0;\n    let mut num_primes_found48 = 0;\n\
    \    let mut num_primes_found49 = 0;\n    let mut ", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut count: usize = 0;\n    let\
    \ mut prime: usize = 2;\n    let mut prime_found = false;\n    while !num.is_empty()\
    \ {\n        let mut digit: u8 = 0;\n        let mut is_prime = true;\n      \
    \  for &c in num {\n            if c >= '0' && c <= '9' {\n                digit\
    \ += c - '0';\n            } else {\n                is_prime = false;\n     \
    \           break;\n            }\n        }\n        if is_prime {\n        \
    \    prime_found = true;\n        }\n        if prime == 2 {\n            if digit\
    \ == 2 {\n                prime = 2;\n            }\n        }\n        if prime\
    \ == 3 {\n            if digit == 3 {\n                prime = 3;\n          \
    \  }\n        }\n        if prime == 5 {\n            if digit == 5 {\n      \
    \          prime = 5;\n            }\n        }\n        if prime == 7 {\n   \
    \         if digit == 7 {\n                prime = 7;\n            }\n       \
    \ }\n        if prime == 11 {\n            if digit == 11 {\n                prime\
    \ = 11;\n            }\n        }\n        if prime == 13 {\n            if digit\
    \ == 13 {\n                prime = 13;\n            }\n        }\n        if prime\
    \ == 17 {\n            if digit == 17 {\n                prime = 17;\n       \
    \     }\n        }\n        if prime == 19 {\n            if digit == 19 {\n \
    \               prime = 19;\n            }\n        }\n        if prime == 21\
    \ {\n            if digit == 21 {\n                prime = 21;\n            }\n\
    \        }\n        if prime == 29 {\n            if digit == 29 {\n         \
    \       prime = 29;\n            }\n        }\n        if prime == 31 {\n    \
    \        if digit == 31 {\n                prime = 31;\n            }\n      \
    \  }\n        if prime == 37 {\n            if digit == 37 {\n               \
    \ prime = 37;\n            }\n        }\n        if prime == 41 {\n          \
    \  if digit == 41 {\n                prime = 41;\n            }\n        }\n \
    \       if prime == 43 {\n            if digit == 43 {\n                prime\
    \ = 43;\n            }\n        }\n        if prime == 47 {\n            if digit\
    \ == 47 {\n                prime = 53;\n            }\n        }\n        if prime\
    \ == 53 {\n            if digit == 53 {\n                prime = 53;\n       \
    \     }\n        }\n        if prime == 59 {\n            if digit == 59 {\n \
    \               prime = 59;\n            }\n        }\n        if prime == 61\
    \ {\n            if digit == 61 {\n                prime = 61;\n            }\n\
    \        }\n        if prime == 67 {\n            if digit == 67 {\n         \
    \       prime = 67;\n            }\n        }", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_len\
    \ = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n    let mut\
    \ num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n   \
    \ let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_str: String = String::new();\n    let mut num_str2: String =\
    \ String::new();\n    let mut num_str3: String = String::new();\n    let mut num_str4:\
    \ String = String::new();\n    let mut num_str5: String = String::new();\n   \
    \ let mut num_str6: String = String::new();\n    let mut num_str7: String = String::new();\n\
    \    let mut num_str8: String = String::new();\n    let mut num_str9: String =\
    \ String::new();\n    let mut num_str10: String = String::new();\n    let mut\
    \ num_str11: String = String::new();\n    let mut num_str12: String = String::new();\n\
    \    let mut num_str13: String = String::new();\n    let mut num_str14: String\
    \ = String::new();\n    let mut num_str15: String = String::new();\n    let mut\
    \ num_str16: String = String::new();\n    let mut num_str17: String = String::new();\n\
    \    let mut num_str18: String = String::new();\n    let mut num_str19: String\
    \ = String::new();\n    let mut num_str20: String = String::new();\n    let mut\
    \ num_str21: String = String::new();\n    let mut num_str22: String = String::new();\n\
    \    let mut num_str23: String = String::new();\n    let mut num_str24: String\
    \ = String::new();\n    let mut num_str25: String = String::new();\n    let mut\
    \ num_str26: String = String::new();\n    let mut num_str27: String = String::new();\n\
    \    let mut num_str28: String = String::new();\n    let mut num_str29: String\
    \ = String::new();\n    let mut num_str30: String = String::new();\n    let mut\
    \ num_str31: String = String::new();\n    let mut num_str32: String = String::new();\n\
    \    let mut num_str33: String = String::new();\n    let mut num_str34: String\
    \ = String::new();\n    let mut num_str35: String = String::new();\n    let mut\
    \ num_str36: String = String::new();\n    let mut num_str37: String = String::new();\n\
    \    let mut num_str38: String = String::new();\n    let mut num_", "    let mut\
    \ num: isize = 0;\n    let mut nums: Vec<isize> = num.chars().collect();\n   \
    \ let mut prime: isize = 2;\n    let mut primes: Vec<isize> = vec![2, 3];\n  \
    \  let mut prime_found = false;\n    let mut prime_found2 = false;\n    let mut\
    \ prime_found3 = false;\n    let mut prime_found4 = false;\n    let mut prime_found5\
    \ = false;\n    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n\
    \    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let\
    \ mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let mut\
    \ prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut prime_found14\
    \ = false;\n    let mut prime_found15 = false;\n    let mut prime_found16 = false;\n\
    \    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n    let\
    \ mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let mut\
    \ prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut prime_found23\
    \ = false;\n    let mut prime_found24 = false;\n    let mut prime_found25 = false;\n\
    \    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n    let\
    \ mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let mut\
    \ prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut prime_found32\
    \ = false;\n    let mut prime_found33 = false;\n    let mut prime_found34 = false;\n\
    \    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n    let\
    \ mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let mut\
    \ prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut prime_found41\
    \ = false;\n    let mut prime_found42 = false;\n    let mut prime_found43 = false;\n\
    \    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n    let\
    \ mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let mut\
    \ prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut prime_found50\
    \ = false;\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let\
    \ mut primes = vec![];\n    let mut prime_digits = vec![];\n    let mut prime_digit_counts\
    \ = vec![];\n    let mut prime_digit_counts_len = vec![];\n    let mut prime_digit_counts_len_max\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len2 = vec![];\n    let mut prime_digit_counts_len_max_len3\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len4 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len5 = vec![];\n    let mut prime_digit_counts_len_max_len6\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len7 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len8 = vec![];\n    let mut prime_digit_counts_len_max_len9\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len10 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len11 = vec![];\n    let mut prime_digit_counts_len_max_len12\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len13 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len14 = vec![];\n    let mut prime_digit_counts_len_max_len15\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len16 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len17 = vec![];\n    let mut prime_digit_counts_len_max_len18\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len19 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len20 = vec![];\n    let mut prime_digit_counts_len_max_len21\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len22 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len23 = vec![];\n    let mut prime_digit_counts_len_max_len24\
    \ = vec![];\n    let mut prime_digit_counts_len_max_len25 = vec![];\n    let mut\
    \ prime_digit_counts_len_max_len26 = vec![];\n    let mut prime_digit_count",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_found = 0;\n    let mut num_primes_found2\
    \ = 0;\n    let mut num_primes_found3 = 0;\n    let mut num_primes_found4 = 0;\n\
    \    let mut num_primes_found5 = 0;\n    let mut num_primes_found6 = 0;\n    let\
    \ mut num_primes_found7 = 0;\n    let mut num_primes_found8 = 0;\n    let mut\
    \ num_primes_found9 = 0;\n    let mut num_primes_found10 = 0;\n    let mut num_primes_found11\
    \ = 0;\n    let mut num_primes_found12 = 0;\n    let mut num_primes_found13 =\
    \ 0;\n    let mut num_primes_found14 = 0;\n    let mut num_primes_found15 = 0;\n\
    \    let mut num_primes_found16 = 0;\n    let mut num_primes_found17 = 0;\n  \
    \  let mut num_primes_found18 = 0;\n    let mut num_primes_found19 = 0;\n    let\
    \ mut num_primes_found20 = 0;\n    let mut num_primes_found21 = 0;\n    let mut\
    \ num_primes_found22 = 0;\n    let mut num_primes_found23 = 0;\n    let mut num_primes_found24\
    \ = 0;\n    let mut num_primes_found25 = 0;\n    let mut num_primes_found26 =\
    \ 0;\n    let mut num_primes_found27 = 0;\n    let mut num_primes_found28 = 0;\n\
    \    let mut num_primes_found29 = 0;\n    let mut num_primes_found30 = 0;\n  \
    \  let mut num_primes_found31 = 0;\n    let mut num_primes_found32 = 0;\n    let\
    \ mut num_primes_found33 = 0;\n    let mut num_primes_found34 = 0;\n    let mut\
    \ num_primes_found35 = 0;\n    let mut num_primes_found36 = 0;\n    let mut num_primes_found37\
    \ = 0;\n    let mut num_primes_found38 = 0;\n    let mut num_primes_found39 =\
    \ 0;\n    let mut num_primes_found40 = 0;\n    let mut num_primes_found41 = 0;\n\
    \    let mut num_primes_found42 = 0;\n    let mut num_primes_found43 = 0;\n  \
    \  let mut num_primes_found44 = 0;\n    let mut num_primes_found45 = 0;\n    let\
    \ mut num_primes_found46 = 0;\n    let mut num_primes_found47 = 0;\n    let mut\
    \ num_primes_found48 = 0;\n    let mut num_primes_found49 = 0;\n    let mut ",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime: u8 = 0;\n    let mut prime_digit_value_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_prime: u8 = 0;\n    let mut\
    \ prime_digit_value_prime_prime_count: isize = 0;\n    let mut prime_digit_value_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_count: isize = 0;\n\
    \    let mut prime_digit_value_prime_prime_prime_prime: u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime: u8\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_count: isize\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime: u8\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_count: isize\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime: u8\
    \ = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime_prime_prime_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_prime_prime_prime_prime_prime"]
stop_tokens:
- "\n}"

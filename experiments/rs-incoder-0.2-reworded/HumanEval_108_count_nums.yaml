name: HumanEval_108_count_nums
language: rs
prompt: "/// Write a function count_nums which takes a vector of integers and returns\n\
  /// the number of elements which has a sum of digits > 0.\n/// If a number is negative,\
  \ then its first signed digit will be negative:\n/// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n/// >>> count_nums(vec![])\n/// 0\n/// >>> count_nums(vec![-1,\
  \ 11, -11])\n/// 1\n/// >>> count_nums(vec![1, 1, 2])\n/// 3\nfn count_nums(arr:\
  \ Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = count_nums;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ 0);\n    assert_eq!(candidate(vec![-1, -2, 0]), 0);\n    assert_eq!(candidate(vec![1,\
  \ 1, 2, -2, 3, 4, 5]), 6);\n    assert_eq!(candidate(vec![1, 6, 9, -6, 0, 1, 5]),\
  \ 5);\n    assert_eq!(candidate(vec![1, 100, 98, -7, 1, -1]), 4);\n    assert_eq!(candidate(vec![12,\
  \ 23, 34, -45, -56, 0]), 5);\n    assert_eq!(candidate(vec![0, 1]), 1);\n    assert_eq!(candidate(vec![1]),\
  \ 1);\n}\n"
completions: ["    let mut sum = 0;\n    for num in arr {\n        if num < 0 {\n\
    \            sum += num;\n        } else {\n            sum += num % 10;\n   \
    \     }\n    }\n    sum", "    let mut count = 0;\n    for &i in arr {\n     \
    \   if i >= 0 {\n            count += i;\n        }\n    }\n    count", '    arr.iter().filter(|&x|
    x > 0).count()', "    let mut count = 0;\n    for &x in arr {\n        if x >=\
    \ 0 {\n            count += x;\n        } else {\n            count += x - 10;\n\
    \        }\n    }\n    count", "    let mut cnt = 0;\n    for &n in arr {\n  \
    \      if n >= 0 {\n            cnt += 1;\n        }\n    }\n    cnt", "    let\
    \ mut sum = 0;\n    for &i in arr {\n        if i >= 0 {\n            sum += i;\n\
    \        }\n    }\n    sum", "    let mut cnt = 0;\n    let mut neg = false;\n\
    \    for &x in arr {\n        if x < 0 {\n            neg = true;\n          \
    \  x = -x;\n        }\n        if x == 0 {\n            cnt++;\n        } else\
    \ {\n            cnt += x;\n        }\n    }\n    if neg {\n        cnt *= -1;\n\
    \    }\n    cnt", "    let mut count = 0;\n    for &x in arr {\n        if x >=\
    \ 0 {\n            count += x;\n        } else {\n            count += x - 10;\n\
    \        }\n    }\n    count", "    let mut sum = 0;\n    for &i in arr {\n  \
    \      if i >= 0 {\n            sum += i;\n        }\n    }\n    sum", "    let\
    \ mut sum = 0;\n    for num in arr {\n        if num < 0 {\n            sum +=\
    \ num as isize;\n        } else {\n            sum += num % 10 as isize;\n   \
    \     }\n    }\n    sum", "    let mut count = 0;\n    for num in arr {\n    \
    \    if num < 0 {\n            count += num as isize;\n        } else {\n    \
    \        count += num as isize - 1;\n        }\n    }\n    count", "    let mut\
    \ sum = 0;\n    for &x in arr {\n        if x < 0 {\n            sum += x;\n \
    \       } else {\n            sum += x % 10;\n        }\n    }\n    sum", '    arr.iter().filter(|&x|
    x > 0).count()', "    let mut sum = 0;\n    for &i in arr {\n        sum += i;\n\
    \    }\n    sum", "    let mut cnt = 0;\n    for &i in arr {\n        if i >=\
    \ 0 {\n            cnt += 1;\n        }\n    }\n    cnt", "    let mut sum = 0;\n\
    \    for &i in arr {\n        if i >= 0 {\n            sum += i;\n        }\n\
    \    }\n    sum", "    let mut sum = 0;\n    for &i in arr {\n        if i >=\
    \ 0 {\n            sum += i;\n        }\n    }\n    sum", "    let mut count =\
    \ 0;\n    for &i in arr {\n        if i >= 0 {\n            count += 1;\n    \
    \    }\n    }\n    count", "    let mut sum = 0;\n    for &i in arr {\n      \
    \  if i >= 0 {\n            sum += i;\n        }\n    }\n    sum", "    let mut\
    \ sum = 0;\n    for &i in arr {\n        if i >= 0 {\n            sum += i;\n\
    \        }\n    }\n    sum"]
stop_tokens:
- "\n}"

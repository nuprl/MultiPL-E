name: HumanEval_42_incr_list
language: rs
prompt: "/// Return vector with elements incremented by 1.\n/// >>> incr_list(vec![1,\
  \ 2, 3])\n/// vec![2, 3, 4]\n/// >>> incr_list(vec![5, 3, 5, 2, 3, 3, 9, 0, 123])\n\
  /// vec![6, 4, 6, 3, 4, 4, 10, 1, 124]\nfn incr_list(l: Vec<isize>) -> Vec<isize>\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
  \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3, 4,\
  \ 4, 10, 1, 124]);\n}\n"
completions: ["    let mut res = vec![];\n    let mut i = 0;\n    for el in l {\n\
    \        res.push(i + 1);\n        i += el;\n    }\n    res", "    let mut result\
    \ = vec![];\n    for i in l {\n        result.push(i + 1);\n    }\n    result",
  "    let mut v = l;\n    v.into_iter().for_each(|x| {\n        *x += 1;\n    });\n\
    \    v", "    let mut v = l;\n    v.into_iter().for_each(|x| {\n        *x +=\
    \ 1;\n    });\n    v", '    l.iter().cloned().enumerate().map(|(i, x)| x + 1).collect()',
  "    let mut res = vec![];\n    for i in l {\n        res.push(i + 1);\n    }\n\
    \    res", "    let mut result = vec![];\n    let mut i = 0;\n    while i < l.len()\
    \ {\n        result.push(l[i] + 1);\n        i += 1;\n    }\n    result", "  \
    \  let mut result = vec![];\n    for i in l {\n        result.push(i + 1);\n \
    \   }\n    result", "    let mut v = l;\n    v.into_iter().map(|x| x + 1).collect()",
  "    let mut v = l;\n    v.into_iter().for_each(|x| {\n        *x = *x + 1;\n  \
    \  });\n    v", "    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < l.len() {\n        result.push(l[i] + 1);\n        i += 1;\n    }\n    result",
  "    let mut result = vec![];\n    let mut i = 0;\n    for x in l {\n        result[i]\
    \ = x + 1;\n        i += 1;\n    }\n    result", '    l.iter().cloned().map(|x|
    x + 1).collect()', "    let mut result = vec![];\n    let mut i = 0;\n    for\
    \ el in l {\n        i += 1;\n        result.push(el);\n    }\n    result", " \
    \   let mut res = vec![];\n    let mut i = 0;\n    for x in l {\n        res.push(x);\n\
    \        i += 1;\n    }\n    res.into_iter().map(|x| x + 1).collect()", "    let\
    \ mut res = vec![];\n    for i in l {\n        res.push(i + 1);\n    }\n    res",
  "    let mut res = vec![];\n    for i in l {\n        res.push(i + 1);\n    }\n\
    \    res", "    let mut result = vec![];\n    for i in l {\n        result.push(i\
    \ + 1);\n    }\n    result", '    l.iter().cloned().map(|x| x + 1).collect()',
  "    let mut res = vec![];\n    let mut i = 0;\n    for e in l {\n        res.push(i\
    \ + 1);\n        i += e;\n    }\n    res"]
stop_tokens:
- "\n}"

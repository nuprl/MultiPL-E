name: HumanEval_157_right_angle_triangle
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return true if the\
  \ three\n/// sides form a right-angled triangle, false otherwise.\n/// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n/// 90 degree.\n\
  /// Example:\n/// >>> right_angle_triangle(3, 4, 5)\n/// true\n/// >>> right_angle_triangle(1,\
  \ 2, 3)\n/// false\nfn right_angle_triangle(a: isize, b: isize, c: isize) -> bool\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = right_angle_triangle;\n    assert_eq!(candidate(3,\
  \ 4, 5), true);\n    assert_eq!(candidate(1, 2, 3), false);\n    assert_eq!(candidate(10,\
  \ 6, 8), true);\n    assert_eq!(candidate(2, 2, 2), false);\n    assert_eq!(candidate(7,\
  \ 24, 25), true);\n    assert_eq!(candidate(10, 5, 7), false);\n    assert_eq!(candidate(5,\
  \ 12, 13), true);\n    assert_eq!(candidate(15, 8, 17), true);\n    assert_eq!(candidate(48,\
  \ 55, 73), true);\n    assert_eq!(candidate(1, 1, 1), false);\n    assert_eq!(candidate(2,\
  \ 2, 10), false);\n}\n"
completions: ['    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', '    (b
    - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    if a > b {\n        (a,\
    \ b) = (b, a)\n    }\n    if b > c {\n        (b, c) = (c, b)\n    }\n    if c\
    \ > a {\n        (c, a) = (a, c)\n    }\n    a + b + c == 2 * a + b + c", '    (b
    - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <=
    0', "    if a > b {\n        (a, b) = (b, a)\n    }\n    if b > c {\n        (b,\
    \ c) = (c, b)\n    }\n    if c > a {\n        (c, a) = (a, c)\n    }\n    a +\
    \ b + c == 2 * a + b + c", '    (b - a) * (b - c) - (c - a) * (b - a) >= 0', " \
    \   let mut a = a < b + c ? a : b;\n    let mut b = b < a + c ? b : a;\n    let\
    \ mut c = c < a + b ? c : a;\n    \n    if a + b > c {\n        a = b;\n     \
    \   b = c;\n        c = a;\n    }\n    \n    if a + c > b {\n        a = c;\n\
    \        c = b;\n        b = a;\n    }\n    \n    if b + c > a {\n        b =\
    \ c;\n        c = a;\n        a = b;\n    }\n    \n    a == b + c", '    (b -
    a) * (c - b) <= 0', '    (b - a) * (b - a) + (c - b) * (c - b) <= 0', '    (b
    - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    let mut a = a / 2;\n\
    \    let mut b = b / 2;\n    let mut c = c / 2;\n    if a > b {\n        a = b;\n\
    \        b = c;\n        c = a;\n    }\n    if b > c {\n        b = c;\n     \
    \   c = a;\n        a = b;\n    }\n    if c > a {\n        c = a;\n        a =\
    \ b;\n        b = c;\n    }\n    a == b == c", '    (b - a) * (c - b) <= 0', '    (b
    - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    let mut a = a < b ? a\
    \ : b;\n    let mut b = b < c ? b : c;\n    let mut c = c < a ? c : a;\n    \n\
    \    if a > b {\n        a = b;\n        b = c;\n        c = a;\n    }\n    \n\
    \    if b > c {\n        b = c;\n        c = a;\n        a = b;\n    }\n    \n\
    \    if c > a {\n        c = a;\n        a = b;\n        b = c;\n    }\n    \n\
    \    a == b == c"]
stop_tokens:
- "\n}"

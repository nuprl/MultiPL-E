name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a vector of GPAs for some students and you have to write \n/// a function\
  \ that can output a vector of letter grades using the following table:\n/// GPA\
  \       |    Letter grade\n/// 4.0                A+\n/// > 3.7                A\
  \ \n/// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7       \
  \         B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7\
  \                C\n/// > 1.3                C-\n/// > 1.0                D+ \n\
  /// > 0.7                D \n/// > 0.0                D-\n/// 0.0              \
  \  E\n/// Example:\n/// >>> grade_equation(vec![4.0, 3, 1.7, 2, 3.5])\n/// vec![String::from(\"\
  A+\"), String::from(\"B\"), String::from(\"C-\"), String::from(\"C\"), String::from(\"\
  A-\")]\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!(candidate(vec![4.0,\
  \ 3.0, 1.7, 2.0, 3.5]), vec![String::from(\"A+\"), String::from(\"B\"), String::from(\"\
  C-\"), String::from(\"C\"), String::from(\"A-\")]);\n    assert_eq!(candidate(vec![1.2]),\
  \ vec![String::from(\"D+\")]);\n    assert_eq!(candidate(vec![0.5]), vec![String::from(\"\
  D-\")]);\n    assert_eq!(candidate(vec![0.0]), vec![String::from(\"E\")]);\n   \
  \ assert_eq!(candidate(vec![1.0, 0.3, 1.5, 2.8, 3.3]), vec![String::from(\"D\"),\
  \ String::from(\"D-\"), String::from(\"C-\"), String::from(\"B\"), String::from(\"\
  B+\")]);\n    assert_eq!(candidate(vec![0.0, 0.7]), vec![String::from(\"E\"), String::from(\"\
  D-\")]);\n}\n"
completions: ["    let mut letter_grades = vec![];\n    for grade in grades {\n  \
    \      if grade < 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n\
    \        } else if grade < 3.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut total_grade = grades.iter().sum();\n    let mut total_letter_grade\
    \ = String::new();\n    \n    for grade in grades {\n        let letter_grade\
    \ = if total_grade < grade {\n            String::from(\"E\")\n        } else\
    \ if grade < 3.0 {\n            String::from(\"D-\")\n        } else if grade\
    \ < 3.3 {\n            String::from(\"C-\")\n        } else if grade < 3.7 {\n\
    \            String::from(\"B-\")\n        } else if grade < 4.0 {\n         \
    \   String::from(\"B-\")\n        } else if grade < 4.3 {\n            String::from(\"\
    B-\")\n        } else if grade < 4.7 {\n            String::from(\"B-\")\n   \
    \     } else if grade < 5.0 {\n            String::from(\"B-\")\n        } else\
    \ if grade < 5.3 {\n            String::from(\"B-\")\n        } else if grade\
    \ < 5.7 {\n            String::from(\"B-\")\n        } else if grade < 6.0 {\n\
    \            String::from(\"B-\")\n        } else if grade < 6.3 {\n         \
    \   String::from(\"B-\")\n        } else if grade < 6.7 {\n            String::from(\"\
    B-\")\n        } else if grade < 7.0 {\n            String::from(\"B-\")\n   \
    \     } else if grade < 7.3 {\n            String::from(\"B-\")\n        } else\
    \ if grade < 7.7 {\n            String::from(\"B-\")\n        } else if grade\
    \ < 8.0 {\n            String::from(\"B-\")\n        } else if grade < 8.3 {\n\
    \            String::from(\"B-\")\n        } else if grade < 8.7 {\n         \
    \   String::from(\"B-\")\n        } else if grade < 9.0 {\n            String::from(\"\
    B-\")\n        } else if grade < 9.3 {\n            String::from(\"B-\")\n   \
    \     } else if grade < 9.7 {\n            String::from(\"B-\")\n        } else\
    \ if grade < 10.0 {\n            String::from(\"B-\")\n        } else if grade\
    \ < 10.3 {\n            String::from(\"B-\")\n        } else if grade < 10.7 {\n\
    \            String::from(\"B-\")\n        } else if grade < 11.0 {\n        \
    \    String::from(\"B-\")\n        } else if grade < 11.3 {\n            String::from(\"",
  "    let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n    \
    \    if grade > 3.0 {\n            grades_vec.push(String::from(\"B+\"));\n  \
    \      } else if grade > 2.0 {\n            grades_vec.push(String::from(\"B\"\
    ));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > -0.3 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > -0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > -1.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade > -2.0 {\n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"A\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n\
    \    let mut max_grade = grades_copy.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap", "    let mut letter_grades\
    \ = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n    let mut\
    \ min_grade = grades.iter().min().unwrap();\n    let mut total_grade = grades.iter().sum();\n\
    \    let mut total_letter_grade = String::from(\"E\");\n    for grade in grades\
    \ {\n        let letter_grade = if grade > max_grade {\n            \"D-\"\n \
    \       } else if grade < min_grade {\n            \"D\"\n        } else if grade\
    \ > total_grade / 2 {\n            \"C+\"\n        } else if grade < total_grade\
    \ / 2 {\n            \"C\"\n        } else if grade > total_grade / 3 {\n    \
    \        \"B+\"\n        } else if grade < total_grade / 3 {\n            \"B\"\
    \n        } else if grade > total_grade / 4 {\n            \"A+\"\n        } else\
    \ if grade < total_grade / 4 {\n            \"A\"\n        } else {\n        \
    \    \"A+\"\n        };\n        letter_grades.push(letter_grade);\n        total_grade\
    \ -= grade;\n    }\n    letter_grades.push(total_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.iter().sum();\n    let mut\
    \ current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index47\
    \ = 0;", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade < current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else {\n            current_letter_grade = current_letter_grade.chars().next().unwrap().to_string();\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_string = grades.iter().map(|x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed = grades_string.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed = grades_string_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed = grades_string_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed = grades_string_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed = grades_string_reversed_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = grades_string_reversed_reversed_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = grades_string_reversed_reversed_reversed_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.iter().rev().collect::<Vec<String>>();\n\
    \    let mut grades_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = grades_string_reversed_reversed_reversed_", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::from(\"E\"\
    );\n        if grade > 3.0 {\n            letter_grade = String::from(\"D-\");\n\
    \        } else if grade > 2.0 {\n            letter_grade = String::from(\"B-\"\
    );\n        } else if grade > 1.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.7 { \n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else ", "    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades.first().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades.iter().skip(1) {\n        if grade < current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade > current_grade {\n            current_letter_grade = current_letter_grade.chars().nth(1).unwrap().to_string();\n\
    \            current_grade = grade;\n        } else {\n            current_letter_grade\
    \ = current_letter_grade.chars().nth(1).unwrap().to_string();\n        }\n   \
    \ }\n    letter_grades.push(current_letter_grade);\n    letter_grades", "    let\
    \ mut grades_copy = grades.clone();\n    let mut grades_sorted = grades_copy.clone();\n\
    \    grades_sorted.sort();\n    let mut grades_reversed = grades_sorted.clone();\n\
    \    grades_reversed.reverse();\n    let mut grades_reversed_copy = grades_reversed.clone();\n\
    \    let mut grades_reversed_sorted = grades_reversed_copy.clone();\n    grades_reversed_sorted.sort();\n\
    \    let mut grades_reversed_reversed = grades_reversed_sorted.clone();\n    grades_reversed_reversed.reverse();\n\
    \    let mut grades_reversed_reversed_copy = grades_reversed_reversed.clone();\n\
    \    let mut grades_reversed_reversed_sorted = grades_reversed_reversed_copy.clone();\n\
    \    grades_reversed_reversed_sorted.sort();\n    let mut grades_reversed_reversed_reversed\
    \ = grades_reversed_reversed_sorted.clone();\n    grades_reversed_reversed_reversed.reverse();\n\
    \    let mut grades_reversed_reversed_reversed_copy = grades_reversed_reversed_reversed.clone();\n\
    \    let mut grades_reversed_reversed_reversed_sorted = grades_reversed_reversed_reversed_copy.clone();\n\
    \    grades_reversed_reversed_reversed_sorted.sort();\n    let mut grades_reversed_reversed_reversed_reversed\
    \ = grades_reversed_reversed_reversed_sorted.clone();\n    grades_reversed_reversed_reversed_reversed.reverse();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_copy = grades_reversed_reversed_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_reversed.reverse();\n    let mut\
    \ grades_reversed_reversed_reversed_reversed_reversed_copy = grades_reversed_reversed_reversed_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_reversed_reversed.reverse();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_reversed_copy = grades_reversed_reversed_reversed_reversed_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_reversed_reversed_reversed.reverse();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_reversed_reversed_copy\
    \ = grades_reversed_reversed_reversed_reversed_reversed_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.reverse();\n\
    \    let mut grade", "    let mut grades_copy = grades.clone();\n    let mut grades_len\
    \ = grades_copy.len();\n    let mut grades_sum = 0.0;\n    let mut grades_average\
    \ = 0.0;\n    let mut grades_min_value = grades_copy[0];\n    let mut grades_max_value\
    \ = grades_copy[0];\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos\
    \ = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n   \
    \ let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos\
    \ = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n   \
    \ let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos\
    \ = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n   \
    \ let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos\
    \ = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n   \
    \ let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos\
    \ = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n   \
    \ let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos\
    \ = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n   \
    \ let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos\
    \ = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n   \
    \ let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos\
    \ = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n   \
    \ let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos\
    \ = 0;\n    let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n   \
    \ let mut grades_min_pos = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos\
    \ = 0;\n    let mut grades_max_pos = 0;\n    let mut grades_min_pos = 0;\n   \
    \ let mut grades_max_pos = ", "    let mut letter_grades = vec![];\n    let mut\
    \ total_gpa = grades.iter().sum();\n    let mut total_letter_grade = String::new();\n\
    \    let mut total_letter_grade = String::from(\"E\");\n    for grade in grades\
    \ {\n        let letter_grade = if grade < total_gpa { \n            \"A+\" \n\
    \        } else if grade < total_gpa + 3.0 { \n            \"A\" \n        } else\
    \ if grade < total_gpa + 3.7 { \n            \"A-\" \n        } else if grade\
    \ < total_gpa + 4.0 { \n            \"B+\" \n        } else if grade < total_gpa\
    \ + 4.3 { \n            \"B\" \n        } else if grade < total_gpa + 4.7 { \n\
    \            \"B-\" \n        } else if grade < total_gpa + 5.0 { \n         \
    \   \"C+\" \n        } else if grade < total_gpa + 5.3 { \n            \"C\" \n\
    \        } else if grade < total_gpa + 5.7 { \n            \"C-\" \n        }\
    \ else if grade < total_gpa + 6.0 { \n            \"D+\" \n        } else if grade\
    \ < total_gpa + 6.3 { \n            \"D\" \n        } else if grade < total_gpa\
    \ + 6.7 { \n            \"D-\" \n        } else { \n            \"E\" \n     \
    \   };\n        letter_grades.push(letter_grade);\n        total_letter_grade\
    \ += letter_grade;\n        total_gpa += grade;\n    }\n    letter_grades.push(total_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    letter_grades.push(current_letter_grade);\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        } else if grade\
    \ == current_grade {\n            current_letter_grade += String::from(\"+\");\n\
    \        } else {\n            current_letter_grade += String::from(\"-\");\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut min_grade: f64 = grades.iter().min().unwrap();\n\
    \    let mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade_index:\
    \ usize = 0;\n    let mut max_grade_index: usize = 0;\n    let mut grades_sum:\
    \ f64 = grades.iter().sum();\n    let mut grades_average: f64 = grades_sum / grades.len();\n\
    \    let mut grades_variance: f64 = grades_sum / grades.len() - grades_average;\n\
    \    let mut grades_standard_deviation: f64 = grades_variance.sqrt();\n    let\
    \ mut grades_standard_deviation_min: f64 = grades_standard_deviation;\n    let\
    \ mut grades_standard_deviation_max: f64 = grades_standard_deviation;\n    let\
    \ mut grades_standard_deviation_average: f64 = grades_standard_deviation;\n  \
    \  let mut grades_standard_deviation_variance: f64 = grades_standard_deviation;\n\
    \    let mut grades_standard_deviation_standard_deviation: f64 = grades_standard_deviation;\n\
    \    let mut grades_standard_deviation_standard_deviation_min: f64 = grades_standard_deviation;\n\
    \    let mut grades_standard_deviation_standard_deviation_max: f64 = grades_standard_deviation;\n\
    \    let mut grades_standard_deviation_standard_deviation_average: f64 = grades_standard_deviation;\n\
    \    let mut grades_standard_deviation_standard_deviation_variance: f64 = grades_standard_deviation;\n\
    \    let mut grades_standard_deviation_standard_deviation_standard_deviation:\
    \ f64 = grades_standard_deviation;\n    let mut grades_standard_deviation_standard_deviation_standard_deviation_min:\
    \ f64 = grades_standard_deviation;\n    let mut grades_standard_deviation_standard_deviation_standard_deviation_max:\
    \ f64 = grades_standard_deviation;\n    let mut grades_standard_deviation_standard_deviation_standard_deviation_average:\
    \ f64 = grades_standard_deviation;\n    let mut grades_standard_deviation_standard_deviation_standard_deviation_variance:\
    \ f64 = grades_standard_deviation;\n    let mut grades_standard_deviation_standard_deviation_standard_deviation_standard_deviation:\
    \ f64 = grades_standard_deviation;\n    let mut grades_standard_deviation_standard_",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut total_grades = grades.iter().sum();\n    let mut total_points = 0;\n\
    \    let mut total_points_for_grade = 0;\n    let mut total_points_for_letter_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grade = 0;\n    let mut\
    \ total_points_for_letter_grades_for_grades_for_grade = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grades_for_grade\
    \ = 0;\n    let mut total_points_for_letter_grades_for_grades_for_grades_for_grades_for_grades_for_",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = Vec::new();\n\
    \    \n    grades_iter.for_each(|grade| {\n        if grade > 3.0 {\n        \
    \    letter_grades.push(String::from(\"B+\"));\n        } else if grade > 2.7\
    \ {\n            letter_grades.push(String::from(\"B\"));\n        } else if grade\
    \ > 2.3 {\n            letter_grades.push(String::from(\"B-\"));\n        } else\
    \ if grade > 2.0 {\n            letter_grades.push(String::from(\"C+\"));\n  \
    \      } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    });\n    \n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy[0];\n\
    \    let mut max_grade = grades_copy[0];\n    let mut min_grade_index = -1;\n\
    \    let mut max_grade_index = -1;\n    let mut min_grade_index2 = -1;\n    let\
    \ mut max_grade_index2 = -1;\n    let mut min_grade_index3 = -1;\n    let mut\
    \ max_grade_index3 = -1;\n    let mut min_grade_index4 = -1;\n    let mut max_grade_index4\
    \ = -1;\n    let mut min_grade_index5 = -1;\n    let mut max_grade_index5 = -1;\n\
    \    let mut min_grade_index6 = -1;\n    let mut max_grade_index6 = -1;\n    let\
    \ mut min_grade_index7 = -1;\n    let mut max_grade_index7 = -1;\n    let mut\
    \ min_grade_index8 = -1;\n    let mut max_grade_index8 = -1;\n    let mut min_grade_index9\
    \ = -1;\n    let mut max_grade_index9 = -1;\n    let mut min_grade_index10 = -1;\n\
    \    let mut max_grade_index10 = -1;\n    let mut min_grade_index11 = -1;\n  \
    \  let mut max_grade_index11 = -1;\n    let mut min_grade_index12 = -1;\n    let\
    \ mut max_grade_index12 = -1;\n    let mut min_grade_index13 = -1;\n    let mut\
    \ max_grade_index13 = -1;\n    let mut min_grade_index14 = -1;\n    let mut max_grade_index14\
    \ = -1;\n    let mut min_grade_index15 = -1;\n    let mut max_grade_index15 =\
    \ -1;\n    let mut min_grade_index16 = -1;\n    let mut max_grade_index16 = -1;\n\
    \    let mut min_grade_index17 = -1;\n    let mut max_grade_index17 = -1;\n  \
    \  let mut min_grade_index18 = -1;\n    let mut max_grade_index18 = -1;\n    let\
    \ mut min_grade_index19 = -1;\n    let mut max_grade_index19 = -1;\n    let mut\
    \ min_grade_index20 = -1;\n    let mut max_grade_index20 = -1;\n    let mut min_grade_index21\
    \ = -1;\n    let mut max_grade_index21 = -1;\n    let mut min_grade_index22 =\
    \ -1;\n    let mut max_grade_index22 = -1;\n    let mut min_grade_index23 = -1;\n\
    \    let mut max_grade_index23 = -1;\n    let mut min_grade_index24 = -1;\n  \
    \  let mut max_grade_index24 = -1;\n    let mut min_grade_index25 = -1;\n    let\
    \ mut max_grade_index", "    let mut grades_copy = grades.clone();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(\n                match current_grade\
    \ {\n                    4.0 => \"A+\",\n                    _ => \"A\",\n   \
    \             }\n            );\n            current_grade = grade;\n        }\
    \ else {\n            current_letter_grade = String::from(\n                match\
    \ current_grade {\n                    _ => \"B\",\n                }\n      \
    \      );\n            current_grade = grade;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min();\n\
    \    let mut max_grade = grades_copy.iter().max();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades_copy[min_grade_index];\n    let mut current_index = min_grade_index;\n\
    \    while current_index < max_grade_index {\n        if current_grade < grades_copy[current_index]\
    \ {\n            current_grade += 1;\n            current_index = grades_copy.iter().position(|x|\
    \ x == current_grade).unwrap();\n        } else {\n            letter_grades.push(String::from(current_grade.to_string()));\n\
    \            current_grade -= 1;\n            current_index = grades_copy.iter().position(|x|\
    \ x == current_grade).unwrap();\n        }\n    }\n    letter_grades.push(String::from(current_grade.to_string()));\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D\"));\n        } else { \n            letter_grades.push(String::from(\"D-\"\
    ));\n        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        match grade {\n            4.0 => letter_grades.push(String::from(\"\
    A+\")),\n            3.7 => letter_grades.push(String::from(\"A\")),\n       \
    \     3.3 => letter_grades.push(String::from(\"A-\")),\n            3.0 => letter_grades.push(String::from(\"\
    B+\")),\n            2.7 => letter_grades.push(String::from(\"B\")),\n       \
    \     2.3 => letter_grades.push(String::from(\"B-\")),\n            2.0 => letter_grades.push(String::from(\"\
    C+\")),\n            1.7 => letter_grades.push(String::from(\"C\")),\n       \
    \     1.3 => letter_grades.push(String::from(\"C-\")),\n            1.0 => letter_grades.push(String::from(\"\
    D+\")),\n            0.7 => letter_grades.push(String::from(\"D\")),\n       \
    \     0.0 => letter_grades.push(String::from(\"D-\")),\n            _ => letter_grades.push(String::from(\"\
    E\")),\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n\
    \    let mut max_grade = grades_copy.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades_copy[min_grade_index];\n    let mut current_index = min_grade_index;\n\
    \    while current_index < max_grade_index {\n        if current_grade == 0.0\
    \ {\n            letter_grades.push(String::from(\"E\"));\n            break;\n\
    \        }\n        let current_grade = grades_copy[current_index];\n        let\
    \ current_letter_grade = if current_grade < 0.0 {\n            String::from(\"\
    D-\")\n        } else if current_grade < 3.0 {\n            String::from(\"C+\"\
    )\n        } else if current_grade < 3.3 {\n            String::from(\"C\")\n\
    \        } else if current_grade < 3.7 {\n            String::from(\"B+\")\n \
    \       } else if current_grade < 4.0 {\n            String::from(\"B\")\n   \
    \     } else if current_grade < 4.3 {\n            String::from(\"A-\")\n    \
    \    } else if current_grade < 4.7 {\n            String::from(\"A+\")\n     \
    \   } else if current_grade < 5.0 {\n            String::from(\"A\")\n       \
    \ } else {\n            String::from(\"A\")\n        };\n        letter_grades.push(current_letter_grade);\n\
    \        current_index += 1;\n    }\n    letter_grades", "    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut total_grade: f64 = 0.0;\n    let mut total_grade_index:\
    \ usize = 0;\n    let mut total_grade_index2: usize = 0;\n    for grade in grades\
    \ {\n        total_grade += grade;\n        total_grade_index += 1;\n        if\
    \ total_grade >= 4.0 {\n            total_grade_index2 += 1;\n        }\n    }\n\
    \    if total_grade_index2 == 0 {\n        total_grade_index2 = 1;\n    }\n  \
    \  for grade in grades {\n        if total_grade_index == total_grade_index2 {\n\
    \            grades_vec.push(String::from(\"A+\"));\n        }\n        if total_grade_index\
    \ == total_grade_index2 - 1 {\n            grades_vec.push(String::from(\"A-\"\
    ));\n        }\n        if total_grade_index == total_grade_index2 - 2 {\n   \
    \         grades_vec.push(String::from(\"B+\"));\n        }\n        if total_grade_index\
    \ == total_grade_index2 - 3 {\n            grades_vec.push(String::from(\"B-\"\
    ));\n        }\n        if total_grade_index == total_grade_index2 - 4 {\n   \
    \         grades_vec.push(String::from(\"C+\"));\n        }\n        if total_grade_index\
    \ == total_grade_index2 - 5 {\n            grades_vec.push(String::from(\"C-\"\
    ));\n        }\n        if total_grade_index == total_grade_index2 - 6 {\n   \
    \         grades_vec.push(String::from(\"D+\"));\n        }\n        if total_grade_index\
    \ == total_grade_index2 - 7 {\n            grades_vec.push(String::from(\"D\"\
    ));\n        }\n        if total_grade_index == total_grade_index2 - 8 {\n   \
    \         grades_vec.push(String::from(\"D-\"));\n        }\n        if total_grade_index\
    \ == total_grade_index2 - 9 {\n            grades_vec.push(String::from(\"E\"\
    ));\n        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n\
    \    let mut max_grade = grades_copy.iter().max().unwrap();\n    let mut current_grade\
    \ = min_grade;\n    while current_grade <= max_grade {\n        let current_letter_grade\
    \ = if current_grade == 0.0 {\n            \"E\"\n        } else {\n         \
    \   match current_grade {\n                0..=3.0 => \"A+\",\n              \
    \  4.0  => \"A\",\n                > 3.7 => \"A\",\n                > 3.3 => \"\
    A-\",\n                > 3.0 => \"B+\",\n                > 2.7 => \"B\",\n   \
    \             > 2.3 => \"B-\",\n                > 2.0 => \"C+\",\n           \
    \     > 1.7 => \"C\",\n                > 1.3 => \"C-\",\n                > 1.0\
    \ => \"D+\",\n                > 0.7 => \"D\",\n                _ => \"D-\"\n \
    \           }\n        };\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade += 1.0;\n    }\n    letter_grades", "    let mut letter_grades\
    \ = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut gpa_sum = 0;\n\
    \    let mut gpa_sum2 = 0;\n    let mut gpa_sum3 = 0;\n    let mut gpa_sum4 =\
    \ 0;\n    let mut gpa_sum5 = 0;\n    let mut gpa_sum6 = 0;\n    let mut gpa_sum7\
    \ = 0;\n    let mut gpa_sum8 = 0;\n    let mut gpa_sum9 = 0;\n    let mut gpa_sum10\
    \ = 0;\n    let mut gpa_sum11 = 0;\n    let mut gpa_sum12 = 0;\n    let mut gpa_sum13\
    \ = 0;\n    let mut gpa_sum14 = 0;\n    let mut gpa_sum15 = 0;\n    let mut gpa_sum16\
    \ = 0;\n    let mut gpa_sum17 = 0;\n    let mut gpa_sum18 = 0;\n    let mut gpa_sum19\
    \ = 0;\n    let mut gpa_sum20 = 0;\n    let mut gpa_sum21 = 0;\n    let mut gpa_sum22\
    \ = 0;\n    let mut gpa_sum23 = 0;\n    let mut gpa_sum24 = 0;\n    let mut gpa_sum25\
    \ = 0;\n    let mut gpa_sum26 = 0;\n    let mut gpa_sum27 = 0;\n    let mut gpa_sum28\
    \ = 0;\n    let mut gpa_sum29 = 0;\n    let mut gpa_sum30 = 0;\n    let mut gpa_sum31\
    \ = 0;\n    let mut gpa_sum32 = 0;\n    let mut gpa_sum33 = 0;\n    let mut gpa_sum34\
    \ = 0;\n    let mut gpa_sum35 = 0;\n    let mut gpa_sum36 = 0;\n    let mut gpa_sum37\
    \ = 0;\n    let mut gpa_sum38 = 0;\n    let mut gpa_sum39 = 0;\n    let mut gpa_sum40\
    \ = 0;\n    let mut gpa_sum41 = 0;\n    let mut gpa_sum42 = 0;\n    let mut gpa_sum43\
    \ = 0;\n    let mut gpa_sum44 = 0;\n    let mut gpa_sum45 = 0;\n    let mut gpa_sum46\
    \ = 0;\n    let mut gpa_sum47 = 0;\n    let mut gpa_sum48 = 0;\n    let mut gpa_sum49\
    \ = 0;\n    let mut gpa_sum50 = 0;\n    let mut gpa_sum51 = 0;\n    let mut gpa_sum52\
    \ = 0;\n    let mut gpa_sum53 = 0;\n    let mut gpa_sum54 = 0;\n    let mut gpa_sum55\
    \ = 0;", "    let mut letter_grades = vec![];\n    for grade in grades {\n   \
    \     let mut letter_grade = String::from(\"\");\n        if grade < 3.0 {\n \
    \           letter_grade += String::from(\"A\");\n        } else if grade < 3.3\
    \ {\n            letter_grade += String::from(\"A-\");\n        } else if grade\
    \ < 3.7 {\n            letter_grade += String::from(\"B+\");\n        } else if\
    \ grade < 4.0 {\n            letter_grade += String::from(\"B\");\n        } else\
    \ if grade < 4.3 {\n            letter_grade += String::from(\"B-\");\n      \
    \  } else if grade < 4.7 {\n            letter_grade += String::from(\"C+\");\n\
    \        } else if grade < 5.0 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 5.3 {\n            letter_grade += String::from(\"\
    C-\");\n        } else if grade < 5.7 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade < 6.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 6.3 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade < 6.7 {\n            letter_grade += String::from(\"\
    E\");\n        } else {\n            letter_grade += String::from(\"F\");\n  \
    \      }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n        } else\
    \ if grade > 2.0 {\n            letter_grades.push(String::from(\"B+\"));\n  \
    \      } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut grades_sum = grades.iter().sum();\n    let mut grades_avg = grades_sum\
    \ / grades.len();\n    for grade in grades {\n        let grade = grade / grades_avg;\n\
    \        if grade > 4.0 {\n            letter_grades.push(String::from(\"A+\"\
    ));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut letter_grades = vec![];\n    let\
    \ mut current_grade = grades_copy[0];\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade < current_grade {\n  \
    \          letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else {\n            current_letter_grade = current_letter_grade.chars().nth(grade\
    \ - current_grade).unwrap().to_string();\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let mut letter_grade = String::from(\"E\");\n        if grade > 3.0\
    \ {\n            letter_grade = String::from(\"D-\");\n        } else if grade\
    \ > 2.0 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade > 1.0 {\n            letter_grade = String::from(\"B-\");\n        } else\
    \ if grade > 0.7 { \n            letter_grade = String::from(\"D\");\n       \
    \ } else if grade > 0.3 { \n            letter_grade = String::from(\"C\");\n\
    \        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        } else if grade > 0.0 { \n            letter_grade = String::from(\"\
    C\");\n        ", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_letter_grade_index = 0;\n            current_grade\
    \ = grade;\n            current_letter_grade_index2 = 0;\n        }\n        if\
    \ grade == current_grade {\n            current_letter_grade = String::from(&grades[current_letter_grade_index2]);\n\
    \            current_letter_grade_index += 1;\n            current_letter_grade_index2\
    \ += 1;\n        }\n        letter_grades.push(current_letter_grade);\n    }\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut gpa_sum = 0;\n    let mut gpa_sum2 = 0;\n    let mut gpa_sum3 = 0;\n\
    \    let mut gpa_sum4 = 0;\n    let mut gpa_sum5 = 0;\n    let mut gpa_sum6 =\
    \ 0;\n    let mut gpa_sum7 = 0;\n    let mut gpa_sum8 = 0;\n    let mut gpa_sum9\
    \ = 0;\n    let mut gpa_sum10 = 0;\n    let mut gpa_sum11 = 0;\n    let mut gpa_sum12\
    \ = 0;\n    let mut gpa_sum13 = 0;\n    let mut gpa_sum14 = 0;\n    let mut gpa_sum15\
    \ = 0;\n    let mut gpa_sum16 = 0;\n    let mut gpa_sum17 = 0;\n    let mut gpa_sum18\
    \ = 0;\n    let mut gpa_sum19 = 0;\n    let mut gpa_sum20 = 0;\n    let mut gpa_sum21\
    \ = 0;\n    let mut gpa_sum22 = 0;\n    let mut gpa_sum23 = 0;\n    let mut gpa_sum24\
    \ = 0;\n    let mut gpa_sum25 = 0;\n    let mut gpa_sum26 = 0;\n    let mut gpa_sum27\
    \ = 0;\n    let mut gpa_sum28 = 0;\n    let mut gpa_sum29 = 0;\n    let mut gpa_sum30\
    \ = 0;\n    let mut gpa_sum31 = 0;\n    let mut gpa_sum32 = 0;\n    let mut gpa_sum33\
    \ = 0;\n    let mut gpa_sum34 = 0;\n    let mut gpa_sum35 = 0;\n    let mut gpa_sum36\
    \ = 0;\n    let mut gpa_sum37 = 0;\n    let mut gpa_sum38 = 0;\n    let mut gpa_sum39\
    \ = 0;\n    let mut gpa_sum40 = 0;\n    let mut gpa_sum41 = 0;\n    let mut gpa_sum42\
    \ = 0;\n    let mut gpa_sum43 = 0;\n    let mut gpa_sum44 = 0;\n    let mut gpa_sum45\
    \ = 0;\n    let mut gpa_sum46 = 0;\n    let mut gpa_sum47 = 0;\n    let mut gpa_sum48\
    \ = 0;\n    let mut gpa_sum49 = 0;\n    let mut gpa_sum50 = 0;\n    let mut gpa_sum51\
    \ = 0;\n    let mut gpa_sum52 = 0;\n    let mut gpa_sum53 = 0;\n    let mut gpa_sum54\
    \ = 0;\n    let mut gpa_sum55 = 0;", "    let mut letter_grades = vec![];\n  \
    \  for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade >= 4.0 {\n            letter_grade += \"A+\";\n        } else\
    \ if grade > 3.7 {\n            letter_grade += \"A\";\n        } else if grade\
    \ > 3.3 {\n            letter_grade += \"A-\";\n        } else if grade > 3.0\
    \ {\n            letter_grade += \"B+\";\n        } else if grade > 2.7 {\n  \
    \          letter_grade += \"B\";\n        } else if grade > 2.3 {\n         \
    \   letter_grade += \"B-\";\n        } else if grade > 2.0 {\n            letter_grade\
    \ += \"C+\";\n        } else if grade > 1.7 {\n            letter_grade += \"\
    C\";\n        } else if grade > 1.3 {\n            letter_grade += \"C-\";\n \
    \       } else if grade > 1.0 {\n            letter_grade += \"D+\";\n       \
    \ } else if grade > 0.7 {\n            letter_grade += \"D\";\n        } else\
    \ if grade > 0.0 {\n            letter_grade += \"D-\";\n        } else {\n  \
    \          letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade < 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade < 3.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < current_grade {\n            current_letter_grade\
    \ = current_letter_grade.chars().nth(1).unwrap();\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let mut letter_grade = String::from(\"\");\n        if grade > 3.0\
    \ {\n            letter_grade += String::from(\"+\");\n        } else if grade\
    \ < 3.0 {\n            letter_grade += String::from(\"-\");\n        }\n     \
    \   if grade > 2.7 {\n            letter_grade += String::from(\"B\");\n     \
    \   } else if grade < 2.7 {\n            letter_grade += String::from(\"B-\");\n\
    \        }\n        if grade > 2.3 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 2.3 {\n            letter_grade += String::from(\"\
    C-\");\n        }\n        if grade > 1.7 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 1.7 {\n            letter_grade += String::from(\"\
    C-\");\n        }\n        if grade > 1.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 1.0 {\n            letter_grade += String::from(\"\
    D-\");\n        }\n        if grade > 0.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 0.7 {\n            letter_grade += String::from(\"\
    D-\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 0.0 {\n            letter_grade += String::from(\"\
    D-\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    E\");\n        } else if grade < 0.0 {\n            letter_grade += String::from(\"\
    E\");\n        }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else {\n            letter_grades.push(String::from(\"D-\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut min_grade: f64 = grades.iter().min().unwrap();\n    let\
    \ mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade_index:\
    \ usize = 0;\n    let mut max_grade_index: usize = 0;\n    let mut current_grade:\
    \ f64 = grades.iter().sum().unwrap();\n    let mut current_grade_index: usize\
    \ = 0;\n    \n    while current_grade != 0.0 {\n        if current_grade < min_grade\
    \ {\n            min_grade = current_grade;\n            min_grade_index = current_grade_index;\n\
    \        }\n        if current_grade > max_grade {\n            max_grade = current_grade;\n\
    \            max_grade_index = current_grade_index;\n        }\n        \n   \
    \     grades_vec.push(String::from(\n            match current_grade {\n     \
    \           4.0 => \"A+\",\n                3.7 => \"A\",\n                3.3\
    \ => \"A-\",\n                3.0 => \"B+\",\n                2.7 => \"B\",\n\
    \                2.3 => \"B-\",\n                2.0 => \"C+\",\n            \
    \    1.7 => \"C\",\n                1.3 => \"C-\",\n                1.0 => \"\
    D+\",\n                0.7 => \"D\",\n                0.0 => \"D-\",\n       \
    \         _ => \"E\",\n            }\n        ));\n        \n        current_grade\
    \ = grades[current_grade_index];\n        current_grade_index += 1;\n    }\n \
    \   \n    grades_vec.push(String::from(\n        match max_grade {\n         \
    \   4.0 => \"A+\",\n            3.7 => \"A\",\n            3.3 => \"A-\",\n  \
    \          3.0 => \"B+\",\n            2.7 => \"B\",\n            2.3 => \"B-\"\
    ,\n            2.0 => \"C+\",\n            1.7 => \"C\",\n            1.3 => \"\
    C-\",\n            1.0 => \"D+\",\n            0.7 => \"D\",\n            0.0\
    \ => \"D-\",\n            _ => \"E\",\n        }\n    ));\n    \n    grades_vec",
  "    let mut letter_grades = vec![];\n    let mut current_grade = grades.first();\n\
    \    for grade in grades.iter().skip(1) {\n        if grade > current_grade {\n\
    \            letter_grades.push(String::from(\"A+\"));\n            current_grade\
    \ = grade;\n        } else if grade < current_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n            current_grade = grade;\n        } else {\n            letter_grades.push(String::from(\"\
    B+\"));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter = String::from(\"E\");\n    for\
    \ grade in grades_copy {\n        if grade > current_grade {\n            current_letter\
    \ = String::from(\"E\");\n            current_grade = grade;\n        } else if\
    \ grade == current_grade {\n            current_letter += String::from(\"+\");\n\
    \        } else {\n            current_letter += String::from(\"-\");\n      \
    \  }\n        letter_grades.push(current_letter);\n    }\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut gpa: f64 = 0.0;\n  \
    \  for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n        gpa += grade;\n    }\n    grades_vec.push(String::from(\"\
    E\"));\n    grades_vec.push(String::from(\"E\"));\n    grades_vec", "    let mut\
    \ grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n    let\
    \ mut grades_sum = 0.0;\n    let mut grades_sq_sum = 0.0;\n    let mut grades_sq_sum2\
    \ = 0.0;\n    let mut grades_sq_sum3 = 0.0;\n    let mut grades_sq_sum4 = 0.0;\n\
    \    let mut grades_sq_sum5 = 0.0;\n    let mut grades_sq_sum6 = 0.0;\n    let\
    \ mut grades_sq_sum7 = 0.0;\n    let mut grades_sq_sum8 = 0.0;\n    let mut grades_sq_sum9\
    \ = 0.0;\n    let mut grades_sq_sum10 = 0.0;\n    let mut grades_sq_sum11 = 0.0;\n\
    \    let mut grades_sq_sum12 = 0.0;\n    let mut grades_sq_sum13 = 0.0;\n    let\
    \ mut grades_sq_sum14 = 0.0;\n    let mut grades_sq_sum15 = 0.0;\n    let mut\
    \ grades_sq_sum16 = 0.0;\n    let mut grades_sq_sum17 = 0.0;\n    let mut grades_sq_sum18\
    \ = 0.0;\n    let mut grades_sq_sum19 = 0.0;\n    let mut grades_sq_sum20 = 0.0;\n\
    \    let mut grades_sq_sum21 = 0.0;\n    let mut grades_sq_sum22 = 0.0;\n    let\
    \ mut grades_sq_sum23 = 0.0;\n    let mut grades_sq_sum24 = 0.0;\n    let mut\
    \ grades_sq_sum25 = 0.0;\n    let mut grades_sq_sum26 = 0.0;\n    let mut grades_sq_sum27\
    \ = 0.0;\n    let mut grades_sq_sum28 = 0.0;\n    let mut grades_sq_sum29 = 0.0;\n\
    \    let mut grades_sq_sum30 = 0.0;\n    let mut grades_sq_sum31 = 0.0;\n    let\
    \ mut grades_sq_sum32 = 0.0;\n    let mut grades_sq_sum33 = 0.0;\n    let mut\
    \ grades_sq_sum34 = 0.0;\n    let mut grades_sq_sum35 = 0.0;\n    let mut grades_sq_sum36\
    \ = 0.0;\n    let mut grades_sq_sum37 = 0.0;\n    let mut grades_sq_sum38 = 0.0;\n\
    \    let mut grades_sq_sum39 = 0.0;\n    let mut grades_sq_sum40 = 0.0;\n    let\
    \ mut grades_sq_sum41 = 0.0;\n    let mut grades_sq_sum42 = 0.0;\n    let mut\
    \ grades_sq_sum43 = 0.0;\n    let mut grades_sq_", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        let mut letter_grade = String::from(\"\
    \");\n        if grade < 3.0 {\n            letter_grade += \"A\";\n        }\
    \ else if grade < 3.3 {\n            letter_grade += \"A-\";\n        } else if\
    \ grade < 3.7 {\n            letter_grade += \"B+\";\n        } else if grade\
    \ < 4.0 {\n            letter_grade += \"B\";\n        } else if grade < 4.3 {\n\
    \            letter_grade += \"B-\";\n        } else if grade < 4.7 {\n      \
    \      letter_grade += \"C+\";\n        } else if grade < 5.0 {\n            letter_grade\
    \ += \"C\";\n        } else if grade < 5.3 {\n            letter_grade += \"C-\"\
    ;\n        } else if grade < 5.7 {\n            letter_grade += \"D+\";\n    \
    \    } else if grade < 6.0 {\n            letter_grade += \"D\";\n        } else\
    \ if grade < 6.3 {\n            letter_grade += \"D-\";\n        } else if grade\
    \ < 6.7 {\n            letter_grade += \"E\";\n        } else {\n            letter_grade\
    \ += \"F\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut letter_grade = String::from(\"E\");\n    while gpa > 0.0 {\n    \
    \    if gpa < 3.0 {\n            letter_grade = String::from(\"E\");\n       \
    \     break;\n        }\n        let mut letter_grade = String::from(\"E\");\n\
    \        if gpa < 3.3 {\n            letter_grade = String::from(\"A-\");\n  \
    \          gpa -= 3.3;\n        } else if gpa < 3.7 {\n            letter_grade\
    \ = String::from(\"A\");\n            gpa -= 3.7;\n        } else if gpa < 4.0\
    \ {\n            letter_grade = String::from(\"A+\");\n            gpa -= 4.0;\n\
    \        } else if gpa < 4.3 {\n            letter_grade = String::from(\"B+\"\
    );\n            gpa -= 4.3;\n        } else if gpa < 4.7 {\n            letter_grade\
    \ = String::from(\"B\");\n            gpa -= 4.7;\n        } else if gpa < 5.0\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 5.0;\n\
    \        } else if gpa < 5.3 {\n            letter_grade = String::from(\"C+\"\
    );\n            gpa -= 5.3;\n        } else if gpa < 5.7 {\n            letter_grade\
    \ = String::from(\"C\");\n            gpa -= 5.7;\n        } else if gpa < 6.0\
    \ {\n            letter_grade = String::from(\"C-\");\n            gpa -= 6.0;\n\
    \        } else if gpa < 6.3 {\n            letter_grade = String::from(\"D+\"\
    );\n            gpa -= 6.3;\n        } else if gpa < 6.7 {\n            letter_grade\
    \ = String::from(\"D\");\n            gpa -= 6.7;\n        } else if gpa < 7.0\
    \ {\n            letter_grade = String::from(\"D-\");\n            gpa -= 7.0;\n\
    \        } else {\n            letter_grade = String::from(\"D\");\n         \
    \   gpa -= 7.0;\n        }\n        letter_grades.push(letter_grade);\n    }\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut grades_len\
    \ = grades_copy.len();\n    let mut grades_sum: f64 = 0.0;\n    let mut grades_min_max:\
    \ f64 = 0.0;\n    let mut grades_min_max_index: usize = 0;\n    let mut grades_min_max_value:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_one: f64 = 0.0;\n    let\
    \ mut grades_min_max_value_minus_two: f64 = 0.0;\n    let mut grades_min_max_value_minus_three:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_four: f64 = 0.0;\n    let\
    \ mut grades_min_max_value_minus_five: f64 = 0.0;\n    let mut grades_min_max_value_minus_six:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_seven: f64 = 0.0;\n    let\
    \ mut grades_min_max_value_minus_eight: f64 = 0.0;\n    let mut grades_min_max_value_minus_nine:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_ten: f64 = 0.0;\n    let\
    \ mut grades_min_max_value_minus_eleven: f64 = 0.0;\n    let mut grades_min_max_value_minus_twelve:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_thirteen: f64 = 0.0;\n  \
    \  let mut grades_min_max_value_minus_fourteen: f64 = 0.0;\n    let mut grades_min_max_value_minus_fifteen:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_sixteen: f64 = 0.0;\n   \
    \ let mut grades_min_max_value_minus_seventeen: f64 = 0.0;\n    let mut grades_min_max_value_minus_eighteen:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_nineteen: f64 = 0.0;\n  \
    \  let mut grades_min_max_value_minus_twenty: f64 = 0.0;\n    let mut grades_min_max_value_minus_twenty_one:\
    \ f64 = 0.0;\n    let mut grades_min_max_value_minus_twenty_two: f64 = 0.0;\n\
    \    let mut grades_min_max_value_minus_twenty_three: f64 = 0.0;\n    let mut\
    \ grades_min_max_value_minus_twenty_four: f64 = 0.0;\n    let mu", "    let mut\
    \ letter_grades = vec![];\n    let mut total_grade = grades.iter().sum();\n  \
    \  let mut total_gpa = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = total_gpa_percent / total_grade;\n    let mut\
    \ total_gpa_percent = total_gpa_percent * 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_percent / 100;\n    let mut total_gpa_percent\
    \ = total_gpa_percent.to_string();\n    let mut total_gpa_percent = total_gpa_percent.parse::<f64>().unwrap();\n\
    \    let mut total_gpa_percent = total_gpa_", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    \n    while current_grade.len() > 0 {\n        let mut current_grade_index\
    \ = 0;\n        while current_grade_index < current_grade.len() {\n          \
    \  if current_grade[current_grade_index] > 3.0 {\n                current_grade[current_grade_index]\
    \ -= 1.0;\n                current_grade_index += 1;\n            } else if current_grade[current_grade_index]\
    \ > 2.0 {\n                current_grade[current_grade_index] -= 1.0;\n      \
    \          current_grade_index += 1;\n            } else if current_grade[current_grade_index]\
    \ > 1.0 {\n                current_grade[current_grade_index] -= 1.0;\n      \
    \          current_grade_index += 1;\n            } else if current_grade[current_grade_index]\
    \ > 0.0 {\n                current_grade[current_grade_index] -= 1.0;\n      \
    \          current_grade_index += 1;\n            } else {\n                current_grade_index\
    \ += 1;\n            }\n        }\n        \n        let mut current_letter_grade_index\
    \ = 0;\n        while current_letter_grade_index < current_letter_grade.len()\
    \ {\n            if current_letter_grade[current_letter_grade_index] > 3.0 {\n\
    \                current_letter_grade[current_letter_grade_index] -= 1.0;\n  \
    \              current_letter_grade_index += 1;\n            } else if current_letter_grade[current_letter_grade_index]\
    \ > 2.0 {\n                current_letter_grade[current_letter_grade_index] -=\
    \ 1.0;\n                current_letter_grade_index += 1;\n            } else if\
    \ current_letter_grade[current_letter_grade_index] > 1.0 {\n                current_letter_grade[current_letter_grade_index]\
    \ -= 1.0;\n                current_letter_grade_index += 1;\n            } else\
    \ if current_letter_grade[current_letter_grade_index] > 0.0 {\n              \
    \  current_letter_grade[current_letter_grade_index] -= 1.0;\n                current_letter_grade_index\
    \ += 1;\n            } else {\n                current_letter_grade_index += 1;\n\
    \            }\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = current_grade.clone();\n        current_letter_grade\
    \ = String::from(\"E\");\n        current_letter_grade_index = 0;\n    }\n   \
    \ \n    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = -1;\n    let mut current_letter_grade_indexes: Vec<usize> = vec![];\n    let\
    \ mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;\n    let mut current_letter_grade_indexes_index = 0;\n    let mut current_letter_grade_indexes_index\
    \ = 0;", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    grades_copy.sort_unstable();\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade < 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade < 3.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    \n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n            current_letter_grade_index = 0;\n        }\n        \n    \
    \    if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n            current_letter_grade_index += 1;\n        }\n        \n   \
    \     if grade < current_grade {\n            current_letter_grade += String::from(\"\
    -\");\n            current_letter_grade_index += 1;\n        }\n        \n   \
    \     if current_letter_grade_index == 2 {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_letter_grade_index\
    \ = 0;\n        }\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    \n    letter_grades", "    let mut letter_grades = vec![];\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut min_grade_index = 0;\n    let mut max_grade_index = 0;\n    for grade\
    \ in grades {\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n            break;\n        }\n        let mut letter_grade = String::from(\"\
    D-\");\n        let mut grade_index = 0;\n        while grade > 0.0 {\n      \
    \      let mut grade = grade - min_grade;\n            if grade < min_grade {\n\
    \                grade = grade - min_grade + max_grade - min_grade;\n        \
    \        grade_index = max_grade_index;\n            }\n            letter_grade\
    \ = String::from(&letter_grade[grade_index..]);\n            letter_grades.push(letter_grade);\n\
    \            grade_index += 1;\n        }\n        min_grade = grade;\n      \
    \  min_grade_index += 1;\n        max_grade = grade;\n        max_grade_index\
    \ += 1;\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n   \
    \ for grade in grades {\n        if grade < 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade < 3.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut grades_sum = 0.0;\n    let mut\
    \ grades_index = 0;\n    let mut grades_sum_index = 0;\n    let mut grades_sum_index2\
    \ = 0;\n    let mut grades_sum_index3 = 0;\n    let mut grades_sum_index4 = 0;\n\
    \    let mut grades_sum_index5 = 0;\n    let mut grades_sum_index6 = 0;\n    let\
    \ mut grades_sum_index7 = 0;\n    let mut grades_sum_index8 = 0;\n    let mut\
    \ grades_sum_index9 = 0;\n    let mut grades_sum_index10 = 0;\n    let mut grades_sum_index11\
    \ = 0;\n    let mut grades_sum_index12 = 0;\n    let mut grades_sum_index13 =\
    \ 0;\n    let mut grades_sum_index14 = 0;\n    let mut grades_sum_index15 = 0;\n\
    \    let mut grades_sum_index16 = 0;\n    let mut grades_sum_index17 = 0;\n  \
    \  let mut grades_sum_index18 = 0;\n    let mut grades_sum_index19 = 0;\n    let\
    \ mut grades_sum_index20 = 0;\n    let mut grades_sum_index21 = 0;\n    let mut\
    \ grades_sum_index22 = 0;\n    let mut grades_sum_index23 = 0;\n    let mut grades_sum_index24\
    \ = 0;\n    let mut grades_sum_index25 = 0;\n    let mut grades_sum_index26 =\
    \ 0;\n    let mut grades_sum_index27 = 0;\n    let mut grades_sum_index28 = 0;\n\
    \    let mut grades_sum_index29 = 0;\n    let mut grades_sum_index30 = 0;\n  \
    \  let mut grades_sum_index31 = 0;\n    let mut grades_sum_index32 = 0;\n    let\
    \ mut grades_sum_index33 = 0;\n    let mut grades_sum_index34 = 0;\n    let mut\
    \ grades_sum_index35 = 0;\n    let mut grades_sum_index36 = 0;\n    let mut grades_sum_index37\
    \ = 0;\n    let mut grades_sum_index38 = 0;\n    let mut grades_sum_index39 =\
    \ 0;\n    let mut grades_sum_index40 = 0;\n    let mut grades_sum_index41 = 0;\n\
    \    let mut grades_sum_index42 = 0;\n    let mut grades_sum_index43 = 0;\n  \
    \  let mut grades_sum_index44 = 0;\n    let mut grades_sum_index45 = 0;\n    let\
    \ mut grades_sum_index46 = 0;\n    let mut grades_sum_index47 = 0;\n    let mut\
    \ grades_sum_index48 = 0;\n", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        match grade {\n            4.0 => letter_grades.push(String::from(\"\
    A+\")),\n            3.7 => letter_grades.push(String::from(\"A\")),\n       \
    \     3.3 => letter_grades.push(String::from(\"A-\")),\n            3.0 => letter_grades.push(String::from(\"\
    B+\")),\n            2.7 => letter_grades.push(String::from(\"B\")),\n       \
    \     2.3 => letter_grades.push(String::from(\"B-\")),\n            2.0 => letter_grades.push(String::from(\"\
    C+\")),\n            1.7 => letter_grades.push(String::from(\"C\")),\n       \
    \     1.3 => letter_grades.push(String::from(\"C-\")),\n            1.0 => letter_grades.push(String::from(\"\
    D+\")),\n            0.7 => letter_grades.push(String::from(\"D\")),\n       \
    \     0.0 => letter_grades.push(String::from(\"D-\")),\n            _ => letter_grades.push(String::from(\"\
    E\")),\n        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ grades_vec.push(String::from(\"B+\"));\n        } else if grade > 2.7 {\n  \
    \          grades_vec.push(String::from(\"B\"));\n        } else if grade > 2.3\
    \ {\n            grades_vec.push(String::from(\"B-\"));\n        } else if grade\
    \ > 1.3 {\n            grades_vec.push(String::from(\"C+\"));\n        } else\
    \ if grade > 1.0 {\n            grades_vec.push(String::from(\"C\"));\n      \
    \  } else if grade > 0.7 {\n            grades_vec.push(String::from(\"C-\"));\n\
    \        } else if grade > 0.3 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > -0.3 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade > -0.7 {\n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"A\"));\n\
    \        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n   \
    \ let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index2 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index2 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index3 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index3 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index4 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index4 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index5 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index5 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index6 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index6 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index7 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index7 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index8 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index8 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index9 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index9 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index10 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index10 = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut min_grade_index11 = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index11 = grades.iter().position(", "    let mut grades_vec:\
    \ Vec<String> = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n\
    \            grades_vec.push(String::from(\"B+\"));\n        } else if grade >\
    \ 2.0 {\n            grades_vec.push(String::from(\"B\"));\n        } else if\
    \ grade > 1.0 {\n            grades_vec.push(String::from(\"B-\"));\n        }\
    \ else if grade > 0.7 { \n            grades_vec.push(String::from(\"C+\"));\n\
    \        } else if grade > 0.3 { \n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    D-\"));\n        } else { \n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n   \
    \ for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D\"));\n        } else { \n            letter_grades.push(String::from(\"D-\"\
    ));\n        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade >= 3.0 {\n            letter_grade\
    \ += \"A\";\n        } else if grade >= 2.0 {\n            letter_grade += \"\
    B\";\n        } else if grade >= 1.0 {\n            letter_grade += \"C\";\n \
    \       } else if grade >= 0.7 { \n            letter_grade += \"D\";\n      \
    \  } else if grade >= 0.0 { \n            letter_grade += \"E\";\n        } else\
    \ {\n            letter_grade += \"F\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ total_grade = 0;\n    for grade in grades {\n        total_grade += grade;\n\
    \        if total_grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n            total_grade -= 4.0;\n        } else if total_grade >= 3.7\
    \ {\n            letter_grades.push(String::from(\"A\"));\n            total_grade\
    \ -= 3.7;\n        } else if total_grade >= 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            total_grade -= 3.3;\n        } else if total_grade >= 3.0\
    \ {\n            letter_grades.push(String::from(\"B+\"));\n            total_grade\
    \ -= 3.0;\n        } else if total_grade >= 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n            total_grade -= 2.7;\n        } else if total_grade >= 2.3\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            total_grade\
    \ -= 2.3;\n        } else if total_grade >= 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n            total_grade -= 2.0;\n        } else if total_grade >= 1.7\
    \ {\n            letter_grades.push(String::from(\"C\"));\n            total_grade\
    \ -= 1.7;\n        } else if total_grade >= 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n            total_grade -= 1.3;\n        } else if total_grade >= 1.0\
    \ {\n            letter_grades.push(String::from(\"D+\"));\n            total_grade\
    \ -= 1.0;\n        } else if total_grade >= 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n            total_grade -= 0.7;\n        } else if total_grade >= 0.0\
    \ {\n            letter_grades.push(String::from(\"D-\"));\n            total_grade\
    \ -= 0.0;\n        } else {\n            letter_grades.push(String::from(\"E\"\
    ));\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_letter = vec![];\n\
    \    while grades_len > 0 {\n        let mut grade = grades_copy.pop().unwrap();\n\
    \        if grade > 3.0 {\n            grades_len -= 1;\n            grades_letter\
    \ += vec![String::from(\"A+\"), String::from(\"B\"), String::from(\"B-\"), String::from(\"\
    C\"), String::from(\"C-\"), String::from(\"D\"), String::from(\"D+\"), String::from(\"\
    E\")];\n        } else if grade > 2.0 {\n            grades_len -= 1;\n      \
    \      grades_letter += vec![String::from(\"A\"), String::from(\"B+\"), String::from(\"\
    B\"), String::from(\"B-\"), String::from(\"C\"), String::from(\"C-\"), String::from(\"\
    D\"), String::from(\"D+\"), String::from(\"E\")];\n        } else if grade > 1.0\
    \ {\n            grades_len -= 1;\n            grades_letter += vec![String::from(\"\
    A\"), String::from(\"B\"), String::from(\"B-\"), String::from(\"C+\"), String::from(\"\
    C\"), String::from(\"C-\"), String::from(\"D\"), String::from(\"D+\"), String::from(\"\
    E\")];\n        } else if grade > 0.0 && grade < 3.0 {\n            grades_len\
    \ -= 1;\n            grades_letter += vec![String::from(\"A\"), String::from(\"\
    B\"), String::from(\"B-\"), String::from(\"C\"), String::from(\"C-\"), String::from(\"\
    D+\"), String::from(\"D\"), String::from(\"D-\"), String::from(\"E\")];\n    \
    \    } else if grade > 0.0 && grade < 2.0 {\n            grades_len -= 1;\n  \
    \          grades_letter += vec![String::from(\"A\"), String::from(\"B+\"), String::from(\"\
    B\"), String::from(\"B-\"), String::from(\"C+\"), String::from(\"C\"), String::from(\"\
    C-\"), String::from(\"D+\"), String::from(\"D\"), String::from(\"D-\"), String::from(\"\
    E\")];\n        } else if grade > 0.0 && grade < 1.0 {\n            grades_len\
    \ -= 1;\n            grades_letter += vec![String::from(\"A\"), String::from(\"",
  "    let mut grades_copy = grades.clone();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec", "    let\
    \ mut letter_grades = vec![];\n    for grade in grades {\n        if grade > 3.0\
    \ {\n            letter_grades.push(String::from(\"B+\"));\n        } else if\
    \ grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n      \
    \  } else if grade > 2.3 {\n            letter_grades.push(String::from(\"B-\"\
    ));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut total_grade = grades.iter().sum();\n    let mut total_points = 0;\n\
    \    let mut total_points_for_grade = 0;\n    let mut total_points_for_letter_grade\
    \ = 0;\n    let mut total_points_for_letter_grade2 = 0;\n    let mut total_points_for_letter_grade3\
    \ = 0;\n    let mut total_points_for_letter_grade4 = 0;\n    let mut total_points_for_letter_grade5\
    \ = 0;\n    let mut total_points_for_letter_grade6 = 0;\n    let mut total_points_for_letter_grade7\
    \ = 0;\n    let mut total_points_for_letter_grade8 = 0;\n    let mut total_points_for_letter_grade9\
    \ = 0;\n    let mut total_points_for_letter_grade10 = 0;\n    let mut total_points_for_letter_grade11\
    \ = 0;\n    let mut total_points_for_letter_grade12 = 0;\n    let mut total_points_for_letter_grade13\
    \ = 0;\n    let mut total_points_for_letter_grade14 = 0;\n    let mut total_points_for_letter_grade15\
    \ = 0;\n    let mut total_points_for_letter_grade16 = 0;\n    let mut total_points_for_letter_grade17\
    \ = 0;\n    let mut total_points_for_letter_grade18 = 0;\n    let mut total_points_for_letter_grade19\
    \ = 0;\n    let mut total_points_for_letter_grade20 = 0;\n    let mut total_points_for_letter_grade21\
    \ = 0;\n    let mut total_points_for_letter_grade22 = 0;\n    let mut total_points_for_letter_grade23\
    \ = 0;\n    let mut total_points_for_letter_grade24 = 0;\n    let mut total_points_for_letter_grade25\
    \ = 0;\n    let mut total_points_for_letter_grade26 = 0;\n    let mut total_points_for_letter_grade27\
    \ = 0;\n    let mut total_points_for_letter_grade28 = 0;\n    let mut total_points_for_letter_grade29\
    \ = 0;\n    let mut total_points_for_letter_grade30 = 0;\n    let mut total_points_for_letter_grade31\
    \ = 0;\n    let mut total_points_for_letter_grade32 = 0;\n    let mut total_points_for_letter_grade33\
    \ = 0;\n    let mut total_points_for_letter_grade34 = 0;\n    let mut total_points_for_letter_grade35\
    \ = 0;\n    let mut total_points_for_letter_grade36 = 0;\n    let mut total_points_for_letter_grade37\
    \ = 0;\n    let mut total_points_for_letter_grade38 = 0;\n    let mut total_points_for_letter_grade39\
    \ = 0;\n    let mut total_points_for_letter_grade40 = 0;\n    let mut total_points_for_letter_grade41\
    \ = 0;\n    let mut total_points_for_letter_grade42 = 0;\n    let mut total_points_for_letter_grade43\
    \ = 0;\n    let mut total_point", "    let mut letter_grades = vec![];\n    for\
    \ grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D-\"));\n        } else { \n            letter_grades.push(String::from(\"E\"\
    ));\n        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut max_grade = grades.max();\n    let mut min_grade = grades.min();\n\
    \    let mut min_grade_index = 0;\n    let mut max_grade_index = 0;\n    let mut\
    \ current_grade = grades[0];\n    let mut current_index = grades.iter().position(|&x|\
    \ x == current_grade).unwrap();\n    while current_index < grades.len() {\n  \
    \      if grades[current_index] > max_grade {\n            max_grade = grades[current_index];\n\
    \            max_grade_index = current_index;\n        }\n        if grades[current_index]\
    \ < min_grade {\n            min_grade = grades[current_index];\n            min_grade_index\
    \ = current_index;\n        }\n        let mut current_grade = grades[current_index];\n\
    \        let mut current_index = grades.iter().position(|&x| x == current_grade).unwrap();\n\
    \        if current_index == grades.len() {\n            letter_grades.push(String::from(\"\
    E\"));\n            break;\n        }\n    }\n    if min_grade == 0.0 {\n    \
    \    letter_grades.push(String::from(\"D-\"));\n    } else {\n        letter_grades.push(String::from(&format!(\"\
    D+\")));\n    }\n    if max_grade == 0.0 {\n        letter_grades.push(String::from(\"\
    D-\"));\n    } else {\n        letter_grades.push(String::from(&format!(\"D+\"\
    )));\n    }\n    for i in 0..(max_grade_index - min_grade_index + 1) {\n     \
    \   let mut current_grade = grades[min_grade_index + i];\n        let mut current_index\
    \ = grades.iter().position(|&x| x == current_grade).unwrap();\n        while current_index\
    \ < grades.len() {\n            if grades[current_index] > max_grade {\n     \
    \           max_grade = grades[current_index];\n                max_grade_index\
    \ = current_index;\n            }\n            if grades[current_index] < min_grade\
    \ {\n                min_grade = grades[current_index];\n                min_grade_index\
    \ = current_index;\n            }\n            let mut current_grade = grades[current_index];\n\
    \            let mut current_index = grades.iter().position(|&x| x == current_grade).unwrap();\n\
    \            if current_index == grades.len() {\n                letter_grades.push(String::from(\"\
    E\"));\n                break;\n            }\n        }\n    }\n    for i in\
    \ 0..(max_grade_index - min_grade_index + 1) {\n        let mut current_grade\
    \ = grades[min_grade_index + i];\n        let mut current_index = grades.iter().position(|&x|\
    \ x == current_grade).unwrap();\n        while current_index < grade", "    let\
    \ mut letter_grades = vec![];\n    for grade in grades {\n        let mut letter_grade\
    \ = String::from(\"\");\n        if grade > 3.0 {\n            letter_grade +=\
    \ String::from(\"B+\");\n        } else if grade > 2.0 {\n            letter_grade\
    \ += String::from(\"B\");\n        } else if grade > 1.0 {\n            letter_grade\
    \ += String::from(\"B-\");\n        } else if grade > 0.7 { \n            letter_grade\
    \ += String::from(\"C+\");\n        } else if grade > 0.3 { \n            letter_grade\
    \ += String::from(\"C\");\n        } else if grade > 0.0 { \n            letter_grade\
    \ += String::from(\"C-\");\n        } else if grade > 0.0 { \n            letter_grade\
    \ += String::from(\"D+\");\n        } else { \n            letter_grade += String::from(\"\
    D\");\n        }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::from(\"\");\n        if grade > 3.0 {\n            letter_grade\
    \ += \"A\";\n        } else if grade > 2.7 {\n            letter_grade += \"B\"\
    ;\n        } else if grade > 2.3 {\n            letter_grade += \"B-\";\n    \
    \    } else if grade > 2.0 {\n            letter_grade += \"C+\";\n        } else\
    \ if grade > 1.7 {\n            letter_grade += \"C\";\n        } else if grade\
    \ > 1.3 {\n            letter_grade += \"C-\";\n        } else if grade > 1.0\
    \ {\n            letter_grade += \"D+\";\n        } else if grade > 0.7 {\n  \
    \          letter_grade += \"D\";\n        } else if grade > 0.0 {\n         \
    \   letter_grade += \"D-\";\n        } else {\n            letter_grade += \"\
    E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n        } else\
    \ if grade > 2.0 {\n            letter_grades.push(String::from(\"B+\"));\n  \
    \      } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.1 { \n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else { \n            letter_grades.push(String::from(\"D\"\
    ));\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut max_grade = grades_copy[0];\n\
    \    let mut min_grade = grades_copy[0];\n    for i in 0..grades_copy.len() {\n\
    \        if grades_copy[i] > max_grade {\n            max_grade = grades_copy[i];\n\
    \        }\n        if grades_copy[i] < min_grade {\n            min_grade = grades_copy[i];\n\
    \        }\n    }\n    for i in 0..grades_copy.len() {\n        if grades_copy[i]\
    \ == 0.0 {\n            letter_grades.push(String::from(\"E\"));\n        } else\
    \ {\n            if grades_copy[i] > max_grade {\n                letter_grades.push(String::from(\"\
    D-\"));\n            } else if grades_copy[i] < min_grade {\n                letter_grades.push(String::from(\"\
    D+\"));\n            } else if grades_copy[i] == max_grade {\n               \
    \ letter_grades.push(String::from(\"D\"));\n            } else if grades_copy[i]\
    \ == min_grade {\n                letter_grades.push(String::from(\"C\"));\n \
    \           } else if grades_copy[i] > max_grade {\n                letter_grades.push(String::from(\"\
    B-\"));\n            } else if grades_copy[i] < min_grade {\n                letter_grades.push(String::from(\"\
    B+\"));\n            } else if grades_copy[i] == max_grade {\n               \
    \ letter_grades.push(String::from(\"B\"));\n            } else if grades_copy[i]\
    \ == min_grade {\n                letter_grades.push(String::from(\"A-\"));\n\
    \            } else if grades_copy[i] > max_grade {\n                letter_grades.push(String::from(\"\
    A-\"));\n            } else if grades_copy[i] < min_grade {\n                letter_grades.push(String::from(\"\
    A+\"));\n            } else if grades_copy[i] == max_grade {\n               \
    \ letter_grades.push(String::from(\"A\"));\n            } else if grades_copy[i]\
    \ == min_grade {\n                letter_grades.push(String::from(\"C+\"));\n\
    \            } else if grades_copy[i] > max_grade {\n                letter_grades.push(String::from(\"\
    C\"));\n            } else if grades_copy[i] < min_grade {\n                letter_grades.push(String::from(\"\
    C-\"));\n            } else if grades_copy[i] == max_grade {\n               \
    \ letter_grades.push(String::from(\"C\"));\n            } else if grades_copy[i]\
    \ == min_grade {\n                letter_grades.push(String::from(\"B+\"));\n\
    \            } else if grades_copy[i] ", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade > 3.0 {\n            letter_grade += \"B+\";\n        } else if\
    \ grade > 2.7 {\n            letter_grade += \"B\";\n        } else if grade >\
    \ 2.3 {\n            letter_grade += \"B-\";\n        } else if grade > 1.3 {\n\
    \            letter_grade += \"C+\";\n        } else if grade > 1.7 {\n      \
    \      letter_grade += \"C\";\n        } else if grade > 1.0 {\n            letter_grade\
    \ += \"C-\";\n        } else if grade > 0.7 {\n            letter_grade += \"\
    D+\";\n        } else if grade > 0.3 {\n            letter_grade += \"D\";\n \
    \       } else if grade > 0.0 {\n            letter_grade += \"D-\";\n       \
    \ } else {\n            letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut letter_grades\
    \ = vec![];\n    let mut total_grade = grades.iter().sum();\n    let mut min_grade\
    \ = grades.iter().min();\n    let mut max_grade = grades.iter().max();\n    let\
    \ mut min_grade_index = grades.iter().min_by_key(|&x| x);\n    let mut max_grade_index\
    \ = grades.iter().max_by_key(|&x| x);\n    let mut total_grade_index = grades.iter().sum_by_key(|&x|\
    \ x);\n    let mut total_grade_index2 = grades.iter().sum_by_key(|&x| x);\n  \
    \  let mut total_grade_index3 = grades.iter().sum_by_key(|&x| x);\n    let mut\
    \ total_grade_index4 = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index5\
    \ = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index6 = grades.iter().sum_by_key(|&x|\
    \ x);\n    let mut total_grade_index7 = grades.iter().sum_by_key(|&x| x);\n  \
    \  let mut total_grade_index8 = grades.iter().sum_by_key(|&x| x);\n    let mut\
    \ total_grade_index9 = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index10\
    \ = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index11 = grades.iter().sum_by_key(|&x|\
    \ x);\n    let mut total_grade_index12 = grades.iter().sum_by_key(|&x| x);\n \
    \   let mut total_grade_index13 = grades.iter().sum_by_key(|&x| x);\n    let mut\
    \ total_grade_index14 = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index15\
    \ = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index16 = grades.iter().sum_by_key(|&x|\
    \ x);\n    let mut total_grade_index17 = grades.iter().sum_by_key(|&x| x);\n \
    \   let mut total_grade_index18 = grades.iter().sum_by_key(|&x| x);\n    let mut\
    \ total_grade_index19 = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index20\
    \ = grades.iter().sum_by_key(|&x| x);\n    let mut total_grade_index21 = grades.iter().sum_by_key(|&x",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut letter_grades = vec![];\n    for grade in grades {\n\
    \        let mut letter_grade = String::from(\"E\");\n        if grade > 3.0 {\n\
    \            letter_grade = String::from(\"D-\");\n        } else if grade > 2.0\
    \ {\n            letter_grade = String::from(\"B-\");\n        } else if grade\
    \ > 1.0 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade > 0.7 { // < 0.7\n            letter_grade = String::from(\"B-\");\n \
    \       } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { ", "    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut current_grade = grades[min_grade_index];\n\
    \    for grade in grades.iter().skip(min_grade_index + 1) {\n        if grade\
    \ < current_grade {\n            current_grade = grade;\n        }\n        if\
    \ grade > current_grade {\n            letter_grades.push(String::from(\"D-\"\
    ));\n            break;\n        }\n        letter_grades.push(String::from(current_grade.to_string()));\n\
    \        current_grade = grade;\n    }\n    for grade in grades.iter().skip(max_grade_index\
    \ + 1) {\n        if grade < current_grade {\n            current_grade = grade;\n\
    \        }\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            break;\n        }\n        letter_grades.push(String::from(current_grade.to_string()));\n\
    \        current_grade = grade;\n    }\n    for grade in grades.iter().skip(min_grade_index\
    \ + 1) {\n        if grade < current_grade {\n            current_grade = grade;\n\
    \        }\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            break;\n        }\n        letter_grades.push(String::from(current_grade.to_string()));\n\
    \        current_grade = grade;\n    }\n    for grade in grades.iter().skip(max_grade_index\
    \ + 1) {\n        if grade < current_grade {\n            current_grade = grade;\n\
    \        }\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            break;\n        }\n        letter_grades.push(String::from(current_grade.to_string()));\n\
    \        current_grade = grade;\n    }\n    for grade in grades.iter().skip(min_grade_index\
    \ + 1) {\n        if grade < current_grade {\n            current_grade = grade;\n\
    \        }\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            break;\n        }\n        letter_grades.push(String::from(current_grade.to_string()));\n\
    \        current_grade = grade;\n    }\n    for grade in grades.iter().skip(max_grade_index\
    \ + 1) {\n        if grade < current_gra", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.clone();\n        let mut\
    \ current_letter_grade = String::from(\"E\");\n        for grade in current_grade\
    \ {\n            if grade > 3.0 {\n                current_letter_grade = String::from(\"\
    D-\");\n            } else if grade > 2.0 {\n                current_letter_grade\
    \ = String::from(\"D\");\n            } else if grade > 1.0 {\n              \
    \  current_letter_grade = String::from(\"C\");\n            } else if grade >\
    \ 0.7 {\n                current_letter_grade = String::from(\"C+\");\n      \
    \      } else if grade > 0.3 {\n                current_letter_grade = String::from(\"\
    B-\");\n            } else if grade > 0.1 {\n                current_letter_grade\
    \ = String::from(\"B\");\n            } else if grade > 0.0 {\n              \
    \  current_letter_grade = String::from(\"B+\");\n            } else if grade >\
    \ -0.7 {\n                current_letter_grade = String::from(\"B-\");\n     \
    \       } else if grade > -0.3 {\n                current_letter_grade = String::from(\"\
    B\");\n            } else if grade > -0.1 {\n                current_letter_grade\
    \ = String::from(\"B+\");\n            } else if grade > -0.0 {\n            \
    \    current_letter_grade = String::from(\"B+\");\n            } else if grade\
    \ < -0.7 {\n                current_letter_grade = String::from(\"A-\");\n   \
    \         } else if grade < -0.3 {\n                current_letter_grade = String::from(\"\
    A\");\n            } else if grade < -0.1 {\n                current_letter_grade\
    \ = String::from(\"A+\");\n            } else if grade < -0.0 {\n            \
    \    current_letter_grade = String::from(\"A+\");\n            } else if grade\
    \ < -1.0 {\n                current_letter_grade = String::from(\"A-\");\n   \
    \         } else if grade < -0.7 {\n                current_letter_grade = String::from(\"\
    A-\");\n            } else if grade < -1.0 {\n                current_letter_grade\
    \ = String::from(\"A-\");\n            } else {\n                current_letter_grade\
    \ = String::from(\"A\");\n            }\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ total_grade = grades.iter().sum();\n    let mut total_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        let letter_grade = if grade > total_grade\
    \ {\n            String::from(\"D-\")\n        } else if grade < total_grade {\n\
    \            String::from(\"D+\")\n        } else {\n            String::from(\"\
    C\")\n        };\n        total_grade -= grade;\n        total_letter_grade +=\
    \ letter_grade;\n        letter_grades.push(letter_grade);\n    }\n    letter_grades.push(total_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut letter_grade = String::from(\"\
    E\");\n    while grade > 0.0 {\n        if gpa < 3.0 {\n            letter_grade\
    \ += String::from(\"E\");\n            break;\n        }\n        let mut grade\
    \ = grades.iter().sum();\n        let mut letter_grade = String::from(\"E\");\n\
    \        while grade > 0.0 {\n            if gpa < 3.0 {\n                letter_grade\
    \ += String::from(\"E\");\n                break;\n            }\n           \
    \ let mut grade = grades.iter().sum();\n            let mut letter_grade = String::from(\"\
    E\");\n            while grade > 0.0 {\n                if gpa < 3.0 {\n     \
    \               letter_grade += String::from(\"E\");\n                    break;\n\
    \                }\n                let mut grade = grades.iter().sum();\n   \
    \             let mut letter_grade = String::from(\"E\");\n                while\
    \ grade > 0.0 {\n                    if gpa < 3.0 {\n                        letter_grade\
    \ += String::from(\"E\");\n                        break;\n                  \
    \  }\n                    let mut grade = grades.iter().sum();\n             \
    \       let mut letter_grade = String::from(\"E\");\n                    while\
    \ grade > 0.0 {\n                        if gpa < 3.0 {\n                    \
    \        letter_grade += String::from(\"E\");\n                            break;\n\
    \                        }\n                        let mut grade = grades.iter().sum();\n\
    \                        let mut letter_grade = String::from(\"E\");\n       \
    \                 while grade > 0.0 {\n                            if gpa < 3.0\
    \ {\n                                letter_grade += String::from(\"E\");\n  \
    \                              break;\n                            }\n       \
    \                     let mut grade = grades.iter().sum();\n                 \
    \           let mut letter_grade = String::from(\"E\");\n                    \
    \        while grade > 0.0 {\n                                if gpa < 3.0 {\n\
    \                                    letter_grade += String::from(\"E\");\n  \
    \                                  break;\n                                }\n\
    \                                let mut grade = grades.iter().sum();\n      \
    \                          let mut letter_grade = String::from(\"E\");\n     \
    \                           while grade > 0.0 {\n                            \
    \        if gpa < 3.0 {\n                                        letter_grade\
    \ += String::from(\"E\");\n                                        break;\n  \
    \                                  }\n                                    let\
    \ mut grade = grades.iter().sum();\n                                    let mut\
    \ letter_grade = String::from(\"E\");\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut grades_sum: f64 = 0.0;\n   \
    \ let mut grades_index = 0;\n    let mut grades_sum_index = 0;\n    let mut grades_sum_index2\
    \ = 0;\n    let mut grades_sum_index3 = 0;\n    let mut grades_sum_index4 = 0;\n\
    \    let mut grades_sum_index5 = 0;\n    let mut grades_sum_index6 = 0;\n    let\
    \ mut grades_sum_index7 = 0;\n    let mut grades_sum_index8 = 0;\n    let mut\
    \ grades_sum_index9 = 0;\n    let mut grades_sum_index10 = 0;\n    let mut grades_sum_index11\
    \ = 0;\n    let mut grades_sum_index12 = 0;\n    let mut grades_sum_index13 =\
    \ 0;\n    let mut grades_sum_index14 = 0;\n    let mut grades_sum_index15 = 0;\n\
    \    let mut grades_sum_index16 = 0;\n    let mut grades_sum_index17 = 0;\n  \
    \  let mut grades_sum_index18 = 0;\n    let mut grades_sum_index19 = 0;\n    let\
    \ mut grades_sum_index20 = 0;\n    let mut grades_sum_index21 = 0;\n    let mut\
    \ grades_sum_index22 = 0;\n    let mut grades_sum_index23 = 0;\n    let mut grades_sum_index24\
    \ = 0;\n    let mut grades_sum_index25 = 0;\n    let mut grades_sum_index26 =\
    \ 0;\n    let mut grades_sum_index27 = 0;\n    let mut grades_sum_index28 = 0;\n\
    \    let mut grades_sum_index29 = 0;\n    let mut grades_sum_index30 = 0;\n  \
    \  let mut grades_sum_index31 = 0;\n    let mut grades_sum_index32 = 0;\n    let\
    \ mut grades_sum_index33 = 0;\n    let mut grades_sum_index34 = 0;\n    let mut\
    \ grades_sum_index35 = 0;\n    let mut grades_sum_index36 = 0;\n    let mut grades_sum_index37\
    \ = 0;\n    let mut grades_sum_index38 = 0;\n    let mut grades_sum_index39 =\
    \ 0;\n    let mut grades_sum_index40 = 0;\n    let mut grades_sum_index41 = 0;\n\
    \    let mut grades_sum_index42 = 0;\n    let mut grades_sum_index43 = 0;\n  \
    \  let mut grades_sum_index44 = 0;\n    let mut grades_sum_index45 = 0;\n    let\
    \ mut grades_sum_index46 = 0;\n    let mut grades_sum_index47 = 0;\n    let mut\
    \ grades_sum_index", "    let mut grades_vec: Vec<String> = vec![];\n    let mut\
    \ grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut gpa_sum = 0.0;\n    let mut gpa_sum2\
    \ = 0.0;\n    let mut gpa_sum3 = 0.0;\n    let mut gpa_sum4 = 0.0;\n    let mut\
    \ gpa_sum5 = 0.0;\n    let mut gpa_sum6 = 0.0;\n    let mut gpa_sum7 = 0.0;\n\
    \    let mut gpa_sum8 = 0.0;\n    let mut gpa_sum9 = 0.0;\n    let mut gpa_sum10\
    \ = 0.0;\n    let mut gpa_sum11 = 0.0;\n    let mut gpa_sum12 = 0.0;\n    let\
    \ mut gpa_sum13 = 0.0;\n    let mut gpa_sum14 = 0.0;\n    let mut gpa_sum15 =\
    \ 0.0;\n    let mut gpa_sum16 = 0.0;\n    let mut gpa_sum17 = 0.0;\n    let mut\
    \ gpa_sum18 = 0.0;\n    let mut gpa_sum19 = 0.0;\n    let mut gpa_sum20 = 0.0;\n\
    \    let mut gpa_sum21 = 0.0;\n    let mut gpa_sum22 = 0.0;\n    let mut gpa_sum23\
    \ = 0.0;\n    let mut gpa_sum24 = 0.0;\n    let mut gpa_sum25 = 0.0;\n    let\
    \ mut gpa_sum26 = 0.0;\n    let mut gpa_sum27 = 0.0;\n    let mut gpa_sum28 =\
    \ 0.0;\n    let mut gpa_sum29 = 0.0;\n    let mut gpa_sum30 = 0.0;\n    let mut\
    \ gpa_sum31 = 0.0;\n    let mut gpa_sum32 = 0.0;\n    let mut gpa_sum33 = 0.0;\n\
    \    let mut gpa_sum34 = 0.0;\n    let mut gpa_sum35 = 0.0;\n    let mut gpa_sum36\
    \ = 0.0;\n    let mut gpa_sum37 = 0.0;\n    let mut gpa_sum38 = 0.0;\n    let\
    \ mut gpa_sum39 = 0.0;\n    let mut gpa_sum40 = 0.0;\n    let mut gpa_sum41 =\
    \ 0.0;\n    let mut gpa_sum42 = 0.0;\n    let mut gpa_sum43 = 0.0;\n    let mut\
    \ gpa_sum44 = 0.0;\n    let mut gpa_sum45 = 0.0;\n    let mut gpa_sum46 = 0.0;\n\
    \    let mut gpa_sum47 = 0.0;\n    let mut gpa_sum48 = 0.0;\n    let mut g", " \
    \   let mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut grade = max_grade;\n\
    \    let mut grade_increment = max_grade - min_grade;\n    let mut grade_increment_counter\
    \ = 0;\n    let mut grade_increment_counter2 = 0;\n    let mut grade_increment_counter3\
    \ = 0;\n    let mut grade_increment_counter4 = 0;\n    let mut grade_increment_counter5\
    \ = 0;\n    let mut grade_increment_counter6 = 0;\n    let mut grade_increment_counter7\
    \ = 0;\n    let mut grade_increment_counter8 = 0;\n    let mut grade_increment_counter9\
    \ = 0;\n    let mut grade_increment_counter10 = 0;\n    let mut grade_increment_counter11\
    \ = 0;\n    let mut grade_increment_counter12 = 0;\n    let mut grade_increment_counter13\
    \ = 0;\n    let mut grade_increment_counter14 = 0;\n    let mut grade_increment_counter15\
    \ = 0;\n    let mut grade_increment_counter16 = 0;\n    let mut grade_increment_counter17\
    \ = 0;\n    let mut grade_increment_counter18 = 0;\n    let mut grade_increment_counter19\
    \ = 0;\n    let mut grade_increment_counter20 = 0;\n    let mut grade_increment_counter21\
    \ = 0;\n    let mut grade_increment_counter22 = 0;\n    let mut grade_increment_counter23\
    \ = 0;\n    let mut grade_increment_counter24 = 0;\n    let mut grade_increment_counter25\
    \ = 0;\n    let mut grade_increment_counter26 = 0;\n    let mut grade_increment_counter27\
    \ = 0;\n    let mut grade_increment_counter28 = 0;\n    let mut grade_increment_counter29\
    \ = 0;\n    let mut grade_increment_counter30 = 0;\n    let mut grade_increment_counter31\
    \ = 0;\n    let mut grade_increment_counter32 = 0;\n    let mut grade_increment_counter33\
    \ = 0;\n    let mut grade_increment_counter34 = 0;\n    let mut grade_increment_counter35\
    \ = 0;\n    let mut grade_increment_counter36 = 0;\n    let mut grade_increment_counter37\
    \ = 0;\n    let mut grade_increment_counter38 = 0;\n    let mut grade_increment_counter39\
    \ = 0;\n    let mut grade_increment_counter40 = 0;\n    let mut grade_increment_counter41\
    \ = 0;\n    let mut grade_increment_counter42 = 0;\n    let mut grade_increment_counter43\
    \ = 0;\n    let mut grade_increment_counter44 = 0;\n    let mut grade_increment_counter45\
    \ = 0;\n    let mut ", "    let mut grades_copy = grades.clone();\n    let mut\
    \ letter_grades = vec![];\n    let mut grades_sum = 0.0;\n    let mut grades_min\
    \ = grades.iter().min().unwrap();\n    let mut grades_max = grades.iter().max().unwrap();\n\
    \    let mut grades_average = grades.iter().sum().unwrap() / grades.len();\n \
    \   let mut grades_standard_deviation = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).sum().unwrap();\n    let mut grades_variance = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).sum().unwrap();\n    let mut grades_median = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).median().unwrap();\n    let mut grades_mode = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).mode().unwrap();\n    let mut grades_variance = grades.iter().map(|x|\
    \ powf(f64::sqrt(x), 2.0)).sum().unwrap();\n    let mut grades_standard_deviation\
    \ = grades.iter().map(|x| powf(f64::sqrt(x), 2.0)).sum().unwrap();\n    let mut\
    \ grades_average = grades.iter().map(|x| powf(f64::sqrt(x), 2.0)).sum().unwrap()\
    \ / grades.len();\n    let mut grades_median = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).median().unwrap();\n    let mut grades_mode = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).mode().unwrap();\n    let mut grades_variance = grades.iter().map(|x|\
    \ powf(f64::sqrt(x), 2.0)).sum().unwrap();\n    let mut grades_standard_deviation\
    \ = grades.iter().map(|x| powf(f64::sqrt(x), 2.0)).sum().unwrap();\n    let mut\
    \ grades_average = grades.iter().map(|x| powf(f64::sqrt(x), 2.0)).sum().unwrap()\
    \ / grades.len();\n    let mut grades_median = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).median().unwrap();\n    let mut grades_mode = grades.iter().map(|x| powf(f64::sqrt(x),\
    \ 2.0)).mode().unwrap();\n    let mut grades_variance = grades.iter().map(|x|\
    \ powf(f64", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    while gpa > 0.0 {\n        let letter_grade = match gpa % 10 {\n        \
    \    0 => \"A\",\n            1 => \"B\",\n            2 => \"C\",\n         \
    \   3 => \"D\",\n            4 => \"E\",\n            5 => \"F\",\n          \
    \  6 => \"G\",\n            7 => \"H\",\n            8 => \"I\",\n           \
    \ 9 => \"J\",\n            _ => \"K\",\n        };\n        letter_grades.push(letter_grade);\n\
    \        gpa /= 10.0;\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while let\
    \ Some(grade) = grades_iter.next() {\n        if grade > current_grade {\n   \
    \         current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        }\n        \n        if grade < current_grade {\n        \
    \    current_letter_grade = String::from(\"E\");\n            current_grade =\
    \ grade;\n        }\n        \n        if grade == current_grade {\n         \
    \   letter_grades.push(current_letter_grade);\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_grade = grade;\n        }\n    }\n\
    \    \n    letter_grades.push(current_letter_grade);\n    \n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        let mut grade_string = String::new();\n        if grade < 3.0 {\n\
    \            grade_string.push_str(\"A+\");\n        } else if grade < 3.3 {\n\
    \            grade_string.push_str(\"A\");\n        } else if grade < 3.7 {\n\
    \            grade_string.push_str(\"A-\");\n        } else if grade < 4.0 {\n\
    \            grade_string.push_str(\"B+\");\n        } else if grade < 4.3 {\n\
    \            grade_string.push_str(\"B\");\n        } else if grade < 4.7 {\n\
    \            grade_string.push_str(\"B-\");\n        } else if grade < 5.0 {\n\
    \            grade_string.push_str(\"C+\");\n        } else if grade < 5.3 {\n\
    \            grade_string.push_str(\"C\");\n        } else if grade < 5.7 {\n\
    \            grade_string.push_str(\"C-\");\n        } else if grade < 6.0 {\n\
    \            grade_string.push_str(\"D+\");\n        } else if grade < 6.3 {\n\
    \            grade_string.push_str(\"D\");\n        } else if grade < 6.7 {\n\
    \            grade_string.push_str(\"D-\");\n        } else if grade < 7.0 {\n\
    \            grade_string.push_str(\"E\");\n        } else {\n            grade_string.push_str(\"\
    D-\");\n        }\n        grades_string.push(grade_string);\n    }\n    grades_string",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    for grade in grades_copy {\n        if grade > current_grade {\n \
    \           current_letter_grade = String::from(&current_letter_grade[..current_letter_grade_index]);\n\
    \            current_letter_grade_index = 0;\n            current_grade = grade;\n\
    \        }\n        current_letter_grade_index += 1;\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n\
    \    let mut max_grade = grades_copy.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut grades_sum\
    \ = grades_copy.iter().sum();\n    let mut grades_average = grades_sum / grades_copy.len();\n\
    \    let mut grades_average_rounded = grades_average.round();\n    let mut grades_average_rounded_index\
    \ = grades_average.iter().position(|x| x == grades_average_rounded).unwrap();\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index + 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n\
    \    let mut grades_average_rounded_index = grades_average_rounded_index - 1;\n",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter = String::from(\"E\");\n    for grade in grades_copy {\n\
    \        if grade > current_grade {\n            current_letter = String::from(\"\
    E\");\n            current_grade = grade;\n        }\n        if grade == current_grade\
    \ {\n            current_letter += String::from(\"+\");\n        }\n        if\
    \ grade < current_grade {\n            current_letter += String::from(\"-\");\n\
    \        }\n        letter_grades.push(current_letter);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades[min_grade_index];\n    for grade in grades.iter().skip(min_grade_index\
    \ + 1) {\n        let mut current_index = grades.iter().position(|x| x == current_grade).unwrap();\n\
    \        let mut current_letter_grade = String::from(\"E\");\n        if current_index\
    \ == max_grade_index {\n            current_letter_grade = String::from(\"D-\"\
    );\n        } else if current_index == min_grade_index {\n            current_letter_grade\
    \ = String::from(\"D+\");\n        } else {\n            current_letter_grade\
    \ = String::from(\"C\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grade;\n    }\n    letter_grades", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut min_grade\
    \ = grades_copy.iter().min().unwrap();\n    let mut max_grade = grades_copy.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades_copy.iter().position(|&x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades_copy.iter().position(|&x| x == max_grade).unwrap();\n\
    \    let mut current_grade = grades_copy[min_grade_index];\n    let mut current_index\
    \ = min_grade_index;\n    while current_index < max_grade_index {\n        if\
    \ current_grade < grades_copy[current_index] {\n            current_grade = grades_copy[current_index];\n\
    \            current_index = grades_copy.iter().position(|&x| x == current_grade).unwrap();\n\
    \        }\n        letter_grades.push(String::from(current_grade + \"+\"));\n\
    \        current_grade = grades_copy[current_index];\n        current_index =\
    \ grades_copy.iter().position(|&x| x == current_grade).unwrap();\n    }\n    letter_grades.push(String::from(current_grade\
    \ + \"-\"));\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(current_letter_grade + \"\
    +\");\n        } else {\n            current_letter_grade = String::from(current_letter_grade\
    \ + \"-\");\n            current_grade = grade;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ total_grade = grades.iter().sum();\n    let mut total_letter_grade = String::new();\n\
    \    for grade in grades {\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n            total_grade -= grade;\n        } else if grade > total_grade\
    \ {\n            letter_grades.push(String::from(\"D-\"));\n            total_grade\
    \ -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    D\"));\n            total_grade -= grade;\n        }\n    }\n    total_letter_grade\
    \ += &letter_grades[grades.len() - 1];\n    letter_grades.push(total_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    while grade > 0 {\n        if grade\
    \ >= gpa {\n            letter_grades.push(String::from(\"A+\"));\n          \
    \  gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    A\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"A-\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    B\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"B+\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    B\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"B-\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    C\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"C+\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    C\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"C-\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    D\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"D+\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    D\"));\n            grade -= gpa;\n        }\n    }\n    while grade > 0 {\n \
    \       if grade >= gpa {\n            letter_grades.push(String::from(\"D-\"\
    ));\n            gpa -= grade;\n        } else {\n            letter_grades.push(String::from(\"\
    E\"));\n            grade -= gpa;\n        }\n    }\n    letter_grades", "   \
    \ let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut prev_gpa = grades.iter().sum();\n\
    \    let mut prev_letter_grade = String::from(\"E\");\n    for grade in grades\
    \ {\n        if grade > gpa {\n            letter_grades.push(String::from(\"\
    D-\"));\n            prev_letter_grade = String::from(\"D-\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa {\n            letter_grades.push(String::from(\"\
    D+\"));\n            prev_letter_grade = String::from(\"D+\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa + 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n            prev_letter_grade = String::from(\"D\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa + 0.1 {\n            letter_grades.push(String::from(\"\
    C\"));\n            prev_letter_grade = String::from(\"C\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa + 0.07 {\n            letter_grades.push(String::from(\"\
    B\"));\n            prev_letter_grade = String::from(\"B\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa + 0.03 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            prev_letter_grade = String::from(\"A-\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa + 0.01 {\n            letter_grades.push(String::from(\"\
    A+\"));\n            prev_letter_grade = String::from(\"A+\");\n            prev_gpa\
    \ = grade;\n        } else if grade > prev_gpa + 0.007 {\n            letter_grades.push(String::from(\"\
    A\"));\n            prev_letter_grade = String::from(\"A\");\n            prev_gpa\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"E\"\
    ));\n            prev_letter_grade = String::from(\"E\");\n            prev_gpa\
    \ = grade;\n        }\n    }\n    letter_grades", "    let mut letter_grades =\
    \ vec![];\n    for grade in grades {\n        let mut letter_grade = String::from(\"\
    E\");\n        if grade > 3.0 {\n            letter_grade = String::from(\"D-\"\
    );\n        } else if grade > 2.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 1.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.7 { \n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else ", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D\"));\n        } else { \n            letter_grades.push(String::from(\"D-\"\
    ));\n        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut grades_index = grades.iter().position(|x|\
    \ x > max_grade && x < min_grade).unwrap();\n    let mut grades_index_2 = grades.iter().position(|x|\
    \ x > min_grade && x < max_grade).unwrap();\n    let mut grades_index_3 = grades.iter().position(|x|\
    \ x > max_grade).unwrap();\n    let mut grades_index_4 = grades.iter().position(|x|\
    \ x < max_grade).unwrap();\n    let mut grades_index_5 = grades.iter().position(|x|\
    \ x < min_grade).unwrap();\n    let mut grades_index_6 = grades.iter().position(|x|\
    \ x == 0).unwrap();\n    let mut grades_index_7 = grades.iter().position(|x| x\
    \ == 1).unwrap();\n    let mut grades_index_8 = grades.iter().position(|x| x ==\
    \ 2).unwrap();\n    let mut grades_index_9 = grades.iter().position(|x| x == 3).unwrap();\n\
    \    let mut grades_index_10 = grades.iter().position(|x| x == 4).unwrap();\n\
    \    let mut grades_index_11 = grades.iter().position(|x| x == 5).unwrap();\n\
    \    let mut grades_index_12 = grades.iter().position(|x| x == 6).unwrap();\n\
    \    let mut grades_index_13 = grades.iter().position(|x| x == 7).unwrap();\n\
    \    let mut grades_index_14 = grades.iter().position(|x| x == 8).unwrap();\n\
    \    let mut grades_index_15 = grades.iter().position(|x| x == 9).unwrap();\n\
    \    let mut grades_index_16 = grades.iter().position(|x| x == 10).unwrap();\n\
    \    let mut grades_index_17 = grades.iter().position(|x| x == 11).unwrap();\n\
    \    let mut grades_index_18 = grades.iter().position(|x| x == 12).unwrap();\n\
    \    let mut grades_index_19 = grades.iter().position(|x| x == 13).unwrap();\n\
    \    let mut grades_index_20 = grades.iter().position(|", "    let mut letter_grades\
    \ = vec![];\n    let mut total_gpa = grades.iter().sum();\n    let mut total_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades {\n        let letter_grade\
    \ = if total_gpa < 0.0 {\n            total_letter_grade += \"D-\";\n        }\
    \ else if grade < 3.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 3.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 3.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 4.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 4.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 4.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 5.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 5.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 5.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 6.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 6.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 6.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 7.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 7.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 7.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 8.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 8.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 8.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 9.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 9.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 9.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 10.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 10.3 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 10.7 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 11.0 {\n            total_letter_grade += \"B-\";\n        }\
    \ else if grade < 11.3 {\n            total_letter_grade ", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut grades_sum:\
    \ f64 = grades.iter().sum();\n    let mut grades_sum_sq: f64 = grades_sum * grades_sum;\n\
    \    let mut grades_sq_sum: f64 = grades_sum * grades_sum;\n    let mut grades_sq_sum_sq:\
    \ f64 = grades_sum_sq * grades_sum;\n    let mut grades_sq_sum_sq_sum: f64 = grades_sum_sq\
    \ * grades_sum_sq;\n    let mut grades_sq_sum_sq_sum_sq: f64 = grades_sum_sq_sum\
    \ * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum: f64 = grades_sum_sq_sum_sq\
    \ * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq: f64 = grades_sum_sq_sum_sq_sum\
    \ * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum: f64 = grades_sum_sq_sum_sq_sum_sq\
    \ * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq: f64 = grades_sum_sq_sum_sq_sum_sq_sum\
    \ * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum: f64 =\
    \ grades_sum_sq_sum_sq_sum_sq_sum_sq * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq:\
    \ f64 = grades_sum_sq_sum_sq_sum_sq_sum_sq * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum:\
    \ f64 = grades_sum_sq_sum_sq_sum_sq_sum_sq_sum * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq:\
    \ f64 = grades_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum:\
    \ f64 = grades_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum * grades_sum;\n    let mut\
    \ grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq: f64 = grades_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum\
    \ * grades_sum;\n    let mut grades_sq_sum_sq_sum_sq_", "    let mut letter_grades\
    \ = vec![];\n    let mut max_grade = grades.max();\n    let mut min_grade = grades.min();\n\
    \    let mut current_grade = grades.iter().sum();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    while current_grade != 0.0 {\n        if current_grade\
    \ < max_grade {\n            current_letter_grade = String::from(\"E\");\n   \
    \         break;\n        }\n        if current_grade > max_grade {\n        \
    \    current_letter_grade = String::from(\"D-\");\n            break;\n      \
    \  }\n        if current_grade < min_grade {\n            current_letter_grade\
    \ = String::from(\"D+\");\n            break;\n        }\n        if current_grade\
    \ > min_grade {\n            current_letter_grade = String::from(\"B-\");\n  \
    \          break;\n        }\n        if current_grade < 3.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 3.3 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 3.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 4.0 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 4.3 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 4.7 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 5.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 5.3 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 5.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 6.0 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 6.3 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 6.7 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 7.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if current_grade\
    \ < 7.3 {\n            current_letter_grade = String::from(\"B-\");\n        \
    \    break;\n        }\n        if current_grade < 7.7 {\n            current_letter_grade\
    \ = String::from(\"", "    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade > 3.0 {\n            letter_grade += \"A\";\n        } else if\
    \ grade > 2.0 {\n            letter_grade += \"B\";\n        } else if grade >\
    \ 1.0 {\n            letter_grade += \"C\";\n        } else if grade > 0.7 { \n\
    \            letter_grade += \"D\";\n        } else if grade > 0.0 {\n       \
    \     letter_grade += \"E\";\n        } else {\n            letter_grade += \"\
    F\";\n        }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade > 3.0 {\n            letter_grade\
    \ += String::from(\"A+\");\n        } else if grade > 2.7 {\n            letter_grade\
    \ += String::from(\"B\");\n        } else if grade > 2.3 {\n            letter_grade\
    \ += String::from(\"B-\");\n        } else if grade > 1.3 {\n            letter_grade\
    \ += String::from(\"C+\");\n        } else if grade > 1.0 {\n            letter_grade\
    \ += String::from(\"C\");\n        } else if grade > 0.7 {\n            letter_grade\
    \ += String::from(\"D\");\n        } else if grade > 0.3 {\n            letter_grade\
    \ += String::from(\"D-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ += String::from(\"E\");\n        } else {\n            letter_grade += String::from(\"\
    F\");\n        }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut min_grade\
    \ = grades.iter().min().unwrap();\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut current_grade = grades[min_grade_index];\n    let mut current_index\
    \ = min_grade_index;\n    while current_index < max_grade_index {\n        let\
    \ mut current_grade = grades[current_index];\n        if current_grade > max_grade\
    \ {\n            current_grade = max_grade;\n            current_index = max_grade_index;\n\
    \        }\n        if current_grade < min_grade {\n            current_grade\
    \ = min_grade;\n            current_index = min_grade_index;\n        }\n    \
    \    letter_grades.push(String::from(format!(\"{}+\", current_grade)));\n    \
    \    current_grade += 1;\n        current_index += 1;\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_gpa\
    \ : f64 = grades_copy.clone();\n    let mut current_letter_grade_with_gpa = String::from(\"\
    E\");\n    let mut current_gpa_with_letter_grade = String::from(\"E\");\n    let\
    \ mut current_letter_grade_with_gpa_with_gpa = String::from(\"E\");\n    let mut\
    \ current_gpa_with_letter_grade_with_gpa = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut current_letter_grade_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa_with_gpa\
    \ = String::from(\"E\");\n    let mut ", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade > current_grade {\n  \
    \          letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut current_grade = grades.first();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades.iter().skip(1)\
    \ {\n        if grade < current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut grades_sum: f64 = 0.0;\n    let mut grades_index: usize\
    \ = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_value:\
    \ f64 = 0.0;\n    let mut grades_min_value: f64 = 0.0;\n    let mut grades_min_index:\
    \ usize = 0;\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_max_", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grade", "    let mut letter_grades = vec![];\n    for grade in grades {\n\
    \        let mut letter_grade = String::new();\n        if grade > 3.0 {\n   \
    \         letter_grade += \"A\";\n        } else if grade > 2.7 {\n          \
    \  letter_grade += \"B\";\n        } else if grade > 2.3 {\n            letter_grade\
    \ += \"B-\";\n        } else if grade > 1.7 && grade < 2.3 {\n            letter_grade\
    \ += \"C\";\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grade\
    \ += \"C-\";\n        } else if grade > 1.0 {\n            letter_grade += \"\
    D\";\n        } else if grade > 0.7 {\n            letter_grade += \"D+\";\n \
    \       } else {\n            letter_grade += \"D-\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade.len()\
    \ > 0 {\n        let mut current_grade = current_grade.clone();\n        let mut\
    \ current_letter_grade = String::from(\"E\");\n        \n        for grade in\
    \ grades_copy {\n            if grade > current_grade.as_ref() {\n           \
    \     current_grade.truncate(current_grade.len());\n                current_grade.push('-');\n\
    \                current_grade.push(current_letter_grade);\n                current_letter_grade\
    \ = String::from(\"E\");\n                break;\n            }\n            \n\
    \            if grade == current_grade.as_ref() {\n                current_grade.push('-');\n\
    \                current_grade.push(current_letter_grade);\n                current_letter_grade\
    \ = String::from(\"E\");\n                break;\n            }\n            \n\
    \            if grade < current_grade.as_ref() {\n                current_grade.push('-');\n\
    \                current_grade.push(current_letter_grade);\n                current_letter_grade\
    \ = String::from(\"E\");\n                break;\n            }\n        }\n \
    \       \n        letter_grades.push(current_grade);\n    }\n    \n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().", "    let mut grades_vec: Vec<String> = vec![];\n    let mut\
    \ grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut letter_grade = String::from(\"E\");\n\
    \    while gpa > 0.0 {\n        if gpa < 3.0 {\n            letter_grade = String::from(\"\
    D-\");\n            letter_grades.push(letter_grade);\n            gpa -= 3.0;\n\
    \        } else if gpa < 4.0 {\n            letter_grade = String::from(\"C+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 4.0;\n \
    \       } else if gpa < 5.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 5.0;\n \
    \       } else if gpa < 6.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 6.0;\n \
    \       } else if gpa < 7.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 7.0;\n \
    \       } else if gpa < 8.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 8.0;\n \
    \       } else if gpa < 9.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 9.0;\n \
    \       } else if gpa < 10.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 10.0;\n\
    \        } else if gpa < 11.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 11.0;\n\
    \        } else if gpa < 12.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 12.0;\n\
    \        } else if gpa < 13.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 13.0;\n\
    \        } else if gpa < 14.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 14.0;\n\
    \        } else if gpa < 15.0 {\n            letter_grade = String::from(\"B+\"\
    );\n            letter_grades.push(letter_grade);\n            gpa -= 15.0;\n\
    \        } else if gpa ", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n \
    \   let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let mut letter_grade = String::new();\n        if grade < 3.0 {\n\
    \            letter_grade += String::from(\"A-\");\n        } else if grade <\
    \ 3.3 {\n            letter_grade += String::from(\"B-\");\n        } else if\
    \ grade < 3.7 {\n            letter_grade += String::from(\"B-\");\n        }\
    \ else if grade < 4.0 {\n            letter_grade += String::from(\"C+\");\n \
    \       } else if grade < 4.3 {\n            letter_grade += String::from(\"C\"\
    );\n        } else if grade < 4.7 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 5.0 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade < 5.3 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 5.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 6.0 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade < 6.3 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade < 6.7 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade < 7.0 {\n            letter_grade += String::from(\"\
    E\");\n        } else {\n            letter_grade += String::from(\"F\");\n  \
    \      }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut total_grade = grades.iter().sum();\n\
    \    let mut total_letter_grade = String::new();\n    for grade in grades {\n\
    \        let letter_grade = if total_grade > grade {\n            String::from(\"\
    A+\")\n        } else if total_grade < grade {\n            String::from(\"D-\"\
    )\n        } else {\n            String::from(\"D\")\n        };\n        total_grade\
    \ -= grade;\n        total_letter_grade += letter_grade;\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut letter_grade = String::from(\"E\");\n\
    \    while gpa > 0.0 {\n        let grade = if gpa > 3.0 {\n            String::from(\"\
    A+\")\n        } else if gpa > 2.7 {\n            String::from(\"A\")\n      \
    \  } else if gpa > 2.3 {\n            String::from(\"A-\")\n        } else if\
    \ gpa > 2.0 {\n            String::from(\"B+\")\n        } else if gpa > 1.7 {\n\
    \            String::from(\"B\")\n        } else if gpa > 1.3 {\n            String::from(\"\
    B-\")\n        } else if gpa > 1.0 {\n            String::from(\"C+\")\n     \
    \   } else if gpa > 0.7 {\n            String::from(\"C\")\n        } else if\
    \ gpa > 0.3 {\n            String::from(\"C-\")\n        } else if gpa > 0.0 {\n\
    \            String::from(\"D+\")\n        } else if gpa > -0.3 {\n          \
    \  String::from(\"D\")\n        } else if gpa > -0.7 {\n            String::from(\"\
    D-\")\n        } else {\n            String::from(\"E\")\n        };\n       \
    \ letter_grades.push(grade);\n        gpa -= 0.0;\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_copy.iter().max().unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut grades_index = min_grade_index;\n   \
    \ while grades_index < max_grade_index {\n        let mut grade = grades_copy[grades_index];\n\
    \        let mut letter_grade = String::from(\"E\");\n        if grade < min_grade\
    \ {\n            letter_grade = String::from(\"D-\");\n        } else if grade\
    \ < min_grade + 0.3 {\n            letter_grade = String::from(\"C-\");\n    \
    \    } else if grade < min_grade + 0.5 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < min_grade + 0.7 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade < min_grade + 0.9 {\n     \
    \       letter_grade = String::from(\"B-\");\n        } else if grade < min_grade\
    \ + 1.1 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade < min_grade + 1.3 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if grade < min_grade + 1.5 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < min_grade + 1.7 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade < min_grade + 1.9 {\n     \
    \       letter_grade = String::from(\"B-\");\n        } else if grade < min_grade\
    \ + 2.1 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade < min_grade + 2.3 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if grade < min_grade + 2.5 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < min_grade + 2.7 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade < min_grade + 2.9 {\n     \
    \       letter_grade = String::from(\"B-\");\n        } else if grade < min_grade\
    \ + 3.", "    let mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| *x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| *x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades[min_grade_index];\n    let mut current_index = min_grade_index;\n \
    \   while current_index < max_grade_index {\n        if current_grade < grades[current_index]\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            current_grade\
    \ = grades[current_index];\n            current_index = current_index + 1;\n \
    \       } else if current_grade == grades[current_index] {\n            letter_grades.push(String::from(\"\
    B-\"));\n            current_grade = grades[current_index];\n            current_index\
    \ = current_index + 1;\n        } else if current_grade > grades[current_index]\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            current_grade\
    \ = grades[current_index];\n            current_index = current_index + 1;\n \
    \       } else {\n            letter_grades.push(String::from(\"B-\"));\n    \
    \        current_grade = grades[current_index];\n            current_index = current_index\
    \ + 1;\n        }\n    }\n    while current_index < grades.len() {\n        if\
    \ current_grade < grades[current_index] {\n            letter_grades.push(String::from(\"\
    B-\"));\n            current_grade = grades[current_index];\n            current_index\
    \ = current_index + 1;\n        } else if current_grade == grades[current_index]\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            current_grade\
    \ = grades[current_index];\n            current_index = current_index + 1;\n \
    \       } else if current_grade > grades[current_index] {\n            letter_grades.push(String::from(\"\
    B-\"));\n            current_grade = grades[current_index];\n            current_index\
    \ = current_index + 1;\n        } else {\n            letter_grades.push(String::from(\"\
    B-\"));\n            current_grade = grades[current_index];\n            current_index\
    \ = current_index + 1;\n        }\n    }\n    while current_index > min_grade_index\
    \ {\n        if current_grade < grades[current_index] {\n            letter_grades.push(String::from(\"\
    B-\"));\n            current_grade = grades[current_index];\n            current_index\
    \ = current_index - 1;\n        } else if current_grade == grades[current_index]\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            current_grade\
    \ = grades[current_index];\n            current_index = current_index - 1;\n \
    \       } else if current_grade > grade", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut grades_sum = 0.0;\n    let mut\
    \ grades_index = 0;\n    let mut grades_index2 = 0;\n    let mut grades_index3\
    \ = 0;\n    let mut grades_index4 = 0;\n    let mut grades_index5 = 0;\n    let\
    \ mut grades_index6 = 0;\n    let mut grades_index7 = 0;\n    let mut grades_index8\
    \ = 0;\n    let mut grades_index9 = 0;\n    let mut grades_index10 = 0;\n    let\
    \ mut grades_index11 = 0;\n    let mut grades_index12 = 0;\n    let mut grades_index13\
    \ = 0;\n    let mut grades_index14 = 0;\n    let mut grades_index15 = 0;\n   \
    \ let mut grades_index16 = 0;\n    let mut grades_index17 = 0;\n    let mut grades_index18\
    \ = 0;\n    let mut grades_index19 = 0;\n    let mut grades_index20 = 0;\n   \
    \ let mut grades_index21 = 0;\n    let mut grades_index22 = 0;\n    let mut grades_index23\
    \ = 0;\n    let mut grades_index24 = 0;\n    let mut grades_index25 = 0;\n   \
    \ let mut grades_index26 = 0;\n    let mut grades_index27 = 0;\n    let mut grades_index28\
    \ = 0;\n    let mut grades_index29 = 0;\n    let mut grades_index30 = 0;\n   \
    \ let mut grades_index31 = 0;\n    let mut grades_index32 = 0;\n    let mut grades_index33\
    \ = 0;\n    let mut grades_index34 = 0;\n    let mut grades_index35 = 0;\n   \
    \ let mut grades_index36 = 0;\n    let mut grades_index37 = 0;\n    let mut grades_index38\
    \ = 0;\n    let mut grades_index39 = 0;\n    let mut grades_index40 = 0;\n   \
    \ let mut grades_index41 = 0;\n    let mut grades_index42 = 0;\n    let mut grades_index43\
    \ = 0;\n    let mut grades_index44 = 0;\n    let mut grades_index45 = 0;\n   \
    \ let mut grades_index46 = 0;\n    let mut grades_index47 = 0;\n    let mut grades_index48\
    \ = 0;\n    let mut grades_index49 = 0;\n    let mut grades_index50 = 0;\n   \
    \ let mut grades_index51 = 0;\n    let mut grades_index52 = 0;\n    let mut grades_index53\
    \ = 0;\n    let mut grades_index54 = 0;\n    let mu", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut max_grade\
    \ = grades_copy[0];\n    let mut min_grade = grades_copy[0];\n    for grade in\
    \ grades_copy {\n        if grade > max_grade {\n            max_grade = grade;\n\
    \        }\n        if grade < min_grade {\n            min_grade = grade;\n \
    \       }\n    }\n    for grade in grades_copy {\n        if grade == 0.0 {\n\
    \            letter_grades.push(String::from(\"E\"));\n            continue;\n\
    \        }\n        let mut letter_grade = String::from(\"E\");\n        if grade\
    \ > max_grade {\n            letter_grade = String::from(\"D-\");\n        } else\
    \ if grade < min_grade {\n            letter_grade = String::from(\"D+\");\n \
    \       } else if grade > 3.0 {\n            letter_grade = String::from(\"B-\"\
    );\n        } else if grade < 2.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 2.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 3.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 3.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 4.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 4.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 5.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 5.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 6.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > 9.", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n   \
    \ let mut gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().",
  "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n \
    \   let mut grade = grades.iter().sum();\n    let mut grade_index = 0;\n    let\
    \ mut gpa_sum = 0;\n    let mut gpa_sum_index = 0;\n    let mut gpa_sum_index2\
    \ = 0;\n    let mut gpa_sum_index3 = 0;\n    while grade > 0 {\n        let mut\
    \ grade_index = 0;\n        let mut gpa_sum = 0;\n        let mut gpa_sum_index\
    \ = 0;\n        let mut gpa_sum_index2 = 0;\n        let mut gpa_sum_index3 =\
    \ 0;\n        while grade > 0 {\n            if grade < gpa[grade_index] {\n \
    \               grade_index += 1;\n                gpa_sum += grade;\n       \
    \         gpa_sum_index += 1;\n                gpa_sum_index2 += 1;\n        \
    \        gpa_sum_index3 += 1;\n            } else {\n                grade_index\
    \ += 1;\n                gpa_sum += grade;\n                gpa_sum_index += 1;\n\
    \                gpa_sum_index2 += 1;\n                gpa_sum_index3 += 1;\n\
    \                grade_index += 1;\n                gpa_sum += grade;\n      \
    \          gpa_sum_index += 1;\n                gpa_sum_index2 += 1;\n       \
    \         gpa_sum_index3 += 1;\n                grade_index += 1;\n          \
    \      gpa_sum += grade;\n                gpa_sum_index += 1;\n              \
    \  gpa_sum_index2 += 1;\n                gpa_sum_index3 += 1;\n              \
    \  grade_index += 1;\n                gpa_sum += grade;\n                gpa_sum_index\
    \ += 1;\n                gpa_sum_index2 += 1;\n                gpa_sum_index3\
    \ += 1;\n                grade_index += 1;\n                gpa_sum += grade;\n\
    \                gpa_sum_index += 1;\n                gpa_sum_index2 += 1;\n \
    \               gpa_sum_index3 += 1;\n                grade_index += 1;\n    \
    \            gpa_sum += grade;\n                gpa_sum_index += 1;\n        \
    \        gpa_sum_index2 += 1;\n                gpa_sum_index3 += 1;\n        \
    \        grade_index += 1;\n                gpa_sum += grade;\n              \
    \  gpa_sum_index += 1;\n                gpa_sum_index2 += 1;\n               \
    \ gpa_sum_index3 += 1;\n                grade_index += 1;\n                gpa_sum\
    \ += grade;\n                gpa_sum_index += 1;\n                gpa_sum_index2\
    \ += 1;\n                gpa_sum_index3 += 1;\n                grade_index +=\
    \ 1;\n                gpa_sum += grade;\n                gpa_sum", "    let mut\
    \ grades_vec: Vec<String> = vec![];\n    let mut min_grade: f64 = grades.iter().min().unwrap();\n\
    \    let mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade_index:\
    \ usize = 0;\n    let mut max_grade_index: usize = 0;\n    let mut min_grade_index2:\
    \ usize = 0;\n    let mut max_grade_index2: usize = 0;\n    let mut min_grade_index3:\
    \ usize = 0;\n    let mut max_grade_index3: usize = 0;\n    let mut min_grade_index4:\
    \ usize = 0;\n    let mut max_grade_index4: usize = 0;\n    let mut min_grade_index5:\
    \ usize = 0;\n    let mut max_grade_index5: usize = 0;\n    let mut min_grade_index6:\
    \ usize = 0;\n    let mut max_grade_index6: usize = 0;\n    let mut min_grade_index7:\
    \ usize = 0;\n    let mut max_grade_index7: usize = 0;\n    let mut min_grade_index8:\
    \ usize = 0;\n    let mut max_grade_index8: usize = 0;\n    let mut min_grade_index9:\
    \ usize = 0;\n    let mut max_grade_index9: usize = 0;\n    let mut min_grade_index10:\
    \ usize = 0;\n    let mut max_grade_index10: usize = 0;\n    let mut min_grade_index11:\
    \ usize = 0;\n    let mut max_grade_index11: usize = 0;\n    let mut min_grade_index12:\
    \ usize = 0;\n    let mut max_grade_index12: usize = 0;\n    let mut min_grade_index13:\
    \ usize = 0;\n    let mut max_grade_index13: usize = 0;\n    let mut min_grade_index14:\
    \ usize = 0;\n    let mut max_grade_index14: usize = 0;\n    let mut min_grade_index15:\
    \ usize = 0;\n    let mut max_grade_index15: usize = 0;\n    let mut min_grade_index16:\
    \ usize = 0;\n    let mut max_grade_index16: usize = 0;\n    let mut min_grade_index17:\
    \ usize = 0;\n    let mut max_grade_index17: usize = 0;\n    let mut min_grade_index18:\
    \ usize = 0;\n    let mut max_grade_index18: usize = 0;\n    let mut min_grade_index19:\
    \ usize = 0;\n    let mut max_grade_index19: usize = 0;\n    let mut min_grade_index20:\
    \ usize = 0;\n    let mu", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut grades_sum: f64 = 0.0;\n    let mut\
    \ grades_count: usize = 0;\n    while grades_count < grades_copy.len() {\n   \
    \     grades_sum += grades_copy[grades_count];\n        if grades_sum >= 4.0 {\n\
    \            letter_grades.push(String::from(\"A+\"));\n            grades_count\
    \ += 1;\n        } else if grades_sum > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n            grades_count += 1;\n        } else if grades_sum > 3.3 {\n\
    \            letter_grades.push(String::from(\"A-\"));\n            grades_count\
    \ += 1;\n        } else if grades_sum > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n            grades_count += 1;\n        } else if grades_sum > 2.7 {\n\
    \            letter_grades.push(String::from(\"B\"));\n            grades_count\
    \ += 1;\n        } else if grades_sum > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            grades_count += 1;\n        } else if grades_sum > 2.0 {\n\
    \            letter_grades.push(String::from(\"C+\"));\n            grades_count\
    \ += 1;\n        } else if grades_sum > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n            grades_count += 1;\n        } else if grades_sum > 1.3 {\n\
    \            letter_grades.push(String::from(\"C-\"));\n            grades_count\
    \ += 1;\n        } else if grades_sum > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n            grades_count += 1;\n        } else if grades_sum > 0.7 {\n\
    \            letter_grades.push(String::from(\"D\"));\n            grades_count\
    \ += 1;\n        } else if grades_sum > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n            grades_count += 1;\n        } else {\n            letter_grades.push(String::from(\"\
    E\"));\n            grades_count += 1;\n        }\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -1.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -2.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -3.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -3.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -4.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    while grade > 0.0 {\n        if gpa < 3.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n            break;\n        }\n        if gpa < 3.3 {\n            letter_grades.push(String::from(\"\
    D-\"));\n            break;\n        }\n        if gpa < 3.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n            break;\n        }\n        if gpa < 4.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 4.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 5.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 5.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 5.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 6.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 6.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 6.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 7.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 7.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 7.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 8.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 8.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 8.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 9.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 9.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n        if gpa < 9.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            break;\n        }\n", "    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades.first();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut grades_sum\
    \ = 0.0;\n    for grade in grades {\n        grades_sum += grade;\n    }\n   \
    \ for grade in grades {\n        let grade_index = grades.iter().position(|x|\
    \ x == grade).unwrap();\n        let grade = grades[grade_index];\n        if\
    \ grade == 0.0 {\n            letter_grades.push(String::from(\"E\"));\n     \
    \       continue;\n        }\n        let grades_average = grades_sum / grades.len();\n\
    \        let grades_average_index = grades.iter().position(|x| x == grades_average).unwrap();\n\
    \        let grades_average = grades[grades_average_index];\n        if grades_average\
    \ > 3.0 {\n            letter_grades.push(String::from(\"D-\"));\n        } else\
    \ if grades_average < 3.0 {\n            letter_grades.push(String::from(\"D+\"\
    ));\n        } else if grades_average < 2.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grades_average < 1.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grades_average < 1.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grades_average < 0.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grades_average < 0.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grades_average < 0.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grades_average < -0.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grades_average < -0.7 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else {\n            letter_grades.push(String::from(\"A\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_grade_index\
    \ = 0;\n    let mut current_letter_grade = String::from(\"E\");\n    for grade\
    \ in grades_copy {\n        if grade < current_grade {\n            current_grade\
    \ = grade;\n            current_grade_index = 0;\n        }\n        if grade\
    \ == current_grade {\n            current_grade_index += 1;\n        }\n     \
    \   if current_grade_index == 2 {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_grade_index = 0;\n  \
    \          current_letter_grade = String::from(\"E\");\n        } else {\n   \
    \         current_letter_grade = String::from(current_letter_grade + \"+\");\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    let mut current_index =\
    \ grades_copy.len() - 1;\n    while current_index >= 0 {\n        if current_grade\
    \ == grades_copy[current_index] {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_index\
    \ -= 1;\n        } else {\n            current_letter_grade = current_letter_grade.chars().next().unwrap().to_string();\n\
    \            current_grade -= grades_copy[current_index];\n            current_index\
    \ -= 1;\n        }\n    }\n    letter_grades.push(current_letter_grade);\n   \
    \ letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut min_grade = grades_copy[0];\n    let mut max_grade =\
    \ grades_copy[0];\n    let mut min_grade_index = -1;\n    let mut max_grade_index\
    \ = -1;\n    let mut min_grade_index2 = -1;\n    let mut max_grade_index2 = -1;\n\
    \    let mut min_grade_index3 = -1;\n    let mut max_grade_index3 = -1;\n    let\
    \ mut min_grade_index4 = -1;\n    let mut max_grade_index4 = -1;\n    let mut\
    \ min_grade_index5 = -1;\n    let mut max_grade_index5 = -1;\n    let mut min_grade_index6\
    \ = -1;\n    let mut max_grade_index6 = -1;\n    let mut min_grade_index7 = -1;\n\
    \    let mut max_grade_index7 = -1;\n    let mut min_grade_index8 = -1;\n    let\
    \ mut max_grade_index8 = -1;\n    let mut min_grade_index9 = -1;\n    let mut\
    \ max_grade_index9 = -1;\n    let mut min_grade_index10 = -1;\n    let mut max_grade_index10\
    \ = -1;\n    let mut min_grade_index11 = -1;\n    let mut max_grade_index11 =\
    \ -1;\n    let mut min_grade_index12 = -1;\n    let mut max_grade_index12 = -1;\n\
    \    let mut min_grade_index13 = -1;\n    let mut max_grade_index13 = -1;\n  \
    \  let mut min_grade_index14 = -1;\n    let mut max_grade_index14 = -1;\n    let\
    \ mut min_grade_index15 = -1;\n    let mut max_grade_index15 = -1;\n    let mut\
    \ min_grade_index16 = -1;\n    let mut max_grade_index16 = -1;\n    let mut min_grade_index17\
    \ = -1;\n    let mut max_grade_index17 = -1;\n    let mut min_grade_index18 =\
    \ -1;\n    let mut max_grade_index18 = -1;\n    let mut min_grade_index19 = -1;\n\
    \    let mut max_grade_index19 = -1;\n    let mut min_grade_index20 = -1;\n  \
    \  let mut max_grade_index20 = -1;\n    let mut min_grade_index21 = -1;\n    let\
    \ mut max_grade_index21 = -1;\n    let mut min_grade_index22 = -1;\n    let mut\
    \ max_grade_index22 = -1;\n    let mut min_grade_index23 = -1;\n    let mut max_grade_index23\
    \ = -1;\n    let mut min_grade_index24 = -1;\n    let mut max_grade_index24 =\
    \ -1;\n    let mut min_grade_index25 = -1;\n    let mut max_grade_index", "  \
    \  let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut grades_sum\
    \ = grades.iter().sum();\n    let mut grades_sum_of_squares = grades_sum.pow(2);\n\
    \    let mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x ==\
    \ grades_sum_of_squares).unwrap();\n    let mut grades_sum_of_squares_index =\
    \ grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n    let\
    \ mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n\
    \    let mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x ==\
    \ grades_sum_of_squares).unwrap();\n    let mut grades_sum_of_squares_index =\
    \ grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n    let\
    \ mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n\
    \    let mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x ==\
    \ grades_sum_of_squares).unwrap();\n    let mut grades_sum_of_squares_index =\
    \ grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n    let\
    \ mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n\
    \    let mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x ==\
    \ grades_sum_of_squares).unwrap();\n    let mut grades_sum_of_squares_index =\
    \ grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n    let\
    \ mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x == grades_sum_of_squares).unwrap();\n\
    \    let mut grades_sum_of_squares_index = grades_sum.iter().position(|x| x ==\
    \ grades_sum_of_squares).unwrap", "    let mut letter_grades = vec![];\n    for\
    \ grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    for grade in grades_copy {\n       \
    \ if grade > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n  \
    \      } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"A\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n\
    \    let mut max_grade = grades_copy.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut grades_range\
    \ = max_grade_index - min_grade_index;\n    let mut grades_range_half = grades_range\
    \ / 2;\n    let mut grades_range_half_index = grades_range_half + min_grade_index;\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_range_half_index.max(grades_range_half_index.max(grades_range_half_index.min(grades_range_half_index))));\n\
    \    let mut grades_range_half_index = grades_range_half_index.min(grades_", " \
    \   let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().", "    let mut letter_grades = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut grades_index = min_grade_index;\n   \
    \ while grades_index < max_grade_index {\n        let grade = grades[grades_index];\n\
    \        let grade_index = grades.iter().position(|x| x == grade).unwrap();\n\
    \        let grade_index = grades_index;\n        let letter_grade = if grade_index\
    \ == min_grade_index {\n            String::from(\"A+\")\n        } else if grade_index\
    \ == max_grade_index {\n            String::from(\"D+\")\n        } else if grade\
    \ < min_grade {\n            String::from(\"B-\")\n        } else if grade > max_grade\
    \ {\n            String::from(\"B-\")\n        } else {\n            String::from(\"\
    B-\")\n        };\n        letter_grades.push(letter_grade);\n        grades_index\
    \ += 1;\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n   \
    \ for grade in grades {\n        let mut letter_grade = String::new();\n     \
    \   if grade > 3.0 {\n            letter_grade += \"B+\";\n        } else if grade\
    \ > 2.7 {\n            letter_grade += \"B\";\n        } else if grade > 2.3 {\n\
    \            letter_grade += \"B-\";\n        } else if grade > 1.3 {\n      \
    \      letter_grade += \"C+\";\n        } else if grade > 1.7 {\n            letter_grade\
    \ += \"C\";\n        } else if grade > 1.0 {\n            letter_grade += \"C-\"\
    ;\n        } else if grade > 0.7 {\n            letter_grade += \"D+\";\n    \
    \    } else if grade > 0.3 {\n            letter_grade += \"D\";\n        } else\
    \ if grade > 0.0 {\n            letter_grade += \"D-\";\n        } else {\n  \
    \          letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ max_grade = grades.max();\n    let mut min_grade = grades.min();\n    let mut\
    \ total_grade = grades.iter().sum();\n    let mut total_letter_grade = String::new();\n\
    \    \n    for grade in grades {\n        if grade > max_grade {\n           \
    \ max_grade = grade;\n        }\n        if grade < min_grade {\n            min_grade\
    \ = grade;\n        }\n    }\n    \n    for grade in grades {\n        let letter_grade\
    \ = if grade > max_grade {\n            String::from(\"D-\")\n        } else if\
    \ grade < min_grade {\n            String::from(\"D+\")\n        } else if grade\
    \ == 0.0 {\n            String::from(\"E\")\n        } else {\n            String::from(\"\
    C\")\n        };\n        \n        total_grade += grade;\n        total_letter_grade\
    \ += letter_grade;\n        \n        letter_grades.push(letter_grade);\n    }\n\
    \    \n    letter_grades.push(total_letter_grade);\n    letter_grades.push(String::from(\"\
    A\"));\n    letter_grades.push(String::from(\"A-\"));\n    letter_grades.push(String::from(\"\
    B+\"));\n    letter_grades.push(String::from(\"B\"));\n    letter_grades.push(String::from(\"\
    B-\"));\n    letter_grades.push(String::from(\"C+\"));\n    letter_grades.push(String::from(\"\
    C\"));\n    letter_grades.push(String::from(\"C-\"));\n    letter_grades.push(String::from(\"\
    D+\"));\n    letter_grades.push(String::from(\"D\"));\n    letter_grades.push(String::from(\"\
    D-\"));\n    letter_grades.push(String::from(\"E\"));\n    \n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    let mut current_index = grades_copy.len() - 1;\n    while current_index >=\
    \ 0 {\n        if grades_copy[current_index] > current_grade {\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_index = -1;\n        } else {\n\
    \            current_letter_grade = String::from(\n                match current_grade\
    \ {\n                    4.0 => \"A+\",\n                    3.7 => \"A\",\n \
    \                   3.3 => \"A-\",\n                    3.0 => \"B+\",\n     \
    \               2.7 => \"B\",\n                    2.3 => \"B-\",\n          \
    \          2.0 => \"C+\",\n                    1.7 => \"C\",\n               \
    \     1.3 => \"C-\",\n                    1.0 => \"D+\",\n                   \
    \ 0.7 => \"D\",\n                    0.0 => \"D-\",\n                    _ =>\
    \ \"E\",\n                },\n            );\n            current_grade = grades_copy[current_index];\n\
    \            current_index -= 1;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ total_grade = grades.iter().sum();\n    let mut total_letter_grade = String::new();\n\
    \    let mut total_letter_grade_index = 0;\n    let mut total_letter_grade_index2\
    \ = 0;\n    for grade in grades {\n        let letter_grade = if grade < total_grade\
    \ {\n            String::from(\"A+\")\n        } else if grade < total_grade +\
    \ 0.3 {\n            String::from(\"A-\")\n        } else if grade < total_grade\
    \ + 0.4 {\n            String::from(\"B+\")\n        } else if grade < total_grade\
    \ + 0.5 {\n            String::from(\"B\")\n        } else if grade < total_grade\
    \ + 0.6 {\n            String::from(\"B-\")\n        } else if grade < total_grade\
    \ + 0.7 {\n            String::from(\"C+\")\n        } else if grade < total_grade\
    \ + 0.8 {\n            String::from(\"C\")\n        } else if grade < total_grade\
    \ + 0.9 {\n            String::from(\"C-\")\n        } else if grade < total_grade\
    \ + 1.0 {\n            String::from(\"D+\")\n        } else if grade < total_grade\
    \ + 1.1 {\n            String::from(\"D\")\n        } else if grade < total_grade\
    \ + 1.2 {\n            String::from(\"D-\")\n        } else if grade < total_grade\
    \ + 1.3 {\n            String::from(\"E\")\n        } else {\n            String::from(\"\
    F\")\n        };\n        letter_grades.push(letter_grade);\n        total_grade\
    \ -= grade;\n        total_letter_grade += letter_grade;\n        total_letter_grade_index\
    \ += 1;\n    }\n    total_letter_grade_index2 = total_letter_grade_index;\n  \
    \  for _ in 0..total_letter_grade_index2 {\n        total_letter_grade = String::from(total_letter_grade);\n\
    \        letter_grades.push(total_letter_grade);\n    }\n    letter_grades", " \
    \   let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    while gpa > 0.0 {\n        let grade = if gpa >= 4.0 { String::from(\"A+\"\
    ) } else { String::from(\"A-\") };\n        letter_grades.push(grade);\n     \
    \   gpa -= 4.0;\n    }\n    while gpa < 0.0 {\n        let grade = if gpa >= 3.7\
    \ { String::from(\"A\") } else { String::from(\"A-\") };\n        letter_grades.push(grade);\n\
    \        gpa += 3.7;\n    }\n    while gpa >= 3.0 {\n        let grade = if gpa\
    \ >= 3.3 { String::from(\"B+\") } else { String::from(\"B-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 3.3;\n    }\n    while gpa >= 2.7 {\n        let grade = if gpa\
    \ >= 2.3 { String::from(\"B\") } else { String::from(\"B-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 2.7;\n    }\n    while gpa >= 2.0 {\n        let grade = if gpa\
    \ >= 1.7 { String::from(\"C+\") } else { String::from(\"C\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 2.0;\n    }\n    while gpa >= 1.7 {\n        let grade = if gpa\
    \ >= 1.3 { String::from(\"C\") } else { String::from(\"C-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 1.7;\n    }\n    while gpa >= 1.0 {\n        let grade = if gpa\
    \ >= 0.7 { String::from(\"D+\") } else { String::from(\"D\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 1.0;\n    }\n    while gpa >= 0.7 {\n        let grade = if gpa\
    \ >= 0.3 { String::from(\"D\") } else { String::from(\"D-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.7;\n    }\n    while gpa >= 0.0 {\n        let grade = if gpa\
    \ >= 0.0 { String::from(\"E\") } else { String::from(\"D-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.0;\n    }\n    letter_grades", "    let mut letter_grades =\
    \ vec![];\n    for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut current_grade = grades[min_grade_index];\n\
    \    let mut current_index = min_grade_index;\n    while current_index < max_grade_index\
    \ {\n        let mut current_grade = grades[current_index];\n        if current_grade\
    \ < min_grade {\n            current_grade += 1.0;\n        }\n        if current_grade\
    \ > max_grade {\n            current_grade -= 1.0;\n        }\n        letter_grades.push(String::from(\n\
    \            match current_grade {\n                1.0 => \"A+\".to_string(),\n\
    \                2.0 => \"A\".to_string(),\n                3.0 => \"A-\".to_string(),\n\
    \                4.0 => \"B+\".to_string(),\n                5.0 => \"B\".to_string(),\n\
    \                6.0 => \"B-\".to_string(),\n                7.0 => \"C+\".to_string(),\n\
    \                8.0 => \"C\".to_string(),\n                9.0 => \"C-\".to_string(),\n\
    \                10.0 => \"D+\".to_string(),\n                11.0 => \"D\".to_string(),\n\
    \                12.0 => \"D-\".to_string(),\n                0.0 => \"E\".to_string(),\n\
    \                _ => \"\".to_string(),\n            },\n        ));\n       \
    \ current_grade += 1.0;\n        current_index += 1;\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy[0];\n    let mut max_grade = grades_copy[0];\n\
    \    for grade in grades_copy {\n        if grade < min_grade {\n            min_grade\
    \ = grade;\n        }\n        if grade > max_grade {\n            max_grade =\
    \ grade;\n        }\n    }\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut grades_index = grades_copy.iter().position(|x|\
    \ x == grades[0]).unwrap();\n    while grades_index < grades_copy.len() {\n  \
    \      if grades_copy[grades_index] == grades[0] {\n            letter_grades.push(String::from(\"\
    A+\"));\n            grades_index += 1;\n        }\n        if grades_copy[grades_index]\
    \ == grades[1] {\n            letter_grades.push(String::from(\"A\"));\n     \
    \       grades_index += 1;\n        }\n        if grades_copy[grades_index] ==\
    \ grades[2] {\n            letter_grades.push(String::from(\"A-\"));\n       \
    \     grades_index += 1;\n        }\n        if grades_copy[grades_index] == grades[3]\
    \ {\n            letter_grades.push(String::from(\"B+\"));\n            grades_index\
    \ += 1;\n        }\n        if grades_copy[grades_index] == grades[4] {\n    \
    \        letter_grades.push(String::from(\"B\"));\n            grades_index +=\
    \ 1;\n        }\n        if grades_copy[grades_index] == grades[5] {\n       \
    \     letter_grades.push(String::from(\"B-\"));\n            grades_index += 1;\n\
    \        }\n        if grades_copy[grades_index] == grades[6] {\n            letter_grades.push(String::from(\"\
    C+\"));\n            grades_index += 1;\n        }\n        if grades_copy[grades_index]\
    \ == grades[7] {\n            letter_grades.push(String::from(\"C\"));\n     \
    \       grades_index += 1;\n        }\n        if grades_copy[grades_index] ==\
    \ grades[8] {\n            letter_grades.push(String::from(\"C-\"));\n       \
    \     grades_index += 1;\n        }\n        if grades_copy[grades_index] == grades[9]\
    \ {\n            letter_grades.push(String::from(\"D+\"));\n            grades_index\
    \ += 1;\n        }\n        if grades_copy[grades_index", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first().unwrap();\n    let mut current_letter = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade > current_grade {\n  \
    \          current_letter = String::from(\"E\");\n            current_grade =\
    \ grade;\n        } else if grade == current_grade {\n            current_letter\
    \ += String::from(\"+\");\n        } else {\n            current_letter += String::from(\"\
    -\");\n        }\n        letter_grades.push(current_letter);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade < 3.0 {\n            letter_grade\
    \ += \"A\";\n        } else if grade < 3.3 {\n            letter_grade += \"A-\"\
    ;\n        } else if grade < 3.7 {\n            letter_grade += \"B+\";\n    \
    \    } else if grade < 4.0 {\n            letter_grade += \"B\";\n        } else\
    \ if grade < 4.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ < 4.7 {\n            letter_grade += \"C+\";\n        } else if grade < 5.0\
    \ {\n            letter_grade += \"C\";\n        } else if grade < 5.3 {\n   \
    \         letter_grade += \"C-\";\n        } else if grade < 5.7 {\n         \
    \   letter_grade += \"D+\";\n        } else if grade < 6.0 {\n            letter_grade\
    \ += \"D\";\n        } else if grade < 6.3 {\n            letter_grade += \"D-\"\
    ;\n        } else if grade < 6.7 {\n            letter_grade += \"E\";\n     \
    \   } else {\n            letter_grade += \"F\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        let mut letter_grade = String::new();\n        if grade\
    \ < 3.0 {\n            letter_grade += \"A\";\n        } else if grade < 3.7 {\n\
    \            letter_grade += \"A-\";\n        } else if grade < 4.0 {\n      \
    \      letter_grade += \"B+\";\n        } else if grade < 4.3 {\n            letter_grade\
    \ += \"B\";\n        } else if grade < 4.6 {\n            letter_grade += \"B-\"\
    ;\n        } else if grade < 4.9 {\n            letter_grade += \"C+\";\n    \
    \    } else if grade < 5.3 {\n            letter_grade += \"C\";\n        } else\
    \ if grade < 5.6 {\n            letter_grade += \"C-\";\n        } else if grade\
    \ < 5.9 {\n            letter_grade += \"D+\";\n        } else if grade < 6.3\
    \ {\n            letter_grade += \"D\";\n        } else if grade < 6.6 {\n   \
    \         letter_grade += \"D-\";\n        } else if grade < 6.9 {\n         \
    \   letter_grade += \"E\";\n        } else {\n            letter_grade += \"F\"\
    ;\n        }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades_copy.len();\n\
    \    let mut letter_grades = vec![];\n    \n    while grades_len > 0 {\n     \
    \   let grade = grades_copy.pop();\n        let grade = grade as f64;\n      \
    \  let grade = grade / 4.0;\n        let grade = grade as u8;\n        \n    \
    \    if grade > 9 {\n            letter_grades.push(String::from(\"D-\"));\n \
    \           grades_len -= 1;\n        }\n        \n        if grade > 7 {\n  \
    \          letter_grades.push(String::from(\"D+\"));\n            grades_len -=\
    \ 1;\n        }\n        \n        if grade > 5 {\n            letter_grades.push(String::from(\"\
    D\"));\n            grades_len -= 1;\n        }\n        \n        if grade >\
    \ 3 {\n            letter_grades.push(String::from(\"C-\"));\n            grades_len\
    \ -= 1;\n        }\n        \n        if grade > 1 {\n            letter_grades.push(String::from(\"\
    C\"));\n            grades_len -= 1;\n        }\n        \n        if grade >\
    \ 0 {\n            letter_grades.push(String::from(\"B-\"));\n            grades_len\
    \ -= 1;\n        }\n        \n        if grade > -1 {\n            letter_grades.push(String::from(\"\
    B\"));\n            grades_len -= 1;\n        }\n        \n        if grade >\
    \ -3 {\n            letter_grades.push(String::from(\"B-\"));\n            grades_len\
    \ -= 1;\n        }\n        \n        if grade > -5 {\n            letter_grades.push(String::from(\"\
    B+\"));\n            grades_len -= 1;\n        }\n        \n        if grade >\
    \ -7 {\n            letter_grades.push(String::from(\"B\"));\n            grades_len\
    \ -= 1;\n        }\n        \n        if grade > -9 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            grades_len -= 1;\n        }\n        \n        if grade >\
    \ -11 {\n            letter_grades.push(String::from(\"A\"));\n            grades_len\
    \ -= 1;\n        }\n        \n        if grade > -13 {\n            letter_grades.push(String::from(\"\
    A+\"));\n            grades_len -= 1;\n        }\n        \n        if grade >\
    \ -15 {\n            letter_grades.push(String::from(\"A\"));\n            grades_len\
    \ -= 1;\n        }\n        \n        if grade > -17 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            grades_len -= 1;\n        }", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first();\n    let mut current_letter_grade = String::from(\"E\"\
    );\n    \n    for grade in grades_copy {\n        if grade > current_grade {\n\
    \            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else if grade < current_grade {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D\"));\n        } else { \n            letter_grades.push(String::from(\"D-\"\
    ));\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_gp\
    \ = 0;\n    let mut current_letter_grade_index = 0;\n    let mut current_gp_index\
    \ = 0;\n    while current_grade != 0.0 {\n        if current_grade < current_gp\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_gp\
    \ = 0;\n            current_letter_grade_index = 0;\n            current_gp_index\
    \ = 0;\n        }\n        if current_grade > current_gp {\n            current_letter_grade\
    \ = String::from(&grades[current_gp_index]);\n            current_gp = current_grade;\n\
    \            current_letter_grade_index = 0;\n            current_gp_index = 0;\n\
    \        }\n        if current_grade == current_gp {\n            current_letter_grade\
    \ = String::from(&grades[current_letter_grade_index]);\n            current_gp_index\
    \ += 1;\n        }\n        letter_grades.push(current_letter_grade);\n      \
    \  current_grade -= current_gp;\n    }\n    letter_grades", "    let mut letter_grades\
    \ = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut min_gpa = grades.iter().min().unwrap();\n\
    \    let mut max_gpa = grades.iter().max().unwrap();\n    let mut min_gpa_percent\
    \ = grades.iter().filter(|&x| x < min_gpa).count() / grades.len() * 100.0;\n \
    \   let mut max_gpa_percent = grades.iter().filter(|&x| x > max_gpa).count() /\
    \ grades.len() * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x| x\
    \ > min_gpa && x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent\
    \ = grades.iter().filter(|&x| x > min_gpa && x < max_gpa).count() / grades.len()\
    \ * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x| x > min_gpa &&\
    \ x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x|\
    \ x > min_gpa && x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent\
    \ = grades.iter().filter(|&x| x > min_gpa && x < max_gpa).count() / grades.len()\
    \ * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x| x > min_gpa &&\
    \ x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x|\
    \ x > min_gpa && x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent\
    \ = grades.iter().filter(|&x| x > min_gpa && x < max_gpa).count() / grades.len()\
    \ * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x| x > min_gpa &&\
    \ x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent = grades.iter().filter(|&x|\
    \ x > min_gpa && x < max_gpa).count() / grades.len() * 100.0;\n    let mut gpa_percent\
    \ = grades.iter().filter(|&x| x > min_gpa && x < max_gpa).count() / grades.len()\
    \ * 100.0;\n    let mut gpa_percent = grades.iter", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    let mut current_letter_grade_index = -1;\n    let mut current_letter_grade_index2\
    \ = -1;\n    let mut current_letter_grade_index3 = -1;\n    let mut current_letter_grade_index4\
    \ = -1;\n    let mut current_letter_grade_index5 = -1;\n    let mut current_letter_grade_index6\
    \ = -1;\n    let mut current_letter_grade_index7 = -1;\n    let mut current_letter_grade_index8\
    \ = -1;\n    let mut current_letter_grade_index9 = -1;\n    let mut current_letter_grade_index10\
    \ = -1;\n    let mut current_letter_grade_index11 = -1;\n    let mut current_letter_grade_index12\
    \ = -1;\n    let mut current_letter_grade_index13 = -1;\n    let mut current_letter_grade_index14\
    \ = -1;\n    let mut current_letter_grade_index15 = -1;\n    let mut current_letter_grade_index16\
    \ = -1;\n    let mut current_letter_grade_index17 = -1;\n    let mut current_letter_grade_index18\
    \ = -1;\n    let mut current_letter_grade_index19 = -1;\n    let mut current_letter_grade_index20\
    \ = -1;\n    let mut current_letter_grade_index21 = -1;\n    let mut current_letter_grade_index22\
    \ = -1;\n    let mut current_letter_grade_index23 = -1;\n    let mut current_letter_grade_index24\
    \ = -1;\n    let mut current_letter_grade_index25 = -1;\n    let mut current_letter_grade_index26\
    \ = -1;\n    let mut current_letter_grade_index27 = -1;\n    let mut current_letter_grade_index28\
    \ = -1;\n    let mut current_letter_grade_index29 = -1;\n    let mut current_letter_grade_index30\
    \ = -1;\n    let mut current_letter_grade_index31 = -1;\n    let mut current_letter_grade_index32\
    \ = -1;\n    let mut current_letter_grade_index33 = -1;\n    let mut current_letter_grade_index34\
    \ = -1;\n    let mut current_letter_grade_index35 = -1;\n    let mut current_letter_grade_index36\
    \ = -1;\n    let mut current_letter_grade_index37 = -1;\n    let mut current_letter_grade_index38\
    \ = -1;\n    let mut current_letter_grade_index39 = -1;\n    let mut current_letter_grade_index40\
    \ = -1;\n    let mut current_letter_grade_index41 = -1;\n    let mut current_letter_grade_index42\
    \ = -1;\n    let mut current_letter_grade_index43 = -1;\n    let mut current_letter_grade_index",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut grades_len = grades.len();\n    let mut i = 0;\n    while i < grades_len\
    \ {\n        if grades_copy[i] > 4.0 {\n            grades_copy[i] = grades_copy[i]\
    \ - 4.0;\n            letter_grades.push(String::from(\"A+\"));\n            i\
    \ += 1;\n        } else if grades_copy[i] > 3.7 {\n            grades_copy[i]\
    \ = grades_copy[i] - 3.7;\n            letter_grades.push(String::from(\"A\"));\n\
    \            i += 1;\n        } else if grades_copy[i] > 3.3 {\n            grades_copy[i]\
    \ = grades_copy[i] - 3.3;\n            letter_grades.push(String::from(\"A-\"\
    ));\n            i += 1;\n        } else if grades_copy[i] > 3.0 {\n         \
    \   grades_copy[i] = grades_copy[i] - 3.0;\n            letter_grades.push(String::from(\"\
    B+\"));\n            i += 1;\n        } else if grades_copy[i] > 2.7 {\n     \
    \       grades_copy[i] = grades_copy[i] - 2.7;\n            letter_grades.push(String::from(\"\
    B\"));\n            i += 1;\n        } else if grades_copy[i] > 2.3 {\n      \
    \      grades_copy[i] = grades_copy[i] - 2.3;\n            letter_grades.push(String::from(\"\
    B-\"));\n            i += 1;\n        } else if grades_copy[i] > 2.0 {\n     \
    \       grades_copy[i] = grades_copy[i] - 2.0;\n            letter_grades.push(String::from(\"\
    C+\"));\n            i += 1;\n        } else if grades_copy[i] > 1.7 {\n     \
    \       grades_copy[i] = grades_copy[i] - 1.7;\n            letter_grades.push(String::from(\"\
    C\"));\n            i += 1;\n        } else if grades_copy[i] > 1.3 {\n      \
    \      grades_copy[i] = grades_copy[i] - 1.3;\n            letter_grades.push(String::from(\"\
    C-\"));\n            i += 1;\n        } else if grades_copy[i] > 1.0 {\n     \
    \       grades_copy[i] = grades_copy[i] - 1.0;\n            letter_grades.push(String::from(\"\
    D+\"));\n            i += 1;\n        } else if grades_copy[i] > 0.7 {\n     \
    \       grades_copy[i] = grades_copy[i] - 0.7;\n            letter_grades.push(String::from(\"\
    D\"));\n            i += 1;\n        } else if grades_copy[i] > 0.0 {\n      \
    \      grades_copy[i] = grades_copy[i] - 0.0;\n            letter_grades.push(String::from(\"\
    D-\"));\n", "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades[min_grade_index];\n    let mut current_index = min_grade_index;\n \
    \   while current_index < max_grade_index {\n        if current_grade < grades[current_index]\
    \ {\n            current_grade = grades[current_index];\n            current_index\
    \ = min_grade_index;\n        } else {\n            current_grade = grades[current_index];\n\
    \            current_index += 1;\n        }\n        letter_grades.push(String::from(\n\
    \            match current_grade {\n                4.0 => \"A+\".to_string(),\n\
    \                3.7 => \"A\".to_string(),\n                3.3 => \"A-\".to_string(),\n\
    \                3.0 => \"B+\".to_string(),\n                2.7 => \"B\".to_string(),\n\
    \                2.3 => \"B-\".to_string(),\n                2.0 => \"C+\".to_string(),\n\
    \                1.7 => \"C\".to_string(),\n                1.3 => \"C-\".to_string(),\n\
    \                1.0 => \"D+\".to_string(),\n                0.7 => \"D\".to_string(),\n\
    \                0.0 => \"D-\".to_string(),\n                _ => \"E\".to_string(),\n\
    \            },\n        ));\n    }\n    letter_grades", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_grade_index\
    \ = 0;\n    let mut current_letter_grade = String::from(\"E\");\n    for grade\
    \ in grades_copy {\n        if grade > current_grade {\n            current_grade\
    \ = grade;\n            current_grade_index = 0;\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        if grade == current_grade {\n   \
    \         current_grade_index += 1;\n            current_letter_grade = String::from(\n\
    \                &current_grade as char + &current_grade_index as char,\n    \
    \        );\n        }\n        letter_grades.push(current_letter_grade);\n  \
    \  }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut grade = grades_copy[0];\n  \
    \  let mut grade_index = 0;\n    let mut current_grade_index = 0;\n    let mut\
    \ current_grade = grade;\n    let mut current_letter_grade = String::from(\"E\"\
    );\n    while grade_index < grades_copy.len() {\n        if grade > grades_copy[grade_index]\
    \ {\n            grade = grades_copy[grade_index];\n            current_grade\
    \ = grade;\n            current_grade_index = grade_index;\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        grade_index += 1;\n    }\n    if\
    \ current_grade > grades_copy[grade_index] {\n        grade = grades_copy[grade_index];\n\
    \        current_grade = grade;\n        current_grade_index = grade_index;\n\
    \        current_letter_grade = String::from(\"E\");\n    }\n    grades_copy.sort();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    grades_copy.dedup();\n    grades_copy.dedup();\n    grades_copy.dedup();\n\
    \    ", "    let mut letter_grades = vec![];\n    for grade in grades {\n    \
    \    let mut letter_grade = String::from(\"\");\n        if grade > 3.0 {\n  \
    \          letter_grade += String::from(\"B+\");\n        } else if grade > 2.7\
    \ {\n            letter_grade += String::from(\"B\");\n        } else if grade\
    \ > 2.3 {\n            letter_grade += String::from(\"B-\");\n        } else if\
    \ grade > 1.3 {\n            letter_grade += String::from(\"C+\");\n        }\
    \ else if grade > 1.0 {\n            letter_grade += String::from(\"C\");\n  \
    \      } else if grade > 0.7 {\n            letter_grade += String::from(\"C-\"\
    );\n        } else if grade > 0.3 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade > 0.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -0.3 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade > -0.7 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade > -1.0 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade > -1.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -2.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -3.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -3.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -4.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -4.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -5.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -5.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -6.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -6.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -7.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > -7.7 {", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    while grade > 0 {\n        if grade >= gpa {\n            letter_grades.push(String::from(\"\
    A+\"));\n            grade -= gpa;\n        } else {\n            letter_grades.push(String::from(\"\
    A\"));\n            grade -= grade;\n        }\n        if grade >= gpa {\n  \
    \          letter_grades.push(String::from(\"A-\"));\n            grade -= gpa;\n\
    \        } else {\n            letter_grades.push(String::from(\"B+\"));\n   \
    \         grade -= grade;\n        }\n        if grade >= gpa {\n            letter_grades.push(String::from(\"\
    B\"));\n            grade -= gpa;\n        } else {\n            letter_grades.push(String::from(\"\
    B-\"));\n            grade -= grade;\n        }\n        if grade >= gpa {\n \
    \           letter_grades.push(String::from(\"C+\"));\n            grade -= gpa;\n\
    \        } else {\n            letter_grades.push(String::from(\"C\"));\n    \
    \        grade -= grade;\n        }\n        if grade >= gpa {\n            letter_grades.push(String::from(\"\
    C-\"));\n            grade -= gpa;\n        } else {\n            letter_grades.push(String::from(\"\
    D+\"));\n            grade -= grade;\n        }\n        if grade >= gpa {\n \
    \           letter_grades.push(String::from(\"D\"));\n            grade -= gpa;\n\
    \        } else {\n            letter_grades.push(String::from(\"D-\"));\n   \
    \         grade -= grade;\n        }\n        if grade >= gpa {\n            letter_grades.push(String::from(\"\
    E\"));\n            grade -= gpa;\n        } else {\n            letter_grades.push(String::from(\"\
    F\"));\n            grade -= grade;\n        }\n        gpa -= grade;\n    }\n\
    \    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            grades_vec.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            grades_vec.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            grades_vec.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n   \
    \ let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut current_grade = grades[min_grade_index];\n    let mut current_grade_index\
    \ = min_grade_index;\n    while current_grade != 0.0 {\n        let mut current_grade_index\
    \ = min_grade_index;\n        while current_grade_index < max_grade_index {\n\
    \            if current_grade < grades[current_grade_index] {\n              \
    \  current_grade_index = current_grade_index + 1;\n            } else {\n    \
    \            break;\n            }\n        }\n        letter_grades.push(String::from(current_grade.to_string()));\n\
    \        current_grade = grades[current_grade_index];\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut min_grade\
    \ = grades.iter().min();\n    let mut max_grade = grades.iter().max();\n    let\
    \ mut min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut current_grade = grades[min_grade_index];\n    let mut current_index\
    \ = min_grade_index;\n    while current_index < max_grade_index {\n        let\
    \ mut current_grade = grades[current_index];\n        if current_grade > current_grade\
    \ {\n            current_grade -= 1;\n        }\n        if current_grade < current_grade\
    \ {\n            current_grade += 1;\n        }\n        letter_grades.push(String::from(&format!(\"\
    {}+\", current_grade)));\n        current_index += 1;\n    }\n    letter_grades.push(String::from(&format!(\"\
    {}\", current_grade)));\n    letter_grades", "    let mut grades_string = vec![];\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            grades_string.push(String::from(\"\
    A+\"));\n        } else if grade > 2.7 {\n            grades_string.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_string.push(String::from(\"\
    B-\"));\n        } else if grade > 1.7 { \n            grades_string.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_string.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_string.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D-\"));\n        } else {\n            grades_string.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_string", "    let mut letter_grades = vec![];\n\
    \    let mut total_grade = grades.iter().sum();\n    let mut total_letter_grade\
    \ = String::new();\n    for grade in grades {\n        let letter_grade = if grade\
    \ < total_grade {\n            String::from(\"A+\")\n        } else if grade <\
    \ total_grade + 0.3 {\n            String::from(\"A\")\n        } else if grade\
    \ < total_grade + 0.5 {\n            String::from(\"A-\")\n        } else if grade\
    \ < total_grade + 0.7 {\n            String::from(\"B+\")\n        } else if grade\
    \ < total_grade + 0.8 {\n            String::from(\"B\")\n        } else if grade\
    \ < total_grade + 0.9 {\n            String::from(\"B-\")\n        } else if grade\
    \ < total_grade + 1.1 {\n            String::from(\"C+\")\n        } else if grade\
    \ < total_grade + 1.2 {\n            String::from(\"C\")\n        } else if grade\
    \ < total_grade + 1.3 {\n            String::from(\"C-\")\n        } else if grade\
    \ < total_grade + 1.4 {\n            String::from(\"D+\")\n        } else if grade\
    \ < total_grade + 1.5 {\n            String::from(\"D\")\n        } else if grade\
    \ < total_grade + 1.6 {\n            String::from(\"D-\")\n        } else {\n\
    \            String::from(\"E\")\n        };\n        letter_grades.push(letter_grade);\n\
    \        total_grade -= grade;\n        total_letter_grade += letter_grade;\n\
    \    }\n    letter_grades.push(total_letter_grade);\n    letter_grades", "   \
    \ let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    letter_grades.push(current_letter_grade);\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        } else if grade\
    \ == current_grade {\n            current_letter_grade += String::from(\"+\");\n\
    \        } else {\n            current_letter_grade += String::from(\"-\");\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ < 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n        } else\
    \ if grade < 3.3 {\n            letter_grades.push(String::from(\"A\"));\n   \
    \     } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades"]
stop_tokens:
- "\n}"

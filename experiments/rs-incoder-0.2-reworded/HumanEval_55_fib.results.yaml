language: rs
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpvjmc3n4l.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n12 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmpqagb8qop.rs:12:36\n    |\n12  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmphn4et73f.rs:12:36\n    |\n12  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpq2f0114k.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n - 1))\n}\n\nfn\
    \ main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n   \
    \ assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main() {\n   \
    \ let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpq2f0114k.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp9_aoncfi.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmphn4et73f.rs:12:36\n    |\n12  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpr2lxeewx.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for i\
    \ in 1..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp57td00dz.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n))\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1).clone() + fib(n).clone()\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpafhiid8h.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpq2f0114k.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpvjmc3n4l.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n12 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main() {\n  \
    \  let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\n\
    \    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpfvnhz4w0.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmpqagb8qop.rs:12:36\n    |\n12  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ i in 2..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmprysqqy8y.rs:13:36\n    |\n13  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp9_aoncfi.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpbgmfftd0.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpafhiid8h.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpbgmfftd0.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpbbfkoslj.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n12 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpv8to144p.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpbbfkoslj.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n12 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul_2())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `wrapping_mul_2` found for type `isize` in\
    \ the current scope\n  --> /tmp/tmp0y7b7b8m.rs:13:36\n   |\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul_2())\n\
    \   |                                    ^^^^^^^^^^^^^^ help: there is an associated\
    \ function with a similar name: `wrapping_mul`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul_2())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `wrapping_mul_2` found for type `isize` in\
    \ the current scope\n  --> /tmp/tmp0y7b7b8m.rs:13:36\n   |\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul_2())\n\
    \   |                                    ^^^^^^^^^^^^^^ help: there is an associated\
    \ function with a similar name: `wrapping_mul`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main() {\n   \
    \ let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp75sklpx2.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 1 {\n\
    \        return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp98af5ipt.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n  \
    \  }\n\n    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpjf79glrv.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpafhiid8h.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n))\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpv8to144p.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpv8to144p.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmprysqqy8y.rs:13:36\n    |\n13  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp98af5ipt.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ i in 1..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmphcl9ugyg.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp98af5ipt.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n  \
    \  }\n\n    a\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpjf79glrv.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul_2())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `wrapping_mul_2` found for type `isize` in\
    \ the current scope\n  --> /tmp/tmp0y7b7b8m.rs:13:36\n   |\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul_2())\n\
    \   |                                    ^^^^^^^^^^^^^^ help: there is an associated\
    \ function with a similar name: `wrapping_mul`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmprysqqy8y.rs:13:36\n    |\n13  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ i in 1..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp5xkyx4ze.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpvjmc3n4l.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n12 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp98af5ipt.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(n));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for i\
    \ in 1..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmp57td00dz.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmpqagb8qop.rs:12:36\n    |\n12  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747079
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for i\
    \ in 1..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `55`', /tmp/tmpiygf2ql5.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for\
    \ _ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \n    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp2lheoyb0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n - 1))\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n\
    \    b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpq2f0114k.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let candidate\
    \ = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12),\
    \ 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpu7ww58qe.rs:8:21\n   |\n\
    8  | fn fib(n: isize) -> isize {\n   |    ---              ^^^^^ expected `isize`,\
    \ found `()`\n   |    |\n   |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n...\n13 |     fib(n + 1).wrapping_add(fib(n).wrapping_mul(2));\n\
    \   |                                                    - help: consider removing\
    \ this semicolon\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1) + fib(n + 2)\n}\n\nfn main() {\n  \
    \  let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmpbgmfftd0.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n-1) + fib(n-2)\n}\n\nfn main() {\n    let\
    \ candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: -1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    fib(n + 1).wrapping_add(fib(n).wrapping_mul(2))\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747086
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\n\nfn main()\
    \ {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 0
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n    return fib(n-1) + fib(n-2);\n}\n\nfn main() {\n\
    \    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11), 89);\n\
    \    assert_eq!(candidate(12), 144);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747080
- exit_code: 101
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n < 2 {\n \
    \       return n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    for _\
    \ in 0..n {\n        let c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10),\
    \ 55);\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n\
    \    assert_eq!(candidate(11), 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `55`', /tmp/tmp9rgpdg6n.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747080
- exit_code: 1
  program: "/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
    /// 1\n/// >>> fib(8)\n/// 21\nfn fib(n: isize) -> isize {\n    if n <= 2 {\n\
    \        return n;\n    }\n    fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    }\n\nfn main() {\n    let candidate = fib;\n    assert_eq!(candidate(10), 55);\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(8), 21);\n    assert_eq!(candidate(11),\
    \ 89);\n    assert_eq!(candidate(12), 144);\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmphn4et73f.rs:12:36\n    |\n12  |     fib(n + 1).wrapping_add(fib(n).wrapping_add())\n\
    \    |                                    ^^^^^^^^^^^^- supplied 0 arguments\n\
    \    |                                    |\n    |                           \
    \         expected 1 argument\n    |\nnote: associated function defined here\n\
    \    = note: this error originates in the macro `int_impl` (in Nightly builds,\
    \ run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747079

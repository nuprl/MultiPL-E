language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmps4q8u4xm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb5ylreww.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpc40zkt7s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmpfwjbc3z5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result = a;\n    while result % b != 0 {\n        result = result + b;\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747701
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvtb0bpa4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a = a % greatest_common_divisor;\n\
    \    let mut b = b % greatest_common_divisor;\n    while a != 0 && b != 0 {\n\
    \        if a > b {\n            greatest_common_divisor += 1;\n        }\n  \
    \      a %= greatest_common_divisor;\n        b %= greatest_common_divisor;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp1hkv8u8p.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb5ylreww.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjqi1ngtj.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    let mut remainder = b.abs() as isize;\n    while remainder\
    \ > 0 {\n        if remainder >= greatest_common_divisor {\n            greatest_common_divisor\
    \ += 1;\n        } else {\n            greatest_common_divisor = remainder;\n\
    \        }\n        remainder -= greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpemgpc0ed.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9468t_s0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpry8t8cva.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpry8t8cva.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp2h496rwo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp___q8k3j.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        n += 1;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpk8va9xwl.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpk8va9xwl.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpry8t8cva.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpry8t8cva.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n\n    while greatest_common_divisor > b {\n        greatest_common_divisor\
    \ -= b;\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3vio1s0_.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a.clone();\n    while greatest_common_divisor < b\
    \ {\n        greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpxbon_3sv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd != 0 {\n        if b == 0 {\n            break;\n  \
    \      }\n        gcd = b / gcd;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n\n   \
    \ greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpgn9b1ztg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a.clone();\n    while greatest_common_divisor < b\
    \ {\n        greatest_common_divisor += b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpkrzjl8jc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ /= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpasvg8e89.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_is_positive = true;\n    while greatest_common_divisor_is_positive\
    \ && greatest_common_divisor < b {\n        greatest_common_divisor += a;\n  \
    \      greatest_common_divisor_is_positive = greatest_common_divisor >= b;\n \
    \   }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `1`', /tmp/tmpx00qeksk.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb5ylreww.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `21`,\n right: `1`', /tmp/tmp0ikrnayg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9468t_s0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb5ylreww.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd *= a;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpjtajx7wn.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpjtajx7wn.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp8zo7aiy2.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    loop {\n        if a > b {\n  \
    \          a %= b;\n        } else {\n            b %= a;\n        }\n       \
    \ if a == 0 {\n            return b;\n        }\n        if b == 0 {\n       \
    \     return a;\n        }\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpnfs8yx7g.rs:12:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpnfs8yx7g.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   if a > b {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ (b % a))\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb5ylreww.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp8zo7aiy2.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp2h496rwo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp8zo7aiy2.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbd5tmixt.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpbd5tmixt.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjqi1ngtj.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpr17871g2.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a % b;\n    while greatest_common_divisor != 0 {\n\
    \        greatest_common_divisor = b;\n        b = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvgkevzri.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjqi1ngtj.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpry8t8cva.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpry8t8cva.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjqi1ngtj.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += a;\n            a -= b;\n        } else\
    \ {\n            greatest_common_divisor += b;\n            b -= a;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp5_9oi45m.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp5_9oi45m.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = greatest_common_divisor.saturating_add(a);\n        a = a % b;\n    }\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpigbyz85z.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a % b;\n    while greatest_common_divisor != 0 {\n\
    \        greatest_common_divisor = b;\n        b = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvgkevzri.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvtb0bpa4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_2 = b;\n\n    while greatest_common_divisor\
    \ > greatest_common_divisor_2 {\n        greatest_common_divisor -= greatest_common_divisor_2;\n\
    \        greatest_common_divisor_2 -= greatest_common_divisor;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9694vlw8.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = a % b;\n        a = b;\n        b = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmphbx_oply.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmphbx_oply.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = greatest_common_divisor;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp3_89pt8b.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp___q8k3j.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a = a;\n    let mut b = b;\n    while\
    \ a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n        } else {\n\
    \            b %= a;\n        }\n        greatest_common_divisor *= a;\n     \
    \   a /= b;\n        b /= a;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpgojgyoyn.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmppw7hwy_x.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmppw7hwy_x.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    while r > b {\n        r = r - b;\n    }\n    r\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp38lob76o.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpry8t8cva.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpry8t8cva.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbd5tmixt.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpbd5tmixt.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpigbyz85z.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjqi1ngtj.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n\n   \
    \ greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpgn9b1ztg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += a;\n            a -= b;\n        } else\
    \ {\n            greatest_common_divisor += b;\n            b -= a;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp5_9oi45m.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp5_9oi45m.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   if a > b {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ (b % a))\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd = a > gcd ? a :\
    \ gcd;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `a`\n\
    \  --> /tmp/tmpptvzzy27.rs:14:25\n   |\n14 |         gcd = a > gcd ? a : gcd;\n\
    \   |                         ^ expected one of `.`, `;`, `?`, `}`, or an operator\n\
    \nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut greatest_common_divisor = a;\n    let mut remainder =\
    \ a % b;\n    while remainder != 0 {\n        greatest_common_divisor += 1;\n\
    \        remainder = remainder % b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpw9qjsxtd.rs:11:16\n\
    \   |\n11 |         (a, b) = (b, a)\n   |         ------ ^\n   |         |\n \
    \  |         cannot assign to this expression\n   |\n   = note: see issue #71126\
    \ <https://github.com/rust-lang/rust/issues/71126> for more information\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    let mut a = a % b;\n    while a > 0 {\n  \
    \      greatest_common_divisor = b;\n        b = a % b;\n        a = a / b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp9vm3ykz7.rs:11:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmps4q8u4xm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    while a % b != 0 {\n        (a, b) = (b, a % b)\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmp5iq6m66e.rs:11:16\n\
    \   |\n11 |         (a, b) = (b, a)\n   |         ------ ^\n   |         |\n \
    \  |         cannot assign to this expression\n   |\n   = note: see issue #71126\
    \ <https://github.com/rust-lang/rust/issues/71126> for more information\n\nerror[E0658]:\
    \ destructuring assignments are unstable\n  --> /tmp/tmp5iq6m66e.rs:14:16\n  \
    \ |\n14 |         (a, b) = (b, a % b)\n   |         ------ ^\n   |         |\n\
    \   |         cannot assign to this expression\n   |\n   = note: see issue #71126\
    \ <https://github.com/rust-lang/rust/issues/71126> for more information\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   let mut greatest_common_divisor = a as isize;\n    while a % b != 0 {\n  \
    \      greatest_common_divisor += 1;\n        a /= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp6oiv_4lr.rs:16:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n16 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp2h496rwo.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpuma0h_22.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a%b)\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n\n   \
    \ greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpgn9b1ztg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   let mut greatest_common_divisor = a as isize;\n    let mut remainder = a %\
    \ b;\n    while remainder != 0 {\n        greatest_common_divisor = remainder;\n\
    \        remainder = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmppw7hwy_x.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmppw7hwy_x.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpc40zkt7s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpd7z0mhuo.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    let mut remainder = b;\n    while remainder\
    \ > 0 {\n        remainder %= greatest_common_divisor;\n        greatest_common_divisor\
    \ += 1;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbd5tmixt.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpbd5tmixt.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjqi1ngtj.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmps4q8u4xm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ /= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpasvg8e89.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpuma0h_22.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmppw7hwy_x.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmppw7hwy_x.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpwxjqlfn9.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpry8t8cva.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpry8t8cva.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut greatest_common_divisor = a;\n    let mut a = a % b;\n\
    \    while a != 0 {\n        greatest_common_divisor = greatest_common_divisor\
    \ % b;\n        a = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpyoqfze6d.rs:11:16\n\
    \   |\n11 |         (a, b) = (b, a)\n   |         ------ ^\n   |         |\n \
    \  |         cannot assign to this expression\n   |\n   = note: see issue #71126\
    \ <https://github.com/rust-lang/rust/issues/71126> for more information\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprqar1w1h.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut n = 0;\n    while a > 0 {\n        if a % b == 0 {\n\
    \            n = b;\n            break;\n        }\n        a = a / b;\n    }\n\
    \    n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmprq93hjrh.rs:11:16\n\
    \   |\n11 |         (a, b) = (b, a)\n   |         ------ ^\n   |         |\n \
    \  |         cannot assign to this expression\n   |\n   = note: see issue #71126\
    \ <https://github.com/rust-lang/rust/issues/71126> for more information\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        n += 1;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpk8va9xwl.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpk8va9xwl.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n    let mut a = a as isize;\n    let mut b = b as isize;\n\n\
    \    while a > 0 && b > 0 {\n        if a > b {\n            greatest_common_divisor\
    \ += b as isize;\n            b -= a as isize;\n        } else {\n           \
    \ greatest_common_divisor += a as isize;\n            a -= b as isize;\n     \
    \   }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `1`', /tmp/tmp4l12i03i.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    let mut a = a as isize;\n    let mut b = b as isize;\n\
    \    while a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += 1;\n        }\n        a /= b;\n        b /= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpm7s_sjt4.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd: isize = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n          \
    \  a %= b;\n        } else {\n            b %= a;\n        }\n        gcd *= a;\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpo133y1se.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpo133y1se.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += a;\n            a -= b;\n        } else\
    \ {\n            greatest_common_divisor += b;\n            b -= a;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp5_9oi45m.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp5_9oi45m.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpry8t8cva.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpry8t8cva.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp44fhvdlm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpuma0h_22.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a % b;\n    while greatest_common_divisor != 0 {\n\
    \        greatest_common_divisor = b;\n        b = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvgkevzri.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9468t_s0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_2 = b;\n\n    while greatest_common_divisor\
    \ > greatest_common_divisor_2 {\n        greatest_common_divisor_2 -= greatest_common_divisor;\n\
    \        greatest_common_divisor %= greatest_common_divisor_2;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpm_2q5iaw.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9468t_s0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpc40zkt7s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            a %= b;\n        } else {\n            b %= a;\n        }\n     \
    \   greatest_common_divisor *= 2;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpy_mvjlfg.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpy_mvjlfg.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ += a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp_k6y1leb.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a_mod_b = 0;\n    while a > 0 && b\
    \ > 0 {\n        if a % b == 0 {\n            greatest_common_divisor = b;\n \
    \           a_mod_b = a;\n        }\n        a /= b;\n        b /= 2;\n    }\n\
    \    greatest_common_divisor = a_mod_b\n}\n\nfn main() {\n    let candidate =\
    \ greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2brtezua.rs:17:5\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n17 |     greatest_common_divisor = a_mod_b\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   if a > b {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a % b)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpol9x01wn.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpc40zkt7s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    while greatest_common_divisor > b {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpl1l5sro8.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvtb0bpa4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747697
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747702
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5d6u5lb.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbd5tmixt.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpbd5tmixt.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747697
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmpfwjbc3z5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747696
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp06jh3bzx.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747696

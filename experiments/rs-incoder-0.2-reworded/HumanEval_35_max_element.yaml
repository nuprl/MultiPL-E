name: HumanEval_35_max_element
language: rs
prompt: "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2,\
  \ 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  /// 123\nfn max_element(l: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
  \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
  \ 124);\n}\n"
completions: ['    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)', "    let mut\
    \ max_elem = l[0];\n    for i in l.iter().rev() {\n        if i > max_elem {\n\
    \            max_elem = i;\n        }\n    }\n    max_elem", "    let mut max\
    \ = l.iter().max().unwrap();\n    l.iter().for_each(|&x| {\n        if x > max\
    \ {\n            max = x;\n        }\n    });\n    max", '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)', "    let mut\
    \ max = l.iter().max().unwrap();\n    l.iter().for_each(|&x| {\n        if x >\
    \ max {\n            max = x;\n        }\n    });\n    max", '    l.iter().max().unwrap_or(0)',
  "    let mut max = l[0];\n    for &x in l {\n        if x > max {\n            max\
    \ = x;\n        }\n    }\n    max", '    l.iter().max().unwrap()', '    l.iter().max().unwrap_or(l.len())',
  '    l.iter().max().unwrap()', '    l.iter().max_by_key(|&x| x).unwrap()', '    l.iter().max_by_key(|&x|
    x).unwrap()', '    l.iter().max().unwrap_or(0)', "    let mut max = l[0];\n  \
    \  for i in l.iter().rev() {\n        if *i > max {\n            max = *i;\n \
    \       }\n    }\n    max", '    l.iter().max().unwrap_or(l.len())']
stop_tokens:
- "\n}"

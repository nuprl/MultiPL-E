name: HumanEval_121_solution
language: rs
prompt: "/// Given a non-empty vector of integers, return the sum of all of the odd\
  \ elements that are in even positions.\n/// Examples\n/// >>> solution(vec![5, 8,\
  \ 7, 1])\n/// 12\n/// >>> solution(vec![3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(vec![30,\
  \ 13, 24, 321])\n/// 0\nfn solution(lst: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = solution;\n    assert_eq!(candidate(vec![5,\
  \ 8, 7, 1]), 12);\n    assert_eq!(candidate(vec![3, 3, 3, 3, 3]), 9);\n    assert_eq!(candidate(vec![30,\
  \ 13, 24, 321]), 0);\n    assert_eq!(candidate(vec![5, 9]), 5);\n    assert_eq!(candidate(vec![2,\
  \ 4, 8]), 0);\n    assert_eq!(candidate(vec![30, 13, 23, 32]), 23);\n    assert_eq!(candidate(vec![3,\
  \ 13, 2, 9]), 3);\n}\n"
completions: ["    let mut evens = vec![];\n    let mut odds = vec![];\n    for x\
    \ in lst {\n        if x % 2 == 0 {\n            evens.push(x);\n        } else\
    \ {\n            odds.push(x);\n        }\n    }\n    evens.iter().filter(|x|\
    \ x % 2 == 1).sum::<isize>()\n        + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()",
  "    let mut evens = vec![];\n    let mut odds = vec![];\n    for &i in lst {\n\
    \        if i % 2 == 0 {\n            evens.push(i);\n        } else {\n     \
    \       odds.push(i);\n        }\n    }\n    evens.iter().filter(|&i| i % 2 ==\
    \ 1).sum::<isize>()\n        + odds.iter().filter(|&i| i % 2 == 0).sum::<isize>()",
  '    lst.iter().filter(|&x| x % 2 == 1).sum::<isize>()', "    let mut sum = 0;\n\
    \    for i in lst {\n        if i % 2 == 0 {\n            sum += i;\n        }\n\
    \    }\n    sum", "    let mut sum = 0;\n    for &i in lst {\n        if i % 2\
    \ == 0 {\n            sum += i;\n        }\n    }\n    sum", "    let mut evens\
    \ = vec![];\n    let mut odds = vec![];\n    for x in lst {\n        if x % 2\
    \ == 0 {\n            evens.push(x);\n        } else {\n            odds.push(x);\n\
    \        }\n    }\n    evens.iter().filter(|x| x % 2 == 1).sum::<isize>()\n  \
    \      + odds.iter().filter(|x| x % 2 == 0).sum::<isize>()", "    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 1 {\n            sum += i;\n \
    \       }\n    }\n    sum", "    let mut sum = 0;\n    for i in lst.iter().skip(1)\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum",
  "    let mut sum = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n\
    \            sum += i;\n        }\n    }\n    sum", '    lst.iter().filter(|&x|
    x % 2 == 1).sum::<isize>()', "    let mut sum = 0;\n    for &i in lst {\n    \
    \    if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum", "   \
    \ let mut evens = vec![];\n    let mut odds = vec![];\n    for x in lst {\n  \
    \      if x % 2 == 0 {\n            evens.push(x);\n        } else {\n       \
    \     odds.push(x);\n        }\n    }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n\
    \        + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()", "    let mut sum\
    \ = 0;\n    for i in lst {\n        if i % 2 == 0 {\n            sum += i;\n \
    \       }\n    }\n    sum", "    let mut sum = 0;\n    for i in lst.iter().rev()\
    \ {\n        if i % 2 == 0 {\n            sum += i;\n        }\n    }\n    sum",
  "    let mut sum = 0;\n    for i in lst.iter().rev() {\n        if i % 2 == 0 {\n\
    \            sum += i;\n        }\n    }\n    sum", '    lst.iter().filter(|&x|
    x % 2 == 1).sum::<isize>()', "    let mut evens = vec![];\n    let mut odds =\
    \ vec![];\n    for x in lst {\n        if x % 2 == 0 {\n            evens.push(x);\n\
    \        } else {\n            odds.push(x);\n        }\n    }\n    evens.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n        + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()",
  "    let mut sum = 0;\n    for &i in lst {\n        if i % 2 == 0 {\n          \
    \  sum += i;\n        }\n    }\n    sum", "    let mut evens = vec![];\n    let\
    \ mut odds = vec![];\n    for x in lst {\n        if x % 2 == 0 {\n          \
    \  evens.push(x);\n        } else {\n            odds.push(x);\n        }\n  \
    \  }\n    evens.iter().filter(|&x| x % 2 == 1).sum::<isize>()\n        + odds.iter().filter(|&x|\
    \ x % 2 == 0).sum::<isize>()", "    let mut evens = vec![];\n    let mut odds\
    \ = vec![];\n    for x in lst {\n        if x % 2 == 0 {\n            evens.push(x);\n\
    \        } else {\n            odds.push(x);\n        }\n    }\n    evens.iter().filter(|&x|\
    \ x % 2 == 1).sum::<isize>()\n        + odds.iter().filter(|&x| x % 2 == 0).sum::<isize>()"]
stop_tokens:
- "\n}"

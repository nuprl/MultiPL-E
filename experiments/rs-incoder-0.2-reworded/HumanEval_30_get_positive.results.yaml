language: rs
name: HumanEval_30_get_positive
results:
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for x in l {\n\
    \        if x >= 0 {\n            result.push(x);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmp1ctp62h5.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for i in l {\n \
    \       if i > 0 {\n            res.push(i);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l;\n    v.iter().filter(|&x| x\
    \ > 0).cloned().collect()\n}\n\nfn main() {\n    let candidate = get_positive;\n\
    \    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_kj6pjrp.rs:8:30\n  |\n8 |\
    \     v.iter().filter(|&x| x > 0).cloned().collect()\n  |                    \
    \          ^\n  |                              |\n  |                        \
    \      expected `&isize`, found integer\n  |                              help:\
    \ consider borrowing here: `&0`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for x in l {\n\
    \        if x >= 0 {\n            result.push(x);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmp1ctp62h5.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for x in l {\n\
    \        if x >= 0 {\n            result.push(x);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmp1ctp62h5.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = vec![];\n    for i in l\
    \ {\n        if i > 0 {\n            positive.push(i);\n        }\n    }\n   \
    \ positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = Vec::new();\n    for x in\
    \ l {\n        if x > 0 {\n            positive.push(x);\n        }\n    }\n \
    \   positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for x in l {\n \
    \       if x >= 0 {\n            res.push(x);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmpx06nsaam.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l.to_vec();\n    v.iter().filter(|&x|\
    \ x > 0).cloned().collect()\n}\n\nfn main() {\n    let candidate = get_positive;\n\
    \    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpravdojfz.rs:8:30\n  |\n8 |\
    \     v.iter().filter(|&x| x > 0).cloned().collect()\n  |                    \
    \          ^\n  |                              |\n  |                        \
    \      expected `&isize`, found integer\n  |                              help:\
    \ consider borrowing here: `&0`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n\
    \    v.iter_mut().for_each(|x| *x = if *x < 0 { 0 } else { 1 });\n    v\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 0, 1, 1, 1]`,\n right: `[4, 5, 6]`', /tmp/tmpxq8akufw.rs:14:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x >= 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_p3uedz4.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|x| x >= 0).collect()\n  |                             \
    \ ^ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_p3uedz4.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|x| x >= 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.iter().filter(|&x|\
    \ x >= 0).collect()\n}\n\nfn main() {\n    let candidate = get_positive;\n   \
    \ assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5dyd6q58.rs:9:31\n  |\n9 |\
    \     v.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmp5dyd6q58.rs:9:34\n\
    \  |\n9 |     v.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for i in l {\n \
    \       if i > 0 {\n            res.push(i);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n\
    \        if i > 0 {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for x in l {\n \
    \       if x >= 0 {\n            res.push(x);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmpx06nsaam.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = Vec::new();\n    for x in\
    \ l {\n        if x >= 0 {\n            positive.push(x);\n        }\n    }\n\
    \    positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmp13s5tk1l.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for el in l {\n\
    \        if el > 0 {\n            result.push(el);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l.clone();\n    v.iter().filter(|&x|\
    \ x > 0).cloned().collect()\n}\n\nfn main() {\n    let candidate = get_positive;\n\
    \    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpn10xkacd.rs:8:30\n  |\n8 |\
    \     v.iter().filter(|&x| x > 0).cloned().collect()\n  |                    \
    \          ^\n  |                              |\n  |                        \
    \      expected `&isize`, found integer\n  |                              help:\
    \ consider borrowing here: `&0`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x >= 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_p3uedz4.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|x| x >= 0).collect()\n  |                             \
    \ ^ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_p3uedz4.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|x| x >= 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n\
    \        if x >= 0 {\n            res.push(x);\n        }\n    }\n    res\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmpdgpsj7mi.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjcis795x.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n --> /tmp/tmpjcis795x.rs:7:34\n\
    \  |\n7 |     l.iter().filter(|&x| x >= 0).collect()\n  |                    \
    \              ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = vec![];\n    for x in l\
    \ {\n        if x >= 0 {\n            positive.push(x);\n        }\n    }\n  \
    \  positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmp3fdfg6f1.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x >= 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_p3uedz4.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|x| x >= 0).collect()\n  |                             \
    \ ^ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_p3uedz4.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|x| x >= 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 101
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n\
    \    v.sort_unstable();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate\
    \ = get_positive;\n    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5,\
    \ 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),\
    \ vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1, -2]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[-2, -1, 4, 5, 6]`,\n right: `[4, 5, 6]`', /tmp/tmpk76fz4qs.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut v = l;\n    v.iter().filter(|&x| x\
    \ > 0).cloned().collect()\n}\n\nfn main() {\n    let candidate = get_positive;\n\
    \    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_kj6pjrp.rs:8:30\n  |\n8 |\
    \     v.iter().filter(|&x| x > 0).cloned().collect()\n  |                    \
    \          ^\n  |                              |\n  |                        \
    \      expected `&isize`, found integer\n  |                              help:\
    \ consider borrowing here: `&0`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    for &i in l\
    \ {\n        if i > 0 {\n            res.push(i);\n        }\n    }\n    res\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphi11v31r.rs:8:9\n  |\n8 |\
    \     for &i in l {\n  |         ^^    - this expression has type `isize`\n  |\
    \         |\n  |         expected `isize`, found reference\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 0
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n\
    \        if i > 0 {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x >= 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_p3uedz4.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|x| x >= 0).collect()\n  |                             \
    \ ^ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_p3uedz4.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|x| x >= 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_3zoa9qv.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n --> /tmp/tmp_3zoa9qv.rs:7:32\n\
    \  |\n7 |     l.iter().filter(|x| x > 0).collect()\n  |                      \
    \          ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203
- exit_code: 1
  program: "/// Return only positive numbers in the vector.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4yf6lzqh.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n --> /tmp/tmp4yf6lzqh.rs:7:33\n\
    \  |\n7 |     l.iter().filter(|&x| x > 0).collect()\n  |                     \
    \            ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \  |\n  = help: the trait `FromIterator<&isize>` is not implemented for `Vec<isize>`\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747203

name: HumanEval_6_parse_nested_parens
language: rs
prompt: "/// Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n/// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\n/// >>> parse_nested_parens(String::from(\"(()()) ((()))\
  \ () ((())()())\"))\n/// vec![2, 3, 1, 3]\nfn parse_nested_parens(paren_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_nested_parens;\n    assert_eq!(candidate(String::from(\"\
  (()()) ((())) () ((())()())\")), vec![2, 3, 1, 3]);\n    assert_eq!(candidate(String::from(\"\
  () (()) ((())) (((())))\")), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(String::from(\"\
  (()(())((())))\")), vec![4]);\n}\n"
completions: ["    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ isize = 0;\n    for paren in paren_string.chars() {\n        if paren == '('\
    \ {\n            paren_stack.push(paren_level);\n            paren_level += 1;\n\
    \        } else if paren == ')' {\n            paren_level -= 1;\n           \
    \ if paren_level == 0 {\n                paren_stack.push(paren_level);\n    \
    \        }\n        }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_depth = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren_levels_len;\n    let mut paren_levels_len_init = paren_levels_len;\n\
    \    let mut paren_levels_len_init = paren_levels_len;\n    let mut paren_levels_len_init\
    \ = paren", "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.next();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.next();\n    while paren_levels_iter_next.is_some() {\n\
    \        let paren_level = paren_levels_iter_next.unwrap();\n        paren_levels.push(paren_level);\n\
    \        paren_levels_iter_next = paren_levels_iter.next();\n    }\n    paren_levels",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_", "    let mut paren_levels = vec![0];\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_stack\
    \ = vec![0];\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = ", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = 0;\n    let mut paren_levels_ptr_end =\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr;\n  \
    \  let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_stack = vec![];\n    let mut paren_level_stack_pos =\
    \ 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_max =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n   \
    \ let mut paren_levels_stack_max_val = paren_levels_stack[paren_levels_stack_max_pos];\n\
    \    let mut paren_levels_stack_max_val_pos = 0;\n    let mut paren_levels_stack_max_val_val\
    \ = paren_levels_stack[paren_levels_stack_max_val_pos];\n    let mut paren_levels_stack_max_val_val_pos\
    \ = 0;\n    let mut paren_levels_stack_max_val_val_val = paren_levels_stack[paren_levels_stack_max_val_val_pos];\n\
    \    let mut paren_levels_stack_max_val_val_val_pos = 0;\n    let mut paren_levels_stack_max_val_val_val_val\
    \ = paren_levels_stack[paren_levels_stack_max_val_val_val_pos];\n    let mut paren_levels_stack_max_val_val_val_val_pos\
    \ = 0;\n    let mut paren_levels_stack_max_val_val_val_val_val = paren_levels_stack[paren_levels_stack_max_val_val_val_val_pos];\n\
    \    let mut paren_levels_stack_max_val_val_val_val_val_pos = 0;\n    let mut\
    \ paren_levels_stack_max_val_val_val_val_val_val = paren_levels_stack[paren_levels_stack_max_val_val_val_val_val_pos];\n\
    \    let mut paren_levels_stack_max_val_val_val_val_val_val_pos = 0;\n    let\
    \ mut paren_levels_stack_max_val_val_val_val_val_val_val = paren_levels_stack[paren_levels_stack_max_val_val_val_val_val_val_val_pos];\n\
    \    let mut paren_levels_stack_max_val_val_val_val_val_val_val_pos = 0;\n   \
    \ let mut paren_levels_stack_max_val_val_val_val_val_val_val_val = paren_levels_stack[paren_levels_stack_max_val_val_val_val_val_val_val_val_pos];\n\
    \    let mut paren_levels_stack_max_val_val_val_val_val_val_val_val_pos = 0;\n\
    \    let mut paren_levels_stack_max_val_val_val_val_val_val_val_val_val = paren_levels_stack[paren_levels_stack_max_val_val_val_val_val_val_val_val_val_pos];\n\
    \    let mut paren_levels_stack_", "    let mut paren_levels = Vec::new();\n \
    \   let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos = 0;\n  \
    \  let mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_", "    let mut paren_stack = Vec::new();\n    let mut paren_depth =\
    \ 0;\n    let mut paren_level = 0;\n    for paren in paren_string.chars() {\n\
    \        if paren == '(' {\n            paren_stack.push(paren_depth);\n     \
    \       paren_depth += 1;\n            paren_level += 1;\n        } else if paren\
    \ == ')' {\n            paren_depth -= 1;\n            paren_level -= 1;\n   \
    \         if paren_stack.pop() == 0 {\n                paren_level += 1;\n   \
    \         }\n        }\n    }\n    paren_stack.len()", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_chars = vec![0];\n    let mut\
    \ paren_level_chars_index = 0;\n    let mut paren_level_chars_index2 = 0;\n  \
    \  let mut paren_level_chars_index3 = 0;\n    let mut paren_level_chars_index4\
    \ = 0;\n    let mut paren_level_chars_index5 = 0;\n    let mut paren_level_chars_index6\
    \ = 0;\n    let mut paren_level_chars_index7 = 0;\n    let mut paren_level_chars_index8\
    \ = 0;\n    let mut paren_level_chars_index9 = 0;\n    let mut paren_level_chars_index10\
    \ = 0;\n    let mut paren_level_chars_index11 = 0;\n    let mut paren_level_chars_index12\
    \ = 0;\n    let mut paren_level_chars_index13 = 0;\n    let mut paren_level_chars_index14\
    \ = 0;\n    let mut paren_level_chars_index15 = 0;\n    let mut paren_level_chars_index16\
    \ = 0;\n    let mut paren_level_chars_index17 = 0;\n    let mut paren_level_chars_index18\
    \ = 0;\n    let mut paren_level_chars_index19 = 0;\n    let mut paren_level_chars_index20\
    \ = 0;\n    let mut paren_level_chars_index21 = 0;\n    let mut paren_level_chars_index22\
    \ = 0;\n    let mut paren_level_chars_index23 = 0;\n    let mut paren_level_chars_index24\
    \ = 0;\n    let mut paren_level_chars_index25 = 0;\n    let mut paren_level_chars_index26\
    \ = 0;\n    let mut paren_level_chars_index27 = 0;\n    let mut paren_level_chars_index28\
    \ = 0;\n    let mut paren_level_chars_index29 = 0;\n    let mut paren_level_chars_index30\
    \ = 0;\n    let mut paren_level_chars_index31 = 0;\n    let mut paren_level_chars_index32\
    \ = 0;\n    let mut paren_level_chars_index33 = 0;\n    let mut paren_level_chars_index34\
    \ = 0;\n    let mut paren_level_chars_index35 = 0;\n    let mut paren_level_chars_index36\
    \ = 0;\n    let mut paren_level_chars_index37 = 0;\n    let mut paren_level_chars_index38\
    \ = 0;\n    let mut paren_level_chars_index39 = 0;\n    let mut paren_level_chars_index40\
    \ = 0;\n    let mut paren_level_chars_index41 = 1;\n    let mut paren_level_chars_index42\
    \ = 1;\n    let mut paren_level_chars_index43 = 1;\n    let mut ", "    let mut\
    \ paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nestings = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_nestings_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_nestings_stack_ptr = paren_nestings_stack.len();\n    let mut\
    \ paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr", "  \
    \  let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut level = 0;\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_size\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_end = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string.len();\n\
    \    let mut paren_levels_pos = paren_string.len();\n    let mut paren_levels_pos\
    \ = paren_string.len();\n    let mut paren_levels_pos = paren_string", "    let\
    \ mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack = vec![];\n    let mut\
    \ paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_level_depth\
    \ = vec![];\n    let mut paren_level_depth_counter = vec![];\n    let mut paren_level_depth_counter_index\
    \ = 0;\n    let mut paren_level_depth_counter_size = paren_level_depth_counter.len();\n\
    \    let mut paren_level_depth_counter_pos = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_size = paren_level_depth_counter_pos.len();\n\
    \    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_level_depth_counter_pos_index\
    \ = 0;\n    let mut paren_level_depth_counter_pos_index = 0;\n    let mut paren_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren", "    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_depth = 0;\n    let mut paren_level = 0;\n\
    \    let mut paren_level_depth = Vec::new();\n    let mut paren_level_level =\
    \ 0;\n    let mut paren_level_level_depth = Vec::new();\n    let mut paren_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level = 0;\n\
    \    let mut paren_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level = 0;\n\
    \    let mut paren_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level = 0;\n\
    \    let mut paren_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level = 0;\n\
    \    let mut paren_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level = 0;\n\
    \    let mut paren_level_level_level_level_level_level_level_level = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n  \
    \  let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char = 0;\n   \
    \ let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos =\
    \ 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_indexes: Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_index = 0;\n    let mut\
    \ paren_level_indexes_len_indexes_len_indexes = 0;\n    let mut paren_level_indexes_len_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len = 0;\n   \
    \ let mut paren_level_indexes_len_indexes_len_indexes_len_index = 0;\n    let\
    \ mut paren_level_indexes_len_indexes_len_indexes_len_indexes = 0;\n    let mut\
    \ paren_level_indexes_len_indexes_len_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize\
    \ = 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n \
    \           paren_stack.push(paren_level);\n            paren_level += 1;\n  \
    \      } else if paren == ')' {\n            paren_level -= 1;\n            if\
    \ paren_level == 0 {\n                paren_stack.push(paren_level);\n       \
    \     }\n        }\n    }\n    paren_stack", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_stack = vec![];\n    let\
    \ mut paren_depth = 0;\n    for paren in paren_string.chars() {\n        if paren\
    \ == '(' {\n            paren_depth += 1;\n            paren_stack.push(paren_depth);\n\
    \        } else if paren == ')' {\n            paren_depth -= 1;\n           \
    \ if paren_depth == 0 {\n                paren_stack.push(paren_depth);\n    \
    \        }\n        }\n    }\n    paren_stack", "    let mut paren_level = 0;\n\
    \    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_levels = vec![0];\n  \
    \  let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string_index = 0;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string_index = 0;\n        while paren_level_string_index\
    \ < paren_string.len() {\n            let mut paren_level_string = paren_string;\n\
    \            let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_string.len() {\n                let mut paren_level_string = paren_string;\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_string.len() {\n                    let mut\
    \ paren_level_string = paren_string;\n                    let mut paren_level_string_index\
    \ = 0;\n                    while paren_level_string_index < paren_string.len()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level_string_index = 0;\n                 \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \              let mut paren_level_string = paren_string;\n                  \
    \          let mut paren_level_string_index = 0;\n                           \
    \ while paren_level_string_index < paren_string.len() {\n                    \
    \            let mut paren_level_string = paren_string;\n                    \
    \            let mut paren_level_string_index = 0;\n                         \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \                      let mut paren_level_string = paren_string;\n          \
    \                          let mut paren_level_string_index = 0;\n           \
    \                         while paren_level_string_index < paren_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_index\
    \ = 0;\n                                            if paren_level_string == \"\
    (\" || paren_level_string == \"{\" || paren_level_string == \"[\"\n          \
    \                                      || paren_level_string == \"(\" || paren_level_string\
    \ == \"{\" || paren_level_string == \"[\"\n                                  \
    \              || paren_level_string == \"(\" || paren_level_string == \"{\" ||\
    \ paren_level_string == \"[\"\n                                              \
    \  || paren_level_string == \"(\" || paren_level_string == \"{\" || paren_level_string\
    \ == \"", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_iter = paren_string.chars().enumerate().filter(|(_,\
    \ c)| c != '(' && c != ')').collect::<Vec<_>>();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.into_iter().map(|(_, c)| paren_level += 1).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == '(' {\n        paren_level += 1;\n        paren_level\n    } else {\n \
    \       paren_level -= 1;\n        paren_level\n    }).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == ')' {\n        paren_level -= 1;\n        paren_level\n    } else {\n \
    \       paren_level += 1;\n        paren_level\n    }).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == '(' {\n        paren_level += 1;\n        paren_level\n    } else {\n \
    \       paren_level -= 1;\n        paren_level\n    }).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == ')' {\n        paren_level -= 1;\n        paren_level\n    } else {\n \
    \       paren_level += 1;\n        paren_level\n    }).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == '(' {\n        paren_level += 1;\n        paren_level\n    } else {\n \
    \       paren_level -= 1;\n        paren_level\n    }).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == ')' {\n        paren_level -= 1;\n        paren_level\n    } else {\n \
    \       paren_level += 1;\n        paren_level\n    }).collect::<Vec<_>>();\n\
    \    let mut paren_levels_iter = paren_levels_iter.into_iter().map(|(_, c)| if\
    \ c == '(' {\n        ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n \
    \   let mut paren_levels_iter_next = paren_levels_iter.next();\n    while paren_levels_iter_next.is_some()\
    \ {\n        let mut paren_level = paren_level + 1;\n        let mut paren_levels_iter_next\
    \ = paren_levels_iter.next();\n        while paren_levels_iter_next.is_some()\
    \ {\n            let mut paren_level = paren_level + 1;\n            let mut paren_levels_iter_next\
    \ = paren_levels_iter.next();\n        }\n        paren_levels.push(paren_level);\n\
    \    }\n    paren_levels", "    let mut paren_stack = vec![];\n    let mut paren_level\
    \ = 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n \
    \           paren_stack.push(paren_level);\n            paren_level += 1;\n  \
    \      } else if paren == ')' {\n            paren_level -= 1;\n            if\
    \ paren_level == 0 {\n                paren_stack.push(paren_level);\n       \
    \     }\n        }\n    }\n    paren_stack", "    let mut paren_level = 0;\n \
    \   let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_len;\n    let mut paren_level",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = Vec::new();\n    let mut paren_level_max_count = Vec::new();\n\
    \    let mut paren_level_max_count_index = Vec::new();\n    let mut paren_level_max_count_index2\
    \ = Vec::new();\n    let mut paren_level_max_count_index3 = Vec::new();\n    let\
    \ mut paren_level_max_count_index4 = Vec::new();\n    let mut paren_level_max_count_index5\
    \ = Vec::new();\n    let mut paren_level_max_count_index6 = Vec::new();\n    let\
    \ mut paren_level_max_count_index7 = Vec::new();\n    let mut paren_level_max_count_index8\
    \ = Vec::new();\n    let mut paren_level_max_count_index9 = Vec::new();\n    let\
    \ mut paren_level_max_count_index10 = Vec::new();\n    let mut paren_level_max_count_index11\
    \ = Vec::new();\n    let mut paren_level_max_count_index12 = Vec::new();\n   \
    \ let mut paren_level_max_count_index13 = Vec::new();\n    let mut paren_level_max_count_index14\
    \ = Vec::new();\n    let mut paren_level_max_count_index15 = Vec::new();\n   \
    \ let mut paren_level_max_count_index16 = Vec::new();\n    let mut paren_level_max_count_index17\
    \ = Vec::new();\n    let mut paren_level_max_count_index18 = Vec::new();\n   \
    \ let mut paren_level_max_count_index19 = Vec::new();\n    let mut paren_level_max_count_index20\
    \ = Vec::new();\n    let mut paren_level_max_count_index21 = Vec::new();\n   \
    \ let mut paren_level_max_count_index22 = Vec::new();\n    let mut paren_level_max_count_index23\
    \ = Vec::new();\n    let mut paren_level_max_count_index24 = Vec::new();\n   \
    \ let mut paren_level_max_count_index25 = Vec::new();\n    let mut paren_level_max_count_index26\
    \ = Vec::new();\n    let mut paren_level_max_count_index27 = Vec::new();\n   \
    \ let mut paren_level_max_count_index28 = Vec::new();\n    let mut paren_level_max_count_index29\
    \ = Vec::new();\n    let mut paren_level_max_count_index30 = Vec::new();", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n   \
    \ let mut paren_level_string = paren_string;\n    let mut paren_level_string =\
    \ paren_string;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren", "    let mut paren_levels = vec![];\n \
    \   let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_chars = vec![];\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_", "    let mut paren_levels = Vec::new();\n \
    \   let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_char_pos = 0;\n    let\
    \ mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_count_prev\
    \ = 0;\n    let mut paren_level_char_pos_count_prev2 = 0;\n    let mut paren_level_char_pos_count_prev3\
    \ = 0;\n    let mut paren_level_char_pos_count_prev4 = 0;\n    let mut paren_level_char_pos_count_prev5\
    \ = 0;\n    let mut paren_level_char_pos_count_prev6 = 0;\n    let mut paren_level_char_pos_count_prev7\
    \ = 0;\n    let mut paren_level_char_pos_count_prev8 = 0;\n    let mut paren_level_char_pos_count_prev9\
    \ = 0;\n    let mut paren_level_char_pos_count_prev10 = 0;\n    let mut paren_level_char_pos_count_prev11\
    \ = 0;\n    let mut paren_level_char_pos_count_prev12 = 0;\n    let mut paren_level_char_pos_count_prev13\
    \ = 0;\n    let mut paren_level_char_pos_count_prev14 = 0;\n    let mut paren_level_char_pos_count_prev15\
    \ = 0;\n    let mut paren_level_char_pos_count_prev16 = 0;\n    let mut paren_level_char_pos_count_prev17\
    \ = 0;\n    let mut paren_level_char_pos_count_prev18 = 0;\n    let mut paren_level_char_pos_count_prev19\
    \ = 0;\n    let mut paren_level_char_pos_count_prev20 = 0;\n    let mut paren_level_char_pos_count_prev21\
    \ = 0;\n    let mut paren_level_char_pos_count_prev22 = 0;\n    let mut paren_level_char_pos_count_prev23\
    \ = 0;\n    let mut paren_level_char_pos_count_prev24 = 0;\n    let mut paren_level_char_pos_count_prev25\
    \ = 0;\n    let mut paren_level_char_pos_count_prev26 = 0;\n    let mut paren_level_char_pos_count_prev27\
    \ = 0;\n    let mut paren_level_char_pos_count_prev28 = 0;\n    let mut paren_level_char_pos_count_prev29\
    \ = 0;\n    let mut paren_level_char_pos_count_prev30 = 0;\n    let mut paren_level_char_pos_count_prev31\
    \ = 0;\n    let mut paren_level_char_pos_count_prev32 = 0;\n    let mut paren_level_char_pos_count_prev33\
    \ = 0;\n    let mut paren_level_char_pos_count_prev34 = 0;\n    let mut paren_level_char_pos_count_prev35\
    \ = 0;\n    let mut ", "    let mut paren_stack: Vec<isize> = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = vec![];\n    let mut paren_level_max_count\
    \ = vec![];\n    let mut paren_level_max_count_index = -1;\n    let mut paren_level_max_count_index2\
    \ = -1;\n    let mut paren_level_max_count_index3 = -1;\n    let mut paren_level_max_count_index4\
    \ = -1;\n    let mut paren_level_max_count_index5 = -1;\n    let mut paren_level_max_count_index6\
    \ = -1;\n    let mut paren_level_max_count_index7 = -1;\n    let mut paren_level_max_count_index8\
    \ = -1;\n    let mut paren_level_max_count_index9 = -1;\n    let mut paren_level_max_count_index10\
    \ = -1;\n    let mut paren_level_max_count_index11 = -1;\n    let mut paren_level_max_count_index12\
    \ = -1;\n    let mut paren_level_max_count_index13 = -1;\n    let mut paren_level_max_count_index14\
    \ = -1;\n    let mut paren_level_max_count_index15 = -1;\n    let mut paren_level_max_count_index16\
    \ = -1;\n    let mut paren_level_max_count_index17 = -1;\n    let mut paren_level_max_count_index18\
    \ = -1;\n    let mut paren_level_max_count_index19 = -1;\n    let mut paren_level_max_count_index20\
    \ = -1;\n    let mut paren_level_max_count_index21 = -1;\n    let mut paren_level_max_count_index22\
    \ = -1;\n    let mut paren_level_max_count_index23 = -1;\n    let mut paren_level_max_count_index24\
    \ = -1;\n    let mut paren_level_max_count_index25 = -1;\n    let mut paren_level_max_count_index26\
    \ = -1;\n    let mut paren_level_max_count_index27 = -1;\n    let mut paren_level_max_count_index28\
    \ = -1;\n    let mut paren_level_max_count_index29 = -1;\n    let mut paren_level_max_count_index30\
    \ = -1;\n    let mut paren_level_max_count_index31 = -1;\n    let mut paren_level_max_count_index32\
    \ = -1;\n    let mut paren_level_max_count_index33 = -1;\n    let mut paren_level_max_count_index34\
    \ = -1;\n    let mut paren_level_max_count_index35 = -1;\n    let mut paren_level_max_count_index36\
    \ = -1;\n    let mut paren_level_max_count_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_char_count_in_paren = 0;\n    let mut paren_level_char_count_in_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren =\
    \ 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren\
    \ = 0;\n    let mut paren_level_char_count_in_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_paren_after_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = paren_stack.len();\n    let mut paren_level_counts = paren_stack.clone();\n\
    \    let mut paren_level_counts_len = paren_level_counts.len();\n    let mut paren_level_counts_len\
    \ = paren_level_counts_len.saturating_add((paren_level_counts_len as usize));\n\
    \    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_counts_len = paren_level_counts_len.saturating_add((paren_level_counts_len\
    \ as usize));\n    let mut paren_level_count", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string_index = 0;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_char_next: char;\n\
    \    let mut paren_level_char_next_index = 0;\n    let mut paren_level_char_next_index2\
    \ = 0;\n    let mut paren_level_char_next_index3 = 0;\n    let mut paren_level_char_next_index4\
    \ = 0;\n    let mut paren_level_char_next_index5 = 0;\n    let mut paren_level_char_next_index6\
    \ = 0;\n    let mut paren_level_char_next_index7 = 0;\n    let mut paren_level_char_next_index8\
    \ = 0;\n    let mut paren_level_char_next_index9 = 0;\n    let mut paren_level_char_next_index10\
    \ = 0;\n    let mut paren_level_char_next_index11 = 0;\n    let mut paren_level_char_next_index12\
    \ = 0;\n    let mut paren_level_char_next_index13 = 0;\n    let mut paren_level_char_next_index14\
    \ = 0;\n    let mut paren_level_char_next_index15 = 0;\n    let mut paren_level_char_next_index16\
    \ = 0;\n    let mut paren_level_char_next_index17 = 0;\n    let mut paren_level_char_next_index18\
    \ = 0;\n    let mut paren_level_char_next_index19 = 0;\n    let mut paren_level_char_next_index20\
    \ = 0;\n    let mut paren_level_char_next_index21 = 0;\n    let mut paren_level_char_next_index22\
    \ = 0;\n    let mut paren_level_char_next_index23 = 0;\n    let mut paren_level_char_next_index24\
    \ = 0;\n    let mut paren_level_char_next_index25 = 0;\n    let mut paren_level_char_next_index26\
    \ = 0;\n    let mut paren_level_char_next_index27 = 0;\n    let mut paren_level_char_next_index28\
    \ = 0;\n    let mut paren_level_char_next_index29 = 0;\n    let mut paren_level_char_next_index30\
    \ = 0;\n    let mut paren_level_char_next_index31 = 0;\n    let mut paren_level_char_next_index32\
    \ = 0;\n    let mut paren_level_char_next_index33 = 0;\n    let mut paren_level_char_next_index34\
    \ = 0;\n    let mut paren_level_char_next_index35 = 0;\n    let mut paren_level_char_next_index36\
    \ = 0;\n    let mut paren_level_char_next_index37 = 0;\n", "    let mut level\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_next = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_prev = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_next_prev = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_next_ptr_next = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next = Vec::new();\n\
    \    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next = Vec::new();\n    let\
    \ mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr = Vec::new();\n   \
    \ let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next = Vec::new();\n\
    \    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr", " \
    \   let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level += 1;\n        }\
    \ else if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_depth\
    \ = 0;\n    let mut paren_level_depth_max = 0;\n    let mut paren_level_depth_max_index\
    \ = 0;\n    let mut paren_level_depth_max_index2 = 0;\n    let mut paren_level_depth_max_index3\
    \ = 0;\n    let mut paren_level_depth_max_index4 = 0;\n    let mut paren_level_depth_max_index5\
    \ = 0;\n    let mut paren_level_depth_max_index6 = 0;\n    let mut paren_level_depth_max_index7\
    \ = 0;\n    let mut paren_level_depth_max_index8 = 0;\n    let mut paren_level_depth_max_index9\
    \ = 0;\n    let mut paren_level_depth_max_index10 = 0;\n    let mut paren_level_depth_max_index11\
    \ = 0;\n    let mut paren_level_depth_max_index12 = 0;\n    let mut paren_level_depth_max_index13\
    \ = 0;\n    let mut paren_level_depth_max_index14 = 0;\n    let mut paren_level_depth_max_index15\
    \ = 0;\n    let mut paren_level_depth_max_index16 = 0;\n    let mut paren_level_depth_max_index17\
    \ = 0;\n    let mut paren_level_depth_max_index18 = 0;\n    let mut paren_level_depth_max_index19\
    \ = 0;\n    let mut paren_level_depth_max_index20 = 0;\n    let mut paren_level_depth_max_index21\
    \ = 0;\n    let mut paren_level_depth_max_index22 = 0;\n    let mut paren_level_depth_max_index23\
    \ = 0;\n    let mut paren_level_depth_max_index24 = 0;\n    let mut paren_level_depth_max_index25\
    \ = 0;\n    let mut paren_level_depth_max_index26 = 0;\n    let mut paren_level_depth_max_index27\
    \ = 0;\n    let mut paren_level_depth_max_index28 = 0;\n    let mut paren_level_depth_max_index29\
    \ = 0;\n    let mut paren_level_depth_max_index30 = 0;\n    let mut paren_level_depth_max_index31\
    \ = 0;\n    let mut paren_level_depth_max_index32 = 0;\n    let mut paren_level_depth_max_index33\
    \ = 0;\n    let mut paren_level_depth_max_index34 = 0;\n    let mut paren_level_depth_max_index35\
    \ = 0;\n    let mut ", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren", " \
    \   let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_levels = vec![0];\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n  \
    \  let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let ", "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_indexes: Vec<isize> = vec![0];\n\
    \    let mut paren_level_indexes_len = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_index", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_char.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut level = 0;\n \
    \   let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_levels_len = paren_string.len();\n    let mut paren_levels_index =\
    \ 0;\n    let mut paren_levels_index2 = 0;\n    let mut paren_levels_index3 =\
    \ 0;\n    let mut paren_levels_index4 = 0;\n    let mut paren_levels_index5 =\
    \ 0;\n    let mut paren_levels_index6 = 0;\n    let mut paren_levels_index7 =\
    \ 0;\n    let mut paren_levels_index8 = 0;\n    let mut paren_levels_index9 =\
    \ 0;\n    let mut paren_levels_index10 = 0;\n    let mut paren_levels_index11\
    \ = 0;\n    let mut paren_levels_index12 = 0;\n    let mut paren_levels_index13\
    \ = 0;\n    let mut paren_levels_index14 = 0;\n    let mut paren_levels_index15\
    \ = 0;\n    let mut paren_levels_index16 = 0;\n    let mut paren_levels_index17\
    \ = 0;\n    let mut paren_levels_index18 = 0;\n    let mut paren_levels_index19\
    \ = 0;\n    let mut paren_levels_index20 = 0;\n    let mut paren_levels_index21\
    \ = 0;\n    let mut paren_levels_index22 = 0;\n    let mut paren_levels_index23\
    \ = 0;\n    let mut paren_levels_index24 = 0;\n    let mut paren_levels_index25\
    \ = 0;\n    let mut paren_levels_index26 = 0;\n    let mut paren_levels_index27\
    \ = 0;\n    let mut paren_levels_index28 = 0;\n    let mut paren_levels_index29\
    \ = 0;\n    let mut paren_levels_index30 = 0;\n    let mut paren_levels_index31\
    \ = 0;\n    let mut paren_levels_index32 = 0;\n    let mut paren_levels_index33\
    \ = 0;\n    let mut paren_levels_index34 = 0;\n    let mut paren_levels_index35\
    \ = 0;\n    let mut paren_levels_index36 = 0;\n    let mut paren_levels_index37\
    \ = 0;\n    let mut paren_levels_index38 = 0;\n    let mut paren_levels_index39\
    \ = 0;\n    let mut paren_levels_index40 = 0;\n    let mut paren_levels_index41\
    \ = 0;\n    let mut paren_levels_index42 = 0;\n    let mut paren_levels_index43\
    \ = 0;\n    let mut paren", "    let mut paren_levels = vec![0];\n    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().filter_map(|i|\
    \ {\n        if paren_level == 0 {\n            paren_level += 1;\n          \
    \  Some(paren_level)\n        } else {\n            paren_level -= 1;\n      \
    \      None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let\
    \ mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let\
    \ mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let\
    \ mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let\
    \ mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let\
    \ mut paren_levels_stack_iter = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_stack_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_stack_iter = paren", "    let mut level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n   \
    \ let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new", "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_stack = vec![];\n    let mut paren_level_stack_len\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom = paren_level_stack.len();\n    let mut\
    \ paren_level_stack_top = paren_level_stack.len();\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack.len();\n\
    \    let mut paren_level_stack_bottom", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_count = 0;\n    let mut paren_level_char_pos_chars\
    \ = vec![];\n    let mut paren_level_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_count = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_chars = vec![];\n    let mut paren_level_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_count = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let ", "    let mut paren_stack = Vec::new();\n    let mut\
    \ paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_len = 0;\n    let mut paren_levels_lens = Vec::new();\n\
    \    let mut paren_levels_lens_len = 0;\n    let mut paren_levels_lens_len2 =\
    \ 0;\n    let mut paren_levels_lens_len3 = 0;\n    let mut paren_levels_lens_len4\
    \ = 0;\n    let mut paren_levels_lens_len5 = 0;\n    let mut paren_levels_lens_len6\
    \ = 0;\n    let mut paren_levels_lens_len7 = 0;\n    let mut paren_levels_lens_len8\
    \ = 0;\n    let mut paren_levels_lens_len9 = 0;\n    let mut paren_levels_lens_len10\
    \ = 0;\n    let mut paren_levels_lens_len11 = 0;\n    let mut paren_levels_lens_len12\
    \ = 0;\n    let mut paren_levels_lens_len13 = 0;\n    let mut paren_levels_lens_len14\
    \ = 0;\n    let mut paren_levels_lens_len15 = 0;\n    let mut paren_levels_lens_len16\
    \ = 0;\n    let mut paren_levels_lens_len17 = 0;\n    let mut paren_levels_lens_len18\
    \ = 0;\n    let mut paren_levels_lens_len19 = 0;\n    let mut paren_levels_lens_len20\
    \ = 0;\n    let mut paren_levels_lens_len21 = 0;\n    let mut paren_levels_lens_len22\
    \ = 0;\n    let mut paren_levels_lens_len23 = 0;\n    let mut paren_levels_lens_len24\
    \ = 0;\n    let mut paren_levels_lens_len25 = 0;\n    let mut paren_levels_lens_len26\
    \ = 0;\n    let mut paren_levels_lens_len27 = 0;\n    let mut paren_levels_lens_len28\
    \ = 0;\n    let mut paren_levels_lens_len29 = 0;\n    let mut paren_levels_lens_len30\
    \ = 0;\n    let mut paren_levels_lens_len31 = 0;\n    let mut paren_levels_lens_len32\
    \ = 0;\n    let mut paren_levels_lens_len33 = 0;\n    let mut paren_levels_lens_len34\
    \ = 0;\n    let mut paren_levels_lens_len35 = 0;", "    let mut paren_level =\
    \ 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_nesting_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nesting_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_nesting_levels_stack_size\
    \ = paren_nesting_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_pos = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_nesting_levels_stack_top\
    \ = paren_nesting_levels_stack.len();\n    let mut paren_levels_stack_bottom =\
    \ paren_levels_stack.len();\n    let mut paren_nesting_levels_stack_bottom = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_nesting_levels_stack_bottom = paren_nesting_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_nesting_levels_stack_top\
    \ = paren_nesting_levels_stack.len();\n    let mut paren_levels_stack_bottom =\
    \ paren_levels_stack.len();\n    let mut paren_nesting_levels_stack_bottom = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_nesting_levels_stack_bottom = paren_nesting_levels_stack.len();\n    let\
    \ mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut paren_nesting_levels_stack_bottom\
    \ = paren_nesting_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_top = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_nesting_levels_stack_bottom = paren_nesting_levels_stack.len();\n    let\
    \ mut paren_levels_stack_bottom", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = ", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices().filter_map(|(_, index)| {\n\
    \        if paren_level == 0 {\n            paren_level += 1;\n            paren_levels.push(paren_level);\n\
    \            Some(index)\n        } else {\n            Some(index)\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let\
    \ mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_level_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_count: isize = 0;\n    let mut\
    \ paren_level_max_level_max_count: isize = 0;\n    let mut paren_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_count: isize = 0;\n\
    \    let mut paren_level_max_level_max_level_max_level: isize = 0;\n    let mut\
    \ paren_level_max_level_max_level_max_level_count: isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mu", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_levels = vec![];\n   \
    \ let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_level\
    \ += 1;\n            paren_level_count += 1;\n        } else if paren == ')' {\n\
    \            paren_level -= 1;\n            paren_level_count += 1;\n        \
    \    if paren_level == 0 {\n                paren_levels.push(paren_level_count);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_level_count:\
    \ isize = 0;\n    for paren in paren_string.chars() {\n        if paren == '('\
    \ {\n            paren_stack.push(paren_level);\n            paren_level_count\
    \ = 1;\n        } else if paren == ')' {\n            paren_level_count = paren_stack.pop();\n\
    \            if paren_level_count == 0 {\n                paren_level_count =\
    \ 1;\n            }\n            paren_level += paren_level_count;\n        }\n\
    \    }\n    paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_start\
    \ = paren_string.chars().nth(paren_level).unwrap();\n    let mut paren_level_end\
    \ = paren_level_start;\n    let mut paren_level_char = paren_level_start.chars().nth(0).unwrap();\n\
    \    let mut paren_level_char_next = paren_level_char;\n    let mut paren_level_char_prev\
    \ = paren_level_char;\n    let mut paren_level_char_next_next = paren_level_char;\n\
    \    let mut paren_level_char_next_prev = paren_level_char;\n    let mut paren_level_char_prev_next\
    \ = paren_level_char;\n    let mut paren_level_char_prev_prev = paren_level_char;\n\
    \    let mut paren_level_char_next_next_next = paren_level_char;\n    let mut\
    \ paren_level_char_next_next_prev = paren_level_char;\n    let mut paren_level_char_next_prev_next\
    \ = paren_level_char;\n    let mut paren_level_char_next_prev_prev = paren_level_char;\n\
    \    let mut paren_level_char_prev_next_next = paren_level_char;\n    let mut\
    \ paren_level_char_prev_next_prev = paren_level_char;\n    let mut paren_level_char_prev_prev_next\
    \ = paren_level_char;\n    let mut paren_level_char_prev_prev_prev = paren_level_char;\n\
    \    let mut paren_level_char_next_next_next_next = paren_level_char;\n    let\
    \ mut paren_level_char_next_next_next_prev = paren_level_char;\n    let mut paren_level_char_next_next_prev_next\
    \ = paren_level_char;\n    let mut paren_level_char_next_next_prev_prev = paren_level_char;\n\
    \    let mut paren_level_char_next_prev_next_next = paren_level_char;\n    let\
    \ mut paren_level_char_next_prev_next_prev = paren_level_char;\n    let mut paren_level_char_prev_next_next_next\
    \ = paren_level_char;\n    let mut paren_level_char_prev_next_next_prev = paren_level_char;\n\
    \    let mut paren_level_char_prev_next_prev_next = paren_level_char;\n    let\
    \ mut paren_level_char_prev_next_prev_prev = paren_level_char;\n    let mut paren_level_char_prev_prev_next_next\
    \ = paren_level_char;\n    let mut paren_level_char_prev_prev_next_prev = paren_level_char;\n\
    \    let mut paren_level_char_prev_prev_prev_next = paren", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_start_end = 0;\n    let mut paren_level_char_pos_start_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end = 0;\n    let mut paren_level_char_pos_start_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end = 0;\n    let\
    \ mut paren_level_char_pos_start_end_end_end_end_end_end = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut paren_level_char_pos_", "    let mut paren_level = 0;\n  \
    \  let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_nesting_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_nesting_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.as_mut_ptr();\n    let mut paren_nesting_levels_stack_ptr\
    \ = paren_nesting_levels_stack.as_mut_ptr();\n    let mut paren_levels_stack_ptr_next\
    \ = paren_levels_stack_ptr.offset(1);\n    let mut paren_nesting_levels_stack_ptr_next\
    \ = paren_nesting_levels_stack_ptr.offset(1);\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack.len());\n    let mut paren_nesting_levels_stack_ptr_end\
    \ = paren_nesting_levels_stack_ptr.offset(paren_nesting_levels_stack.len());\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_nesting_levels_stack_ptr_end = paren_nesting_levels_stack_ptr.offset(paren_nesting_levels_stack.len());\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_nesting_levels_stack_ptr_end = paren_nesting_levels_stack_ptr.offset(paren_nesting_levels_stack.len());\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_nesting_levels_stack_ptr_end = paren_nesting_levels_stack_ptr.offset(paren_nesting_levels_stack.len());\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_nesting_levels_stack_ptr_end = paren_nesting_levels_stack_ptr.offset(paren_nesting_levels_stack.len());\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_nesting_", "    let mut paren_levels = vec![];\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut ", "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_levels:\
    \ Vec<isize> = Vec::new();\n    let mut paren_levels_stack: Vec<isize> = Vec::new();\n\
    \    let mut paren_levels_stack_pointer = 0;\n    let mut paren_levels_stack_pointer_max\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pointer_max_index\
    \ = 0;\n    let mut paren_levels_stack_pointer_max_value = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pointer_max_value_index = 0;\n    let mut paren_levels_stack_pointer_max_value_len\
    \ = 0;\n    let mut paren_levels_stack_pointer_max_value_len_index = 0;\n    let\
    \ mut paren_levels_stack_pointer_max_value_len_value = 0;\n    let mut paren_levels_stack_pointer_max_value_len_value_index\
    \ = 0;\n    let mut paren_levels_stack_pointer_max_value_len_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_index = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_len_value_value_value = 0;\n\
    \    let mut paren_levels_stack_pointer_max_value_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut ", "    let mut paren_levels = vec![];\n    let mut paren_level =\
    \ 0;\n    let mut paren_level_count = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_top = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_top = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_top = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_top = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_top = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_count;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_count;\n    let mut paren_levels_stack_top = paren_levels_stack_count;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_count;\n    let mut\
    \ paren_", "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n   \
    \ let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n \
    \   let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nest", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren", " \
    \   let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_depth = Vec::new();\n    let mut paren_level_stack\
    \ = Vec::new();\n    let mut paren_level_level = 0;\n    let mut paren_level_level_depth\
    \ = Vec::new();\n    let mut paren_level_level_stack = Vec::new();\n    let mut\
    \ paren_level_level_level_stack = Vec::new();\n    let mut paren_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_stack = Vec::new();\n\
    \    let mut paren_level_level_level_level_level_level_stack = Vec::new();\n \
    \   let mut paren_level_level_level_level_level_level_stack = Vec::new();\n  \
    \  let mut paren_level_level_level_level_level_level_level_stack = Vec::new();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_stack = Vec::new();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = Vec::new();\n    let mut paren_level_level_level_level_level_level_level_level_level_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut paren_stack = vec![];\n    let mut paren_depth = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_depth\
    \ += 1;\n            paren_stack.push(paren_depth);\n        } else if paren ==\
    \ ')' {\n            paren_depth -= 1;\n            if paren_depth == 0 {\n  \
    \              paren_stack.push(paren_depth);\n            }\n        }\n    }\n\
    \    paren_stack", "    let mut level = 0;\n    let mut paren_level = 0;\n   \
    \ let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_size = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_", "    let mut paren_levels = vec![0];\n \
    \   let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_levels = Vec::new();\n \
    \   let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n \
    \   let mut paren_level_char: char;\n    let mut paren_level_char_pos = 0;\n \
    \   let mut paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_mut_iter = paren_levels_iter.clone();\n\
    \    let mut paren_nesting_levels_mut_iter = paren_nesting_levels_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut = paren_levels_mut_iter.clone();\n    let\
    \ mut paren_nesting_levels_mut_iter_mut = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut2 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut2 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut3 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut3 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut4 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut4 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut5 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut5 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut6 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut6 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut7 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut7 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_mut8 = paren_levels_mut_iter.clone();\n   \
    \ let mut paren_nesting_levels_mut_iter_mut8 = paren_nesting_levels_mut_iter.clone();\n\
    \    let mut paren_levels_mut_iter_m", "    let mut paren_levels = vec![];\n \
    \   let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n    let\
    \ mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_levels =\
    \ vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_stack = vec![0];\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom_index = 0;\n\
    \    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n    let mut paren_level_stack_bottom_index\
    \ = 0;\n    let mut paren_level_stack_top_index = 0;\n", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mu", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_level_count:\
    \ usize = 0;\n    let mut paren_level_string: String = String::new();\n    let\
    \ mut paren_level_string_len: usize = 0;\n    let mut paren_level_char: char =\
    \ '(';\n    for c in paren_string.chars() {\n        if paren_level_char == c\
    \ {\n            paren_level_char = '(';\n            paren_level += 1;\n    \
    \        paren_level_count += 1;\n            paren_level_string += &c.to_string();\n\
    \            paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += &c.to_string();\n            paren_level_string += &c.to_string();\n    \
    \        paren_level_string += &c.to_string();\n            paren_level_string\
    \ += ", "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_level_stack = Vec::new();\n \
    \   let mut paren_level_stack_size = paren_level_stack.len();\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_size - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size\
    \ - 1;\n    let mut paren_level_stack_pos = paren_level_stack_size - 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_", "    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n    let\
    \ mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n   \
    \ let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_count = 0;\n\
    \    let mut ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![0];\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_chars.len();\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_level =\
    \ 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack =\
    \ Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack", "    let mut level = 0;\n  \
    \  let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = vec![];\n    let mut paren_level_char = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_len = paren_level_char_len.saturating_sub(1);\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(1);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.satur", "    let mut\
    \ paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_max = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_index2\
    \ = 0;\n    let mut paren_level_max_index3 = 0;\n    let mut paren_level_max_index4\
    \ = 0;\n    let mut paren_level_max_index5 = 0;\n    let mut paren_level_max_index6\
    \ = 0;\n    let mut paren_level_max_index7 = 0;\n    let mut paren_level_max_index8\
    \ = 0;\n    let mut paren_level_max_index9 = 0;\n    let mut paren_level_max_index10\
    \ = 0;\n    let mut paren_level_max_index11 = 0;\n    let mut paren_level_max_index12\
    \ = 0;\n    let mut paren_level_max_index13 = 0;\n    let mut paren_level_max_index14\
    \ = 0;\n    let mut paren_level_max_index15 = 0;\n    let mut paren_level_max_index16\
    \ = 0;\n    let mut paren_level_max_index17 = 0;\n    let mut paren_level_max_index18\
    \ = 0;\n    let mut paren_level_max_index19 = 0;\n    let mut paren_level_max_index20\
    \ = 0;\n    let mut paren_level_max_index21 = 0;\n    let mut paren_level_max_index22\
    \ = 0;\n    let mut paren_level_max_index23 = 0;\n    let mut paren_level_max_index24\
    \ = 0;\n    let mut paren_level_max_index25 = 0;\n    let mut paren_level_max_index26\
    \ = 0;\n    let mut paren_level_max_index27 = 0;\n    let mut paren_level_max_index28\
    \ = 0;\n    let mut paren_level_max_index29 = 0;\n    let mut paren_level_max_index30\
    \ = 0;\n    let mut paren_level_max_index31 = 0;\n    let mut paren_level_max_index32\
    \ = 0;\n    let mut paren_level_max_index33 = 0;\n    let mut paren_level_max_index34\
    \ = 0;\n    let mut paren_level_max_index35 = 0;\n    let mut paren_level_max_index36\
    \ = 0;\n    let mut paren_level_max_index37 = 0;\n    let mut paren_level_max_index38\
    \ = 0;\n    let mut paren_level_max_index39 = 0;\n    let mut paren_level_max_index40\
    \ = 0;\n    let mut paren_level_max_index41 = 0;\n    let mut paren_level_max_index42\
    \ = 0;\n    let mut ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    while paren_level_count <\
    \ paren_level {\n        paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren_string.split_whitespace().collect();\n\
    \        let mut paren_level_string = paren", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_chars = vec![0];\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = paren_string", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut paren_stack = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = vec![];\n    let mut paren_level_count_index = -1;\n    let mut paren_level_count_index2\
    \ = 0;\n    let mut paren_level_count_index3 = 0;\n    let mut paren_level_count_index4\
    \ = 0;\n    let mut paren_level_count_index5 = 0;\n    let mut paren_level_count_index6\
    \ = 0;\n    let mut paren_level_count_index7 = 0;\n    let mut paren_level_count_index8\
    \ = 0;\n    let mut paren_level_count_index9 = 0;\n    let mut paren_level_count_index10\
    \ = 0;\n    let mut paren_level_count_index11 = 0;\n    let mut paren_level_count_index12\
    \ = 0;\n    let mut paren_level_count_index13 = 0;\n    let mut paren_level_count_index14\
    \ = 0;\n    let mut paren_level_count_index15 = 0;\n    let mut paren_level_count_index16\
    \ = 0;\n    let mut paren_level_count_index17 = 0;\n    let mut paren_level_count_index18\
    \ = 0;\n    let mut paren_level_count_index19 = 0;\n    let mut paren_level_count_index20\
    \ = 0;\n    let mut paren_level_count_index21 = 0;\n    let mut paren_level_count_index22\
    \ = 0;\n    let mut paren_level_count_index23 = 0;\n    let mut paren_level_count_index24\
    \ = 0;\n    let mut paren_level_count_index25 = 0;\n    let mut paren_level_count_index26\
    \ = 0;\n    let mut paren_level_count_index27 = 0;\n    let mut paren_level_count_index28\
    \ = 0;\n    let mut paren_level_count_index29 = 0;\n    let mut paren_level_count_index30\
    \ = 0;\n    let mut paren_level_count_index31 = 0;\n    let mut paren_level_count_index32\
    \ = 0;\n    let mut paren_level_count_index33 = 0;\n    let mut paren_level_count_index34\
    \ = 0;\n    let mut paren_level_count_index35 = 0;\n    let mut paren_level_count_index36\
    \ = 0;\n    let mut paren_level_count_index37 = 0;\n    let mut paren_level_count_index38\
    \ = 0;\n    let mut paren_level_count_index39 = 0;\n    let mut paren_level_count_index40\
    \ = 0;\n    let mut paren_level_count_index41 = 0;\n    let mut paren_level_count_index42\
    \ = 0;\n    let mut paren_level_count_index43 = 0;\n    let mut paren_level_count_index44\
    \ = 0;\n    let mu", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    while paren_level_count <\
    \ paren_level {\n        paren_level_count += 1;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        while paren_level_count\
    \ < paren_level {\n            paren_level_count += 1;\n            let mut paren_level_string\
    \ = paren_string;\n            let mut paren_level_string = paren_string;\n  \
    \          let mut paren_level_string = paren_string;\n        }\n    }\n    paren_levels",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![0];\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr =\
    \ paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr_end\
    \ = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr_end_ptr\
    \ = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr_end_ptr_end\
    \ = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_nesting", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char:\
    \ char;\n    for paren_level_char in paren_string.chars() {\n        if paren_level_char\
    \ == '(' {\n            paren_level += 1;\n            paren_level_char_count\
    \ += 1;\n            paren_level_chars.push(paren_level_char);\n        } else\
    \ if paren_level_char == ')' {\n            paren_level -= 1;\n            paren_level_char_count\
    \ += 1;\n            paren_level_chars.push(paren_level_char);\n            if\
    \ paren_level == 0 {\n                paren_levels.push(paren_level_count);\n\
    \            }\n        } else {\n            paren_level_char_count += 1;\n \
    \           paren_level_chars.push(paren_level_char);\n        }\n    }\n    paren_levels",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_depth = Vec::new();\n    let mut paren_level_depth_stack\
    \ = Vec::new();\n    let mut paren_level_depth_stack_len = paren_level_depth_stack.len();\n\
    \    let mut paren_level_depth_stack_pos = 0;\n    let mut paren_level_depth_stack_pos\
    \ = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n\
    \    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let\
    \ mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut\
    \ paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos\
    \ = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n\
    \    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let\
    \ mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut\
    \ paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos\
    \ = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n\
    \    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let\
    \ mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut\
    \ paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos\
    \ = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n\
    \    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let\
    \ mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut\
    \ paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos\
    \ = paren_level_depth_stack_pos;\n    let mut paren_level_depth_stack_pos = paren_level_depth_stack_pos;\n\
    \    let mut paren_level_depth_", "    let mut paren_stack = vec![];\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = vec![];\n    let mut paren_levels_len = paren_levels_len();\n\
    \    let mut paren_levels_len_ptr = paren_levels_len_ptr();\n    let mut paren_levels_ptr\
    \ = paren_levels_ptr();\n    let mut paren_levels_ptr_len = paren_levels_ptr_len();\n\
    \    let mut paren_levels_ptr_len_next = paren_levels_ptr_len_next();\n    let\
    \ mut paren_levels_ptr_len_next_ptr = paren_levels_ptr_len_next_ptr();\n    let\
    \ mut paren_levels_ptr_len_next_ptr_next = paren_levels_ptr_len_next_ptr_next();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr = paren_levels_ptr_len_next_ptr_next_ptr();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr_next = paren_levels_ptr_len_next_ptr_next_ptr_next();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr_next_ptr = paren_levels_ptr_len_next_ptr_next_ptr_next_ptr();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next = paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr = paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr_next = paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr_next();\n\
    \    let mut paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr();\n   \
    \ let mut paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = paren_levels_ptr_len_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next();\n\
    \    let mut paren_levels_ptr_", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_max_value = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_value_pos = 0;\n    let mut paren_levels_stack_max_value_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_value_pos =\
    \ 0;\n    let mut paren_levels_stack_max_value_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_value_pos = 0;\n    let mut paren_levels_stack_max_value_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_value_pos =\
    \ 0;\n    let mut paren_levels_stack_max_value_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_value_pos = 0;\n    let mut paren_levels_stack_max_value_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_value_pos =\
    \ 0;\n    let mut paren_levels_stack_max_value_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_value_pos = 0;\n    let mut paren_levels_stack_max_value_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_value_pos =\
    \ 0;\n    let mut paren_levels_stack_max_value_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_value_pos = 0;\n    let mut paren_levels_stack_max_value_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_value_pos =\
    \ 0;\n    let mut paren_levels_stack_max_value_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_value_pos = 0;\n    let mut paren_levels_stack_max_value_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_value_pos =\
    \ 0;\n    let mut paren_levels_stack_max_value_len = paren_levels_stack.len();\n\
    \    let mut ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_iter = paren_string.char_indices().filter_map(|i|\
    \ {\n        if paren_level == 0 {\n            paren_level += 1;\n          \
    \  Some(paren_level)\n        } else {\n            paren_level -= 1;\n      \
    \      None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_level", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_level = 0;\n \
    \   let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut level = 0;\n    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_stack_len = paren_string.len();\n    let mut\
    \ paren_stack_pos = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string.chars().count();\n\
    \    while paren_stack_pos < paren_stack_char_len {\n        if paren_stack_char\
    \ == ')' {\n            paren_stack.pop();\n            paren_stack_pos += 1;\n\
    \            paren_stack_char = paren_string[paren_stack_pos];\n            paren_stack_char_pos\
    \ = 0;\n            paren_stack_char_len = paren_string.chars().count();\n   \
    \     }\n        if paren_stack_char == '(' {\n            paren_stack.push(level);\n\
    \            paren_stack_pos += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \            paren_stack_char_pos = 0;\n            paren_stack_char_len = paren_string.chars().count();\n\
    \            level += 1;\n        }\n        if paren_stack_char == ')' {\n  \
    \          level -= 1;\n        }\n        if paren_stack_char == ')' {\n    \
    \        paren_stack_pos += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \            paren_stack_char_pos = 0;\n            paren_stack_char_len = paren_string.chars().count();\n\
    \        }\n        if paren_stack_char == '(' {\n            level += 1;\n  \
    \      }\n        paren_stack_pos += 1;\n        paren_stack_char = paren_string[paren_stack_pos];\n\
    \        paren_stack_char_pos = 0;\n        paren_stack_char_len = paren_string.chars().count();\n\
    \    }\n    paren_stack", "    let mut paren_stack: Vec<isize> = vec![];\n   \
    \ let mut paren_level: isize = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n\
    \    let mut paren_levels_len: usize = 0;\n    let mut paren_levels_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n \
    \   let mut paren_levels_lens_lens_lens: Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mu", "    let mut level = 0;\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_chars.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_nesting_levels_len = paren_nesting_levels.len();\n\
    \    let mut paren_levels_len_ptr = paren_levels_len;\n    let mut paren_nesting_levels_len_ptr\
    \ = paren_nesting_levels_len;\n    let mut paren_levels_ptr = paren_levels;\n\
    \    let mut paren_nesting_levels_ptr = paren_nesting_levels;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr", "    let\
    \ mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_len =\
    \ paren_stack.len();\n    let mut paren_levels_len_ptr = paren_levels_len as *const\
    \ isize;\n    let mut paren_levels_ptr = paren_levels_len_ptr as *const Vec<isize>;\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_len;\n   \
    \ let mut paren_levels_ptr_end_ptr = paren_levels_ptr_end as *const isize;\n \
    \   let mut paren_levels_ptr_end_ptr_end = paren_levels_ptr_end_ptr as *const\
    \ isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr = paren_levels_ptr_end_ptr_end\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = paren_levels_ptr_end_ptr_end_ptr\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr_end_ptr_end_ptr_end\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end =\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end as *const isize;\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end as *const isize;\n  \
    \  let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_len = paren_level_char_len as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_len as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as ", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n \
    \   let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_len = paren_stack.len();\n    let mut\
    \ paren_levels_len2 = paren_levels_len * 2;\n    let mut paren_levels_len3 = paren_levels_len\
    \ * 3;\n    let mut paren_levels_len4 = paren_levels_len * 4;\n    let mut paren_levels_len5\
    \ = paren_levels_len * 5;\n    let mut paren_levels_len6 = paren_levels_len *\
    \ 6;\n    let mut paren_levels_len7 = paren_levels_len * 7;\n    let mut paren_levels_len8\
    \ = paren_levels_len * 8;\n    let mut paren_levels_len9 = paren_levels_len *\
    \ 9;\n    let mut paren_levels_len10 = paren_levels_len * 10;\n    let mut paren_levels_len11\
    \ = paren_levels_len * 11;\n    let mut paren_levels_len12 = paren_levels_len\
    \ * 12;\n    let mut paren_levels_len13 = paren_levels_len * 13;\n    let mut\
    \ paren_levels_len14 = paren_levels_len * 14;\n    let mut paren_levels_len15\
    \ = paren_levels_len * 15;\n    let mut paren_levels_len16 = paren_levels_len\
    \ * 16;\n    let mut paren_levels_len17 = paren_levels_len * 17;\n    let mut\
    \ paren_levels_len18 = paren_levels_len * 18;\n    let mut paren_levels_len19\
    \ = paren_levels_len * 19;\n    let mut paren_levels_len20 = paren_levels_len\
    \ * 20;\n    let mut paren_levels_len21 = paren_levels_len * 21;\n    let mut\
    \ paren_levels_len22 = paren_levels_len * 22;\n    let mut paren_levels_len23\
    \ = paren_levels_len * 23;\n    let mut paren_levels_len24 = paren_levels_len\
    \ * 24;\n    let mut paren_levels_len25 = paren_levels_len * 25;\n    let mut\
    \ paren_levels_len26 = paren_levels_len * 26;\n    let mut paren_levels_len27\
    \ = paren", "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n\
    \    let mut paren_level_index = 0;\n    let mut paren_level_stack = vec![0];\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom_index = 0;\n\
    \    let mut paren_level_stack_bottom_pos = 0;\n    let mut paren_level_stack_bottom_len\
    \ = paren_level_stack_bottom.len();\n    let mut paren_level_stack_bottom_top\
    \ = paren_level_stack_bottom_len;\n    let mut paren_level_stack_bottom_bottom\
    \ = paren_level_stack_bottom_len;\n    let mut paren_level_stack_bottom_bottom_index\
    \ = 0;\n    let mut paren_level_stack_bottom_bottom_pos = 0;\n    let mut paren_level_stack_bottom_bottom_len\
    \ = paren_level_stack_bottom_bottom.len();\n    let mut paren_level_stack_bottom_bottom_top\
    \ = paren_level_stack_bottom_bottom_len;\n    let mut paren_level_stack_bottom_bottom_bottom\
    \ = paren_level_stack_bottom_bottom_len;\n    let mut paren_level_stack_bottom_bottom_bottom_index\
    \ = 0;\n    let mut paren_level_stack_bottom_bottom_bottom_pos = 0;\n    let mut\
    \ paren_level_stack_bottom_bottom_bottom_len = paren_level_stack_bottom_bottom_bottom.len();\n\
    \    let mut paren_level_stack_bottom_bottom_bottom_top = paren_level_stack_bottom_bottom_bottom_len;\n\
    \    let mut paren_level_stack_bottom_bottom_bottom_bottom = paren_level_stack_bottom_bottom_bottom_len;\n\
    \    let mut paren_level_stack_bottom_bottom_bottom_bottom_index = 0;\n    let\
    \ mut paren_level_stack_bottom_bottom_bottom_bottom_pos = 0;\n    let mut paren_level_stack_bottom_bottom_bottom_bottom_len\
    \ = paren_level_stack_bottom_bottom_bottom_bottom.len();\n    let mut paren_level_stack_bottom_bottom_bottom_bottom_top\
    \ = paren_level_stack_bottom_bottom_bottom_bottom_len;\n    let mut paren_level_stack_bottom_bottom_bottom_bottom_bottom\
    \ = paren_level_stack_bottom_bottom_bottom_bottom_len;\n    let mut paren_level_stack_bottom_bottom_bottom_bottom_bottom_index\
    \ = 0;\n    let mut paren_level_stack_bottom_bottom_bottom_bottom_bottom_pos =\
    \ 0;\n    let mut paren_level_stack_bottom_bottom_bottom_bottom_bottom_len = paren_level_stack_bottom_bottom_bottom_bottom_bottom.len();\n\
    \    let mut paren_level_stack_bottom_bottom_bottom_bottom_bottom_top = paren_level_stack_bottom_bottom_bottom_bottom_bottom_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count = 0;\n    let mut paren_level_max_count = 0;\n \
    \   let mut paren_level_max_count_index = 0;\n    let mut paren_level_max_count_index2\
    \ = 0;\n    let mut paren_level_max_count_index3 = 0;\n    let mut paren_level_max_count_index4\
    \ = 0;\n    let mut paren_level_max_count_index5 = 0;\n    let mut paren_level_max_count_index6\
    \ = 0;\n    let mut paren_level_max_count_index7 = 0;\n    let mut paren_level_max_count_index8\
    \ = 0;\n    let mut paren_level_max_count_index9 = 0;\n    let mut paren_level_max_count_index10\
    \ = 0;\n    let mut paren_level_max_count_index11 = 0;\n    let mut paren_level_max_count_index12\
    \ = 0;\n    let mut paren_level_max_count_index13 = 0;\n    let mut paren_level_max_count_index14\
    \ = 0;\n    let mut paren_level_max_count_index15 = 0;\n    let mut paren_level_max_count_index16\
    \ = 0;\n    let mut paren_level_max_count_index17 = 0;\n    let mut paren_level_max_count_index18\
    \ = 0;\n    let mut paren_level_max_count_index19 = 0;\n    let mut paren_level_max_count_index20\
    \ = 0;\n    let mut paren_level_max_count_index21 = 0;\n    let mut paren_level_max_count_index22\
    \ = 0;\n    let mut paren_level_max_count_index23 = 0;\n    let mut paren_level_max_count_index24\
    \ = 0;\n    let mut paren_level_max_count_index25 = 0;\n    let mut paren_level_max_count_index26\
    \ = 0;\n    let mut paren_level_max_count_index27 = 0;\n    let mut paren_level_max_count_index28\
    \ = 0;\n    let mut paren_level_max_count_index29 = 0;\n    let mut paren_level_max_count_index30\
    \ = 0;\n    let mut paren_level_max_count_index31 = 0;\n    let mut paren_level_max_count_index32\
    \ = 0;\n    let mut paren_level_max_count_index33 = 0;\n    let mut paren_level_max_count_index34\
    \ = 0;\n    let mut paren_level_max_count_index35 = 0;\n    let mut paren_level_max_count_index36\
    \ = 0;\n    let mut paren_level_max_count_index37 = 0;\n    let mut paren_level_max_count_index38\
    \ = 0;\n    let mut paren_level_max_count_index39 = 0;\n    let mut paren_level_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_, c)| {\n   \
    \     if c.is_whitespace() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            None\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|(_, c)| {\n        if c.is_whitespace() {\n\
    \            paren_level -= 1;\n            Some(paren_level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ c)| {\n        if c.is_whitespace() {\n            Some(paren_level)\n     \
    \   } else {\n            None\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|(_, c)| {\n        if c.is_whitespace() {\n\
    \            Some(paren_level)\n        } else {\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_, c)|\
    \ {\n        if c.is_whitespace() {\n            Some(paren_level)\n        }\
    \ else {\n            None\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|(_, c)| {\n        if c.is_whitespace() {\n\
    \            Some(paren_level)\n        } else {\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_, c)|\
    \ {\n        if c.is_whitespace() {\n            Some(paren_level)\n        }\
    \ else {\n            None\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|(_, c)| {\n        if c.is_whitespace() {\n\
    \            Some(paren_level)\n        } else {\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_, c)|\
    \ {\n        if c.is_whitespace() {\n            Some(paren_level)\n        }\
    \ else {\n            None\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|(_, c)| {\n        if c.is_whitespace() {\n\
    \            Some(paren_level)\n        } else {\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_, c)|\
    \ {\n        if c.is_whitespace() {\n            Some(paren_level)", "    let\
    \ mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_count = vec![];\n    let mut paren_level_count_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level_count_stack_count = vec![];\n    let mut\
    \ paren_level_count_stack_count2 = vec![];\n    let mut paren_level_count_stack_count3\
    \ = vec![];\n    let mut paren_level_count_stack_count4 = vec![];\n    let mut\
    \ paren_level_count_stack_count5 = vec![];\n    let mut paren_level_count_stack_count6\
    \ = vec![];\n    let mut paren_level_count_stack_count7 = vec![];\n    let mut\
    \ paren_level_count_stack_count8 = vec![];\n    let mut paren_level_count_stack_count9\
    \ = vec![];\n    let mut paren_level_count_stack_count10 = vec![];\n    let mut\
    \ paren_level_count_stack_count11 = vec![];\n    let mut paren_level_count_stack_count12\
    \ = vec![];\n    let mut paren_level_count_stack_count13 = vec![];\n    let mut\
    \ paren_level_count_stack_count14 = vec![];\n    let mut paren_level_count_stack_count15\
    \ = vec![];\n    let mut paren_level_count_stack_count16 = vec![];\n    let mut\
    \ paren_level_count_stack_count17 = vec![];\n    let mut paren_level_count_stack_count18\
    \ = vec![];\n    let mut paren_level_count_stack_count19 = vec![];\n    let mut\
    \ paren_level_count_stack_count20 = vec![];\n    let mut paren_level_count_stack_count21\
    \ = vec![];\n    let mut paren_level_count_stack_count22 = vec![];\n    let mut\
    \ paren_level_count_stack_count23 = vec![];\n    let mut paren_level_count_stack_count24\
    \ = vec![];\n    let mut paren_level_count_stack_count25 = vec![];\n    let mut\
    \ paren_level_count_stack_count26 = vec![];\n    let mut paren_level_count_stack_count27\
    \ = vec![];\n    let mut paren_level_count_stack_count28 = vec![];\n    let mut\
    \ paren_level_count_stack_count29 = vec![];\n    let mut paren_level_count_stack_count30\
    \ = vec![];\n    let mut paren_level_count_stack_count31 = vec![];\n    let mut ",
  "    let mut paren_level = 0;\n    let mut paren_stack = vec![];\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_level =\
    \ 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack =\
    \ Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_depth);\n\
    \            paren_depth += 1;\n        } else if paren == ')' {\n           \
    \ paren_depth -= 1;\n            if paren_depth == 0 {\n                paren_stack.push(paren_depth);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_string = \"\";\n    let mut paren_level_string_count\
    \ = 0;\n    let mut paren_level_string_index = 0;\n    let mut paren_level_strings\
    \ = Vec::new();\n    let mut paren_level_strings_index = 0;\n    let mut paren_level_strings_count\
    \ = 0;\n    let mut paren_level_strings_string = \"\";\n    let mut paren_level_strings_string_index\
    \ = 0;\n    let mut paren_level_strings_string_count = 0;\n    let mut paren_level_strings_strings\
    \ = Vec::new();\n    let mut paren_level_strings_strings_index = 0;\n    let mut\
    \ paren_level_strings_strings_count = 0;\n    let mut paren_level_strings_strings_string\
    \ = \"\";\n    let mut paren_level_strings_strings_string_index = 0;\n    let\
    \ mut paren_level_strings_strings_string_count = 0;\n    let mut paren_level_strings_strings_strings\
    \ = Vec::new();\n    let mut paren_level_strings_strings_strings_index = 0;\n\
    \    let mut paren_level_strings_strings_strings_count = 0;\n    let mut paren_level_strings_strings_strings_string\
    \ = \"\";\n    let mut paren_level_strings_strings_strings_string_index = 0;\n\
    \    let mut paren_level_strings_strings_strings_string_count = 0;\n    let mut\
    \ paren_level_strings_strings_strings_strings = Vec::new();\n    let mut paren_level_strings_strings_strings_strings_index\
    \ = 0;\n    let mut paren_level_strings_strings_strings_strings_count = 0;\n \
    \   let mut paren_level_strings_strings_strings_strings_string = \"\";\n    let\
    \ mut paren_level_strings_strings_strings_strings_string_index = 0;\n    let mut\
    \ paren_level_strings_strings_strings_strings_string_count = 0;\n    let mut paren_level_strings_strings_strings_strings_strings\
    \ = Vec::new();\n    let mut paren_level_strings_strings_strings_strings_strings_index\
    \ = 0;\n    let mut paren_level_strings_strings_strings_strings_strings_count\
    \ = 0;\n    let mut paren_level_strings_strings_strings_strings_strings_string\
    \ = \"\";\n    let mut paren_level_strings_strings_strings_strings_strings_string_index\
    \ = 0;\n    let mut paren_level_strings_string", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_level = 0;\n \
    \   let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n   \
    \ let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr", "    let mut paren_stack =\
    \ vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n            paren_nesting += 1;\n        } else\
    \ if paren == ')' {\n            paren_level -= 1;\n            paren_nesting\
    \ -= 1;\n            if paren_nesting == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_level_count:\
    \ isize = 0;\n    for paren in paren_string.chars() {\n        if paren == '('\
    \ {\n            paren_stack.push(paren_level);\n            paren_level_count\
    \ = 1;\n        } else if paren == ')' {\n            paren_level_count = paren_stack.pop();\n\
    \            if paren_level_count == 0 {\n                paren_level_count =\
    \ paren_level;\n            }\n            paren_level += paren_level_count;\n\
    \        }\n    }\n    paren_level", "    let mut paren_levels = vec![0];\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().filter_map(|i|\
    \ {\n        if paren_level == 0 {\n            paren_level += 1;\n          \
    \  Some(paren_level)\n        } else {\n            paren_level -= 1;\n      \
    \      None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i|\
    \ {\n        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n        }\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i| {\n\
    \        if i.is_some() {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            paren_level -= 1;\n            None\n", "    let\
    \ mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_level =\
    \ 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_nestings_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_nestings_ptr = 0;\n    let mut paren_levels_ptr_next\
    \ = 0;\n    let mut paren_nestings_ptr_next = 0;\n    let mut paren_levels_ptr_next2\
    \ = 0;\n    let mut paren_nestings_ptr_next2 = 0;\n    let mut paren_levels_ptr_next3\
    \ = 0;\n    let mut paren_nestings_ptr_next3 = 0;\n    let mut paren_levels_ptr_next4\
    \ = 0;\n    let mut paren_nestings_ptr_next4 = 0;\n    let mut paren_levels_ptr_next5\
    \ = 0;\n    let mut paren_nestings_ptr_next5 = 0;\n    let mut paren_levels_ptr_next6\
    \ = 0;\n    let mut paren_nestings_ptr_next6 = 0;\n    let mut paren_levels_ptr_next7\
    \ = 0;\n    let mut paren_nestings_ptr_next7 = 0;\n    let mut paren_levels_ptr_next8\
    \ = 0;\n    let mut paren_nestings_ptr_next8 = 0;\n    let mut paren_levels_ptr_next9\
    \ = 0;\n    let mut paren_nestings_ptr_next9 = 0;\n    let mut paren_levels_ptr_next10\
    \ = 0;\n    let mut paren_nestings_ptr_next10 = 0;\n    let mut paren_levels_ptr_next11\
    \ = 0;\n    let mut paren_nestings_ptr_next11 = 0;\n    let mut paren_levels_ptr_next12\
    \ = 0;\n    let mut paren_nestings_ptr_next12 = 0;\n    let mut paren_levels_ptr_next13\
    \ = 0;\n    let mut paren_nestings_ptr_next13 = 0;\n    let mut paren_levels_ptr_next14\
    \ = 0;\n    let mut paren_nestings_ptr_next14 = 0;\n    let mut paren_levels_ptr_next15\
    \ = 0;\n    let mut paren_nestings_ptr_next15 = 0;\n    let mu", "    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut ",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len\
    \ = 0;\n    let mut paren_levels_lens = Vec::new();\n    let mut paren_levels_lens_len\
    \ = 0;\n    let mut paren_levels_lens_len2 = 0;\n    let mut paren_levels_lens_len3\
    \ = 0;\n    let mut paren_levels_lens_len4 = 0;\n    let mut paren_levels_lens_len5\
    \ = 0;\n    let mut paren_levels_lens_len6 = 0;\n    let mut paren_levels_lens_len7\
    \ = 0;\n    let mut paren_levels_lens_len8 = 0;\n    let mut paren_levels_lens_len9\
    \ = 0;\n    let mut paren_levels_lens_len10 = 0;\n    let mut paren_levels_lens_len11\
    \ = 0;\n    let mut paren_levels_lens_len12 = 0;\n    let mut paren_levels_lens_len13\
    \ = 0;\n    let mut paren_levels_lens_len14 = 0;\n    let mut paren_levels_lens_len15\
    \ = 0;\n    let mut paren_levels_lens_len16 = 0;\n    let mut paren_levels_lens_len17\
    \ = 0;\n    let mut paren_levels_lens_len18 = 0;\n    let mut paren_levels_lens_len19\
    \ = 0;\n    let mut paren_levels_lens_len20 = 0;\n    let mut paren_levels_lens_len21\
    \ = 0;\n    let mut paren_levels_lens_len22 = 0;\n    let mut paren_levels_lens_len23\
    \ = 0;\n    let mut paren_levels_lens_len24 = 0;\n    let mut paren_levels_lens_len25\
    \ = 0;\n    let mut paren_levels_lens_len26 = 0;\n    let mut paren_levels_lens_len27\
    \ = 0;\n    let mut paren_levels_lens_len28 = 0;\n    let mut paren_levels_lens_len29\
    \ = 0;\n    let mut paren_levels_lens_len30 = 0;\n    let mut paren_levels_lens_len31\
    \ = 0;\n    let mut paren_levels_lens_len32 = 0;\n    let mut paren_levels_lens_len33\
    \ = 0;\n    let mut paren_levels_lens_len34 = 0;\n    let mut paren_levels_lens_len35\
    \ = 0;", "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mu", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    for paren in paren_string.chars() {\n        if paren ==\
    \ '(' {\n            paren_stack.push(paren_nesting);\n            paren_nesting\
    \ += 1;\n        } else if paren == ')' {\n            paren_nesting -= paren_stack.pop();\n\
    \            if paren_nesting == 0 {\n                paren_levels.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ isize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: isize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: isize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_stack_len: usize = 0;\n    let\
    \ mut paren_levels_stack_ptr: usize = 0;\n    let mut paren_levels_stack_ptr_end:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr: usize = 0;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end: usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end: usize =\
    \ 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr: usize = 0;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end: usize = 0;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr: usize = 0;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end: usize\
    \ = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end:\
    \ usize = 0;\n    let mut paren_levels_stack_ptr_end_ptr_", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_top = paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_", "    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n   \
    \ let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_start = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren_level_end = paren_level;\n    let mut paren_level_end\
    \ = paren_level;\n    let mut paren", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = vec![];\n    let\
    \ mut paren_level_count_stack: Vec<isize> = vec![];\n    let mut paren_level_count_level\
    \ = 0;\n    let mut paren_level_count_level_count = vec![];\n    let mut paren_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level = 0;\n\
    \    let mut paren_level_count_level_count_level_count_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_level_count_level_count_level_count = 0;\n    let\
    \ mut paren_level_count_level_count_level_count_level_count_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level_count_level_count_level_count_level_count_level_count\
    \ = 0;\n    let mut paren_level_count_level_count_level_count_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count\
    \ = 0;\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count\
    \ = 0;\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count\
    \ = 0;\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count\
    \ = 0;\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count\
    \ = 0;\n    let mut paren_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_level_count_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_level_count_level_count_level_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: usize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level += 1;\n            paren_levels.push(paren_level);\n \
    \       } else if paren == ')' {\n            paren_level -= 1;\n            if\
    \ paren_stack.pop() == paren_level {\n                paren_levels.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n    for paren in\
    \ paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_string = paren_string;\n    while paren_level_index\
    \ < paren_string.len() {\n        if paren_level_index == paren_string.len() -\
    \ 1 {\n            paren_levels.push(paren_level);\n            paren_level_string\
    \ = paren_level_string.trim_end().to_string();\n            paren_level_index\
    \ += 1;\n            paren_level += 1;\n            continue;\n        }\n   \
    \     let mut paren_level_char = paren_level_string[paren_level_index];\n    \
    \    if paren_level_char == ')' {\n            paren_level_index += 1;\n     \
    \       paren_level -= 1;\n            continue;\n        }\n        if paren_level_char\
    \ == '(' {\n            paren_level += 1;\n            paren_level_index += 1;\n\
    \            paren_levels.push(paren_level);\n            paren_level_string =\
    \ paren_level_string.trim_end().to_string();\n            paren_level_index +=\
    \ 1;\n            paren_level += 1;\n            continue;\n        }\n      \
    \  if paren_level_char == ' ' {\n            paren_level_index += 1;\n       \
    \     paren_level -= 1;\n            continue;\n        }\n        if paren_level_char\
    \ == ')' || paren_level_char == ')(' {\n            paren_level_string = paren_level_string.trim_end().to_string();\n\
    \            paren_level_index += 1;\n            paren_level += 1;\n        \
    \    continue;\n        }\n        if paren_level_char == ')(' {\n           \
    \ paren_level_string = paren_level_string.trim_end().to_string();\n          \
    \  paren_level_index += 1;\n            paren_level += 1;\n            continue;\n\
    \        }\n        if paren_level_char == ')' || paren_level_char == ')' || paren_level_char\
    \ == ')(' {\n            paren_level_string = paren_level_string.trim_end().to_string();\n\
    \            paren_level_index += 1;\n            paren_level += 1;\n        \
    \    continue;\n        }\n        if paren_level_char == ')(' {\n           \
    \ paren_level_string = paren_level_string.trim_end().to_string();\n          \
    \  paren_level_index += 1;\n            paren_level += 1;\n            continue;\n\
    \        }\n        if paren_level_char == ')' || paren_level_char == ')' || paren_level_char\
    \ == ')(' {\n            paren_level_string = paren_level_string.trim_end().to_string();\n",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nesting_levels\
    \ = Vec::new();\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels_len\
    \ = paren_nesting_levels.len();\n    let mut paren_nesting_levels_len2 = paren_nesting_levels_len;\n\
    \    let mut paren_nesting_levels_len3 = paren_nesting_levels_len;\n    let mut\
    \ paren_nesting_levels_len4 = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len5\
    \ = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len6 = paren_nesting_levels_len;\n\
    \    let mut paren_nesting_levels_len7 = paren_nesting_levels_len;\n    let mut\
    \ paren_nesting_levels_len8 = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len9\
    \ = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len10 = paren_nesting_levels_len;\n\
    \    let mut paren_nesting_levels_len11 = paren_nesting_levels_len;\n    let mut\
    \ paren_nesting_levels_len12 = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len13\
    \ = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len14 = paren_nesting_levels_len;\n\
    \    let mut paren_nesting_levels_len15 = paren_nesting_levels_len;\n    let mut\
    \ paren_nesting_levels_len16 = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len17\
    \ = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len18 = paren_nesting_levels_len;\n\
    \    let mut paren_nesting_levels_len19 = paren_nesting_levels_len;\n    let mut\
    \ paren_nesting_levels_len20 = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len21\
    \ = paren_nesting_levels_len;\n    let mut paren_nesting_levels_len22 = paren_nesting_levels_len;\n\
    \    let mut paren_nesting_levels_len23 = paren_nesting_levels_len;\n", "    let\
    \ mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level += 1;\n        }\
    \ else if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_", "    let mut paren_stack: Vec<isize> = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_stack: Vec<isize> = vec![];\n    let mut paren_level_count_stack_count:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_stack_count1: Vec<isize>\
    \ = vec![];\n    let mut paren_level_count_stack_count2: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_stack_count3: Vec<isize> = vec![];\n    let mut\
    \ paren_level_count_stack_count4: Vec<isize> = vec![];\n    let mut paren_level_count_stack_count5:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_stack_count6: Vec<isize>\
    \ = vec![];\n    let mut paren_level_count_stack_count7: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_stack_count8: Vec<isize> = vec![];\n    let mut\
    \ paren_level_count_stack_count9: Vec<isize> = vec![];\n    let mut paren_level_count_stack_count10:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_stack_count11: Vec<isize>\
    \ = vec![];\n    let mut paren_level_count_stack_count12: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_stack_count13: Vec<isize> = vec![];\n    let mut\
    \ paren_level_count_stack_count14: Vec<isize> = vec![];\n    let mut paren_level_count_stack_count15:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_stack_count16: Vec<isize>\
    \ = vec![];\n    let mut paren_level_count_stack_count17: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_stack_count18: Vec<isize> = vec![];\n    let mut\
    \ paren_level_count_stack_count19: Vec<isize> = vec![];\n    let mut paren_level_count_stack_count20:\
    \ Vec<isize> = vec![];\n    let mut paren_level_count_stack_count21: Vec<isize",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count = 0;\n    for paren in paren_string.chars() {\n\
    \        if paren == '(' {\n            paren_stack.push(paren_level);\n     \
    \       paren_level_count = 1;\n        } else if paren == ')' {\n           \
    \ paren_level_count = paren_stack.pop();\n            if paren_level_count ==\
    \ 0 {\n                paren_level_count = paren_level;\n            }\n     \
    \   }\n        paren_level += paren_level_count;\n    }\n    paren_level", " \
    \   let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.as_mut_ptr();\n    let mut paren_nestings_stack_ptr = paren_nestings_stack.as_mut_ptr();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.end();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.end();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.end();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.end();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.end();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.end();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.end();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.end();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.end();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.end();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.end();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.end();", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_level_stack\
    \ = Vec::new();\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_size\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_pos = 0;\n    let\
    \ mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n   \
    \ let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;",
  "    let mut level = 0;\n    let mut paren_stack = vec![];\n    for paren in paren_string.chars()\
    \ {\n        if paren == ')' {\n            paren_stack.pop();\n            level\
    \ += 1;\n        } else if paren == '(' {\n            paren_stack.push(level);\n\
    \            level += 1;\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n\
    \    let mut paren_levels_stack_ptr_pos = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = ", "    let mut paren_stack = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = vec![];\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n            paren_levels.push(paren_level);\n\
    \        } else if paren == ')' {\n            paren_level -= 1;\n           \
    \ if paren_stack.pop() == paren_level {\n                paren_levels.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n \
    \   let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count: Vec<isize> = vec![];\n\
    \    let mut paren_level_count_idx = 0;\n    let mut paren_level_count_idx2 =\
    \ 0;\n    let mut paren_level_count_idx3 = 0;\n    let mut paren_level_count_idx4\
    \ = 0;\n    let mut paren_level_count_idx5 = 0;\n    let mut paren_level_count_idx6\
    \ = 0;\n    let mut paren_level_count_idx7 = 0;\n    let mut paren_level_count_idx8\
    \ = 0;\n    let mut paren_level_count_idx9 = 0;\n    let mut paren_level_count_idx10\
    \ = 0;\n    let mut paren_level_count_idx11 = 0;\n    let mut paren_level_count_idx12\
    \ = 0;\n    let mut paren_level_count_idx13 = 0;\n    let mut paren_level_count_idx14\
    \ = 0;\n    let mut paren_level_count_idx15 = 0;\n    let mut paren_level_count_idx16\
    \ = 0;\n    let mut paren_level_count_idx17 = 0;\n    let mut paren_level_count_idx18\
    \ = 0;\n    let mut paren_level_count_idx19 = 0;\n    let mut paren_level_count_idx20\
    \ = 0;\n    let mut paren_level_count_idx21 = 0;\n    let mut paren_level_count_idx22\
    \ = 0;\n    let mut paren_level_count_idx23 = 0;\n    let mut paren_level_count_idx24\
    \ = 0;\n    let mut paren_level_count_idx25 = 0;\n    let mut paren_level_count_idx26\
    \ = 0;\n    let mut paren_level_count_idx27 = 0;\n    let mut paren_level_count_idx28\
    \ = 0;\n    let mut paren_level_count_idx29 = 0;\n    let mut paren_level_count_idx30\
    \ = 0;\n    let mut paren_level_count_idx31 = 0;\n    let mut paren_level_count_idx32\
    \ = 0;\n    let mut paren_level_count_idx33 = 0;\n    let mut paren_level_count_idx34\
    \ = 0;\n    let mut paren_level_count_idx35 = 0;\n    let mut paren_level_count_idx36\
    \ = 0;\n    let mut paren_level_count_idx37 = 0;\n    let mut paren_level_count_idx38\
    \ = 0;\n    let mut paren_level_count_idx39 = 0;\n    let mut paren_level_count_idx40\
    \ = 0;\n    let mut paren_level_count_idx41 = 0;\n    let mut paren_level_count_idx42\
    \ = 0;\n    let mut paren_level_count_idx43 = 0;\n    let ", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_nesting_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nesting_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n    let mut paren_nesting_levels_stack_ptr\
    \ = paren_nesting_levels_stack.as_mut_ptr();\n    let mut paren_levels_ptr = paren_levels.as_mut_ptr();\n\
    \    let mut paren_nesting_levels_ptr = paren_nesting_levels.as_mut_ptr();\n \
    \   let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_nesting_levels_ptr_next\
    \ = paren_nesting_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr;\n    let\
    \ mut paren_levels_ptr_end = paren_levels_ptr;\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr;\n    let\
    \ mut paren_levels_ptr_end = paren_levels_ptr;\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr;\n    let\
    \ mut paren_levels_ptr_end = paren_levels_ptr;\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_nesting_levels_ptr_end = paren_nesting_levels_ptr;\n    let\
    \ mut paren_levels_ptr_end = paren_levels_ptr;\n    let mut paren_nesting_levels_ptr_end\
    \ = paren_nesting_levels_ptr;\n    let mut paren_levels_ptr_end = paren", "  \
    \  let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string\
    \ = paren_string;\n    while paren_level_index < paren_string.len() {\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level = 0;\n\
    \        while paren_level_index < paren_string.len() {\n            let mut paren_level_string\
    \ = paren_string;\n            let mut paren_level = 0;\n            while paren_level_index\
    \ < paren_string.len() {\n                let mut paren_level_string = paren_string;\n\
    \                let mut paren_level = 0;\n                while paren_level_index\
    \ < paren_string.len() {\n                    let mut paren_level_string = paren_string;\n\
    \                    let mut paren_level = 0;\n                    while paren_level_index\
    \ < paren_string.len() {\n                        let mut paren_level_string =\
    \ paren_string;\n                        let mut paren_level = 0;\n          \
    \              while paren_level_index < paren_string.len() {\n              \
    \              let mut paren_level_string = paren_string;\n                  \
    \          let mut paren_level = 0;\n                            while paren_level_index\
    \ < paren_string.len() {\n                                let mut paren_level_string\
    \ = paren_string;\n                                let mut paren_level = 0;\n\
    \                                while paren_level_index < paren_string.len()\
    \ {\n                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level = 0;\n              \
    \                      while paren_level_index < paren_string.len() {\n      \
    \                                  let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level = 0;\n          \
    \                              while paren_level_index < paren_string.len() {\n\
    \                                            let mut paren_level_string = paren_string;\n\
    \                                            let mut paren_level = 0;\n      \
    \                                      while paren_level_index < paren_string.len()\
    \ {\n                                                let mut paren_level_string\
    \ = paren_string;\n                                                let mut paren_level\
    \ = 0;\n                                            }\n                      \
    \                  }\n                                    }\n                \
    \                }\n                            }\n                        }\n\
    \                    }\n                }\n            }\n        }\n        paren_levels.push(paren_level);\n\
    \        paren_level_index += 1;\n    }\n    paren_levels"]
stop_tokens:
- "\n}"

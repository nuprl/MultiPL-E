name: HumanEval_39_prime_fib
language: rs
prompt: "/// prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n\
  /// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n:\
  \ isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
  \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
  \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
  \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n   \
  \ assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
  }\n"
completions: ["    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n       \
    \ let c = a + b;\n        a = b;\n        b = c;\n    }\n    b", "    if n < 2\
    \ {\n        return n;\n    }\n    if n == 2 {\n        return 2;\n    }\n   \
    \ if n == 3 {\n        return 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n    }\n    if n % 3 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n    }\n    if n % 5 == 0 {\n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n    }\n    if n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if\
    \ n % 11 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n    }\n   \
    \ if n % 13 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13);\n    }\n    if n % 17 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17);\n    }\n    if n % 19 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19) + prime_fib(n - 23);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(", "    let mut a = 1;\n    let mut b =\
    \ 1;\n    while a < n {\n        if a % b == 0 {\n            return a;\n    \
    \    }\n        a += 1;\n        b += 1;\n    }\n    return n;", "    let mut\
    \ a = 0;\n    let mut b = 1;\n    while a < n {\n        if b == n {\n       \
    \     return a;\n        }\n        match n % b {\n            0 => return a,\n\
    \            1 => return b,\n            _ => a += 1,\n        }\n        b +=\
    \ 1;\n    }\n    return n;", "    if n < 2 {\n        return n;\n    }\n    let\
    \ mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let c = a + b;\n\
    \        a = b;\n        b = c;\n    }\n    b", "    let mut a = 1;\n    let mut\
    \ b = 1;\n    let mut c = 1;\n    while a < n {\n        let mut temp = a;\n \
    \       a = b;\n        b = temp + c;\n        c = b - a;\n    }\n    b", "  \
    \  let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let c = a +\
    \ b;\n        a = b;\n        b = c;\n    }\n    b", "    let mut a = 1;\n   \
    \ let mut b = 1;\n    while a < n {\n        let c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    b", "    if n < 2 {\n        return n;\n    }\n  \
    \  if n == 2 {\n        return 1;\n    }\n    if n == 3 {\n        return 2;\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    let mut i = prime_fib(n - 1);\n    let mut j = prime_fib(n - 2);\n\
    \    while i * j < n {\n        i += 1;\n        j += 1;\n    }\n    return i;",
  "    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let c = a +\
    \ b;\n        a = b;\n        b = c;\n    }\n    b", "    let mut a = 1;\n   \
    \ let mut b = 1;\n    while a < n {\n        let c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    b", "    let mut a = 1;\n    let mut b = 1;\n    while\
    \ a < n {\n        if a % b == 0 {\n            return a;\n        }\n       \
    \ a += 1;\n        b += 1;\n    }\n    return n;", "    if n < 2 {\n        return\
    \ n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n\
    \    for _ in 0..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp\
    \ + c;\n        c = b - a;\n    }\n\n    c", "    let mut a = 1;\n    let mut\
    \ b = 1;\n    while a < n {\n        let c = a + b;\n        a = b;\n        b\
    \ = c;\n    }\n    b", "    let mut a = 1;\n    let mut b = 1;\n    while a <\
    \ n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n    }\n   \
    \ b", "    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b", "    let mut fib:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    while prime < n {\n        fib\
    \ = fib + prime;\n        prime = prime + 2;\n    }\n    fib", "    if n < 2 {\n\
    \        return 1;\n    }\n    if n == 2 {\n        return 2;\n    }\n    if n\
    \ == 3 {\n        return 5;\n    }\n    if n == 4 {\n        return 13;\n    }\n\
    \    if n == 5 {\n        return 89;\n    }\n\n    let mut fib: isize = 0;\n \
    \   let mut prime: isize = 2;\n    while prime < n {\n        fib = fib + prime;\n\
    \        prime = fib + prime + 1;\n    }\n    fib", "    let mut a = 1;\n    let\
    \ mut b = 1;\n    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n\
    \        a = b;\n        b = d;\n        c += 1;\n    }\n    c", "    let mut\
    \ a = 1;\n    let mut b = 1;\n    while a < n {\n        if a % 2 == 0 {\n   \
    \         a += 1;\n        } else {\n            b += 1;\n        }\n    }\n \
    \   while b < n {\n        if b % 2 == 0 {\n            b += 1;\n        } else\
    \ {\n            a += 1;\n        }\n    }\n    a"]
stop_tokens:
- "\n}"

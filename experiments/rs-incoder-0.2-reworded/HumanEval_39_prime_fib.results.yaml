language: rs
name: HumanEval_39_prime_fib
results:
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if n % 11 == 0 {\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n % 13 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13);\n    }\n  \
    \  if n % 17 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime_fib(n\
    \ - 23);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpq40o2mlc.rs:65:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n49 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n50 |         return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) +\
    \ prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(\n51 | }\n   | - ...as it matches\
    \ this but it has different indentation\n...\n65 | }\n   |   ^\n\nerror: mismatched\
    \ closing delimiter: `}`\n  --> /tmp/tmpq40o2mlc.rs:50:140\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                                 - closing delimiter\
    \ possibly meant for this\n...\n50 |         return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(\n   |                                                   \
    \                                                                            \
    \             ^ unclosed delimiter\n51 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \  --> /tmp/tmpq40o2mlc.rs:50:131\n   |\n50 |           return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7)\
    \ + prime_fib(n - 11) + prime_fib(\n   |  ___________________________________________________________________________________________________________________________________^^^^^^^^^-\n\
    \   | |                                                                      \
    \                                                             |\n   | |      \
    \                                                                            \
    \                                                 expected 1 argument\n51 | |\
    \ }\n   | |_- supplied 0 arguments\n   |\nnote: function defined here\n  --> /tmp/tmpq40o2mlc.rs:12:4\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ^^^^^^^^^ --------\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpq40o2mlc.rs:12:27\n   |\n12 | fn\
    \ prime_fib(n: i"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return a;\n        }\n\
    \        a += 1;\n        b += 1;\n    }\n    return n;\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpnbum03ip.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 1;\n\
    \    while a < n {\n        if b == n {\n            return a;\n        }\n  \
    \      match n % b {\n            0 => return a,\n            1 => return b,\n\
    \            _ => a += 1,\n        }\n        b += 1;\n    }\n    return n;\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpayv8jgbu.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9d_shxcy.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while a < n {\n        let mut temp = a;\n        a =\
    \ b;\n        b = temp + c;\n        c = b - a;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpytb2c6j0.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 1;\n    }\n    if n == 3 {\n        return\
    \ 2;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = prime_fib(n - 1);\n    let mut j = prime_fib(n\
    \ - 2);\n    while i * j < n {\n        i += 1;\n        j += 1;\n    }\n    return\
    \ i;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprkis0efx.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return a;\n        }\n\
    \        a += 1;\n        b += 1;\n    }\n    return n;\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpnbum03ip.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = b - a;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpkwylsc4e.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 2;\n    while prime < n {\n        fib = fib + prime;\n \
    \       prime = prime + 2;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpvje1c1c1.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n == 4 {\n        return 13;\n    }\n    if n == 5 {\n   \
    \     return 89;\n    }\n\n    let mut fib: isize = 0;\n    let mut prime: isize\
    \ = 2;\n    while prime < n {\n        fib = fib + prime;\n        prime = fib\
    \ + prime + 1;\n    }\n    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp6vyzwbih.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    while b < n {\n        if b %\
    \ 2 == 0 {\n            b += 1;\n        } else {\n            a += 1;\n     \
    \   }\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpvn4t1qnv.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a;\n        a = b;\n        b = c + b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfgq8l2ln.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n \
    \   }\n    if n < 8 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \   }\n    if n < 16 {\n        return prime_fib(n - 5) + prime_fib(n - 6);\n\
    \    }\n    if n < 32 {\n        return prime_fib(n - 7) + prime_fib(n - 8);\n\
    \    }\n    if n < 64 {\n        return prime_fib(n - 9) + prime_fib(n - 10);\n\
    \    }\n    if n < 128 {\n        return prime_fib(n - 11) + prime_fib(n - 12);\n\
    \    }\n    if n < 256 {\n        return prime_fib(n - 13) + prime_fib(n - 14);\n\
    \    }\n    if n < 512 {\n        return prime_fib(n - 15) + prime_fib(n - 16);\n\
    \    }\n    if n < 1024 {\n        return prime_fib(n - 17) + prime_fib(n - 18);\n\
    \    }\n    if n < 2048 {\n        return prime_fib(n - 19) + prime_fib(n - 20);\n\
    \    }\n    if n < 4096 {\n        return prime_fib(n - 21) + prime_fib(n - 22);\n\
    \    }\n    if n < 8192 {\n        return prime_fib(n - 23) + prime_fib(n - 24);\n\
    \    }\n    if n < 16384 {\n        return prime_fib(n - 25) + prime_fib(n - 26);\n\
    \    }\n    if n < 32768 {\n        return prime_fib(n - 27) + prime_fib(n - 28);\n\
    \    }\n    if n < 65536 {\n        return prime_fib(n - 29) + prime_fib(n - 30);\n\
    \    }\n    if n < 131072 {\n        return prime_fib(n - 31) + prime_fib(n -\
    \ 32);\n    }\n    if n < 262144 {\n        return prime_fib(n - 33) + prime_fib(n\
    \ - 34);\n    }\n    if n < 524288 {\n        return prime_fib(n - 35) + prime_fib(n\
    \ - 36);\n    }\n    if n < 1048576 {\n        return prime_fib(n - 37) + prime_fib(n\
    \ - 38);\n    }\n    if n < 2097152 {\n        return prime_fib(n - 39) + prime_fib(n\
    \ - 40);\n    }\n    if n < 4194304 {\n        return prime_fib(n - 41) + prime_fib(n\
    \ - 42);\n    }\n    if n < 8388608 {\n        return prime_fib(n - 43) + prime_fib(n\
    \ - \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpha1_mvor.rs:95:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n79 |     if n < 8388608 {\n   |           \
    \         - this delimiter might not be properly closed...\n80 |         return\
    \ prime_fib(n - 43) + prime_fib(n - \n81 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n95 | }\n   |   ^\n\nerror: expected expression,\
    \ found `)`\n  --> /tmp/tmpha1_mvor.rs:81:1\n   |\n81 | }\n   | ^ expected expression\n\
    \nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpha1_mvor.rs:80:45\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - closing delimiter possibly meant for this\n...\n80 |         return\
    \ prime_fib(n - 43) + prime_fib(n - \n   |                                   \
    \          ^ unclosed delimiter\n81 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpha1_mvor.rs:12:27\n   |\n12 |\
    \ fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return b;\n        }\n\
    \        (a, b) = (b, a + b);\n    }\n    return b;\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpc727psr6.rs:19:16\n\
    \   |\n19 |         (a, b) = (b, a + b);\n   |         ------ ^\n   |        \
    \ |\n   |         cannot assign to this expression\n   |\n   = note: see issue\
    \ #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..n {\n        if a > b {\n            break;\n        }\n    \
    \    let c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpas99n59_.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 2..n {\n        if a > b {\n            return i;\n        }\n \
    \       let c = a + b;\n        a = b;\n        b = c;\n    }\n    return n;\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpe433yc1p.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if n % 11 == 0 {\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n % 13 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13);\n    }\n  \
    \  if n % 17 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime_fib(n\
    \ - 23);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgjn6d3ys.rs:59:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n43 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n44 |         return\
    \ prime_fib(n - 1...\n45 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n59 | }\n   |   ^\n\nerror[E0425]: cannot find value `prime`\
    \ in this scope\n  --> /tmp/tmpgjn6d3ys.rs:44:191\n   |\n44 | ...b(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19) + prime\n   |                                    \
    \                    ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpgjn6d3ys.rs:12:27\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |    ---------              ^^^^^ expected `isize`, found `()`\n\
    \   |    |\n   |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0425.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n \
    \   }\n    if n < 9 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \   }\n    if n < 16 {\n        return prime_fib(n - 5) + prime_fib(n - 6);\n\
    \    }\n    if n < 25 {\n        return prime_fib(n - 7) + prime_fib(n - 8);\n\
    \    }\n    if n < 36 {\n        return prime_fib(n - 9) + prime_fib(n - 10);\n\
    \    }\n    if n < 49 {\n        return prime_fib(n - 11) + prime_fib(n - 12);\n\
    \    }\n    if n < 64 {\n        return prime_fib(n - 13) + prime_fib(n - 14);\n\
    \    }\n    if n < 81 {\n        return prime_fib(n - 15) + prime_fib(n - 16);\n\
    \    }\n    if n < 100 {\n        return prime_fib(n - 17) + prime_fib(n - 18);\n\
    \    }\n    if n < 121 {\n        return prime_fib(n - 19) + prime_fib(n - 20);\n\
    \    }\n    if n < 143 {\n        return prime_fib(n - 21) + prime_fib(n - 22);\n\
    \    }\n    if n < 161 {\n        return prime_fib(n - 23) + prime_fib(n - 24);\n\
    \    }\n    if n < 183 {\n        return prime_fib(n - 25) + prime_fib(n - 26);\n\
    \    }\n    if n < 203 {\n        return prime_fib(n - 27) + prime_fib(n - 28);\n\
    \    }\n    if n < 225 {\n        return prime_fib(n - 29) + prime_fib(n - 30);\n\
    \    }\n    if n < 243 {\n        return prime_fib(n - 31) + prime_fib(n - 32);\n\
    \    }\n    if n < 263 {\n        return prime_fib(n - 33) + prime_fib(n - 34);\n\
    \    }\n    if n < 283 {\n        return prime_fib(n - 35) + prime_fib(n - 36);\n\
    \    }\n    if n < 303 {\n        return prime_fib(n - 37) + prime_fib(n - 38);\n\
    \    }\n    if n < 323 {\n        return prime_fib(n - 39) + prime_fib(n - 40);\n\
    \    }\n    if n < 343 {\n        return prime_fib(n - 41) + prime_fib(n - 42);\n\
    \    }\n    if n < 363 {\n        return prime_fib(n - 43) + prime_fib(n - 44);\n\
    \    }\n    if n < 383 {\n        return prime_fib(\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp_1at8tqt.rs:98:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n82 |     if n < 383 {\n   |               \
    \ - this delimiter might not be properly closed...\n83 |         return prime_fib(\n\
    84 | }\n   | - ...as it matches this but it has different indentation\n...\n98\
    \ | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp_1at8tqt.rs:83:25\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - closing delimiter possibly meant for this\n...\n83 |         return\
    \ prime_fib(\n   |                         ^ unclosed delimiter\n84 | }\n   |\
    \ ^ mismatched closing delimiter\n\nerror[E0061]: this function takes 1 argument\
    \ but 0 arguments were supplied\n  --> /tmp/tmp_1at8tqt.rs:83:16\n   |\n83 | \
    \          return prime_fib(\n   |  ________________^^^^^^^^^-\n   | |       \
    \         |\n   | |                expected 1 argument\n84 | | }\n   | |_- supplied\
    \ 0 arguments\n   |\nnote: function defined here\n  --> /tmp/tmp_1at8tqt.rs:12:4\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ^^^^^^^^^ --------\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmp_1at8tqt.rs:12:27\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0061, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 2);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n - 5) + prime_fib(n\
    \ - 4);\n    }\n    if n % 7 == 0 {\n        return prime_fib(n - 7) + prime_fib(n\
    \ - 6);\n    }\n    if n % 11 == 0 {\n        return prime_fib(n - 11) + prime_fib(n\
    \ - 10);\n    }\n    if n % 13 == 0 {\n        return prime_fib(n - 13) + prime_fib(n\
    \ - 12);\n    }\n    if n % 17 == 0 {\n        return prime_fib(n - 17) + prime_fib(n\
    \ - 16);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n - 19) + prime_fib(n\
    \ - 18);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 23) + prime_fib(n\
    \ - 22);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 29) + prime_fib(n\
    \ - 28);\n    }\n    if n % 31 == 0 {\n        return prime_fib(n - 31) + prime_fib(n\
    \ - 30);\n    }\n    if n % 37 == 0 {\n        return prime_fib(n - 37) + prime_fib(n\
    \ - 36);\n    }\n    if n % 41 == 0 {\n        return prime_fib(n - 41) + prime_fib(n\
    \ - 40);\n    }\n    if n % 43 == 0 {\n        return prime_fib(n - 43) + prime_fib(n\
    \ - 42);\n    }\n    if n % 47 == 0 {\n        return prime_fib(n - 47) + prime_fib(n\
    \ - 46);\n    }\n    if n % 53 == 0 {\n        return prime_fib(n - 53) + prime_fib(n\
    \ - 52);\n    }\n    if n % 59 == 0 {\n        return prime_fib(n - 59) + prime_fib(n\
    \ - 58);\n    }\n    if n % 61 == 0 {\n        return prime_fib(n - 61) + prime_fib(n\
    \ - 60);\n    }\n    if n % 67 == 0 {\n        return prime_fib(n - 67) + prime_fib(n\
    \ - 66);\n    }\n    if n % 71 == 0 {\n        return prime_fib(n - 71) + prime_fib(n\
    \ - 70);\n    }\n    if n % 73 == 0 {\n        return prime_fib(n - 73) + prime_\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpcg65p1f7.rs:98:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n82 |     if n % 73 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n83 |         return\
    \ prime_fib(n - 73) + prime_\n84 | }\n   | - ...as it matches this but it has\
    \ different indentation\n...\n98 | }\n   |   ^\n\nerror[E0425]: cannot find value\
    \ `prime_` in this scope\n  --> /tmp/tmpcg65p1f7.rs:83:36\n   |\n83 |        \
    \ return prime_fib(n - 73) + prime_\n   |                                    ^^^^^^\
    \ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpcg65p1f7.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return 2;\n    }\n    if n < 9 {\n        return\
    \ 3;\n    }\n    if n < 16 {\n        return 5;\n    }\n    if n < 25 {\n    \
    \    return 7;\n    }\n    if n < 36 {\n        return 11;\n    }\n    if n <\
    \ 49 {\n        return 13;\n    }\n    if n < 64 {\n        return 17;\n    }\n\
    \    if n < 83 {\n        return 21;\n    }\n    if n < 100 {\n        return\
    \ 23;\n    }\n    if n < 122 {\n        return 25;\n    }\n    if n < 144 {\n\
    \        return 27;\n    }\n    if n < 169 {\n        return 29;\n    }\n    if\
    \ n < 192 {\n        return 31;\n    }\n    if n < 216 {\n        return 33;\n\
    \    }\n    if n < 243 {\n        return 35;\n    }\n    if n < 270 {\n      \
    \  return 37;\n    }\n    if n < 293 {\n        return 39;\n    }\n    if n <\
    \ 322 {\n        return 41;\n    }\n    if n < 348 {\n        return 43;\n   \
    \ }\n    if n < 373 {\n        return 45;\n    }\n    if n < 407 {\n        return\
    \ 47;\n    }\n    if n < 439 {\n        return 49;\n    }\n    if n < 468 {\n\
    \        return 51;\n    }\n    if n < 497 {\n        return 53;\n    }\n    if\
    \ n < 526 {\n        return 55;\n    }\n    if n < 561 {\n        return 57;\n\
    \    }\n    if n < 594 {\n        return 59;\n    }\n    if n < 620 {\n      \
    \  return 61;\n    }\n    if n < 646 {\n        return 63;\n    }\n    if n <\
    \ 673 {\n        return 65;\n    }\n    if n < 709 {\n        return 67;\n   \
    \ }\n    if n < 743 {\n        return 69;\n    }\n    if n < 778 {\n        return\
    \ 71;\n    }\n    if n < 811 {\n        return 73;\n    }\n    if n < 853 {\n\
    \        return 75;\n    }\n    if n < 887 {\n        return 77;\n    }\n    if\
    \ n < 911 {\n        return 79;\n    }\n    if n < 945 {\n        return 81;\n\
    \    }\n    if n < 978 {\n        return 83;\n    }\n    if n < 1009 {\n     \
    \   return 85;\n    }\n    if n < 1044 {\n        return 87;\n    }\n    if n\
    \ < 1079 {\n        return 89;\n    }\n    if n < 1113 {\n        return 91;\n\
    \    }\n    if n < 1149 {\n        return 93;\n    }\n    if n < 1184 {\n    \
    \    return 9\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpffs3eofs.rs:164:3\n\
    \    |\n12  | fn prime_fib(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n148 |     if n < 1184 {\n    |         \
    \        - this delimiter might not be properly closed...\n149 |         return\
    \ 9\n150 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n164 | }\n    |   ^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpffs3eofs.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b < n {\n            a += b;\n            b +=\
    \ a;\n        }\n        b %= n;\n        a %= n;\n    }\n    a\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpzc1udex0.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwdklojgh.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b == n {\n            return a;\n        }\n  \
    \      let c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2ms0pyah.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = prime_fib(n - 1);\n    i += prime_fib(n - 2);\n\
    \    i\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpaypkx3_e.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for i in 2..n {\n     \
    \   let c = a + b;\n        a = b;\n        b = c;\n    }\n\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3gj7w6la.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            a += b;\n        }\n        b += 1;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpxt3fx7de.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            b += 1;\n        }\n\
    \        a += 1;\n    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9wsv74ct.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 2..n {\n        if a > b {\n            return i;\n        }\n \
    \       let c = a + b;\n        a = b;\n        b = c;\n    }\n    return n;\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpe433yc1p.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n    if n < 9 {\n        return\
    \ prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if n < 17 {\n        return\
    \ prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n < 25 {\n        return\
    \ prime_fib(n - 13) + prime_fib(n - 19);\n    }\n    if n < 33 {\n        return\
    \ prime_fib(n - 17) + prime_fib(n - 23);\n    }\n    if n < 43 {\n        return\
    \ prime_fib(n - 19) + prime_fib(n - 29);\n    }\n    if n < 59 {\n        return\
    \ prime_fib(n - 23) + prime_fib(n - 39);\n    }\n    if n < 67 {\n        return\
    \ prime_fib(n - 29) + prime_fib(n - 49);\n    }\n    if n < 83  {\n        return\
    \ prime_fib(n - 39) + prime_fib(n - 59);\n    }\n    if n < 103 {\n        return\
    \ prime_fib(n - 49) + prime_fib(n - 69);\n    }\n    if n < 127 {\n        return\
    \ prime_fib(n - 59) + prime_fib(n - 79);\n    }\n    if n < 143 {\n        return\
    \ prime_fib(n - 69) + prime_fib(n - 89);\n    }\n    if n < 167 {\n        return\
    \ prime_fib(n - 79) + prime_fib(n - 99);\n    }\n    if n < 193 {\n        return\
    \ prime_fib(n - 89) + prime_fib(n - 109);\n    }\n    if n < 227 {\n        return\
    \ prime_fib(n - 99) + prime_fib(n - 119);\n    }\n    if n < 253 {\n        return\
    \ prime_fib(n - 109) + prime_fib(n - 139);\n    }\n    if n < 283 {\n        return\
    \ prime_fib(n - 119) + prime_fib(n - 159);\n    }\n    if n < 313 {\n        return\
    \ prime_fib(n - 139) + prime_fib(n - 179);\n    }\n    if n < 337 {\n        return\
    \ prime_fib(n - 159) + prime_fib(n - 191);\n    }\n    if n < 363 {\n        return\
    \ prime_fib(n - 179) + prime_fib(n - 209);\n    }\n    if n < 379 {\n        return\
    \ prime_fib(n - 209) + prime_fib(n - 221);\n    }\n    if n < 397 {\n        return\
    \ prime_fib(n - 221) + prime_fib(n - 243);\n    }\n    if n < 419 {\n        return\
    \ prime_fib(n - 243) + \n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpjjbwdazn.rs:98:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n82 |     if n < 419 {\n   |               \
    \ - this delimiter might not be properly closed...\n83 |         return prime_fib(n\
    \ - 243) + \n84 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n98 | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpjjbwdazn.rs:84:1\n\
    \   |\n84 | }\n   | ^ expected expression\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpjjbwdazn.rs:12:27\n   |\n12 | fn prime_fib(n: isize) -> isize {\n\
    \   |    ---------              ^^^^^ expected `isize`, found `()`\n   |    |\n\
    \   |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib = [0, 1];\n    for i\
    \ in 2..n {\n        fib.push(fib[i - 1] + fib[i - 2]);\n    }\n    fib[n - 1]\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `push` found for array `[{integer}; 2]` in\
    \ the current scope\n  --> /tmp/tmpv3nf5jj1.rs:15:13\n   |\n15 |         fib.push(fib[i\
    \ - 1] + fib[i - 2]);\n   |             ^^^^ method not found in `[{integer};\
    \ 2]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n \
    \ --> /tmp/tmpv3nf5jj1.rs:15:18\n   |\n15 |         fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n   |                  ^^^^^^^^^^ slice indices are of type `usize` or\
    \ ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[{integer}]>` is not\
    \ implemented for `isize`\n   = note: required because of the requirements on\
    \ the impl of `Index<isize>` for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]`\
    \ cannot be indexed by `isize`\n  --> /tmp/tmpv3nf5jj1.rs:15:31\n   |\n15 |  \
    \       fib.push(fib[i - 1] + fib[i - 2]);\n   |                             \
    \  ^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n \
    \  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed\
    \ by `isize`\n  --> /tmp/tmpv3nf5jj1.rs:17:5\n   |\n17 |     fib[n - 1]\n   |\
    \     ^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n\
    \   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n\
    \   = note: required because of the requirements on the impl of `Index<isize>`\
    \ for `[{integer}]`\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0599.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ i in 1..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = b - a;\n    }\n\n    return c;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmz05ekkk.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return a;\n        }\n\
    \        (a, b) = (b, a + b);\n    }\n    return n;\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpuzqfway_.rs:19:16\n\
    \   |\n19 |         (a, b) = (b, a + b);\n   |         ------ ^\n   |        \
    \ |\n   |         cannot assign to this expression\n   |\n   = note: see issue\
    \ #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n\
    \    while a < n {\n        let mut tmp = a;\n        a = b;\n        b = tmp\
    \ + c;\n        c = b - a;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpd3u5crtm.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let tmp = a;\n        a = b;\n        b = tmp + c;\n  \
    \      c = a - b;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpnjuj1jot.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n   \
    \     let mut c = a + b;\n        a = b;\n        b = c;\n    }\n\n    if n %\
    \ a == 0 {\n        return a;\n    }\n\n    if n % b == 0 {\n        return b;\n\
    \    }\n\n    prime_fib(n - 1)\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpxy8xtro2.rs:38:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = prime_fib(n - 3);\n    i += prime_fib(n - 5);\n\
    \    i += prime_fib(n - 7);\n    i += prime_fib(n - 9);\n    i += prime_fib(n\
    \ - 11);\n    i += prime_fib(n - 13);\n    i += prime_fib(n - 15);\n    i += prime_fib(n\
    \ - 17);\n    i += prime_fib(n - 19);\n    i += prime_fib(n - 21);\n    i += prime_fib(n\
    \ - 23);\n    i += prime_fib(n - 25);\n    i += prime_fib(n - 27);\n    i += prime_fib(n\
    \ - 29);\n    i += prime_fib(n - 31);\n    i += prime_fib(n - 33);\n    i += prime_fib(n\
    \ - 35);\n    i += prime_fib(n - 37);\n    i += prime_fib(n - 39);\n    i += prime_fib(n\
    \ - 41);\n    i += prime_fib(n - 43);\n    i += prime_fib(n - 45);\n    i += prime_fib(n\
    \ - 47);\n    i += prime_fib(n - 49);\n    i += prime_fib(n - 51);\n    i += prime_fib(n\
    \ - 53);\n    i += prime_fib(n - 55);\n    i += prime_fib(n - 57);\n    i += prime_fib(n\
    \ - 59);\n    i += prime_fib(n - 61);\n    i += prime_fib(n - 63);\n    i += prime_fib(n\
    \ - 65);\n    i += prime_fib(n - 67);\n    i += prime_fib(n - 69);\n    i += prime_fib(n\
    \ - 71);\n    i += prime_fib(n - 73);\n    i += prime_fib(n - 75);\n    i += prime_fib(n\
    \ - 77);\n    i += prime_fib(n - 79);\n    i += prime_fib(n - 81);\n    i += prime_fib(n\
    \ - 83);\n    i += prime_fib(n - 85);\n    i += prime_fib(n - 87);\n    i += prime_fib(n\
    \ - 89);\n    i += prime_fib(n - 91);\n    i += prime_fib(n - 93);\n    i += prime_fib(n\
    \ - 95);\n\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2p48o_fo.rs:12:27\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = b - a;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpkwylsc4e.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    while b < n {\n        if b %\
    \ 2 == 0 {\n            b += 1;\n        } else {\n            a += 1;\n     \
    \   }\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpvn4t1qnv.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n == 4 {\n        return 13;\n    }\n    if n == 5 {\n   \
    \     return 89;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut\
    \ c = 1;\n\n    for i in 1..n {\n        let mut temp = a;\n        a = b;\n \
    \       b = temp + c;\n        c = a - b;\n    }\n\n    c\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4602o0qo.rs:45:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ i in 1..n {\n        let mut tmp = a;\n        a = b;\n        b = c;\n    \
    \    c = tmp + b;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpyud_1t7x.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a;\n        a = b;\n        b = c + b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfgq8l2ln.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n    if n % 2 == 0 {\n       \
    \ return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n    if n % 3 == 0 {\n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n    }\n\
    \    if n % 5 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5);\n    }\n    if n % 7 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7);\n    }\n    if n % 11 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11);\n    }\n    if n % 13 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13);\n    }\n    if n % 17 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17);\n    }\n \
    \   if n % 19 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17) + prime_fib(n - 19);\n    }\n    if n % 23 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19) + prime_fib(n - 23);\n    }\n    if n % 29 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpfpl6kz_d.rs:62:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n46 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n47 |         return\
    \ prime_fib(n - 1...\n48 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n62 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n\
    \  --> /tmp/tmpfpl6kz_d.rs:47:160\n   |\n12 | fn prime_fib(n: isize) -> isize\
    \ {\n   |                                 - closing delimiter possibly meant for\
    \ this\n...\n47 |         return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n -...\n   |                                             \
    \                                                                            \
    \                                       ^ unclosed delimiter\n48 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfpl6kz_d.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n    let mut a = 1;\n    let mut\
    \ b = 1;\n    for _ in 0..n {\n        let c = a + b;\n        a = b;\n      \
    \  b = c;\n    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n  \
    \  assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4keqh778.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += b;\n        } else\
    \ {\n            b += a;\n        }\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp213dbo_n.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..n {\n        if a > b {\n            break;\n        }\n    \
    \    let c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpas99n59_.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    while\
    \ c < n {\n        let mut d = a + b;\n        a = b;\n        b = d;\n      \
    \  c += 1;\n    }\n\n    return c;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpp2xko79d.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a;\n        a = b;\n        b = c + b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfgq8l2ln.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ i in 1..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = b - a;\n    }\n\n    return b;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg1zc9i2m.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n \
    \   }\n    if n < 8 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \   }\n    if n < 16 {\n        return prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7);\n    }\n    if n < 32 {\n        return prime_fib(n - 7) + prime_fib(n\
    \ - 8) + prime_fib(n - 9);\n    }\n    if n < 64 {\n        return prime_fib(n\
    \ - 10) + prime_fib(n - 11) + prime_fib(n - 12) + prime_fib(n - 13);\n    }\n\
    \    if n < 128 {\n        return prime_fib(n - 14) + prime_fib(n - 15) + prime_fib(n\
    \ - 16) + prime_fib(n - 17);\n    }\n    if n < 256 {\n        return prime_fib(n\
    \ - 18) + prime_fib(n - 19) + prime_fib(n - 20) + prime_fib(n - 21);\n    }\n\
    \    if n < 512 {\n        return prime_fib(n - 22) + prime_fib(n - 23) + prime_fib(n\
    \ - 24) + prime_fib(n - 25);\n    }\n    if n < 1024 {\n        return prime_fib(n\
    \ - 26) + prime_fib(n - 27) + prime_fib(n - 28) + prime_fib(n - 29);\n    }\n\
    \    if n < 2048 {\n        return prime_fib(n - 30) + prime_fib(n - 31) + prime_fib(n\
    \ - 32) + prime_fib(n - 33);\n    }\n    if n < 4096 {\n        return prime_fib(n\
    \ - 34) + prime_fib(n - 35) + prime_fib(n - 36) + prime_fib(n - 37);\n    }\n\
    \    if n < 8192 {\n        return prime_fib(n - 38) + prime_fib(n - 39) + prime_fib(n\
    \ - 40) + prime_fib(n - 41);\n    }\n    if n < 16384 {\n        return prime_fib(n\
    \ - 42) + prime_fib(n - 43) + prime_fib(n - 44) + prime_fib(n - 45);\n    }\n\
    \    if n < 32768 {\n        return prime_fib(n - 46) + prime_fib(n - 47) + prime_fib(n\
    \ - 48) + prime_fib(n - 49);\n    }\n    if n < 65536 {\n        return prime_fib(n\
    \ - 50) + prime_fib(n - 51) + prime_fib(n - 52) + prime_fib(n - 5\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp5bi_ovb7.rs:74:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n58 |     if n < 65536 {\n   |             \
    \     - this delimiter might not be properly closed...\n59 |         return prime_fib(n\
    \ - 50) + prime_fib(n - 51) + prime_fib(n - 52) + prime_fib(n - 5\n60 | }\n  \
    \ | - ...as it matches this but it has different indentation\n...\n74 | }\n  \
    \ |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp5bi_ovb7.rs:59:85\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - closing delimiter possibly meant for this\n...\n59 |         return\
    \ prime_fib(n - 50) + prime_fib(n - 51) + prime_fib(n - 52) + prime_fib(n - 5\n\
    \   |                                                                        \
    \             ^ unclosed delimiter\n60 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp5bi_ovb7.rs:12:27\n   |\n12 |\
    \ fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n    let mut\
    \ d = 1;\n\n    while c < n {\n        let mut tmp = a + b;\n        a = b;\n\
    \        b = tmp;\n        tmp = c + d;\n        c = d;\n        d = tmp;\n  \
    \  }\n\n    return d;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3qt9hdj7.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = b - a;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp1eaf9d1h.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 1;\n    while prime < n {\n        fib = fib + prime;\n \
    \       prime = fib + prime + 1;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpaxqee1rg.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    while b < n {\n        if b %\
    \ 2 == 0 {\n            b += 1;\n        } else {\n            a += 1;\n     \
    \   }\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpvn4t1qnv.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..n {\n        if a > b {\n            return b;\n        }\n \
    \       let c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwqvidanw.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n\n    for i in 2..n {\n     \
    \   let c = a + b;\n        a = b;\n        b = c;\n    }\n\n    return b;\n}\n\
    \nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpl4jvfifl.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a;\n        a = b;\n        b = c + b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpfgq8l2ln.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n    while\
    \ c < n {\n        let mut d = a + b;\n        a = b;\n        b = d;\n      \
    \  c += 1;\n    }\n    return b;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp66qebpko.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b < n {\n            a += 1;\n            b +=\
    \ 1;\n        } else {\n            a += 1;\n        }\n    }\n    a\n}\n\nfn\
    \ main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4i7xhvpn.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n    let mut\
    \ d = 1;\n\n    for i in 2..n {\n        let mut tmp = a;\n        a = b;\n  \
    \      b = tmp + c;\n        c = d;\n        d = a + b;\n    }\n\n    d\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpz_cu9p2w.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..n {\n        let c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpo5g90ana.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = prime_fib(n - 1) + 1;\n    while i <= n {\n  \
    \      if n % i == 0 {\n            return i;\n        }\n        i += 1;\n  \
    \  }\n    return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmps7044ydp.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return 2;\n    }\n    if n < 8 {\n        return\
    \ 3;\n    }\n    if n < 16 {\n        return 5;\n    }\n    if n < 32 {\n    \
    \    return 7;\n    }\n    if n < 64 {\n        return 9;\n    }\n    if n < 128\
    \ {\n        return 11;\n    }\n    if n < 256 {\n        return 13;\n    }\n\
    \    if n < 512 {\n        return 15;\n    }\n    if n < 1024 {\n        return\
    \ 17;\n    }\n    if n < 2048 {\n        return 19;\n    }\n    if n < 4096 {\n\
    \        return 21;\n    }\n    if n < 8192 {\n        return 23;\n    }\n   \
    \ if n < 16384 {\n        return 25;\n    }\n    if n < 32768 {\n        return\
    \ 27;\n    }\n    if n < 65536 {\n        return 29;\n    }\n    if n < 131072\
    \ {\n        return 31;\n    }\n    if n < 262144 {\n        return 33;\n    }\n\
    \    if n < 524288 {\n        return 35;\n    }\n    if n < 1048576 {\n      \
    \  return 37;\n    }\n    if n < 2097152 {\n        return 39;\n    }\n    if\
    \ n < 4194304 {\n        return 41;\n    }\n    if n < 8388608 {\n        return\
    \ 43;\n    }\n    if n < 16777216 {\n        return 45;\n    }\n    if n < 33554432\
    \ {\n        return 47;\n    }\n    if n < 67108864 {\n        return 49;\n  \
    \  }\n    if n < 134217728 {\n        return 51;\n    }\n    if n < 268435456\
    \ {\n        return 53;\n    }\n    if n < 536870912 {\n        return 55;\n \
    \   }\n    if n < 1073741824 {\n        return 57;\n    }\n    if n < 2147483648\
    \ {\n        return 59;\n    }\n    if n < 4294967296 {\n        return 61;\n\
    \    }\n    if n < 8589934592 {\n        return 63;\n    }\n    if n < 17179869184\
    \ {\n        return 65;\n    }\n    if n < 34359738368 {\n        return 67;\n\
    \    }\n    if n < 68719476736 {\n        return 69;\n    }\n    if n < 137438953472\
    \ {\n        return 71;\n    }\n    if n < 274877906944 {\n        return 73;\n\
    \    }\n    if n < 549755813888 {\n        return 75;\n    }\n    if n < 1099511627776\
    \ {\n        return 77;\n    }\n    if n < 2199023255552 {\n        return \n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpuooi_ehs.rs:149:3\n\
    \    |\n12  | fn prime_fib(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n133 |     if n < 2199023255552 {\n    |\
    \                          - this delimiter might not be properly closed...\n\
    134 |         return \n135 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n149 | }\n    |   ^\n\nerror[E0069]: `return;` in a function\
    \ whose return type is not `()`\n   --> /tmp/tmpuooi_ehs.rs:134:9\n    |\n12 \
    \ | fn prime_fib(n: isize) -> isize {\n    |                           ----- expected\
    \ `isize` because of this return type\n...\n134 |         return \n    |     \
    \    ^^^^^^ return type is not `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuooi_ehs.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0069, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0069`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n\
    \    }\n    if n % 5 == 0 {\n        return prime_fib(n - 5) + prime_fib(n - 6);\n\
    \    }\n    if n % 7 == 0 {\n        return prime_fib(n - 7) + prime_fib(n - 8);\n\
    \    }\n    if n % 11 == 0 {\n        return prime_fib(n - 11) + prime_fib(n -\
    \ 12);\n    }\n    if n % 13 == 0 {\n        return prime_fib(n - 13) + prime_fib(n\
    \ - 14);\n    }\n    if n % 17 == 0 {\n        return prime_fib(n - 17) + prime_fib(n\
    \ - 18);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n - 19) + prime_fib(n\
    \ - 20);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 23) + prime_fib(n\
    \ - 24);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 29) + prime_fib(n\
    \ - 30);\n    }\n    if n % 31 == 0 {\n        return prime_fib(n - 31) + prime_fib(n\
    \ - 32);\n    }\n    if n % 37 == 0 {\n        return prime_fib(n - 37) + prime_fib(n\
    \ - 38);\n    }\n    if n % 41 == 0 {\n        return prime_fib(n - 41) + prime_fib(n\
    \ - 42);\n    }\n    if n % 43 == 0 {\n        return prime_fib(n - 43) + prime_fib(n\
    \ - 44);\n    }\n    if n % 47 == 0 {\n        return prime_fib(n - 47) + prime_fib(n\
    \ - 48);\n    }\n    if n % 53 == 0 {\n        return prime_fib(n - 53) + prime_fib(n\
    \ - 54);\n    }\n    if n % 59 == 0 {\n        return prime_fib(n - 59) + prime_fib(n\
    \ - 60);\n    }\n    if n % 61 == 0 {\n        return prime_fib(n - 61) + prime_fib(n\
    \ - 62);\n    }\n    if n % 67 == 0 {\n        return prime_fib(n - 67) + prime_fib(n\
    \ - 68);\n    }\n    if n % 71 == 0 {\n        return prime_fib(n - 71) + prime_fib(n\
    \ - 72);\n    }\n    if n % 73 == 0 {\n        return prime_fib(n - 73) + prime_fib(n\
    \ - 74);\n    }\n    if n % 79 == 0 {\n        return prime_fib(\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpdzhjjlot.rs:95:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n79 |     if n % 79 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n80 |         return\
    \ prime_fib(\n81 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n95 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpdzhjjlot.rs:80:25\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - closing delimiter possibly meant for this\n...\n80 |         return\
    \ prime_fib(\n   |                         ^ unclosed delimiter\n81 | }\n   |\
    \ ^ mismatched closing delimiter\n\nerror[E0061]: this function takes 1 argument\
    \ but 0 arguments were supplied\n  --> /tmp/tmpdzhjjlot.rs:80:16\n   |\n80 | \
    \          return prime_fib(\n   |  ________________^^^^^^^^^-\n   | |       \
    \         |\n   | |                expected 1 argument\n81 | | }\n   | |_- supplied\
    \ 0 arguments\n   |\nnote: function defined here\n  --> /tmp/tmpdzhjjlot.rs:12:4\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ^^^^^^^^^ --------\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpdzhjjlot.rs:12:27\n   |\n12 | fn\
    \ prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0061, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while a < n {\n        if b == 0 {\n            return\
    \ c;\n        }\n        let mut temp = a;\n        a = b;\n        b = temp +\
    \ c;\n        c = b - a;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmppfyilgqy.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        if b == 0 {\n            return\
    \ a;\n        }\n        c += 1;\n        a += 1;\n        b += 1;\n    }\n  \
    \  b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_bs82utd.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = n;\n    fib\
    \ += 1;\n    while fib > 2 {\n        fib -= 3;\n        fib += 1;\n    }\n  \
    \  fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `3`', /tmp/tmp5_inn7_7.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b < n {\n            a += 1;\n            b +=\
    \ 1;\n        } else {\n            a += 1;\n            b += 2;\n        }\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp5lw4b62s.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b < n {\n            b += a;\n        }\n     \
    \   a += b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp7kk7jp09.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    while\
    \ c < n {\n        let mut d = a + b;\n        a = b;\n        b = d;\n      \
    \  c += 1;\n    }\n\n    return b;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpy28m7s_n.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    while b < n {\n        if b %\
    \ 2 == 0 {\n            b += 1;\n        } else {\n            a += 1;\n     \
    \   }\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpvn4t1qnv.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    if b == n {\n        b\n    }\
    \ else {\n        prime_fib(b + 2)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp95i24u5n.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 1..n {\n        if a > b {\n            return i;\n        }\n \
    \       let tmp = a;\n        a = b;\n        b = tmp + b;\n    }\n    return\
    \ n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp136vphw0.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if n % 11 == 0 {\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n % 13 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13);\n    }\n  \
    \  if n % 17 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime_fib(n\
    \ - 23);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpul3y_r_v.rs:65:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n49 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n50 |         return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) +\
    \ prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(\n51 | }\n   | - ...as it matches\
    \ this but it has different indentation\n...\n65 | }\n   |   ^\n\nerror: mismatched\
    \ closing delimiter: `}`\n  --> /tmp/tmpul3y_r_v.rs:50:140\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                                 - closing delimiter\
    \ possibly meant for this\n...\n50 |         return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(\n   |                                                   \
    \                                                                            \
    \             ^ unclosed delimiter\n51 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \  --> /tmp/tmpul3y_r_v.rs:50:131\n   |\n50 |           return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7)\
    \ + prime_fib(n - 11) + prime_fib(\n   |  ___________________________________________________________________________________________________________________________________^^^^^^^^^-\n\
    \   | |                                                                      \
    \                                                             |\n   | |      \
    \                                                                            \
    \                                                 expected 1 argument\n51 | |\
    \ }\n   | |_- supplied 0 arguments\n   |\nnote: function defined here\n  --> /tmp/tmpul3y_r_v.rs:12:4\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ^^^^^^^^^ --------\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpul3y_r_v.rs:12:27\n   |\n12 | fn\
    \ prime_fib(n: i"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return 2;\n    }\n    if n < 8 {\n        return\
    \ 3;\n    }\n    if n < 16 {\n        return 5;\n    }\n    if n < 32 {\n    \
    \    return 7;\n    }\n    if n < 64 {\n        return 9;\n    }\n    if n < 128\
    \ {\n        return 11;\n    }\n    if n < 256 {\n        return 13;\n    }\n\
    \    if n < 512 {\n        return 15;\n    }\n    if n < 1024 {\n        return\
    \ 17;\n    }\n    if n < 2048 {\n        return 19;\n    }\n    if n < 4096 {\n\
    \        return 21;\n    }\n    if n < 8192 {\n        return 23;\n    }\n   \
    \ if n < 16384 {\n        return 25;\n    }\n    if n < 32768 {\n        return\
    \ 27;\n    }\n    if n < 65536 {\n        return 29;\n    }\n    if n < 131072\
    \ {\n        return 31;\n    }\n    if n < 262144 {\n        return 33;\n    }\n\
    \    if n < 524288 {\n        return 35;\n    }\n    if n < 1048576 {\n      \
    \  return 37;\n    }\n    if n < 2097152 {\n        return 39;\n    }\n    if\
    \ n < 4194304 {\n        return 41;\n    }\n    if n < 8388608 {\n        return\
    \ 43;\n    }\n    if n < 16777216 {\n        return 45;\n    }\n    if n < 33554432\
    \ {\n        return 47;\n    }\n    if n < 67108864 {\n        return 49;\n  \
    \  }\n    if n < 134217728 {\n        return 51;\n    }\n    if n < 268435456\
    \ {\n        return 53;\n    }\n    if n < 536870912 {\n        return 55;\n \
    \   }\n    if n < 1073741824 {\n        return 57;\n    }\n    if n < 2147483648\
    \ {\n        return 59;\n    }\n    if n < 4294967296 {\n        return 61;\n\
    \    }\n    if n < 8589934592 {\n        return 63;\n    }\n    if n < 17179869184\
    \ {\n        return 65;\n    }\n    if n < 34359738368 {\n        return 67;\n\
    \    }\n    if n < 68719476736 {\n        return 69;\n    }\n    if n < 137438953472\
    \ {\n        return 71;\n    }\n    if n < 274877906944 {\n        return 73;\n\
    \    }\n    if n < 549755813888 {\n        return 75;\n    }\n    if n < 1099511627776\
    \ {\n        return 77;\n    }\n    if n < 2199023255552 {\n        return \n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpuooi_ehs.rs:149:3\n\
    \    |\n12  | fn prime_fib(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n133 |     if n < 2199023255552 {\n    |\
    \                          - this delimiter might not be properly closed...\n\
    134 |         return \n135 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n149 | }\n    |   ^\n\nerror[E0069]: `return;` in a function\
    \ whose return type is not `()`\n   --> /tmp/tmpuooi_ehs.rs:134:9\n    |\n12 \
    \ | fn prime_fib(n: isize) -> isize {\n    |                           ----- expected\
    \ `isize` because of this return type\n...\n134 |         return \n    |     \
    \    ^^^^^^ return type is not `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuooi_ehs.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0069, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0069`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 2;\n\n    while prime < n {\n        fib = fib + (prime as\
    \ isize);\n        prime = prime + 2;\n    }\n\n    fib\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpsilaq_ie.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += b;\n        } else\
    \ {\n            b += a;\n        }\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpzupnauey.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while a < n {\n        if b == 0 {\n            return\
    \ c;\n        }\n        c = a + b;\n        a = b;\n        b = c;\n    }\n \
    \   b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpn0ib2cre.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 1;\n    while prime < n {\n        fib = fib + (prime % 2);\n\
    \        prime = prime + 1;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpm817lcjs.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n    while\
    \ c < n {\n        let mut d = a + b;\n        a = b;\n        b = d;\n      \
    \  c += 1;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpietryqth.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = 1;\n    let mut j = 1;\n    while i * j <= n {\n\
    \        if n % i == 0 {\n            return i;\n        }\n        if n % j ==\
    \ 0 {\n            return j;\n        }\n        i += 1;\n        j += 1;\n  \
    \  }\n    return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpx6pig63t.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n    let mut n1 = 1;\n    let\
    \ mut n2 = 1;\n    let mut n3 = 1;\n    let mut n4 = 1;\n    let mut n5 = 1;\n\
    \    let mut n6 = 1;\n    let mut n7 = 1;\n    let mut n8 = 1;\n    let mut n9\
    \ = 1;\n    let mut n10 = 1;\n    let mut n11 = 1;\n    let mut n12 = 1;\n   \
    \ let mut n13 = 1;\n    let mut n14 = 1;\n    let mut n15 = 1;\n    let mut n16\
    \ = 1;\n    let mut n17 = 1;\n    let mut n18 = 1;\n    let mut n19 = 1;\n   \
    \ let mut n20 = 1;\n    let mut n21 = 1;\n    let mut n22 = 1;\n    let mut n23\
    \ = 1;\n    let mut n24 = 1;\n    let mut n25 = 1;\n    let mut n26 = 1;\n   \
    \ let mut n27 = 1;\n    let mut n28 = 1;\n    let mut n29 = 1;\n    let mut n30\
    \ = 1;\n    let mut n31 = 1;\n    let mut n32 = 1;\n    let mut n33 = 1;\n   \
    \ let mut n34 = 1;\n    let mut n35 = 1;\n    let mut n36 = 1;\n    let mut n37\
    \ = 1;\n    let mut n38 = 1;\n    let mut n39 = 1;\n    let mut n40 = 1;\n   \
    \ let mut n41 = 1;\n    let mut n42 = 1;\n    let mut n43 = 1;\n    let mut n44\
    \ = 1;\n    let mut n45 = 1;\n    let mut n46 = 1;\n    let mut n47 = 1;\n   \
    \ let mut n48 = 1;\n    let mut n49 = 1;\n    let mut n50 = 1;\n    let mut n51\
    \ = 1;\n    let mut n52 = 1;\n    let mut n53 = 1;\n    let mut n54 = 1;\n   \
    \ let mut n55 = 1;\n    let mut n56 = 1;\n    let mut n57 = 1;\n    let mut n58\
    \ = 1;\n    let mut n59 = 1;\n    let mut n60 = 1;\n    let mut n61 = 1;\n   \
    \ let mut n62 = 1;\n    let mut n63 = 1;\n    let mut n64 = 1;\n    let mut n65\
    \ = 1;\n    let mut n66 = 1;\n    let mut n67 = 1;\n    let mut n68 = 1;\n   \
    \ let mut n69 = 1;\n    let mut n70 = 1;\n\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp1qfubppi.rs:12:27\n   |\n\
    12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as its body\
    \ has no tail or `return` expression\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 1;\n    }\n    if n == 3 {\n        return\
    \ 2;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = 1;\n    let mut j = 2;\n    while i <= n {\n \
    \       if i % j == 0 {\n            return i;\n        }\n        i += 1;\n \
    \       j += 2;\n    }\n    return i;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4bnxo4j1.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 1;\n    while prime < n {\n        fib = fib + prime;\n \
    \       prime = prime + 2;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpt6l07nrf.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b < n {\n            a += b;\n            b +=\
    \ a;\n        }\n        else {\n            b += a;\n        }\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3b8z0m8r.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return b;\n        }\n\
    \        (a, b) = (b, a + b);\n    }\n    return b;\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpc727psr6.rs:19:16\n\
    \   |\n19 |         (a, b) = (b, a + b);\n   |         ------ ^\n   |        \
    \ |\n   |         cannot assign to this expression\n   |\n   = note: see issue\
    \ #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 1;\n    while prime < n {\n        fib = fib + (prime * prime);\n\
    \        prime = prime + 1;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpevp_15r7.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return a;\n        }\n\
    \        (a, b) = (b, a + b);\n    }\n    return n;\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpuzqfway_.rs:19:16\n\
    \   |\n19 |         (a, b) = (b, a + b);\n   |         ------ ^\n   |        \
    \ |\n   |         cannot assign to this expression\n   |\n   = note: see issue\
    \ #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while a < n {\n        if b == 0 {\n            break;\n\
    \        }\n        let mut d = b;\n        b = a - d;\n        a = c;\n     \
    \   c = d;\n    }\n    return a;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp2t7a022i.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqqb86pz4.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n == 4 {\n        return 13;\n    }\n    if n == 5 {\n   \
    \     return 89;\n    }\n    let mut i = 1;\n    let mut j = 2;\n    while i <=\
    \ n {\n        if j > n {\n            break;\n        }\n        if i % j ==\
    \ 0 {\n            i += 1;\n        } else {\n            j += 1;\n        }\n\
    \    }\n    i\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp6djj78mm.rs:45:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if n % 11 == 0 {\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n % 13 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13);\n    }\n  \
    \  if n % 17 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime_fib(n\
    \ - 23);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpq40o2mlc.rs:65:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n49 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n50 |         return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) +\
    \ prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(\n51 | }\n   | - ...as it matches\
    \ this but it has different indentation\n...\n65 | }\n   |   ^\n\nerror: mismatched\
    \ closing delimiter: `}`\n  --> /tmp/tmpq40o2mlc.rs:50:140\n   |\n12 | fn prime_fib(n:\
    \ isize) -> isize {\n   |                                 - closing delimiter\
    \ possibly meant for this\n...\n50 |         return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(\n   |                                                   \
    \                                                                            \
    \             ^ unclosed delimiter\n51 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \  --> /tmp/tmpq40o2mlc.rs:50:131\n   |\n50 |           return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7)\
    \ + prime_fib(n - 11) + prime_fib(\n   |  ___________________________________________________________________________________________________________________________________^^^^^^^^^-\n\
    \   | |                                                                      \
    \                                                             |\n   | |      \
    \                                                                            \
    \                                                 expected 1 argument\n51 | |\
    \ }\n   | |_- supplied 0 arguments\n   |\nnote: function defined here\n  --> /tmp/tmpq40o2mlc.rs:12:4\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ^^^^^^^^^ --------\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpq40o2mlc.rs:12:27\n   |\n12 | fn\
    \ prime_fib(n: i"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % b == 0 {\n            return a;\n        }\n\
    \        (a, b) = (b, a + b);\n    }\n    return n;\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n  --> /tmp/tmpuzqfway_.rs:19:16\n\
    \   |\n19 |         (a, b) = (b, a + b);\n   |         ------ ^\n   |        \
    \ |\n   |         cannot assign to this expression\n   |\n   = note: see issue\
    \ #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp9d_shxcy.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 3;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    let mut i = 1;\n    let mut j = 2;\n    while i * j <= n {\n\
    \        if n % i == 0 {\n            return i;\n        }\n        if n % j ==\
    \ 0 {\n            return j;\n        }\n        i += 1;\n        j += 1;\n  \
    \  }\n    return n;\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpf_i615rf.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return n;\n    }\n    if n % 2 == 0 {\n       \
    \ return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n    if n % 3 == 0 {\n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n    }\n\
    \    if n % 5 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5);\n    }\n    if n % 7 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7);\n    }\n    if n % 11 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11);\n    }\n    if n % 13 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13);\n    }\n    if n % 17 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17);\n    }\n \
    \   if n % 19 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17) + prime_fib(n - 19);\n    }\n    if n % 23 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19) + prime_fib(n - 23);\n    }\n    if n % 29 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n\
    \ - 17\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpfpl6kz_d.rs:62:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n46 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n47 |         return\
    \ prime_fib(n - 1...\n48 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n62 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n\
    \  --> /tmp/tmpfpl6kz_d.rs:47:160\n   |\n12 | fn prime_fib(n: isize) -> isize\
    \ {\n   |                                 - closing delimiter possibly meant for\
    \ this\n...\n47 |         return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n -...\n   |                                             \
    \                                                                            \
    \                                       ^ unclosed delimiter\n48 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfpl6kz_d.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n    }\n    if n % 11 == 0 {\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11);\n    }\n    if n % 13 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n - 13);\n    }\n  \
    \  if n % 17 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n - 11) + prime_fib(n\
    \ - 13) + prime_fib(n - 17);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n\
    \ - 19);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime_fib(n\
    \ - 23);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 13) + prime_fib(n - 17) + prime_fib(n - 19) + prime\n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgjn6d3ys.rs:59:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n43 |     if n % 29 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n44 |         return\
    \ prime_fib(n - 1...\n45 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n59 | }\n   |   ^\n\nerror[E0425]: cannot find value `prime`\
    \ in this scope\n  --> /tmp/tmpgjn6d3ys.rs:44:191\n   |\n44 | ...b(n - 13) + prime_fib(n\
    \ - 17) + prime_fib(n - 19) + prime\n   |                                    \
    \                    ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpgjn6d3ys.rs:12:27\n   |\n12 | fn prime_fib(n: isize) ->\
    \ isize {\n   |    ---------              ^^^^^ expected `isize`, found `()`\n\
    \   |    |\n   |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0425.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n    while\
    \ c < n {\n        let mut d = a + b;\n        a = b;\n        b = d;\n      \
    \  c += 1;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpietryqth.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 4);\n    }\n    if n % 5 == 0 {\n        return prime_fib(n - 5) + prime_fib(n\
    \ - 6);\n    }\n    if n % 7 == 0 {\n        return prime_fib(n - 7) + prime_fib(n\
    \ - 8);\n    }\n    if n % 11 == 0 {\n        return prime_fib(n - 11) + prime_fib(n\
    \ - 12);\n    }\n    if n % 13 == 0 {\n        return prime_fib(n - 13) + prime_fib(n\
    \ - 14);\n    }\n    if n % 17 == 0 {\n        return prime_fib(n - 17) + prime_fib(n\
    \ - 18);\n    }\n    if n % 19 == 0 {\n        return prime_fib(n - 19) + prime_fib(n\
    \ - 20);\n    }\n    if n % 23 == 0 {\n        return prime_fib(n - 23) + prime_fib(n\
    \ - 24);\n    }\n    if n % 29 == 0 {\n        return prime_fib(n - 29) + prime_fib(n\
    \ - 30);\n    }\n    if n % 31 == 0 {\n        return prime_fib(n - 31) + prime_fib(n\
    \ - 32);\n    }\n    if n % 37 == 0 {\n        return prime_fib(n - 37) + prime_fib(n\
    \ - 38);\n    }\n    if n % 41 == 0 {\n        return prime_fib(n - 41) + prime_fib(n\
    \ - 42);\n    }\n    if n % 43 == 0 {\n        return prime_fib(n - 43) + prime_fib(n\
    \ - 44);\n    }\n    if n % 47 == 0 {\n        return prime_fib(n - 47) + prime_fib(n\
    \ - 48);\n    }\n    if n % 53 == 0 {\n        return prime_fib(n - 53) + prime_fib(n\
    \ - 54);\n    }\n    if n % 59 == 0 {\n        return prime_fib(n - 59) + prime_fib(n\
    \ - 60);\n    }\n    if n % 61 == 0 {\n        return prime_fib(n - 61) + prime_fib(n\
    \ - 62);\n    }\n    if n % 67 == 0 {\n        return prime_fib(n - 67) + prime_fib(n\
    \ - 68);\n    }\n    if n % 71 == 0 {\n        return prime_fib(n - 71) + prime_fib(n\
    \ - 72);\n    }\n    if n % 73 == 0 {\n        return prime_fib(n - 73) + prime_fib(n\
    \ - 74);\n    }\n    if n % 79 == 0 {\n        return prime_\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpvilq0390.rs:95:3\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n79 |     if n % 79 == 0 {\n   |           \
    \         - this delimiter might not be properly closed...\n80 |         return\
    \ prime_\n81 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n95 | }\n   |   ^\n\nerror[E0425]: cannot find value `prime_` in this scope\n\
    \  --> /tmp/tmpvilq0390.rs:80:16\n   |\n80 |         return prime_\n   |     \
    \           ^^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpvilq0390.rs:12:27\n   |\n12 | fn prime_fib(n: isize) -> isize {\n\
    \   |    ---------              ^^^^^ expected `isize`, found `()`\n   |    |\n\
    \   |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    for i in 2..n {\n        if a > b {\n            break;\n        }\n    \
    \    let c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprdpbki8r.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = a - b;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpeeof7r0x.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n    let mut n1 = 1;\n    let mut n2 = 1;\n    let mut n3 = 1;\n    let\
    \ mut n4 = 1;\n    let mut n5 = 1;\n    let mut n6 = 1;\n    let mut n7 = 1;\n\
    \    let mut n8 = 1;\n    let mut n9 = 1;\n    let mut n10 = 1;\n    let mut n11\
    \ = 1;\n    let mut n12 = 1;\n    let mut n13 = 1;\n    let mut n14 = 1;\n   \
    \ let mut n15 = 1;\n    let mut n16 = 1;\n    let mut n17 = 1;\n    let mut n18\
    \ = 1;\n    let mut n19 = 1;\n    let mut n20 = 1;\n    let mut n21 = 1;\n   \
    \ let mut n22 = 1;\n    let mut n23 = 1;\n    let mut n24 = 1;\n    let mut n25\
    \ = 1;\n    let mut n26 = 1;\n    let mut n27 = 1;\n    let mut n28 = 1;\n   \
    \ let mut n29 = 1;\n    let mut n30 = 1;\n    let mut n31 = 1;\n    let mut n32\
    \ = 1;\n    let mut n33 = 1;\n    let mut n34 = 1;\n    let mut n35 = 1;\n   \
    \ let mut n36 = 1;\n    let mut n37 = 1;\n    let mut n38 = 1;\n    let mut n39\
    \ = 1;\n    let mut n40 = 1;\n    let mut n41 = 1;\n    let mut n42 = 1;\n   \
    \ let mut n43 = 1;\n    let mut n44 = 1;\n    let mut n45 = 1;\n    let mut n46\
    \ = 1;\n    let mut n47 = 1;\n    let mut n48 = 1;\n    let mut n49 = 1;\n   \
    \ let mut n50 = 1;\n    let mut n51 = 1;\n    let mut n52 = 1;\n    let mut n53\
    \ = 1;\n    let mut n54 = 1;\n    let mut n55 = 1;\n    let mut n56 = 1;\n   \
    \ let mut n57 = 1;\n    let mut n58 = 1;\n    let mut n59 = 1;\n    let mut n60\
    \ = 1;\n    let mut n61 = 1;\n    let mut n62 = 1;\n    let mut n63 = 1;\n   \
    \ let mut n64 = 1;\n    let mut n65 = 1;\n    let mut n66 = 1;\n    let mut n67\
    \ = 1;\n    let mut n68 = 1;\n    let mut n69 = 1;\n    let mut n70 = 1;\n   \
    \ let mut n71 = 1;\n    let mu\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpavrrx07s.rs:87:11\n   |\n\
    87 |     let mu\n   |           ^ help: add `;` here\n88 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpavrrx07s.rs:12:27\n \
    \  |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------              ^^^^^\
    \ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()` as\
    \ its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    while a < n {\n        let\
    \ c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\nfn main() {\n\
    \    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqqb86pz4.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    if b == 2 {\n        b += 1;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3wwb7bvt.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if b < n {\n            b += a;\n        }\n     \
    \   a += b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp7kk7jp09.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n == 0 || n == 1 {\n        return\
    \ n;\n    }\n\n    let mut a = 1;\n    let mut b = 1;\n    while b < n {\n   \
    \     let mut c = a + b;\n        a = b;\n        b = c;\n    }\n    b\n}\n\n\
    fn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n\
    \    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4),\
    \ 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n\
    \    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n \
    \   assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpoow2c7n8.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n \
    \   }\n    if n < 8 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \   }\n    if n < 16 {\n        return prime_fib(n - 5) + prime_fib(n - 6);\n\
    \    }\n    if n < 32 {\n        return prime_fib(n - 7) + prime_fib(n - 8);\n\
    \    }\n    if n < 64 {\n        return prime_fib(n - 9) + prime_fib(n - 10);\n\
    \    }\n    if n < 128 {\n        return prime_fib(n - 11) + prime_fib(n - 12);\n\
    \    }\n    if n < 256 {\n        return prime_fib(n - 13) + prime_fib(n - 14);\n\
    \    }\n    if n < 512 {\n        return prime_fib(n - 15) + prime_fib(n - 16);\n\
    \    }\n    if n < 1024 {\n        return prime_fib(n - 17) + prime_fib(n - 18);\n\
    \    }\n    if n < 2048 {\n        return prime_fib(n - 19) + prime_fib(n - 20);\n\
    \    }\n    if n < 4096 {\n        return prime_fib(n - 21);\n    }\n    if n\
    \ < 8192 {\n        return prime_fib(n - 23);\n    }\n    if n < 16384 {\n   \
    \     return prime_fib(n - 25);\n    }\n    if n < 32768 {\n        return prime_fib(n\
    \ - 27);\n    }\n    if n < 65536 {\n        return prime_fib(n - 29);\n    }\n\
    \    if n < 131072 {\n        return prime_fib(n - 31);\n    }\n    if n < 262144\
    \ {\n        return prime_fib(n - 33);\n    }\n    if n < 524288 {\n        return\
    \ prime_fib(n - 35);\n    }\n    if n < 1048576 {\n        return prime_fib(n\
    \ - 37);\n    }\n    if n < 2097152 {\n        return prime_fib(n - 39);\n   \
    \ }\n    if n < 4194304 {\n        return prime_fib(n - 41);\n    }\n    if n\
    \ < 8388608 {\n        return prime_fib(n - 43);\n    }\n    if n < 16777216 {\n\
    \        return prime_fib(n - 45);\n    }\n    if n < 33554432 {\n        return\
    \ prime_fib(n - 47);\n    }\n    if n < 67108864 {\n        return prime_fib(n\
    \ - 49);\n    }\n    if n < 134217728 {\n        return prime_fib(n - 51);\n \
    \   }\n    if n < 2684\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpp0me_v01.rs:95:1\n   |\n\
    94 |     if n < 2684\n   |     -- this `if` expression has a condition, but no\
    \ block\n95 | }\n   | ^ expected `{`\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        if a % 2 == 0 {\n            a += 1;\n        } else\
    \ {\n            b += 1;\n        }\n    }\n    if b == 2 {\n        b += 1;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp3wwb7bvt.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n \
    \   }\n    if n < 8 {\n        return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \   }\n    if n < 16 {\n        return prime_fib(n - 5) + prime_fib(n - 6);\n\
    \    }\n    if n < 32 {\n        return prime_fib(n - 7) + prime_fib(n - 8);\n\
    \    }\n    if n < 64 {\n        return prime_fib(n - 9) + prime_fib(n - 10);\n\
    \    }\n    if n < 128 {\n        return prime_fib(n - 11) + prime_fib(n - 12);\n\
    \    }\n    if n < 256 {\n        return prime_fib(n - 13) + prime_fib(n - 14);\n\
    \    }\n    if n < 512 {\n        return prime_fib(n - 15) + prime_fib(n - 16);\n\
    \    }\n    if n < 1024 {\n        return prime_fib(n - 17) + prime_fib(n - 18);\n\
    \    }\n    if n < 2048 {\n        return prime_fib(n - 19) + prime_fib(n - 20);\n\
    \    }\n    if n < 4096 {\n        return prime_fib(n - 21);\n    }\n    if n\
    \ < 8192 {\n        return prime_fib(n - 23);\n    }\n    if n < 16384 {\n   \
    \     return prime_fib(n - 25);\n    }\n    if n < 32768 {\n        return prime_fib(n\
    \ - 27);\n    }\n    if n < 65536 {\n        return prime_fib(n - 29);\n    }\n\
    \    if n < 131072 {\n        return prime_fib(n - 31);\n    }\n    if n < 262144\
    \ {\n        return prime_fib(n - 33);\n    }\n    if n < 524288 {\n        return\
    \ prime_fib(n - 35);\n    }\n    if n < 1048576 {\n        return prime_fib(n\
    \ - 37);\n    }\n    if n < 2097152 {\n        return prime_fib(n - 39);\n   \
    \ }\n    if n < 4194304 {\n        return prime_fib(n - 41);\n    }\n    if n\
    \ < 8388608 {\n        return prime_fib(n - 43);\n    }\n    if n < 16777216 {\n\
    \        return prime_fib(n - 45);\n    }\n    if n < 33554432 {\n        return\
    \ prime_fib(n - 47);\n    }\n    if n < 67108864 {\n        return prime_fib(n\
    \ - 49);\n    }\n    if n < 134217728 {\n        return prime_fib(n - 51);\n \
    \   }\n    if n < 2684\n}\n\nfn main() {\n    let candidate = prime_fib;\n   \
    \ assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpp0me_v01.rs:95:1\n   |\n\
    94 |     if n < 2684\n   |     -- this `if` expression has a condition, but no\
    \ block\n95 | }\n   | ^ expected `{`\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n    while\
    \ c < n {\n        let mut d = a + b;\n        a = b;\n        b = d;\n      \
    \  c += 1;\n    }\n\n    c\n}\n\nfn main() {\n    let candidate = prime_fib;\n\
    \    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3),\
    \ 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n\
    \    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n   \
    \ assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n  \
    \  assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpj56au10b.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 2;\n    while prime < n {\n        fib = fib + prime;\n \
    \       prime = prime + 2;\n    }\n    fib\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpvje1c1c1.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 1
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n < 4 {\n        return 2;\n    }\n    if n < 8 {\n        return\
    \ 3;\n    }\n    if n < 16 {\n        return 5;\n    }\n    if n < 32 {\n    \
    \    return 7;\n    }\n    if n < 64 {\n        return 9;\n    }\n    if n < 128\
    \ {\n        return 11;\n    }\n    if n < 256 {\n        return 13;\n    }\n\
    \    if n < 512 {\n        return 15;\n    }\n    if n < 1024 {\n        return\
    \ 17;\n    }\n    if n < 2048 {\n        return 19;\n    }\n    if n < 4096 {\n\
    \        return 21;\n    }\n    if n < 8192 {\n        return 23;\n    }\n   \
    \ if n < 16384 {\n        return 25;\n    }\n    if n < 32768 {\n        return\
    \ 27;\n    }\n    if n < 65536 {\n        return 29;\n    }\n    if n < 131072\
    \ {\n        return 31;\n    }\n    if n < 262144 {\n        return 33;\n    }\n\
    \    if n < 524288 {\n        return 35;\n    }\n    if n < 1048576 {\n      \
    \  return 37;\n    }\n    if n < 2097152 {\n        return 39;\n    }\n    if\
    \ n < 4194304 {\n        return 41;\n    }\n    if n < 8388608 {\n        return\
    \ 43;\n    }\n    if n < 16777216 {\n        return 45;\n    }\n    if n < 33554432\
    \ {\n        return 47;\n    }\n    if n < 67108864 {\n        return 49;\n  \
    \  }\n    if n < 134217728 {\n        return 51;\n    }\n    if n < 268435456\
    \ {\n        return 53;\n    }\n    if n < 536870912 {\n        return 55;\n \
    \   }\n    if n < 1073741824 {\n        return 57;\n    }\n    if n < 2147483648\
    \ {\n        return 59;\n    }\n    if n < 4294967296 {\n        return 61;\n\
    \    }\n    if n < 8589934592 {\n        return 63;\n    }\n    if n < 17179869184\
    \ {\n        return 65;\n    }\n    if n < 34359738368 {\n        return 67;\n\
    \    }\n    if n < 68719476736 {\n        return 69;\n    }\n    if n < 137438953472\
    \ {\n        return 71;\n    }\n    if n < 274877906944 {\n        return 73;\n\
    \    }\n    if n < 549755813888 {\n        return 75;\n    }\n    if n < 1099511627776\
    \ {\n        return 77;\n    }\n    if n < 2199023255552 {\n        return \n\
    }\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpuooi_ehs.rs:149:3\n\
    \    |\n12  | fn prime_fib(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n133 |     if n < 2199023255552 {\n    |\
    \                          - this delimiter might not be properly closed...\n\
    134 |         return \n135 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n149 | }\n    |   ^\n\nerror[E0069]: `return;` in a function\
    \ whose return type is not `()`\n   --> /tmp/tmpuooi_ehs.rs:134:9\n    |\n12 \
    \ | fn prime_fib(n: isize) -> isize {\n    |                           ----- expected\
    \ `isize` because of this return type\n...\n134 |         return \n    |     \
    \    ^^^^^^ return type is not `()`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuooi_ehs.rs:12:27\n\
    \   |\n12 | fn prime_fib(n: isize) -> isize {\n   |    ---------             \
    \ ^^^^^ expected `isize`, found `()`\n   |    |\n   |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0069, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0069`.\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return n;\n \
    \   }\n\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    for\
    \ _ in 0..n {\n        let mut tmp = a;\n        a = b;\n        b = tmp + c;\n\
    \        c = a - b;\n    }\n\n    return b;\n}\n\nfn main() {\n    let candidate\
    \ = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpkpkxwdeu.rs:33:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while c < n {\n        let mut d = a + b;\n        a\
    \ = b;\n        b = d;\n        c += 1;\n    }\n    c\n}\n\nfn main() {\n    let\
    \ candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpmxxp0y1_.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    if n < 2 {\n        return 1;\n \
    \   }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 5;\n    }\n    if n == 4 {\n        return 13;\n    }\n    if n == 5 {\n   \
    \     return 89;\n    }\n    let mut fib: isize = 0;\n    let mut prime: isize\
    \ = 1;\n    for _ in 0..n {\n        fib += prime;\n        prime += 2;\n    }\n\
    \    fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp_40rd2la.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    let mut c = 1;\n    while a < n {\n        let mut temp = a;\n        a =\
    \ b;\n        b = temp + c;\n        c = b - a;\n    }\n    c\n}\n\nfn main()\
    \ {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmp4r4q1j1v.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let mut c = a + b;\n        a = b;\n        b = c;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpwxuk974c.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut a = 1;\n    let mut b = 1;\n\
    \    while a < n {\n        let c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1),\
    \ 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n  \
    \  assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6),\
    \ 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n\
    \    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpga_2kx7q.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748781
- exit_code: 101
  program: "/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfn prime_fib(n: isize) -> isize {\n    let mut fib: isize = 0;\n    let\
    \ mut prime: isize = 2;\n\n    while prime < n {\n        fib = fib + (prime as\
    \ isize);\n        prime = prime + 2;\n    }\n\n    fib\n}\n\nfn main() {\n  \
    \  let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2),\
    \ 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n \
    \   assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7),\
    \ 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n\
    \    assert_eq!(candidate(10), 433494437);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `2`', /tmp/tmpsilaq_ie.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659748782

name: HumanEval_94_skjkasdkd
language: rs
prompt: "/// You are given a vector of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\n/// >>> skjkasdkd(vec![0,\
  \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n/// 10\n\
  /// >>> skjkasdkd(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n\
  /// 25\n/// >>> skjkasdkd(vec![1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
  \ 32, 30, 1, 9, 3])\n/// 13\n/// >>> skjkasdkd(vec![0, 724, 32, 71, 99, 32, 6, 0,\
  \ 5, 91, 83, 0, 5, 6])\n/// 11\n/// >>> skjkasdkd(vec![0, 81, 12, 3, 1, 21])\n///\
  \ 3\n/// >>> skjkasdkd(vec![0, 8, 1, 2, 1, 7])\n/// 7\nfn skjkasdkd(lst: Vec<isize>)\
  \ -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
  \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
  \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
  \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278, 109,\
  \ 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0, 724,\
  \ 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
  \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
  \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
  \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
  }\n"
completions: ["    let mut prime_sum = 0;\n    let mut prime_max = 0;\n    let mut\
    \ prime_max_index = 0;\n    let mut prime_max_value = vec![];\n    let mut prime_max_value_len\
    \ = 0;\n    let mut prime_max_value_len_index = 0;\n    let mut prime_max_value_len_value\
    \ = 0;\n    let mut prime_max_value_len_value_sum = 0;\n    let mut prime_max_value_len_value_sum_len\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_index = 0;\n    let mut\
    \ prime_max_value_len_value_sum_len_value = 0;\n    let mut prime_max_value_len_value_sum_len_value_index\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_value_value = 0;\n    let\
    \ mut prime_max_value_len_value_sum_len_value_value_index = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_value\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_index = 0;\n\
    \    let mut prime_max_value_len_value_sum_len_value_value_value = 0;\n    let\
    \ mut prime_max_value_len_value_sum_len_value_value_index = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_value\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_index = 0;\n\
    \    let mut prime_max_value_len_value_sum_len_value_value_value = 0;\n    let\
    \ mut prime_max_value_len_value_sum_len_value_value_index = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_value\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_index = 0;\n\
    \    let mut prime_max_value_len_value_sum_len_value_value_value = 0;\n    let\
    \ mut prime_max_value_len_value_sum_len_value_value_index = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_value\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_index = 0;\n\
    \    let mut prime_max_value_len_value_sum_len_value_value_value = 0;\n    let\
    \ mut prime_max_value_len_value_sum_len_value_value_index = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_value\
    \ = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_index = 0;\n\
    \    let mut prime_max_value_len_value_sum_len_value_value_value = 0;\n    let\
    \ mut prime_max_value_len_value_sum_len_value_value_index = 0;\n    let mut prime_max_value_len_value_sum_len_value_value_value\
    \ = 0;\n    let mut prime_max_value_len_value_", "    let mut primes = vec![];\n\
    \    let mut sum = 0;\n    for &x in lst {\n        if primes.iter().any(|&x|\
    \ x == x) {\n            continue;\n        }\n        let mut prime: isize =\
    \ 1;\n        for &y in primes.iter() {\n            if x == y {\n           \
    \     continue;\n            }\n            if x % y == 0 {\n                prime\
    \ = y;\n                break;\n            }\n        }\n        if prime > 1\
    \ {\n            primes.push(prime);\n            sum += prime;\n        }\n \
    \   }\n    sum", "    let mut prime_sum = 0;\n    let mut prime_num = lst[0];\n\
    \    let mut prime_found = false;\n    for &n in lst {\n        if n % prime_num\
    \ == 0 {\n            prime_sum += n % 10;\n            prime_found = true;\n\
    \        }\n        prime_num += 1;\n    }\n    if prime_found {\n        prime_sum\n\
    \    } else {\n        prime_sum\n    }", "    let mut prime = vec![true; lst.len()\
    \ + 1];\n    prime[0] = false;\n    for i in 1..lst.len() {\n        if prime[i]\
    \ {\n            for j in 2..lst.len() {\n                if i != j && lst[j]\
    \ % i == 0 {\n                    prime[j] = false;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    let mut sum = 0;\n  \
    \  for i in 1..lst.len() {\n        if prime[i] {\n            sum += lst[i];\n\
    \        }\n    }\n    sum", "    let mut primes = vec![];\n    let mut sum =\
    \ 0;\n    for x in lst {\n        if primes.contains(&x) {\n            continue;\n\
    \        }\n        let mut prime = true;\n        for y in primes.iter() {\n\
    \            if x == y {\n                prime = false;\n                break;\n\
    \            }\n        }\n        if prime {\n            primes.push(x);\n \
    \           sum += x;\n        }\n    }\n    sum", "    let mut prime_sum = 0;\n\
    \    let mut prime_num = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime", "    let mut primes = vec![true;\
    \ lst.len()];\n    let mut sum = 0;\n    for i in lst {\n        if primes[i]\
    \ {\n            sum += i;\n        }\n        for j in 2..i {\n            if\
    \ i % j == 0 {\n                primes[j] = false;\n                break;\n \
    \           }\n        }\n    }\n    sum", "    let mut primes = vec![];\n   \
    \ let mut prime_sum = 0;\n    let mut prime_max = 0;\n    let mut prime_max_index\
    \ = 0;\n    let mut prime_max_digit = 0;\n    let mut prime_max_digit_index =\
    \ 0;\n    let mut prime_max_digit_sum = 0;\n    let mut prime_max_digit_sum_index\
    \ = 0;\n    let mut prime_max_digit_sum_index2 = 0;\n    let mut prime_max_digit_sum_index3\
    \ = 0;\n    let mut prime_max_digit_sum_index4 = 0;\n    let mut prime_max_digit_sum_index5\
    \ = 0;\n    let mut prime_max_digit_sum_index6 = 0;\n    let mut prime_max_digit_sum_index7\
    \ = 0;\n    let mut prime_max_digit_sum_index8 = 0;\n    let mut prime_max_digit_sum_index9\
    \ = 0;\n    let mut prime_max_digit_sum_index10 = 0;\n    let mut prime_max_digit_sum_index11\
    \ = 0;\n    let mut prime_max_digit_sum_index12 = 0;\n    let mut prime_max_digit_sum_index13\
    \ = 0;\n    let mut prime_max_digit_sum_index14 = 0;\n    let mut prime_max_digit_sum_index15\
    \ = 0;\n    let mut prime_max_digit_sum_index16 = 0;\n    let mut prime_max_digit_sum_index17\
    \ = 0;\n    let mut prime_max_digit_sum_index18 = 0;\n    let mut prime_max_digit_sum_index19\
    \ = 0;\n    let mut prime_max_digit_sum_index20 = 0;\n    let mut prime_max_digit_sum_index21\
    \ = 0;\n    let mut prime_max_digit_sum_index22 = 0;\n    let mut prime_max_digit_sum_index23\
    \ = 0;\n    let mut prime_max_digit_sum_index24 = 0;\n    let mut prime_max_digit_sum_index25\
    \ = 0;\n    let mut prime_max_digit_sum_index26 = 0;\n    let mut prime_max_digit_sum_index27\
    \ = 0;\n    let mut prime_max_digit_sum_index28 = 0;\n    let mut prime_max_digit_sum_index29\
    \ = 0;\n    let mut prime_max_digit_sum_index30 = 0;\n    let mut prime_max_digit_sum_index31\
    \ = 0;\n    let mut prime_max_digit_sum_index32 = 0;\n    let mut prime_max_digit_sum_index33\
    \ = 0;\n    let mut prime_max_digit_sum_index34 = 0;\n    let mut prime_max_digit_sum_index35\
    \ = 0;\n    let mut prime_max_digit_sum_index36 = 0;\n    let mut prime_max_digit_sum_index37\
    \ = 0;\n    let mut prime_max_digit_sum_index38", "    let mut max_prime: isize\
    \ = 0;\n    let mut prime_sum: isize = 0;\n    let mut prime_prime: isize = 0;\n\
    \    let mut prime_prime_prime: isize = 0;\n    let mut prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime: isize = 0;\n    let mut\
    \ prime_prime_prime_prime_prime_prime: isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime: isize\
    \ = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime: isize\
    \ = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ isize = 0;\n    let ", "    let mut prime_sum = 0;\n    let mut prime_num =\
    \ vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n\
    \    let mut prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut\
    \ prime_len = vec![];\n    let mut prime_len = vec![];\n    let mut prime_len\
    \ = vec![];\n    let mut prime", "    let mut primes = vec![];\n    let mut primes_len\
    \ = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n\
    \    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut\
    \ primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum\
    \ = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum = vec![];\n\
    \    let mut primes_len = vec![];\n    let mut primes_sum = vec![];\n    let mut\
    \ primes_len = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len\
    \ = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n\
    \    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut\
    \ primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum\
    \ = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum = vec![];\n\
    \    let mut primes_len = vec![];\n    let mut primes_sum = vec![];\n    let mut\
    \ primes_len = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len\
    \ = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n\
    \    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut\
    \ primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum\
    \ = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum = vec![];\n\
    \    let mut primes_len = vec![];\n    let mut primes_sum = vec![];\n    let mut\
    \ primes_len = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len\
    \ = vec![];\n    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n\
    \    let mut primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut\
    \ primes_sum = vec![];\n    let mut primes_len = vec![];\n    let mut primes_sum\
    \ = vec![];\n    let mut ", "    let mut primes = vec![true; lst.len()];\n   \
    \ let mut largest = vec![0; lst.len()];\n    let mut sum = 0;\n    for i in lst\
    \ {\n        if primes[i] {\n            sum += i;\n        }\n        if sum\
    \ > largest {\n            largest = sum;\n        }\n    }\n    largest.iter().cloned().collect()",
  "    let mut primes = vec![true; lst.len()];\n    let mut sum = 0;\n    for i in\
    \ lst {\n        if primes[i] {\n            sum += i;\n        }\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                primes[j] = false;\n\
    \                break;\n            }\n        }\n    }\n    sum", "    let mut\
    \ primes = vec![];\n    let mut sum = 0;\n    for n in lst {\n        if n % 2\
    \ == 0 {\n            sum += n;\n        }\n        for &p in primes {\n     \
    \       if n % p == 0 {\n                sum += p;\n                break;\n \
    \           }\n        }\n    }\n    sum", "    let mut primes = vec![true; lst.len()];\n\
    \    let mut sum = 0;\n    for i in lst {\n        if primes[i] {\n          \
    \  sum += i;\n        }\n        for j in 2..i {\n            if primes[j] {\n\
    \                primes[j] = false;\n            }\n        }\n    }\n    sum",
  "    let mut primes = vec![true; lst.len()];\n    let mut prime_sum = 0;\n    let\
    \ mut prime_max = 0;\n    let mut prime_max_index = 0;\n    let mut prime_max_value\
    \ = -1;\n    let mut prime_max_index2 = 0;\n    let mut prime_max_value2 = -1;\n\
    \    let mut prime_max_index3 = 0;\n    let mut prime_max_value3 = -1;\n    let\
    \ mut prime_max_index4 = 0;\n    let mut prime_max_value4 = -1;\n    let mut prime_max_index5\
    \ = 0;\n    let mut prime_max_value5 = -1;\n    let mut prime_max_index6 = 0;\n\
    \    let mut prime_max_value6 = -1;\n    let mut prime_max_index7 = 0;\n    let\
    \ mut prime_max_value7 = -1;\n    let mut prime_max_index8 = 0;\n    let mut prime_max_value8\
    \ = -1;\n    let mut prime_max_index9 = 0;\n    let mut prime_max_value9 = -1;\n\
    \    let mut prime_max_index10 = 0;\n    let mut prime_max_value10 = -1;\n   \
    \ let mut prime_max_index11 = 0;\n    let mut prime_max_value11 = -1;\n    let\
    \ mut prime_max_index12 = 0;\n    let mut prime_max_value12 = -1;\n    let mut\
    \ prime_max_index13 = 0;\n    let mut prime_max_value13 = -1;\n    let mut prime_max_index14\
    \ = 0;\n    let mut prime_max_value14 = -1;\n    let mut prime_max_index15 = 0;\n\
    \    let mut prime_max_value15 = -1;\n    let mut prime_max_index16 = 0;\n   \
    \ let mut prime_max_value16 = -1;\n    let mut prime_max_index17 = 0;\n    let\
    \ mut prime_max_value17 = -1;\n    let mut prime_max_index18 = 0;\n    let mut\
    \ prime_max_value18 = -1;\n    let mut prime_max_index19 = 0;\n    let mut prime_max_value19\
    \ = -1;\n    let mut prime_max_index20 = 0;\n    let mut prime_max_value20 = -1;\n\
    \    let mut prime_max_index21 = 0;\n    let mut prime_max_value21 = -1;\n   \
    \ let mut prime_max_index22 = 0;\n    let mut prime_max_value22 = -1;\n    let\
    \ mut prime_max_index23 = 0;\n    let mut prime_max_value23 = -1;\n    let mut\
    \ prime_max_index24 = 0;\n    let mut prime_max_value", "    let mut primes =\
    \ vec![true; lst.len()];\n    let mut largest = vec![0];\n    for i in 0..lst.len()\
    \ {\n        if primes[i] {\n            let mut sum = 0;\n            for j in\
    \ 0..i {\n                if primes[j] {\n                    sum += lst[j];\n\
    \                }\n            }\n            if sum > largest[0] {\n       \
    \         largest[0] = sum;\n            }\n        }\n    }\n    largest[0]",
  "    let mut primes = vec![true; lst.len()];\n    let mut prime_sum = 0;\n    let\
    \ mut prime_max = 0;\n    let mut prime_max_index = 0;\n    let mut prime_max_value\
    \ = -1;\n    let mut prime_max_index2 = 0;\n    let mut prime_max_value2 = -1;\n\
    \    let mut prime_max_index3 = 0;\n    let mut prime_max_value3 = -1;\n    let\
    \ mut prime_max_index4 = 0;\n    let mut prime_max_value4 = -1;\n    let mut prime_max_index5\
    \ = 0;\n    let mut prime_max_value5 = -1;\n    let mut prime_max_index6 = 0;\n\
    \    let mut prime_max_value6 = -1;\n    let mut prime_max_index7 = 0;\n    let\
    \ mut prime_max_value7 = -1;\n    let mut prime_max_index8 = 0;\n    let mut prime_max_value8\
    \ = -1;\n    let mut prime_max_index9 = 0;\n    let mut prime_max_value9 = -1;\n\
    \    let mut prime_max_index10 = 0;\n    let mut prime_max_value10 = -1;\n   \
    \ let mut prime_max_index11 = 0;\n    let mut prime_max_value11 = -1;\n    let\
    \ mut prime_max_index12 = 0;\n    let mut prime_max_value12 = -1;\n    let mut\
    \ prime_max_index13 = 0;\n    let mut prime_max_value13 = -1;\n    let mut prime_max_index14\
    \ = 0;\n    let mut prime_max_value14 = -1;\n    let mut prime_max_index15 = 0;\n\
    \    let mut prime_max_value15 = -1;\n    let mut prime_max_index16 = 0;\n   \
    \ let mut prime_max_value16 = -1;\n    let mut prime_max_index17 = 0;\n    let\
    \ mut prime_max_value17 = -1;\n    let mut prime_max_index18 = 0;\n    let mut\
    \ prime_max_value18 = -1;\n    let mut prime_max_index19 = 0;\n    let mut prime_max_value19\
    \ = -1;\n    let mut prime_max_index20 = 0;\n    let mut prime_max_value20 = -1;\n\
    \    let mut prime_max_index21 = 0;\n    let mut prime_max_value21 = -1;\n   \
    \ let mut prime_max_index22 = 0;\n    let mut prime_max_value22 = -1;\n    let\
    \ mut prime_max_index23 = 0;\n    let mut prime_max_value23 = -1;\n    let mut\
    \ prime_max_index24 = 0;\n    let mut prime_max_value", "    let mut primes =\
    \ vec![];\n    let mut sum = 0;\n    for n in lst {\n        if n % 2 == 0 {\n\
    \            sum += n;\n        }\n        for &p in primes {\n            if\
    \ n % p == 0 {\n                sum += n / p;\n                break;\n      \
    \      }\n        }\n        if sum > 100 {\n            break;\n        }\n \
    \       primes.push(n as isize);\n    }\n    sum", "    let mut primes = vec![];\n\
    \    let mut largest = vec![];\n    let mut sum = 0;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut prime_found53\
    \ = false;\n    let mu"]
stop_tokens:
- "\n}"

name: HumanEval_17_parse_music
language: rs
prompt: "/// Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n/// Your task is to parse this string and return vector of integers\
  \ corresponding to how many beats does each\n/// not last.\n/// Here is a legend:\n\
  /// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts two beats\n\
  /// '.|' - quater note, lasts one beat\n/// >>> parse_music(String::from(\"o o|\
  \ .| o| o| .| .| .| .| o o\"))\n/// vec![4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfn parse_music(music_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_music;\n    assert_eq!(candidate(String::from(\"\
  \")), Vec::<isize>::new());\n    assert_eq!(candidate(String::from(\"o o o o\")),\
  \ vec![4, 4, 4, 4]);\n    assert_eq!(candidate(String::from(\".| .| .| .|\")), vec![1,\
  \ 1, 1, 1]);\n    assert_eq!(candidate(String::from(\"o| o| .| .| o o o o\")), vec![2,\
  \ 2, 1, 1, 4, 4, 4, 4]);\n    assert_eq!(candidate(String::from(\"o| .| o| .| o\
  \ o| o o|\")), vec![2, 1, 2, 1, 4, 2, 4, 2]);\n}\n"
completions: ["    let mut beats = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    for c in music_string.chars() {\n   \
    \     if c.is_ascii() {\n            current_note += c.to_string();\n        }\
    \ else {\n            if current_note.len() == 1 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n            current_note += c.to_string();\n        }\n    }\n\
    \    beats.push(current_beat);\n    current_beat = 0;\n    current_note.len()",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_index = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_value\
    \ = 0;\n    let mut current_note_length_value_index = 0;\n    let mut current_note_length_value_value\
    \ = 0;\n    let mut current_note_length_value_value_index = 0;\n    let mut current_note_length_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave: isize\
    \ = 0;\n    let mut current_note_len: isize = 0;\n    let mut current_note_octave:\
    \ isize = 0;\n    let mut current_note_octave_len: isize = 0;\n    let mut current_note_octave_octave:\
    \ isize = 0;\n    let mut current_note_octave_octave_len: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave: isize = 0;\n    let mut current_note_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave: isize = 0;\n\
    \    let mut current_note_octave_octave_octave_octave_len: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave: isize = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave_octave_len: isize = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave_octave_octave: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_len: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_octave_len: isize = 0;\n\
    \    let mut current_note_octave_octave_octave_octave_octave_octave_len: isize\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_type = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = ", "    let mut beats_vec: Vec<isize> = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string {\n        if c == 'o' {\n            if current_beat\
    \ > 0 {\n                beats_vec.push(current_beat);\n                current_beat\
    \ = 0;\n            }\n            current_note = String::new();\n        } else\
    \ if c == '|' {\n            if current_note.is_empty() {\n                println!(\"\
    Invalid music string\");\n                break;\n            }\n            beats_vec.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '.' {\n            if current_note.is_empty() {\n      \
    \          println!(\"Invalid music string\");\n                break;\n     \
    \       }\n            beats_vec.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        } else {\n        \
    \    current_note.push(c);\n            current_beat += 1;\n        }\n    }\n\
    \    if current_beat > 0 {\n        beats_vec.push(current_beat);\n    }\n   \
    \ beats_vec", "    let mut beats = vec![];\n    let mut current_beat = 0;\n  \
    \  let mut current_note = String::new();\n    for c in music_string.chars() {\n\
    \        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            current_note += c.to_ascii_lowercase();\n        }\n    }\n \
    \   beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length = 0;\n    let\
    \ mut current_note_length_to_beat_with_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat = 0;\n   \
    \ let mut last_beat_index = 0;\n    let mut last_beat_index2 = 0;\n    let mut\
    \ last_beat_index3 = 0;\n    let mut last_beat_index4 = 0;\n    let mut last_beat_index5\
    \ = 0;\n    let mut last_beat_index6 = 0;\n    let mut last_beat_index7 = 0;\n\
    \    let mut last_beat_index8 = 0;\n    let mut last_beat_index9 = 0;\n    let\
    \ mut last_beat_index10 = 0;\n    let mut last_beat_index11 = 0;\n    let mut\
    \ last_beat_index12 = 0;\n    let mut last_beat_index13 = 0;\n    let mut last_beat_index14\
    \ = 0;\n    let mut last_beat_index15 = 0;\n    let mut last_beat_index16 = 0;\n\
    \    let mut last_beat_index17 = 0;\n    let mut last_beat_index18 = 0;\n    let\
    \ mut last_beat_index19 = 0;\n    let mut last_beat_index20 = 0;\n    let mut\
    \ last_beat_index21 = 0;\n    let mut last_beat_index22 = 0;\n    let mut last_beat_index23\
    \ = 0;\n    let mut last_beat_index24 = 0;\n    let mut last_beat_index25 = 0;\n\
    \    let mut last_beat_index26 = 0;\n    let mut last_beat_index27 = 0;\n    let\
    \ mut last_beat_index28 = 0;\n    let mut last_beat_index29 = 0;\n    let mut\
    \ last_beat_index30 = 0;\n    let mut last_beat_index31 = 0;\n    let mut last_beat_index32\
    \ = 0;\n    let mut last_beat_index33 = 0;\n    let mut last_beat_index34 = 0;\n\
    \    let mut last_beat_index35 = 0;\n    let mut last_beat_index36 = 0;\n    let\
    \ mut last_beat_index37 = 0;\n    let mut last_beat_index38 = 0;\n    let mut\
    \ last_beat_index39 = 0;\n    let mut last_beat_index40 = 0;\n    let mut last_beat_index41\
    \ = 0;\n    let mut last_beat_index42 = 0;\n    let mut last_beat_index43 = 0;\n\
    \    let mut last_beat_index44 = 0;\n    let mut last_beat_index45 = 0;\n    let\
    \ mut last_beat_index46 = 0;\n    let mut last_beat_index47 = 0;\n    let mut\
    \ last_beat_index48 = 0;\n    let mut last_beat_index49 = 0;\n    let mut last_beat_index50\
    \ = 0;\n    let mut last_beat_index51 = 0;\n    let mut last_beat", "    let mut\
    \ beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n    let mut ", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.clone();\n    let mut current_beat = 0;\n  \
    \  while current_note.is_not_empty() {\n        let note = current_note.clone();\n\
    \        let beat = current_beat;\n        if note == \"o\" {\n            beats.push(beat);\n\
    \            current_beat += 4;\n        } else if note == \"o|\" {\n        \
    \    beats.push(beat);\n            current_beat += 2;\n        } else if note\
    \ == \".|\" {\n            beats.push(beat);\n            current_beat += 1;\n\
    \        } else {\n            beats.push(beat);\n            current_beat +=\
    \ 1;\n        }\n        current_note.pop();\n    }\n    beats", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_beats:\
    \ isize = 0;\n    while notes.len() > 0 {\n        let note = notes.remove(0);\n\
    \        note = note.chars().next().unwrap();\n        if note == 'o' {\n    \
    \        beats.push(current_beats);\n            current_beats += 4;\n       \
    \     current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beat", "    let mut beats: Vec<isize> = Vec::new();\n   \
    \ let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n \
    \   let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_note_length += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let ", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::from(\"\"\
    );\n    let mut current_beat = 0;\n    let mut current_octave = 0;\n    let mut\
    \ current_length = 0;\n    let mut current_length_index = 0;\n    let mut current_length_index2\
    \ = 0;\n    let mut current_length_index3 = 0;\n    let mut current_length_index4\
    \ = 0;\n    let mut current_length_index5 = 0;\n    let mut current_length_index6\
    \ = 0;\n    let mut current_length_index7 = 0;\n    let mut current_length_index8\
    \ = 0;\n    let mut current_length_index9 = 0;\n    let mut current_length_index10\
    \ = 0;\n    let mut current_length_index11 = 0;\n    let mut current_length_index12\
    \ = 0;\n    let mut current_length_index13 = 0;\n    let mut current_length_index14\
    \ = 0;\n    let mut current_length_index15 = 0;\n    let mut current_length_index16\
    \ = 0;\n    let mut current_length_index17 = 0;\n    let mut current_length_index18\
    \ = 0;\n    let mut current_length_index19 = 0;\n    let mut current_length_index20\
    \ = 0;\n    let mut current_length_index21 = 0;\n    let mut current_length_index22\
    \ = 0;\n    let mut current_length_index23 = 0;\n    let mut current_length_index24\
    \ = 0;\n    let mut current_length_index25 = 0;\n    let mut current_length_index26\
    \ = 0;\n    let mut current_length_index27 = 0;\n    let mut current_length_index28\
    \ = 0;\n    let mut current_length_index29 = 0;\n    let mut current_length_index30\
    \ = 0;\n    let mut current_length_index31 = 0;\n    let mut current_length_index32\
    \ = 0;\n    let mut current_length_index33 = 0;\n    let mut current_length_index34\
    \ = 0;\n    let mut current_length_index35 = 0;\n    let mut current_length_index36\
    \ = 0;\n    let mut current_length_index37 = 0;\n    let mut current_length_index38\
    \ = 0;\n    let mut current_length_index39 = 0;\n    let mut current_length_index40\
    \ = 0;\n    let mut current_length_index41 = 0;\n    let mut current_length_index42\
    \ = 0;\n    let mut current_length_index43 = 0;\n    let mut current_length_index44\
    \ = 0;\n    let mut current_length_index45 = 0;\n    let mut current_length_index46\
    \ = 0;\n    let mut current_length_index47 = 0;\n    let mut current_length_index48\
    \ = 0;\n    let mut current_length_index49 = 0;\n    let mut current_length_index50\
    \ = 0;\n    let mut current_", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note_length = 0;\n    for\
    \ c in music_string.chars() {\n        if c == 'o' {\n            if current_note_length\
    \ == 0 {\n                notes.push(current_note);\n                current_note\
    \ = String::new();\n                current_beat = 0;\n                current_note_length\
    \ = 0;\n            }\n            current_note_length += 1;\n        } else if\
    \ c == '|' {\n            if current_note_length == 0 {\n                notes.push(current_note);\n\
    \                current_note = String::new();\n                current_beat =\
    \ 0;\n                current_note_length = 0;\n            }\n            current_note_length\
    \ += 1;\n        } else if c == ' ' {\n            if current_note_length == 0\
    \ {\n                notes.push(current_note);\n                current_note =\
    \ String::new();\n                current_beat = 0;\n                current_note_length\
    \ = 0;\n            }\n            current_note_length += 1;\n        } else {\n\
    \            if current_note_length == 0 {\n                notes.push(current_note);\n\
    \                current_note = String::new();\n                current_beat =\
    \ 0;\n                current_note_length = 0;\n            }\n            current_note_length\
    \ += 1;\n            current_note.push_str(&c);\n        }\n    }\n    for note\
    \ in notes {\n        beats.push(current_beat + 4);\n    }\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&'static str> =\
    \ vec![];\n    let mut last_note = String::new();\n    let mut last_beat = 0;\n\
    \    let mut last_beat_size = 0;\n    let mut last_beat_length = 0;\n    let mut\
    \ last_beat_length_size = 0;\n    let mut last_beat_length_length = 0;\n    let\
    \ mut last_beat_length_length_size = 0;\n    let mut last_beat_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_size = 0;\n    let mut\
    \ last_beat_length_length_length_length_length = 0;\n    let mut last_beat_length_length_length_length_length_size\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_size\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_length = 0;\n\
    \    let mut last_beat_length_length_length_length_length_size = 0;\n    let mut\
    \ last_beat_length_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mu", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            if current_note.is_empty() {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = String::new();\n        }\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length = 0;\n    let\
    \ mut current_note_length_to_beat_length_to_beat = String::new();\n    let mut\
    \ current_note_length_to_beat_length_to_beat_length = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = String::new();\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_be",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_note = String::new();\n\
    \    let mut current_beat = 0;\n    let mut current_beats_length = 0;\n    for\
    \ c in music_string.chars() {\n        if c.is_whitespace() {\n            continue;\n\
    \        }\n        if c.is_ascii_digit() {\n            current_note = c.to_string();\n\
    \            current_beat = 0;\n            current_beats_length = 0;\n      \
    \  } else {\n            if current_note.is_empty() {\n                continue;\n\
    \            }\n            if c.is_ascii_letter() {\n                if current_beat\
    \ == 0 {\n                    current_beats_length += 1;\n                } else\
    \ {\n                    current_beats_length += 2;\n                }\n     \
    \       }\n            current_beat += 1;\n            beats.push(current_beats_length);\n\
    \            current_beats_length = 0;\n            current_note = String::new();\n\
    \        }\n    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut notes: Vec<&str> = vec![];\n    let mut current_note = String::from(\"\
    \");\n    let mut current_beat = 0;\n    let mut current_octave = 0;\n    let\
    \ mut current_length = 0;\n    let mut current_length_index = 0;\n    let mut\
    \ current_length_index2 = 0;\n    let mut current_length_index3 = 0;\n    let\
    \ mut current_length_index4 = 0;\n    let mut current_length_index5 = 0;\n   \
    \ let mut current_length_index6 = 0;\n    let mut current_length_index7 = 0;\n\
    \    let mut current_length_index8 = 0;\n    let mut current_length_index9 = 0;\n\
    \    let mut current_length_index10 = 0;\n    let mut current_length_index11 =\
    \ 0;\n    let mut current_length_index12 = 0;\n    let mut current_length_index13\
    \ = 0;\n    let mut current_length_index14 = 0;\n    let mut current_length_index15\
    \ = 0;\n    let mut current_length_index16 = 0;\n    let mut current_length_index17\
    \ = 0;\n    let mut current_length_index18 = 0;\n    let mut current_length_index19\
    \ = 0;\n    let mut current_length_index20 = 0;\n    let mut current_length_index21\
    \ = 0;\n    let mut current_length_index22 = 0;\n    let mut current_length_index23\
    \ = 0;\n    let mut current_length_index24 = 0;\n    let mut current_length_index25\
    \ = 0;\n    let mut current_length_index26 = 0;\n    let mut current_length_index27\
    \ = 0;\n    let mut current_length_index28 = 0;\n    let mut current_length_index29\
    \ = 0;\n    let mut current_length_index30 = 0;\n    let mut current_length_index31\
    \ = 0;\n    let mut current_length_index32 = 0;\n    let mut current_length_index33\
    \ = 0;\n    let mut current_length_index34 = 0;\n    let mut current_length_index35\
    \ = 0;\n    let mut current_length_index36 = 0;\n    let mut current_length_index37\
    \ = 0;\n    let mut current_length_index38 = 0;\n    let mut current_length_index39\
    \ = 0;\n    let mut current_length_index40 = 0;\n    let mut current_length_index41\
    \ = 1;\n    let mut current_length_index42 = 1;\n    let mut current_length_index43\
    \ = 1;\n    let mut current_length_index44 = 1;\n    let mut current_length_index45\
    \ = 1;\n    let mut current_length_index46 = 1;\n    let mut current_length_index47\
    \ = 1;\n    let mut current_length_index48 = 1;\n    let mut current_length_index49\
    \ = 1;\n    let mut current_length_index50 = 1;\n    let mu", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_length = 0;\n    let mut current_note_index = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let\
    \ mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut\
    \ current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6\
    \ = 0;\n    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n\
    \    let mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n   \
    \ let mut current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let\
    \ mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n    let mut\
    \ current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17\
    \ = 0;\n    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 =\
    \ 0;\n    let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n\
    \    let mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n  \
    \  let mut current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let\
    \ mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n    let mut\
    \ current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30\
    \ = 0;\n    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 =\
    \ 0;\n    let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n\
    \    let mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n  \
    \  let mut current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let\
    \ mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n    let mut\
    \ current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43\
    \ = 0;\n    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 =\
    \ 0;\n    let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n\
    \    let mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n  \
    \  let mut current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let\
    \ mut current_note_oct52 = 0;\n    let mut current_note_oct53", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note += c.to_ascii_lowercase();\n                current_note_length\
    \ += 1;\n            } else if c.to_ascii_lowercase() == '|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 0;\n\
    \            } else if c.to_ascii_lowercase() == '.' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else {\n            \
    \    panic!(\"Unknown note in music string\");\n            }\n        } else\
    \ {\n            current_note += c.to_ascii_lowercase();\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n\
    \    current_note.into_owned();\n    current_note_length", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_beats_length = 0;\n    while current_note != \"\"\
    \ {\n        if current_note == \"o\" {\n            beats.push(current_beat);\n\
    \            current_beats_length += 4;\n            current_beat = 0;\n     \
    \       current_note = notes.next();\n        } else if current_note == \"o|\"\
    \ {\n            beats.push(current_beat);\n            current_beats_length +=\
    \ 2;\n            current_beat = 0;\n            current_note = notes.next();\n\
    \        } else if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beats_length += 1;\n            current_beat = 0;\n     \
    \       current_note = notes.next();\n        } else {\n            current_beat\
    \ += 1;\n            current_note = notes.next();\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beats_length += 1;\n    current_beat = 0;\n    beats", "    let mut\
    \ beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    for\
    \ c in music_string {\n        if c == 'o' {\n            if current_note.len()\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  break;\n            }\n            beats.push(current_beat + 4);\n        \
    \    current_beat = 0;\n            current_note = String::new();\n          \
    \  current_note_length = String::new();\n        } else if c == 'o|' {\n     \
    \       if current_note.len() == 0 {\n                println!(\"Invalid music\
    \ string\");\n                break;\n            }\n            beats.push(current_beat\
    \ + 2);\n            current_beat = 0;\n            current_note = String::new();\n\
    \            current_note_length = String::new();\n        } else if c == '.|'\
    \ {\n            if current_note.len() == 0 {\n                println!(\"Invalid\
    \ music string\");\n                break;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \          current_note_length = String::new();\n        } else {\n          \
    \  current_note.push(c);\n            current_note_length.push(c);\n        }\n\
    \    }\n    beats.push(current_beat + 4);\n    beats", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    for c in music_string {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                if current_note_len\
    \ == 0 {\n                    current_note_len = 4;\n                    current_note\
    \ = String::from(\"o\");\n                } else {\n                    current_note_len\
    \ += 1;\n                }\n            } else if c.to_ascii_lowercase() == 'o|'\
    \ {\n                if current_note_len == 0 {\n                    current_note_len\
    \ = 2;\n                    current_note = String::from(\"o|\");\n           \
    \     } else {\n                    current_note_len += 1;\n                }\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                if current_note_len\
    \ == 0 {\n                    current_note_len = 1;\n                    current_note\
    \ = String::from(\".|\");\n                } else {\n                    current_note_len\
    \ += 1;\n                }\n            } else {\n                println!(\"\
    unknown note {}\", c);\n            }\n        } else {\n            println!(\"\
    unknown character {}\", c);\n        }\n        if current_note_len == 0 {\n \
    \           beats.push(current_beat);\n            current_beat = 0;\n       \
    \     current_note_len = 0;\n            current_note = String::new();\n     \
    \   } else {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_index = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_value = 0;\n    let mut current_note_length_value_index\
    \ = 0;\n    let mut current_note_length_value_value = 0;\n    let mut current_note_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let ", "    let mut beats: Vec<isize> = vec![];\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.first().unwrap();\n    let mut current_beat = 0;\n    let mut current_beat_length\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length = 0;\n    let mut current_note_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length = 0;\n \
    \   let mut current_note_length_to_beat_length_to_beat_length_to_beat = 0;\n \
    \   let mut current_note_length_to_beat_length_to_beat_length_to_beat_length =\
    \ 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length",
  "    let mut beats = vec![];\n    let mut notes = music_string.split_whitespace();\n\
    \    let mut current_note = notes.next().unwrap();\n    let mut current_beat =\
    \ 0;\n    while let Some(note) = notes.next() {\n        if note != current_note\
    \ {\n            beats.push(current_beat);\n            current_beat = 0;\n  \
    \          current_note = note;\n        }\n        current_beat += 1;\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_note = String::from(\"\");\n    let mut current_beat = 0;\n\
    \    let mut current_octave = 0;\n    let mut current_length = 0;\n\n    for c\
    \ in music_string.chars() {\n        match c {\n            'o' => {\n       \
    \         beats.push(current_beat);\n                current_beat = 0;\n     \
    \           current_length += 1;\n                current_note += \".\";\n   \
    \         }\n            '|' => {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_length += 1;\n   \
    \             current_note += \"|\";\n            }\n            '.' => {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_length += 1;\n                current_note += \"o\";\n\
    \            }\n            _ => {\n                current_beat += 1;\n     \
    \           current_length += 1;\n                current_note += c.to_string();\n\
    \            }\n        }\n    }\n    beats.push(current_beat);\n    current_length\
    \ += 1;\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut\
    \ current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_", "    let mut beats = vec![];\n    let mut current_beat =\
    \ 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n         \
    \   if current_note_len == 0 {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_note = String::new();\n \
    \           current_note_len = 0;\n        } else if c == '|' {\n            if\
    \ current_note_len == 0 {\n                println!(\"Invalid music string\");\n\
    \                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_note_len += 1;\n        }\
    \ else if c == '.' {\n            if current_note_len != 0 {\n               \
    \ println!(\"Invalid music string\");\n                return beats;\n       \
    \     }\n            current_beat += 1;\n            current_note = String::new();\n\
    \            current_note_len = 0;\n        } else {\n            current_note.push(c);\n\
    \            current_note_len = c.len_utf8();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    for c in music_string.chars() {\n        if c == 'o' {\n            if current_note\
    \ != 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = 0;\n                current_note_length\
    \ = 0;\n            }\n            current_note = 1;\n            current_note_length\
    \ = 4;\n        } else if c == '|' {\n            if current_note != 0 {\n   \
    \             beats.push(current_beat);\n                current_beat = 0;\n \
    \               current_note = 0;\n                current_note_length = 0;\n\
    \            }\n            current_note = 2;\n            current_note_length\
    \ = 2;\n        } else if c == '.' {\n            if current_note != 0 {\n   \
    \             beats.push(current_beat);\n                current_beat = 0;\n \
    \               current_note = 0;\n                current_note_length = 0;\n\
    \            }\n            current_note = 3;\n            current_note_length\
    \ = 1;\n        } else {\n            current_note += 1;\n            current_note_length\
    \ += 1;\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat = 0;\n    current_note = 0;\n    current_note_length = 0;\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.first().unwrap();\n    let mut current_beat = 0;\n    let mut current_note_count\
    \ = 0;\n    let mut current_note_length = 0;\n    while current_note != \"\" {\n\
    \        if current_note == \"o\" {\n            current_note_count += 4;\n  \
    \          current_note_length = 4;\n        } else if current_note == \"o|\"\
    \ {\n            current_note_count += 2;\n            current_note_length = 2;\n\
    \        } else if current_note == \".|\" {\n            current_note_count +=\
    \ 1;\n            current_note_length = 1;\n        } else {\n            assert!(current_note\
    \ != \".|\");\n            current_note_count += 1;\n            current_note_length\
    \ = 1;\n        }\n        beats.push(current_beat);\n        current_beat = 0;\n\
    \        current_note = notes.next();\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut current_note_len = music_string.len();\n    let mut current_note_char\
    \ = String::new();\n    let mut current_note_char_len = music_string.len();\n\
    \    let mut current_note_char_pos = 0;\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut current_note_char_pos = music_string.len();\n\
    \    let mut current_note_char_pos = music_string.len();\n    let mut current_note_char_pos\
    \ = music_string.len();\n    let mut ", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    for c\
    \ in music_string.chars() {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '|' {\n            current_beat = current_beat + 1;\n  \
    \          current_note.push(c);\n        } else if c == '.' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else {\n            current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_note = notes.first().unwrap();\n\
    \    let mut current_beat = 0;\n    let mut current_note_count = 0;\n    for note\
    \ in notes {\n        if note == current_note {\n            current_note_count\
    \ = current_note_count + 1;\n        } else {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note_count = 1;\n        \
    \    current_note = note;\n        }\n        current_beat = current_beat + 1;\n\
    \    }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n    for c in music_string.chars() {\n        if\
    \ c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \       current_note = String::new();\n                current_octave = 0;\n \
    \           } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_octave\
    \ = 2;\n            } else {\n                current_note.push(c);\n        \
    \    }\n        } else {\n            current_note.push(c);\n        }\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n   \
    \ let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == 'o|' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n                current_note_length = String::new();\n   \
    \         } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n                current_note_length\
    \ = String::new();\n            } else {\n                current_note.push(c);\n\
    \                current_note_length.push(c);\n            }\n        } else {\n\
    \            if current_note.is_empty() {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ let note = current_note.to_ascii_lowercase();\n            let note_length =\
    \ current_note_length.to_ascii_lowercase();\n            if note == \"o\" {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n                current_note_length = String::new();\n   \
    \         } else if note == \"o|\" {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n                current_note_length\
    \ = String::new();\n            } else if note == \".|\" {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n                current_note_length\
    \ = String::new();\n            } else {\n                current_note.push(c);\n\
    \                current_note_length.push(c);\n            }\n        }\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        } else {\n            if current_note.is_empty() {\n                panic!(\"\
    Music string contains non-ASCII character\");\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats_vec:\
    \ Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string {\n        if c == 'o' {\n     \
    \       if current_beat == 0 {\n                current_beat = 4;\n          \
    \  }\n            current_note = String::new();\n            current_note.push_str(&c.to_string());\n\
    \        } else {\n            if current_beat == 0 {\n                current_beat\
    \ = 1;\n            }\n            if current_beat == 1 {\n                current_note.push_str(&c.to_string());\n\
    \            } else {\n                beats_vec.push(current_beat);\n       \
    \         current_beat = 1;\n                current_note.push_str(&c.to_string());\n\
    \            }\n        }\n    }\n    beats_vec.push(current_beat);\n    beats_vec",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_length",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string\
    \ {\n        if c == 'o' {\n            if current_note != String::new() {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            }\n            current_note_length\
    \ = 0;\n        } else if c == '|' {\n            if current_note != String::new()\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n                current_note = String::new();\n            }\n         \
    \   current_note_length = 1;\n        } else if c == '.' {\n            if current_note\
    \ != String::new() {\n                beats.push(current_beat);\n            \
    \    current_beat = 0;\n                current_note = String::new();\n      \
    \      }\n            current_note_length = 2;\n        } else {\n           \
    \ current_note.push(c);\n            current_note_length += 1;\n        }\n  \
    \      current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats", " \
    \   let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().map(|c| match\
    \ c {\n        'o' => 4,\n        'o|' => 2,\n        '.|' => 1,\n        _ =>\
    \ 0,\n    });\n    let mut last_note = notes.last().unwrap();\n    let mut last_beat\
    \ = 0;\n    while notes.len() > 0 {\n        let mut beat = 0;\n        let mut\
    \ note = notes.last().unwrap();\n        while note != last_note {\n         \
    \   beat += 1;\n            last_beat = beat;\n            last_note = note;\n\
    \            note = notes.last().unwrap();\n        }\n        beats.push(beat);\n\
    \        notes = notes.iter().skip(1).collect();\n    }\n    beats", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o');\n    for note in notes {\n        let mut beat = 0;\n \
    \       let mut last_note = note.1;\n        while note != last_note {\n     \
    \       beat += 1;\n            last_note = note.1;\n            note = note.2;\n\
    \        }\n        beats.push(beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave: isize = 0;\n    let mut current_note_length:\
    \ isize = 0;\n    let mut current_note_length_index: usize = 0;\n    let mut current_note_length_index2:\
    \ usize = 0;\n    let mut current_note_length_index3: usize = 0;\n    let mut\
    \ current_note_length_index4: usize = 0;\n    let mut current_note_length_index5:\
    \ usize = 0;\n    let mut current_note_length_index6: usize = 0;\n    let mut\
    \ current_note_length_index7: usize = 0;\n    let mut current_note_length_index8:\
    \ usize = 0;\n    let mut current_note_length_index9: usize = 0;\n    let mut\
    \ current_note_length_index10: usize = 0;\n    let mut current_note_length_index11:\
    \ usize = 0;\n    let mut current_note_length_index12: usize = 0;\n    let mut\
    \ current_note_length_index13: usize = 0;\n    let mut current_note_length_index14:\
    \ usize = 0;\n    let mut current_note_length_index15: usize = 0;\n    let mut\
    \ current_note_length_index16: usize = 0;\n    let mut current_note_length_index17:\
    \ usize = 0;\n    let mut current_note_length_index18: usize = 0;\n    let mut\
    \ current_note_length_index19: usize = 0;\n    let mut current_note_length_index20:\
    \ usize = 0;\n    let mut current_note_length_index21: usize = 0;\n    let mut\
    \ current_note_length_index22: usize = 0;\n    let mut current_note_length_index23:\
    \ usize = 0;\n    let mut current_note_length_index24: usize = 0;\n    let mut\
    \ current_note_length_index25: usize = 0;\n    let mut current_note_length_index26:\
    \ usize = 0;\n    let mut current_note_length_index27: usize = 0;\n    let mut\
    \ current_note_length_index28: usize = 0;\n    let mut current_note_length_index29:\
    \ usize = 0;\n    let mut current_note_length_index30: usize = 0;\n    let mut\
    \ current_note_length_index31: usize = 0;\n    let mut current_note_length_index32:\
    \ usize = 0;\n    let mut current_note_length_index33: usize = 0;\n    let mut\
    \ current_note_length_index34: usize = 0;\n    let mut current_note_length_index35:\
    \ usize = 0;\n    let mut current_", "    let mut beats = Vec::new();\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n", "    let mut beats: Vec<isize> = Vec::new();\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_octlen = 0;\n\
    \    let mut current_note_octoctlen = 0;\n    let mut current_note_octoctlen2\
    \ = 0;\n    let mut current_note_octlen3 = 0;\n    let mut current_note_octlen4\
    \ = 0;\n    let mut current_note_octlen5 = 0;\n    let mut current_note_octlen6\
    \ = 0;\n    let mut current_note_octlen7 = 0;\n    let mut current_note_octlen8\
    \ = 0;\n    let mut current_note_octlen9 = 0;\n    let mut current_note_octlen10\
    \ = 0;\n    let mut current_note_octlen11 = 0;\n    let mut current_note_octlen12\
    \ = 0;\n    let mut current_note_octlen13 = 0;\n    let mut current_note_octlen14\
    \ = 0;\n    let mut current_note_octlen15 = 0;\n    let mut current_note_octlen16\
    \ = 0;\n    let mut current_note_octlen17 = 0;\n    let mut current_note_octlen18\
    \ = 0;\n    let mut current_note_octlen19 = 0;\n    let mut current_note_octlen20\
    \ = 0;\n    let mut current_note_octlen21 = 0;\n    let mut current_note_octlen22\
    \ = 0;\n    let mut current_note_octlen23 = 0;\n    let mut current_note_octlen24\
    \ = 0;\n    let mut current_note_octlen25 = 0;\n    let mut current_note_octlen26\
    \ = 0;\n    let mut current_note_octlen27 = 0;\n    let mut current_note_octlen28\
    \ = 0;\n    let mut current_note_octlen29 = 0;\n    let mut current_note_octlen30\
    \ = 0;\n    let mut current_note_octlen31 = 0;\n    let mut current_note_octlen32\
    \ = 0;\n    let mut current_note_octlen33 = 0;\n    let mut current_note_octlen34\
    \ = 0;\n    let mut current_note_octlen35 = 0;\n    let mut current_note_octlen36\
    \ = 0;\n    let mut current_note_octlen37 = 0;\n    let mut current_note_octlen38\
    \ = 0;\n    let mut current_note_octlen39 = 0;\n    let mut current_note_octlen40\
    \ = 0;\n    let mut current_note_octlen41 = 0;\n    let mut current_note_octlen42\
    \ = 0;\n    let mut current_note_octlen43 = 0;\n    let mut current_note_octlen44\
    \ = 0;\n    let mut current_note_octlen45 = 0;\n    let mut current_note_oct",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_note = String::from(\"\
    \");\n    let mut current_beat = 0;\n    let mut current_note_index = 0;\n   \
    \ let mut current_note_length = 0;\n    for c in music_string {\n        if c\
    \ == 'o' {\n            if current_note_index == 0 {\n                beats.push(current_beat);\n\
    \            }\n            current_note_index += 1;\n            current_beat\
    \ = 0;\n            current_note = String::from(\"\");\n            current_note_length\
    \ = 0;\n        } else if c == '|' {\n            if current_note_index == 0 {\n\
    \                beats.push(current_beat);\n            }\n            current_note_index\
    \ += 1;\n            current_beat = 0;\n            current_note = String::from(\"\
    \");\n            current_note_length = 0;\n        } else if c == '.' {\n   \
    \         if current_note_index == 0 {\n                beats.push(current_beat);\n\
    \            }\n            current_note_index += 1;\n            current_beat\
    \ = 0;\n            current_note = String::from(\"\");\n            current_note_length\
    \ = 0;\n        } else {\n            current_note += c;\n            current_note_length\
    \ += 1;\n            current_beat += 1;\n        }\n    }\n    if current_note_index\
    \ == 0 {\n        beats.push(current_beat);\n    }\n    beats", "    let mut beats\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                if current_beat > 0 {\n                    beats.push(current_beat);\n\
    \                }\n                current_beat = 0;\n                current_note\
    \ = String::new();\n                current_octave = 0;\n            } else if\
    \ c.to_ascii_lowercase() == '|' {\n                if current_beat > 0 {\n   \
    \                 beats.push(current_beat);\n                }\n             \
    \   current_beat = 0;\n                current_note = String::new();\n       \
    \         current_octave = 0;\n            } else if c.to_ascii_lowercase() ==\
    \ '.' {\n                if current_beat > 0 {\n                    beats.push(current_beat);\n\
    \                }\n                current_beat = 0;\n                current_note\
    \ = String::new();\n                current_octave = 0;\n            } else {\n\
    \                current_note.push(c);\n            }\n        } else {\n    \
    \        if current_beat > 0 {\n                beats.push(current_beat);\n  \
    \          }\n            current_beat = 0;\n            current_note = String::new();\n\
    \            current_octave = 0;\n        }\n    }\n    if current_beat > 0 {\n\
    \        beats.push(current_beat);\n    }\n    beats", "    let mut beats_vec:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_len = 0;\n    let mut current_note_char = 0;\n\
    \    let mut current_note_char_len = 0;\n    let mut current_note_char_char =\
    \ 0;\n    let mut current_note_char_char_len = 0;\n    let mut current_note_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_len = 0;\n    let mut current_note_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_len = 0;\n    let mut current_note_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_len = 0;\n    let mut\
    \ current_note_char_char_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char = 0;\n   \
    \ let mut current_note_char_char_char_char_char_char_char_len = 0;\n    let mut\
    \ current_note_char_char_char_char_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let ", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave = 0;\n\
    \    for c in music_string.chars() {\n        if c == 'o' {\n            if current_note.is_empty()\
    \ {\n                println!(\"Invalid music string\");\n                return\
    \ beats;\n            }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_octave\
    \ = 0;\n        } else if c == '|' {\n            if current_note.is_empty() {\n\
    \                println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            current_beat += 1;\n            current_note.push(c);\n\
    \            current_octave += 1;\n        } else if c == '.' {\n            if\
    \ current_note.is_empty() {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            current_beat +=\
    \ 1;\n            current_note.push(c);\n            current_octave += 1;\n  \
    \      } else {\n            current_note.push(c);\n            current_octave\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat: usize = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_octave: usize = 0;\n\
    \    let mut current_note_is_octave = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&'static str> =\
    \ vec![];\n    let mut last_note = String::from(\"\");\n    let mut last_beat\
    \ = 0;\n    let mut last_beat_index = 0;\n    for note in music_string.chars()\
    \ {\n        if note == 'o' {\n            if last_note != \"\" {\n          \
    \      notes.push(last_note);\n                beats.push(last_beat);\n      \
    \      }\n            last_note = String::from(\"\");\n            last_beat =\
    \ 0;\n            last_beat_index = 0;\n        } else if note == '|' {\n    \
    \        if last_note != \"\" {\n                notes.push(last_note);\n    \
    \            beats.push(last_beat);\n            }\n            last_note = String::from(\"\
    \");\n            last_beat = 0;\n            last_beat_index = 0;\n        }\
    \ else if note == '.' {\n            if last_note != \"\" {\n                notes.push(last_note);\n\
    \                beats.push(last_beat);\n            }\n            last_note\
    \ = String::from(\"\");\n            last_beat = 0;\n            last_beat_index\
    \ = 0;\n        } else {\n            let mut beat = last_beat_index;\n      \
    \      let mut note = note.to_string();\n            if note != last_note {\n\
    \                notes.push(note);\n                beats.push(beat);\n      \
    \      }\n            last_beat_index += 1;\n            last_beat = beat;\n \
    \           last_note = note;\n        }\n    }\n    notes.push(last_note);\n\
    \    beats.push(last_beat);\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut ", "    let mut beats: Vec<isize> = Vec::new();\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_octave\
    \ = 0;\n    let mut current_note_duration = 0;\n    let mut current_note_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration = 0;\n    let mut current_note_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration = 0;\n    let mut\
    \ current_note_duration_duration_duration_octave = 0;\n    let mut current_note_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_octave =\
    \ 0;\n    let mut current_note_duration_duration_duration_duration_duration =\
    \ 0;\n    let mut current_note_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_octave\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_duration\
    \ = 0;\n    let mut current_note_duration_duration_duration_duration_duration_duration_duration_duration_duration_",
  "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    let mut current_note = 0;\n    for note in notes {\n   \
    \     if note.1 == notes.len() {\n            notes.remove(note);\n        }\n\
    \        let note = note.0;\n        if note == 'o' {\n            beats.push(4);\n\
    \            current_note = 0;\n        } else if note == 'o|' {\n           \
    \ beats.push(2);\n            current_note = 1;\n        } else if note == '.|'\
    \ {\n            beats.push(1);\n            current_note = 2;\n        } else\
    \ {\n            beats.push(0);\n        }\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats_vec:\
    \ Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octoct\
    \ = 0;\n    let mut current_note_octoctlen = 0;\n    let mut current_note_octoctlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n", "    let mut beats = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_octave: isize = 0;\n    let mut current_is_last = false;\n\
    \    let mut current_is_octave = false;\n    let mut current_is_note = false;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ current_is_note {\n                beats.push(current_beat);\n             \
    \   current_beat = 0;\n                current_is_note = false;\n            }\n\
    \            current_note = c.to_string();\n            current_is_note = true;\n\
    \        } else if c.is_digit() {\n            if current_is_note {\n        \
    \        beats.push(current_beat);\n                current_beat = 0;\n      \
    \          current_is_note = false;\n            }\n            current_is_last\
    \ = true;\n            current_is_octave = false;\n            current_octave\
    \ = c.to_digit(10).unwrap();\n            current_is_note = true;\n        } else\
    \ if c.is_whitespace() {\n            if current_is_note {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_is_note = false;\n\
    \            }\n            current_is_last = false;\n            current_is_octave\
    \ = false;\n            current_is_note = true;\n        } else {\n          \
    \  if current_is_note {\n                beats.push(current_beat);\n         \
    \       current_beat = 0;\n                current_is_note = false;\n        \
    \    }\n            current_is_last = false;\n            current_is_octave =\
    \ false;\n            current_is_note = true;\n        }\n    }\n    if current_is_note\
    \ {\n        beats.push(current_beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = vec![];\n    let mut current_note\
    \ = String::from(\"\");\n    let mut current_beat = 0;\n    let mut current_octave\
    \ = 0;\n    let mut current_note_count = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.is_ascii(10) {\n            \
    \    notes.push(current_note);\n                current_note = String::from(\"\
    \");\n                current_beat = 0;\n                current_octave = 0;\n\
    \                current_note_count = 0;\n            } else {\n             \
    \   current_note += c.to_string();\n            }\n        } else {\n        \
    \    if c.is_ascii(122) {\n                current_note = notes[current_note_count].to_string();\n\
    \                current_note_count = current_note_count + 1;\n            } else\
    \ {\n                let note = notes[current_note_count].to_string();\n     \
    \           let octave = notes[current_note_count + 1].to_string();\n        \
    \        let beat = notes[current_note_count + 2].to_string();\n             \
    \   beats.push(current_beat + beat.parse().unwrap());\n                current_beat\
    \ = 0;\n                current_octave = octave.parse().unwrap();\n          \
    \      current_note_count = 0;\n                current_note = note.to_string();\n\
    \            }\n        }\n    }\n    beats", "    let mut beats = vec![];\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_len = 0;\n    let mut current_note_beat = 0;\n    let mut\
    \ current_note_beat_len = 0;\n    let mut current_note_octave = 0;\n    let mut\
    \ current_note_octave_len = 0;\n    let mut current_note_octave_sign = 0;\n  \
    \  let mut current_note_octave_sign_len = 0;\n    let mut current_note_octave_sign_index\
    \ = 0;\n    let mut current_note_octave_index = 0;\n    let mut current_note_octave_len_index\
    \ = 0;\n    let mut current_note_octave_len_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_octave_index_len = 0;\n    let mut current_note_octave_index_len\
    \ = 0;\n    let mut current_note_oct", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n    let mut current_note_is_octave = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_resting\
    \ = false;\n    let mut current_note_is_resting_octave = 0;\n    let mut current_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_octave_is_octave = false;\n\
    \    let mut current_note_is_resting_note_is_rest = false;\n    let mut current_note_is_resting_note_is_rested\
    \ = false;\n    let mut current_note_is_resting_note_is_resting = false;\n   \
    \ let mut current_note_is_resting_note_is_resting_octave = 0;\n    let mut current_note_is_resting_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_note_is_resting_octave_is_octave\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_rest =\
    \ false;\n    let mut current_note_is_resting_note_is_resting_note_is_rested =\
    \ false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_octave\
    \ = 0;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_note_is_resting_note_is_resting_octave_is_octave\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_rested\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_octave\
    \ = 0;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_octave_is_octave\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_note_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_", " \
    \   let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_beats: isize = 0;\n    let mut current_notes: isize\
    \ = 0;\n    while current_note != \".\" {\n        if current_note == \"o\" {\n\
    \            beats.push(current_beats);\n            current_beats += 1;\n   \
    \         current_notes += 1;\n            current_beat = 0;\n            current_note\
    \ = 0;\n        } else if current_note == \"o|\" {\n            beats.push(current_beats);\n\
    \            current_beats += 1;\n            current_notes += 1;\n          \
    \  current_beat = 0;\n            current_note = 0;\n        } else if current_note\
    \ == \".\" {\n            beats.push(current_beats);\n            current_beats\
    \ += 1;\n            current_notes += 1;\n            current_beat = 0;\n    \
    \        current_note = 0;\n        } else {\n            current_notes += 1;\n\
    \            current_beat = 0;\n        }\n        current_note = notes.next();\n\
    \    }\n    beats.push(current_beats);\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat = 0;\n   \
    \ for note in notes {\n        if note == last_note {\n            beats.push(last_beat);\n\
    \            last_beat = 0;\n        } else {\n            last_beat = beats.last().unwrap_or(0)\
    \ + 1;\n        }\n        last_note = note;\n    }\n    beats.push(last_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   for c in music_string.chars() {\n        if c == 'o' {\n            if current_note_len\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  return beats;\n            }\n            beats.push(current_beat);\n     \
    \       current_beat = 0;\n            current_note = String::new();\n       \
    \     current_note_len = current_note.len();\n        } else if c == '|' {\n \
    \           if current_note_len == 0 {\n                println!(\"Invalid music\
    \ string\");\n                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \          current_note_len = current_note.len();\n        } else if c == '.'\
    \ {\n            if current_note_len == 0 {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = String::new();\n            current_note_len = current_note.len();\n     \
    \   } else {\n            current_note.push(c);\n            current_note_len\
    \ = current_note.len();\n        }\n    }\n    beats.push(current_beat);\n   \
    \ beats", "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_index = 0;\n    let mut current_note_length_index2 = 0;\n\
    \    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_octlen = 0;\n\n    for c in music_string {\n        if c.is_ascii()\
    \ {\n            if c == 'o' {\n                if current_note_len == 0 {\n \
    \                   current_note_len = 4;\n                    current_note_octlen\
    \ = 1;\n                    current_note_oct = 0;\n                } else {\n\
    \                    current_note_len += 1;\n                    current_note_octlen\
    \ += 1;\n                }\n            } else if c == '|' {\n               \
    \ if current_note_len == 0 {\n                    current_note_len = 2;\n    \
    \                current_note_octlen = 1;\n                    current_note_oct\
    \ = 0;\n                } else {\n                    current_note_len += 1;\n\
    \                    current_note_octlen += 1;\n                }\n          \
    \  } else if c == '.' {\n                if current_note_len == 0 {\n        \
    \            current_note_len = 1;\n                    current_note_octlen =\
    \ 1;\n                    current_note_oct = 0;\n                } else {\n  \
    \                  current_note_len += 1;\n                    current_note_octlen\
    \ += 1;\n                }\n            } else {\n                let oct = match\
    \ c {\n                    '0' => 0,\n                    '1' => 1,\n        \
    \            '2' => 2,\n                    '3' => 3,\n                    '4'\
    \ => 4,\n                    '5' => 5,\n                    '6' => 6,\n      \
    \              '7' => 7,\n                    '8' => 8,\n                    '9'\
    \ => 9,\n                    'a' => 10,\n                    'b' => 11,\n    \
    \                'c' => 12,\n                    'd' => 13,\n                \
    \    'e' => 14,\n                    'f' => 15,\n                    'g' => 16,\n\
    \                    'h' => 17,\n                    'i' => 18,\n            \
    \        'j' => 19,\n                    'k' => 20,\n                    'l' =>\
    \ 21,\n                    'm' => 22,\n                    'n' => 23,\n      \
    \              'o' => 24,\n                    'p' => 25,\n                  \
    \  'q' => 26,\n                    'r' => 27,\n                    's' => 28,\n\
    \                    't' => 29,\n                    'u' => 30,\n            \
    \        'v' => 31,\n                    'w' => 32,\n                    'x' =>\
    \ 33,\n                    'y' => 34,\n                    'z' => 35,\n      \
    \              'A' => 36,\n                    'B' => 37,\n                  \
    \  'C' => 38,\n                    'D' => 39,\n                    'E' => 40,\n\
    \                    'F' => 41,\n                    'G' => 42,\n            \
    \        'H' => 43,\n                    'I' => 44,\n                    'J' =>\
    \ 45,\n                    'K' => 46,\n                    'L' => 47,\n      \
    \              'M' => 48,\n                    'N' => 49,\n                  \
    \  'O' => 50,\n                    'P' => 51,", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_note = String::from(\"\");\n    let mut current_beat\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_whitespace() {\n\
    \            continue;\n        }\n        if c.is_ascii_digit() {\n         \
    \   current_note = c.to_string();\n            current_beat = 0;\n           \
    \ beats.push(current_beat);\n            continue;\n        }\n        if c.is_ascii_letter()\
    \ {\n            if current_note.is_empty() {\n                continue;\n   \
    \         }\n            if c.to_ascii_lowercase() == current_note {\n       \
    \         current_beat += 1;\n            } else {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = c.to_string();\n\
    \            }\n            continue;\n        }\n        assert!(false);\n  \
    \  }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        } else {\n            if current_note.is_empty() {\n                println!(\"\
    Invalid music string\");\n                panic!(\"Invalid music string\");\n\
    \            }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter = 0;\n    let\
    \ mut current_note_length_to_beat_counter_counter_counter = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    for c in music_string\
    \ {\n        if c == 'o' {\n            if current_note_length_index == 0 {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            } else {\n\
    \                current_beat += 1;\n            }\n        } else if c == '|'\
    \ {\n            if current_note_length_index == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            } else {\n                current_beat += 1;\n           \
    \ }\n        } else if c == '.' {\n            if current_note_length_index ==\
    \ 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            } else {\n\
    \                current_beat += 1;\n            }\n        } else {\n       \
    \     if current_note_length_index == 0 {\n                current_note += c;\n\
    \            } else {\n                current_note_length += 1;\n           \
    \ }\n        }\n        current_note_length_index += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_octave = 0;\n   \
    \ let mut current_note_is_octave = false;\n    let mut current_note_is_rest =\
    \ false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_resting_octave\
    \ = false;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n \
    \           if c.to_ascii_lowercase() == 'o' {\n                if current_note_is_octave\
    \ {\n                    current_note_is_octave = false;\n                   \
    \ current_note_is_rest = false;\n                    current_note_is_rested =\
    \ false;\n                    current_note_is_resting_octave = false;\n      \
    \              current_octave += 1;\n                } else {\n              \
    \      current_note_is_octave = true;\n                    current_octave = 0;\n\
    \                }\n            } else if c.to_ascii_lowercase() == '.' {\n  \
    \              if current_note_is_resting {\n                    current_note_is_resting_octave\
    \ = false;\n                } else {\n                    current_note_is_resting_octave\
    \ = true;\n                }\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                if current_note_is_rested {\n                    current_note_is_rest\
    \ = false;\n                } else {\n                    current_note_is_rest\
    \ = true;\n                }\n            } else if c.to_ascii_lowercase() ==\
    \ 'o|' {\n                if current_note_is_resting_octave {\n              \
    \      current_note_is_resting_octave = false;\n                } else {\n   \
    \                 current_note_is_resting_octave = true;\n                }\n\
    \            } else {\n                current_note_is_rest = false;\n       \
    \         current_note_is_rested = false;\n                current_note_is_resting_octave\
    \ = false;\n                current_note_is_octave = false;\n                current_note\
    \ = c.to_ascii_lowercase();\n            }\n        } else {\n            if current_note_is_rest\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n                current_note_is_rest = false;\n                current_note_is_rested\
    \ = false;\n                current_note_is_resting_octave = false;\n        \
    \        current_note_is_octave = false;\n                current_note = String::new();\n\
    \            } else {\n                current_beat += 1;\n            }\n   \
    \     }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '.' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else {\n                current_note.push(c);\n\
    \                current_note_length.push(c);\n            }\n        } else {\n\
    \            if current_note.is_empty() {\n                println!(\"Music string\
    \ contains non-ascii character\");\n                break;\n            }\n  \
    \          if c.is_ascii() {\n                if c.to_ascii_lowercase() == 'o'\
    \ {\n                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note = String::new();\n                  \
    \  current_note_length = String::new();\n                } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                    beats.push(current_beat);\n                  \
    \  current_beat = 0;\n                    current_note = String::new();\n    \
    \                current_note_length = String::new();\n                } else\
    \ if c.to_ascii_lowercase() == '|' {\n                    beats.push(current_beat);\n\
    \                    current_beat = 0;\n                    current_note = String::new();\n\
    \                    current_note_length = String::new();\n                } else\
    \ if c.to_ascii_lowercase() == '.' {\n                    beats.push(current_beat);\n\
    \                    current_beat = 0;\n                    current_note = String::new();\n\
    \                    current_note_length = String::new();\n                } else\
    \ {\n                    current_note.push(c);\n                    current_note_length.push(c);\n\
    \                }\n            } else {\n                if current_note.is_empty()\
    \ {\n                    println!(\"Music string contains non-ascii character\"\
    );\n                    break;\n                }\n                if c.is_ascii()\
    \ {\n                    if c.to_ascii_lowercase() == 'o' {\n                \
    \        beats.push(current_beat);\n                        current_beat = 0;\n\
    \                        current_note = String", "    let mut beats = Vec::new();\n\
    \    let mut notes = music_string.chars().collect::<Vec<_>>();\n    let mut current_note\
    \ = notes.len() - 1;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let mut current_note_length\
    \ = -1;\n    let mut current_note_length = -1;\n    let ", "    let mut beats\
    \ = Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != '|');\n    let mut current_note = 0;\n    let mut current_beat\
    \ = 0;\n    for note in notes {\n        if note.1 == '.' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note += 1;\n        } else\
    \ {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o');\n    for note in notes {\n        match note {\n      \
    \      'o' => beats.push(4),\n            'o|' => beats.push(2),\n           \
    \ '.|' => beats.push(1),\n            _ => (),\n        }\n    }\n    beats",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().collect::<Vec<_>>();\n\
    \    let mut current_note = notes.len() - 1;\n    let mut current_beat = 0;\n\
    \    let mut current_beats_length = 0;\n    let mut current_notes_length = 0;\n\
    \    while current_note > -1 {\n        let note = notes[current_note];\n    \
    \    let note_type = note[0];\n        let note_length = note[1];\n        let\
    \ note_octave = note[2];\n        let note_octave_length = note[3];\n        let\
    \ note_octave_sign = note[4];\n        let note_octave_sign_index = note[5];\n\
    \        let note_octave_sign_index = note[6];\n        let note_octave_sign_index\
    \ = note[7];\n        let note_octave_sign_index = note[8];\n        let note_octave_sign_index\
    \ = note[9];\n        let note_octave_sign_index = note[10];\n        let note_octave_sign_index\
    \ = note[11];\n        let note_octave_sign_index = note[12];\n        let note_octave_sign_index\
    \ = note[13];\n        let note_octave_sign_index = note[14];\n        let note_octave_sign_index\
    \ = note[15];\n        let note_octave_sign_index = note[16];\n        let note_octave_sign_index\
    \ = note[17];\n        let note_octave_sign_index = note[18];\n        let note_octave_sign_index\
    \ = note[19];\n        let note_octave_sign_index = note[20];\n        let note_octave_sign_index\
    \ = note[21];\n        let note_octave_sign_index = note[22];\n        let note_octave_sign_index\
    \ = note[23];\n        let note_octave_sign_index = note[24];\n        let note_octave_sign_index\
    \ = note[25];\n        let note_octave_sign_index = note[26];\n        let note_octave_sign_index\
    \ = note[27];\n        let note_octave_sign_index = note[28];\n        let note_octave_sign_index\
    \ = note[29];\n        let note_octave_sign_index = note[30];\n        let note_octave_sign_index\
    \ = note[31];\n        let note_octave_sign_index = note[32];\n        let note_octave_sign_index\
    \ = note[33];\n        let note_octave_sign_index = note[34];\n        let note_octave_sign_index\
    \ = note[35];\n        let note_octave_sign_index = note[36];\n        let note_octave_sign_index\
    \ = note[37];\n        let note_octave_sign", "    let mut beats = vec![];\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c == 'o' {\n                if current_note_length_index == 0 {\n          \
    \          current_note_length_index = 1;\n                    current_note_length\
    \ = 4; // whole note\n                } else {\n                    current_note_length_index\
    \ += 1;\n                    current_note_length += 1;\n                }\n  \
    \          } else if c == '|' {\n                if current_note_length_index\
    \ == 0 {\n                    current_note_length_index = 1;\n               \
    \     current_note_length = 2; // half note\n                } else {\n      \
    \              current_note_length_index += 1;\n                    current_note_length\
    \ += 1;\n                }\n            } else if c == '.' {\n               \
    \ if current_note_length_index == 0 {\n                    current_note_length_index\
    \ = 1;\n                    current_note_length = 1; // quater note\n        \
    \        } else {\n                    current_note_length_index += 1;\n     \
    \               current_note_length += 1;\n                }\n            } else\
    \ {\n                println!(\"Unknown note {}\", c);\n            }\n      \
    \  } else {\n            println!(\"Unknown character {}\", c);\n        }\n \
    \   }\n    if current_note_length_index != 0 {\n        println!(\"Unknown note\
    \ length\");\n    }\n    beats.push(current_beat);\n    current_beat += current_note_length;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c == 'o' {\n                current_beat += 4;\n            } else if c == '|'\
    \ {\n                current_beat += 2;\n            } else if c == '.' {\n  \
    \              current_beat += 1;\n            } else {\n                println!(\"\
    Unknown note {}\", c);\n            }\n        } else {\n            println!(\"\
    Unknown character {}\", c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                if current_note_length == 0\
    \ {\n                    current_note = c.to_ascii_lowercase();\n            \
    \        current_note_length = 1;\n                } else {\n                \
    \    current_note_length += 1;\n                }\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                if current_note_length == 0 {\n                 \
    \   current_note = c.to_ascii_lowercase();\n                    current_note_length\
    \ = 1;\n                } else {\n                    current_note_length += 1;\n\
    \                }\n            } else if c.to_ascii_lowercase() == '.|' {\n \
    \               if current_note_length == 0 {\n                    current_note\
    \ = c.to_ascii_lowercase();\n                    current_note_length = 1;\n  \
    \              } else {\n                    current_note_length += 1;\n     \
    \           }\n            } else {\n                println!(\"Unknown note {}\"\
    , c);\n            }\n        } else {\n            println!(\"Unknown character\
    \ {}\", c);\n        }\n        if current_note != String::new() && current_note_length\
    \ != 0 {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = String::new();\n            current_note_length =\
    \ 0;\n        }\n        current_beat += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mu", "    let mut\
    \ beats_vec: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note =\
    \ String::new();\n    let mut current_octave: isize = 0;\n    let mut current_note_is_octave\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_resting = false;\n    let mut current_note_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_is_octave = false;\n  \
    \  let mut current_note_is_resting_octave_is_rest = false;\n    let mut current_note_is_resting_octave_is_rested\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting = false;\n \
    \   let mut current_note_is_resting_octave_is_resting_octave = false;\n    let\
    \ mut current_note_is_resting_octave_is_resting_octave = false;\n    let mut current_note_is_resting_octave_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting_octave = false;\n\
    \    let mut current_note_is_resting_octave_is_resting_octave = false;\n    let\
    \ mut current_note_is_resting_octave_is_resting_octave = false;\n    let mut current_note_is_resting_octave_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting_octave = false;\n\
    \    let mut current_note_is_resting_octave_is_resting_octave = false;\n    let\
    \ mut current_note_is_resting_octave_is_resting_octave = false;\n    let mut current_note_is_resting_octave_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting_octave = false;\n\
    \    let mut current_note_is_resting_octave_is_resting_octave = false;\n    let\
    \ mut current_note_is_resting_octave_is_resting_octave = false;\n    let mut current_note_is_resting_octave_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting_octave = false;\n\
    \    let mut current_note_is_resting_octave_is_resting_octave = false;\n    let\
    \ mut current_note_is_resting_octave_is_resting_octave = false;\n    let mut current_note_is_resting_octave_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting_octave = false;\n\
    \    let mut current_note_is_resting_octave_is_resting_octave", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen2\
    \ = 0;\n    let mut current_note_octlen3 = 0;\n    let mut current_note_octlen4\
    \ = 0;\n    let mut current_note_octlen5 = 0;\n    let mut current_note_octlen6\
    \ = 0;\n    let mut current_note_octlen7 = 0;\n    let mut current_note_octlen8\
    \ = 0;\n    let mut current_note_octlen9 = 0;\n    let mut current_note_octlen10\
    \ = 0;\n    let mut current_note_octlen11 = 0;\n    let mut current_note_octlen12\
    \ = 0;\n    let mut current_note_octlen13 = 0;\n    let mut current_note_octlen14\
    \ = 0;\n    let mut current_note_octlen15 = 0;\n    let mut current_note_octlen16\
    \ = 0;\n    let mut current_note_octlen17 = 0;\n    let mut current_note_octlen18\
    \ = 0;\n    let mut current_note_octlen19 = 0;\n    let mut current_note_octlen20\
    \ = 0;\n    let mut current_note_octlen21 = 0;\n    let mut current_note_octlen22\
    \ = 0;\n    let mut current_note_octlen23 = 0;\n    let mut current_note_octlen24\
    \ = 0;\n    let mut current_note_octlen25 = 0;\n    let mut current_note_octlen26\
    \ = 0;\n    let mut current_note_octlen27 = 0;\n    let mut current_note_octlen28\
    \ = 0;\n    let mut current_note_octlen29 = 0;\n    let mut current_note_octlen30\
    \ = 0;\n    let mut current_note_octlen31 = 0;\n    let mut current_note_octlen32\
    \ = 0;\n    let mut current_note_octlen33 = 0;\n    let mut current_note_octlen34\
    \ = 0;\n    let mut current_note_octlen35 = 0;\n    let mut current_note_octlen36\
    \ = 0;\n    let mut current_note_octlen37 = 0;\n    let mut current_note_octlen38\
    \ = 0;\n    let mut current_note_octlen39 = 0;\n    let mut current_note_octlen40\
    \ = 0;\n    let mut current_note_octlen41 = 0;\n    let mut current_note_octlen42\
    \ = 0;\n    let mut current_note_octlen43 = 0;\n    let mut current_note_octlen44\
    \ = 0;\n    let mut current_note_octlen45 = 0;\n    let mut current_note_octlen46\
    \ = 0;\n    let mut current_note_octlen", "    let mut beats = vec![];\n    let\
    \ mut notes = music_string.split_whitespace();\n    let mut current_note = notes.next().unwrap();\n\
    \    let mut current_beat = 0;\n    while let Some(note) = notes.next() {\n  \
    \      match note {\n            \"o\" => {\n                beats.push(current_beat);\n\
    \                current_beat += 4;\n            }\n            \"o|\" => {\n\
    \                beats.push(current_beat);\n                current_beat += 2;\n\
    \            }\n            \".|\" => {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n            }\n            _ => {\n     \
    \           current_note = note;\n                current_beat = 0;\n        \
    \    }\n        }\n    }\n    beats", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c == 'o' {\n            beats.push(current_beat);\n          \
    \  current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == '|' {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        } else if c == '.'\
    \ {\n            current_beat = current_beat + 1;\n        } else {\n        \
    \    current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_index = 0;\n    let mut current_note_length_index2 = 0;\n\
    \    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index48\
    \ = 1;\n    let mut current_", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note_index = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_index = 0;\n    let\
    \ mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut ", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_octave:\
    \ isize = 0;\n    let mut current_note_is_octave = false;\n    let mut current_note_is_rest\
    \ = false;\n    for c in music_string.chars() {\n        if c == 'o' {\n     \
    \       if current_note_is_octave {\n                println!(\"current_note is\
    \ octave {}\", current_octave);\n                println!(\"current_note is rest\
    \ {}\", current_note_is_rest);\n                println!(\"current_note is octave\
    \ {}\", current_octave);\n                println!(\"current_note is rest {}\"\
    , current_note_is_rest);\n                println!(\"current_note is octave {}\"\
    , current_octave);\n                println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave);\n  \
    \              println!(\"current_note is rest {}\", current_note_is_rest);\n\
    \                println!(\"current_note is octave {}\", current_octave", "  \
    \  let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_is_octave\
    \ = false;\n\n    for c in music_string.chars() {\n        if c.is_ascii() {\n\
    \            if c.to_ascii_lowercase() == 'o' {\n                if current_note_length_is_octave\
    \ {\n                    current_octave += 1;\n                    current_note_length_is_octave\
    \ = false;\n                }\n                current_note += c.to_ascii_lowercase();\n\
    \                current_note_length += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                if current_note_length_is_octave {\n             \
    \       current_octave += 1;\n                    current_note_length_is_octave\
    \ = false;\n                }\n                current_note += c.to_ascii_lowercase();\n\
    \                current_note_length += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                if current_note_length_is_octave {\n             \
    \       current_octave += 1;\n                    current_note_length_is_octave\
    \ = false;\n                }\n                current_note += c.to_ascii_lowercase();\n\
    \                current_note_length += 1;\n            } else {\n           \
    \     if current_note_length_is_octave {\n                    current_octave +=\
    \ 1;\n                    current_note_length_is_octave = false;\n           \
    \     }\n                current_note += c.to_ascii_lowercase();\n           \
    \     current_note_length += 1;\n            }\n        } else {\n           \
    \ if c.to_ascii_lowercase() == 'o' {\n                current_note_length_is_octave\
    \ = true;\n                current_octave += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                current_note_length_is_octave = true;\n          \
    \      current_octave += 1;\n            } else if c.to_ascii_lowercase() == '.'\
    \ {\n                current_note_length_is_octave = true;\n                current_octave\
    \ += 1;\n            } else {\n                current_note_length_is_octave =\
    \ true;\n                current_octave += 1;\n            }\n        }\n    }\n\
    \n    if current_note_length == 0 {\n        return beats;\n    }\n\n    if current_octave\
    \ == 0 {\n        current_octave = 1;\n    }\n\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                if current_note_length_is_octave {\n                    current_octave\
    \ += 1;\n                    current_note_length_is_octave = false;\n        \
    \        }\n                current_note += c.to_ascii_lowercase();\n        \
    \        current_note_length += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                if current_note_length_is_octave {\n             \
    \       current_octave += 1;\n                    current_note_length_is_octave\
    \ = false;", "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_len\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '.|' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = String::new();\n            } else {\n                current_note.push(c);\n\
    \                current_note_len = current_note.len() + 1;\n            }\n \
    \       } else {\n            if current_note.len() > 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = String::new();\n            }\n        }\n\
    \    }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '|' {\n            beats.push(current_beat);\n         \
    \   current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == '.' {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        } else {\n        \
    \    current_note.push(c);\n            current_beat++;\n        }\n    }\n  \
    \  beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_len = 0;\n    for c in music_string.chars() {\n        if c ==\
    \ 'o' {\n            if current_note_len == 0 {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat += 1;\n            current_note_len\
    \ = 0;\n            current_note = String::new();\n        } else if c == '|'\
    \ {\n            if current_note_len == 0 {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat += 1;\n            current_note_len\
    \ = 1;\n            current_note = String::new();\n        } else if c == '.'\
    \ {\n            if current_note_len == 0 {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat += 1;\n            current_note_len\
    \ = 0;\n            current_note = String::new();\n        } else {\n        \
    \    current_note.push(c);\n            current_note_len = c.len_utf8();\n   \
    \     }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    for c in music_string.chars() {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '|' {\n            beats.push(current_beat);\n         \
    \   current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c.is_whitespace() {\n            continue;\n        } else {\n          \
    \  current_note.push(c);\n            current_beat += 1;\n        }\n    }\n \
    \   beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_len = 0;\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \                current_note_len = current_note.len();\n            } else if\
    \ c.to_ascii_lowercase() == '|' {\n                current_beat += 1;\n      \
    \      } else if c.to_ascii_lowercase() == '.' {\n                current_beat\
    \ += 4;\n            }\n        } else {\n            current_note.push_str(&c.to_ascii_lowercase());\n\
    \            current_note_len = current_note.len();\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat = 0;\n    current_note = String::new();\n    current_note_len\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \                current_note_len = current_note.len();\n            } else if\
    \ c.to_ascii_lowercase() == '|' {\n                current_beat += 1;\n      \
    \      } else if c.to_ascii_lowercase() == '.' {\n                current_beat\
    \ += 4;\n            }\n        } else {\n            current_note.push_str(&c.to_ascii_lowercase());\n\
    \            current_note_len = current_note.len();\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat = 0;\n    current_note = String::new();\n    current_note_len\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \                current_note_len = current_note.len();\n            } else if\
    \ c.to_ascii_lowercase() == '|' {\n                current_beat += 1;\n      \
    \      } else if c.to_ascii_lowercase() == '.' {\n                current_beat\
    \ += 4;\n            }\n        } else {\n            current_note.push_str(&c.to_ascii_lowercase());\n\
    \            current_note_len = current_", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_octave = 0;\n    let mut current_note_is_octave = false;\n    let mut\
    \ current_note_is_rest = false;\n    let mut current_note_is_rested = false;\n\
    \    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index", "    let mut beats = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = String::new();\n    for c in music_string {\n\
    \        if c == 'o' {\n            if current_note.len() > 0 {\n            \
    \    beats.push(current_beat + 1);\n                current_beat = 0;\n      \
    \          current_note = String::new();\n            }\n            current_note.push_str(&c);\n\
    \            current_note_length.push_str(&current_note);\n        } else if c\
    \ == '|' {\n            if current_note.len() > 0 {\n                beats.push(current_beat\
    \ + 1);\n                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n            current_note.push_str(&c);\n            current_note_length.push_str(&current_note);\n\
    \        } else if c == '.' {\n            if current_note.len() > 0 {\n     \
    \           beats.push(current_beat + 1);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            }\n            current_note.push_str(&c);\n\
    \            current_note_length.push_str(&current_note);\n        } else {\n\
    \            current_note.push_str(&c);\n            current_note_length.push_str(&current_note);\n\
    \        }\n    }\n    if current_note.len() > 0 {\n        beats.push(current_beat\
    \ + 1);\n    }\n    beats", "    let mut beats_vec: Vec<isize> = vec![];\n   \
    \ let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave: isize\
    \ = 0;\n\n    for c in music_string.chars() {\n        if c.is_ascii() {\n   \
    \         if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_octave\
    \ = 1;\n            } else if c.to_ascii_lowercase() == '.|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_octave = 2;\n   \
    \         } else {\n                current_note.push(c);\n            }\n   \
    \     } else {\n            if current_note.is_empty() {\n                panic!(\"\
    Music string contains non-ascii character\");\n            }\n            if current_note.len()\
    \ == 3 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_octave\
    \ = 0;\n            }\n            current_note.push(c);\n        }\n    }\n \
    \   beats.push(current_beat);\n    beats", "    let mut beats = Vec::new();\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, c)| c != '|');\n\
    \    let mut last_note = notes.next();\n    let mut last_beat = 0;\n    let mut\
    \ last_beats = 1;\n    for note in notes {\n        if note.1.is_ascii() {\n \
    \           let note = note.1.to_ascii_lowercase();\n            if note == \"\
    o\" {\n                beats.push(last_beat);\n                last_beat = 1;\n\
    \            } else if note == \"o|\" {\n                beats.push(last_beat);\n\
    \                last_beat = 2;\n            } else if note == \".|\" {\n    \
    \            beats.push(last_beat);\n                last_beat = 1;\n        \
    \    } else {\n                panic!(\"Unknown note '{}'\", note);\n        \
    \    }\n        } else {\n            last_beats += 1;\n            last_beat\
    \ = last_beats;\n        }\n        last_note = note;\n    }\n    beats.push(last_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n    for c in music_string {\n        if c == 'o' {\n            if current_note\
    \ != String::new() {\n                beats.push(current_beat);\n            \
    \    current_beat = 0;\n            }\n            current_note = String::new();\n\
    \            current_octave = 0;\n        } else if c == '|' {\n            if\
    \ current_note != String::new() {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            }\n            current_note =\
    \ String::new();\n            current_octave = 1;\n        } else if c == '.'\
    \ {\n            if current_note != String::new() {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            }\n            current_note =\
    \ String::new();\n            current_octave = 2;\n        } else {\n        \
    \    current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != '|');\n    for note in notes {\n        let mut beat = 0;\n \
    \       let mut last_note = note.1;\n        for _ in 0..note.0 {\n          \
    \  beat += 1;\n            last_note = notes[notes.len() - 1].1;\n        }\n\
    \        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_to_beat =\
    \ 0;\n    let mut current_note_length_to_beat_counter = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c == 'o' {\n                if\
    \ current_note_length == 0 {\n                    current_note = String::from(\"\
    o\");\n                    current_note_length = 1;\n                    current_note_length_to_beat\
    \ = 4;\n                    current_note_length_to_beat_counter = 0;\n       \
    \         } else {\n                    current_note.push_str(&format!(\"{}\"\
    , current_note_length));\n                    current_note_length_to_beat += current_note_length;\n\
    \                    current_note_length_to_beat_counter += 1;\n             \
    \       current_note_length = 0;\n                }\n            } else if c ==\
    \ '|' {\n                if current_note_length == 0 {\n                    current_note\
    \ = String::from(\"|\");\n                    current_note_length = 1;\n     \
    \               current_note_length_to_beat = 2;\n                    current_note_length_to_beat_counter\
    \ = 0;\n                } else {\n                    current_note.push_str(&format!(\"\
    {}\", current_note_length));\n                    current_note_length_to_beat\
    \ += current_note_length;\n                    current_note_length_to_beat_counter\
    \ += 1;\n                    current_note_length = 0;\n                }\n   \
    \         } else if c == '.' {\n                if current_note_length == 0 {\n\
    \                    current_note = String::from(\".\");\n                   \
    \ current_note_length = 1;\n                    current_note_length_to_beat =\
    \ 1;\n                    current_note_length_to_beat_counter = 0;\n         \
    \       } else {\n                    current_note.push_str(&format!(\"{}\", current_note_length));\n\
    \                    current_note_length_to_beat += current_note_length;\n   \
    \                 current_note_length_to_beat_counter += 1;\n                \
    \    current_note_length = 0;\n                }\n            } else {\n     \
    \           panic!(\"Unknown note symbol: {}\", c);\n            }\n        }\
    \ else {\n            current_note.push_str(&format!(\"{}\", current_note_length));\n\
    \            current_note_length_to_beat += current_note_length;\n           \
    \ current_note_length_to_beat_counter += 1;\n            current_note_length =\
    \ 0;\n        }\n        if current_note_length_to_beat_counter == current_note_length_to_beat\
    \ {\n            beats.push(current_beat);\n            current_beat += 1;\n \
    \           current_note_length_to_beat_counter = 0;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n\
    \    let mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let\
    \ mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut\
    \ current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9\
    \ = 0;\n    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 =\
    \ 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n\
    \    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n  \
    \  let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let\
    \ mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n    let mut\
    \ current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22\
    \ = 0;\n    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 =\
    \ 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n\
    \    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n  \
    \  let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let\
    \ mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n    let mut\
    \ current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35\
    \ = 0;\n    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 =\
    \ 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n\
    \    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n  \
    \  let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let\
    \ mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n    let mut\
    \ current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48\
    \ = 0;\n    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 =\
    \ 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n\
    \    let mut current_note_", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length = 0;\n    let\
    \ mut current_note_length_to_beat_with_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_", "    let mut beats: Vec<isize> =\
    \ vec![];\n    let mut notes: Vec<&str> = vec![];\n    let mut current_note =\
    \ String::from(\"\");\n    let mut current_beat = 0;\n    let mut current_note_count\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut ", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let ", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_octlen = 0;\n\
    \    let mut current_note_octlen2 = 0;\n    let mut current_note_octlen3 = 0;\n\
    \    let mut current_note_octlen4 = 0;\n    let mut current_note_octlen5 = 0;\n\
    \    let mut current_note_octlen6 = 0;\n    let mut current_note_octlen7 = 0;\n\
    \    let mut current_note_octlen8 = 0;\n    let mut current_note_octlen9 = 0;\n\
    \    let mut current_note_octlen10 = 0;\n    let mut current_note_octlen11 = 0;\n\
    \    let mut current_note_octlen12 = 0;\n    let mut current_note_octlen13 = 0;\n\
    \    let mut current_note_octlen14 = 0;\n    let mut current_note_octlen15 = 0;\n\
    \    let mut current_note_octlen16 = 0;\n    let mut current_note_octlen17 = 0;\n\
    \    let mut current_note_octlen18 = 0;\n    let mut current_note_octlen19 = 0;\n\
    \    let mut current_note_octlen20 = 0;\n    let mut current_note_octlen21 = 0;\n\
    \    let mut current_note_octlen22 = 0;\n    let mut current_note_octlen23 = 0;\n\
    \    let mut current_note_octlen24 = 0;\n    let mut current_note_octlen25 = 0;\n\
    \    let mut current_note_octlen26 = 0;\n    let mut current_note_octlen27 = 0;\n\
    \    let mut current_note_octlen28 = 0;\n    let mut current_note_octlen29 = 0;\n\
    \    let mut current_note_octlen30 = 0;\n    let mut current_note_octlen31 = 0;\n\
    \    let mut current_note_octlen32 = 0;\n    let mut current_note_octlen33 = 0;\n\
    \    let mut current_note_octlen34 = 0;\n    let mut current_note_octlen35 = 0;\n\
    \    let mut current_note_octlen36 = 0;\n    let mut current_note_octlen37 = 0;\n\
    \    let mut current_note_octlen38 = 0;\n    let mut current_note_octlen39 = 0;\n\
    \    let mut current_note_octlen40 = 0;\n    let mut current_note_octlen41 = 0;\n\
    \    let mut current_note_octlen42 = 0;\n    let mut current_note_octlen43 = 0;\n\
    \    let mut current_note_octlen44 = 0;\n    let mut current_note_octlen45 = 0;\n\
    \    let mut current_note_octlen46 = 0;\n    let mut current_note_octlen47 = 0;\n\
    \    let mut current_", "    let mut beats: Vec<isize> = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n\n    for c in music_string.chars() {\n        if c.is_whitespace() {\n\
    \            continue;\n        }\n\n        if c.is_ascii(0) {\n            if\
    \ current_note.is_empty() {\n                continue;\n            }\n\n    \
    \        if current_octave == 0 {\n                beats.push(current_beat);\n\
    \            }\n\n            current_note = String::new();\n            current_octave\
    \ = 0;\n            current_beat = 0;\n            continue;\n        }\n\n  \
    \      let note = c.to_ascii_lowercase();\n        let octave = note.chars().filter(|c|\
    \ c >= 'a' && c <= 'z').count() as isize;\n\n        if note.len() == 1 {\n  \
    \          current_note += note;\n            current_octave += octave;\n    \
    \    } else {\n            current_note += note;\n            current_octave +=\
    \ octave;\n            current_beat = 1;\n        }\n    }\n\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '.|' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else {\n                current_note.push(c);\n\
    \                current_note_length.push(1);\n            }\n        } else {\n\
    \            if current_note.is_empty() {\n                panic!(\"Music string\
    \ contains non-ASCII character\");\n            }\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == 'o|' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '.|' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else {\n                current_note.push(c);\n\
    \                current_note_length.push(1);\n            }\n        }\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    for c in music_string {\n        if c.is_whitespace()\
    \ {\n            continue;\n        }\n        if c.is_ascii(0) {\n          \
    \  current_note = c.to_string();\n            current_note_length = 1;\n     \
    \   } else {\n            if current_note.is_empty() {\n                panic!(\"\
    Music string contains invalid character: {}\", c);\n            }\n          \
    \  if c.is_ascii(127) {\n                current_note_length += 1;\n         \
    \   } else {\n                let mut current_note_length = c.len_utf8();\n  \
    \              let mut current_note = c.to_string();\n                let mut\
    \ current_beat = current_note_length / 4;\n                beats.push(current_beat);\n\
    \                current_note_length -= 4;\n            }\n        }\n    }\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = String::from(\"\");\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut current_note_length = 0;\n    for note in notes {\n      \
    \  if note == \"o\" {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note_index = 0;\n            current_note_length =\
    \ 0;\n            current_note = String::from(\"\");\n        } else if note ==\
    \ \"o|\" {\n            beats.push(current_beat);\n            current_beat =\
    \ 0;\n            current_note_index = 0;\n            current_note_length = 2;\n\
    \            current_note = String::from(\"\");\n        } else if note == \"\
    .|\" {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note_index = 0;\n            current_note_length = 1;\n \
    \           current_note = String::from(\"\");\n        } else {\n           \
    \ current_note.push_str(note);\n            current_note_length += 1;\n      \
    \  }\n        current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = String::new();\n    for c in music_string.chars() {\n\
    \        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note += c.to_ascii_lowercase();\n            }\n    \
    \    } else {\n            if current_note.is_empty() {\n                println!(\"\
    Invalid music string\");\n                break;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        } else {\n            current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_octave = 0;\n   \
    \ let mut current_note_is_octave = false;\n    let mut current_note_is_rest =\
    \ false;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n   \
    \         if c.to_ascii_lowercase() == 'o' {\n                if current_note_is_octave\
    \ {\n                    current_note_is_octave = false;\n                   \
    \ current_note_is_rest = true;\n                } else {\n                   \
    \ current_note_is_octave = true;\n                    current_note_is_rest = false;\n\
    \                }\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              if current_note_is_octave {\n                    current_note_is_octave\
    \ = false;\n                    current_note_is_rest = false;\n              \
    \  } else {\n                    current_note_is_octave = true;\n            \
    \        current_note_is_rest = true;\n                }\n            } else if\
    \ c.to_ascii_lowercase() == '.' {\n                if current_note_is_octave {\n\
    \                    current_note_is_octave = false;\n                    current_note_is_rest\
    \ = false;\n                } else {\n                    current_note_is_octave\
    \ = false;\n                    current_note_is_rest = true;\n               \
    \ }\n            } else {\n                let note = c.to_ascii_lowercase();\n\
    \                if note == \"b\" {\n                    current_note_is_rest\
    \ = false;\n                } else if note == \"#\" {\n                    current_note_is_octave\
    \ = false;\n                } else {\n                    current_note_is_octave\
    \ = false;\n                    current_note_is_rest = false;\n              \
    \  }\n            }\n        } else {\n            current_note_is_octave = false;\n\
    \            current_note_is_rest = false;\n        }\n        if current_note_is_rest\
    \ {\n            beats.push(current_beat);\n            current_beat = 0;\n  \
    \          current_note = String::new();\n            current_note_is_rest = false;\n\
    \            current_note_is_octave = false;\n            current_note_is_octave\
    \ = false;\n        }\n        if current_note_is_octave {\n            current_beat\
    \ += 1;\n        }\n        current_note.push_str(&c);\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_index = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_octave = 0;\n\
    \    let mut current_note_octave_change = 0;\n    let mut current_note_octave_change_sign\
    \ = 1;\n    let mut current_note_octave_change_octave = 0;\n    let mut current_note_octave_change_octave_sign\
    \ = 1;\n    let mut current_note_octave_change_octave_octave = 0;\n    let mut\
    \ current_note_octave_change_octave_octave_sign = 1;\n    let mut current_note_octave_change_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_octave_octave_sign = 1;\n\
    \    let mut current_note_octave_change_octave_octave_octave_octave = 0;\n   \
    \ let mut current_note_octave_change_octave_octave_octave_octave_sign = 1;\n \
    \   let mut current_note_octave_change_octave_octave_octave_octave_octave = 0;\n\
    \    let mut current_note_octave_change_octave_octave_octave_octave_octave_sign\
    \ = 1;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave_sign\
    \ = 1;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave_octave_sign\
    \ = 1;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave_octave_octave_octave_sign\
    \ = 1;\n    let mut current_note_octave_change_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mu", "    let mut beats = vec![];\n    let mut current_beat =\
    \ 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat += 4;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ += 2;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == '.|' {\n             \
    \   beats.push(current_beat);\n                current_beat += 1;\n          \
    \      current_note = String::new();\n                current_note_length = 0;\n\
    \            } else {\n                current_note.push(c);\n               \
    \ current_note_length += 1;\n            }\n        } else {\n            if current_note_length\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  panic!(\"Invalid music string\");\n            }\n            if c.is_whitespace()\
    \ {\n                if current_note_length == 0 {\n                    println!(\"\
    Invalid music string\");\n                    panic!(\"Invalid music string\"\
    );\n                }\n            } else {\n                println!(\"Invalid\
    \ music string\");\n                panic!(\"Invalid music string\");\n      \
    \      }\n        }\n    }\n    beats.push(current_beat);\n    current_beat +=\
    \ current_note_length;\n    beats", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    for\
    \ c in music_string.chars() {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                if current_note.is_empty() {\n                   \
    \ current_note = c.to_ascii_lowercase();\n                    current_note_length\
    \ = c.to_ascii_lowercase();\n                } else {\n                    current_note\
    \ += c.to_ascii_lowercase();\n                    current_note_length += c.to_ascii_lowercase();\n\
    \                }\n            } else if c.to_ascii_lowercase() == 'o|' {\n \
    \               if current_note.is_empty() {\n                    current_note\
    \ = c.to_ascii_lowercase();\n                    current_note_length = c.to_ascii_lowercase();\n\
    \                } else {\n                    current_note += c.to_ascii_lowercase();\n\
    \                    current_note_length += c.to_ascii_lowercase();\n        \
    \        }\n            } else if c.to_ascii_lowercase() == '.|' {\n         \
    \       if current_note.is_empty() {\n                    current_note = c.to_ascii_lowercase();\n\
    \                    current_note_length = c.to_ascii_lowercase();\n         \
    \       } else {\n                    current_note += c.to_ascii_lowercase();\n\
    \                    current_note_length += c.to_ascii_lowercase();\n        \
    \        }\n            }\n        } else {\n            if current_note.is_empty()\
    \ {\n                println!(\"Invalid music string\");\n                return\
    \ beats;\n            }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_length\
    \ = String::new();\n        }\n    }\n    if current_note.is_empty() {\n     \
    \   println!(\"Invalid music string\");\n        return beats;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_beat_length = 0;\n    let mut current_note_length_to_beat\
    \ = 0;\n    let mut current_beat_length_to_beat = 0;\n    let mut current_note_length_to_beat_length\
    \ = 0;\n    let mut current_beat_length_to_beat_length = 0;\n    let mut current_note_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat = 0;\n    let mut\
    \ current_note_length_to_beat_length_to_beat_length = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_note_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length_to_beat_length\
    \ = 0;\n    let mut current_", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::from(\"\"\
    );\n    let mut current_beat = 0;\n    let mut current_note_index = 0;\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_octave = 0;\n    let\
    \ mut current_note_octave_offset = 0;\n    let mut current_note_octave_length\
    \ = 0;\n    let mut current_note_octave_octave = 0;\n    let mut current_note_octave_octave_offset\
    \ = 0;\n    let mut current_note_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_offset = 0;\n    let mut\
    \ current_note_octave_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_offset = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_offset = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_offset = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_offset = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_offset = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_", "    let mut beats = Vec::new();\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length = ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            current_note.push_str(&c.to_string());\n\
    \            current_note_length += 1;\n        } else {\n            if current_note\
    \ != String::new() && current_note_length > 0 {\n                beats.push(current_beat\
    \ + current_note_length);\n                current_note.clear();\n           \
    \     current_note_length = 0;\n            }\n            current_note.push_str(&c.to_string());\n\
    \        }\n    }\n    if current_note != String::new() && current_note_length\
    \ > 0 {\n        beats.push(current_beat + current_note_length);\n    }\n    beats",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = String::new();\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut ", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat += 4;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = c.len_utf8();\n            } else if c.to_ascii_lowercase() == 'o|' {\n  \
    \              beats.push(current_beat);\n                current_beat += 2;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = c.len_utf8();\n            } else if c.to_ascii_lowercase() == '.|' {\n  \
    \              beats.push(current_beat);\n                current_beat += 1;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = c.len_utf8();\n            } else {\n                current_note.push(c);\n\
    \                current_note_len = c.len_utf8();\n            }\n        } else\
    \ {\n            if current_note.len() == 0 {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ if current_note_len == 0 {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            let beat = current_beat\
    \ / current_note_len;\n            beats.push(beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_len\
    \ = c.len_utf8();\n        }\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut last_note =\
    \ String::new();\n    let mut last_note_len = 0;\n    let mut last_note_len_len\
    \ = 0;\n    let mut last_note_len_len_len = 0;\n    let mut last_note_len_len_len\
    \ = 0;\n    let mut last_note_len_len_len = 0;\n    let mut last_note_len_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_len = 0;\n    let mut last_note_len\
    \ = 0;\n    let mut last_note_len = 0;\n    let mu", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != 'o');\n    let mut current_note = 0;\n    for note in notes {\n        if\
    \ note == current_note {\n            beats.push(1);\n        } else {\n     \
    \       beats.push(beats[beats.len() - 1] + 1);\n        }\n        current_note\
    \ = note;\n    }\n    beats", "    let mut beats = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == '|' {\n              \
    \  current_beat += 1;\n            } else if c.to_ascii_lowercase() == '.' {\n\
    \                current_beat += 1;\n                current_note_length += 1;\n\
    \            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \                current_note_length += 1;\n            }\n        } else {\n\
    \            if current_note.is_empty() {\n                continue;\n       \
    \     }\n            let note = current_note.chars().collect::<String>().parse().unwrap();\n\
    \            let length = current_note_length;\n            current_note = String::new();\n\
    \            current_note_length = 0;\n            beats.push(note as isize);\n\
    \        }\n    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                current_beat += 1;\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \            } else {\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \            }\n        } else {\n            current_note.push_str(&c.to_ascii_lowercase());\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat: usize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave: usize = 0;\n    let mut current_length:\
    \ usize = 0;\n    let mut current_length_index: usize = 0;\n    let mut current_length_index2:\
    \ usize = 0;\n    let mut current_length_index3: usize = 0;\n    let mut current_length_index4:\
    \ usize = 0;\n    let mut current_length_index5: usize = 0;\n    let mut current_length_index6:\
    \ usize = 0;\n    let mut current_length_index7: usize = 0;\n    let mut current_length_index8:\
    \ usize = 0;\n    let mut current_length_index9: usize = 0;\n    let mut current_length_index10:\
    \ usize = 0;\n    let mut current_length_index11: usize = 0;\n    let mut current_length_index12:\
    \ usize = 0;\n    let mut current_length_index13: usize = 0;\n    let mut current_length_index14:\
    \ usize = 0;\n    let mut current_length_index15: usize = 0;\n    let mut current_length_index16:\
    \ usize = 0;\n    let mut current_length_index17: usize = 0;\n    let mut current_length_index18:\
    \ usize = 0;\n    let mut current_length_index19: usize = 0;\n    let mut current_length_index20:\
    \ usize = 0;\n    let mut current_length_index21: usize = 0;\n    let mut current_length_index22:\
    \ usize = 0;\n    let mut current_length_index23: usize = 0;\n    let mut current_length_index24:\
    \ usize = 0;\n    let mut current_length_index25: usize = 0;\n    let mut current_length_index26:\
    \ usize = 0;\n    let mut current_length_index27: usize = 0;\n    let mut current_length_index28:\
    \ usize = 0;\n    let mut current_length_index29: usize = 0;\n    let mut current_length_index30:\
    \ usize = 0;\n    let mut current_length_index31: usize = 0;\n    let mut current_length_index32:\
    \ usize = 0;\n    let mut current_length_index33: usize = 0;\n    let mut current_length_index34:\
    \ usize = 0;\n    let mut current_length_index35: usize = 0;\n    let mut current_length_index36:\
    \ usize = 0;\n    let mut current_length_index37: usize = 0;\n    let mut current_length_index38:\
    \ usize = 0;\n    let mut current_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut ", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            let\
    \ note = match c {\n                'o' => 0,\n                'o|' => 1,\n  \
    \              '.|' => 2,\n                _ => panic!(\"Invalid music note: {:?}\"\
    , c),\n            };\n            beats.push(current_beat);\n            current_beat\
    \ += note;\n            current_note_length += note;\n            current_note\
    \ += note;\n        } else {\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n            current_note += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat += current_note_length;\n    beats.push(current_beat);\n   \
    \ current_beat += current_note;\n    beats.push(current_beat);\n    beats", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_is_octave\
    \ = false;\n\n    for c in music_string.chars() {\n        if c.is_ascii() {\n\
    \            if c.to_ascii_lowercase() == 'o' {\n                if current_note_is_octave\
    \ {\n                    current_octave += 1;\n                } else {\n    \
    \                current_octave = 0;\n                    current_note_is_octave\
    \ = true;\n                }\n            } else {\n                if current_note_is_octave\
    \ {\n                    current_octave -= 1;\n                }\n           \
    \     current_note_is_octave = false;\n            }\n            current_note\
    \ += c.to_ascii_lowercase();\n        } else {\n            if current_note_is_octave\
    \ {\n                current_octave -= 1;\n            }\n            current_note_is_octave\
    \ = false;\n            current_note += c.to_ascii_lowercase();\n        }\n \
    \   }\n\n    if current_note.is_empty() {\n        return beats;\n    }\n\n  \
    \  let mut note = String::new();\n    let mut octave = String::new();\n    let\
    \ mut note_is_octave = false;\n    for c in current_note.chars() {\n        if\
    \ c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n           \
    \     if note_is_octave {\n                    octave += c.to_ascii_lowercase();\n\
    \                } else {\n                    octave = c.to_ascii_lowercase();\n\
    \                    note_is_octave = true;\n                }\n            }\
    \ else {\n                if note_is_octave {\n                    octave -= c.to_ascii_lowercase();\n\
    \                }\n                note_is_octave = false;\n            }\n \
    \       } else {\n            if note_is_octave {\n                octave -= c.to_ascii_lowercase();\n\
    \            }\n            note_is_octave = false;\n            note += c.to_ascii_lowercase();\n\
    \        }\n    }\n\n    if note.is_empty() {\n        return beats;\n    }\n\n\
    \    let mut beat = 0;\n    let mut octave = 0;\n    let mut note_is_octave =\
    \ false;\n    for c in note.chars() {\n        if c.is_ascii() {\n           \
    \ if c.to_ascii_lowercase() == 'o' {\n                if note_is_octave {\n  \
    \                  octave += c.to_ascii_lowercase();\n                } else {\n\
    \                    octave = c.to_ascii_lowercase();\n                    note_is_octave\
    \ = true;\n                }\n            } else {\n                if note_is_octave\
    \ {\n                    octave -= c.to_ascii_lowercase();\n                }\n\
    \                note_is_octave = false;\n            }\n        } else {\n  \
    \          if note_is_octave {\n                octave -= c.to_ascii_lowercase();\n\
    \            }\n            note_is_octave = false;\n            beat += c.to_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mu", "    let mut\
    \ beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    for c in music_string.chars() {\n \
    \       if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n  \
    \              if current_beat == 0 {\n                    current_note = c.to_ascii_lowercase();\n\
    \                    current_note_length = 1;\n                } else {\n    \
    \                current_note += c.to_ascii_lowercase();\n                   \
    \ current_note_length += 1;\n                }\n            } else {\n       \
    \         if current_beat == 0 {\n                    current_note = c.to_ascii_lowercase();\n\
    \                    current_note_length = 1;\n                } else {\n    \
    \                current_note += c.to_ascii_lowercase();\n                   \
    \ current_note_length += 1;\n                }\n            }\n        } else\
    \ {\n            if current_beat == 0 {\n                current_note = c.to_ascii_lowercase();\n\
    \                current_note_length = 1;\n            } else {\n            \
    \    current_note += c.to_ascii_lowercase();\n                current_note_length\
    \ += 1;\n            }\n        }\n        current_beat += 1;\n        if current_beat\
    \ == 4 {\n            beats.push(current_note_length);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_length\
    \ = 0;\n        }\n    }\n    beats.push(current_note_length);\n    beats", " \
    \   let mut beats = vec![];\n    let mut notes = music_string.chars().collect::<Vec<char>>();\n\
    \    let mut last_note = notes.len() - 1;\n    let mut last_beat = 0;\n    let\
    \ mut last_beats = 1;\n    let mut last_notes = 1;\n    let mut last_notes_beats\
    \ = 1;\n    let mut last_notes_beats_beats = 1;\n    let mut last_notes_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats = 1;\n    let mut last_notes_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats = 1;\n    let\
    \ mut last_notes_beats_beats_beats_beats_beats_beats_beats = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats\
    \ = 1;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                if current_note_length == 0 {\n                    current_note\
    \ = c.to_string();\n                    current_note_length = 1;\n           \
    \     } else {\n                    current_note_length += 1;\n              \
    \  }\n            } else if c.to_ascii_lowercase() == 'o|' {\n               \
    \ if current_note_length == 0 {\n                    current_note = c.to_string();\n\
    \                    current_note_length = 1;\n                } else {\n    \
    \                current_note_length += 1;\n                }\n            } else\
    \ if c.to_ascii_lowercase() == '.|' {\n                if current_note_length\
    \ == 0 {\n                    current_note = c.to_string();\n                \
    \    current_note_length = 1;\n                } else {\n                    current_note_length\
    \ += 1;\n                }\n            } else {\n                println!(\"\
    Invalid music note: {}\", c);\n            }\n        } else {\n            println!(\"\
    Invalid music note: {}\", c);\n        }\n    }\n    if current_note_length ==\
    \ 0 {\n        beats.push(current_beat);\n    } else {\n        beats.push(current_beat\
    \ + current_note_length);\n    }\n    beats", "    let mut beats = vec![];\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.next();\n    let mut current_beat = 0;\n   \
    \ while let Some(note) = current_note {\n        if note == \"o\" {\n        \
    \    beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = notes.next();\n        } else if note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = notes.next();\n   \
    \     } else if note == \".|\" {\n            beats.push(current_beat);\n    \
    \        current_beat = 0;\n            current_note = notes.next();\n       \
    \ } else {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave: isize\
    \ = 0;\n\n    for c in music_string.chars() {\n        if c.is_ascii() {\n   \
    \         let note = c.to_ascii_lowercase();\n            if note == \"o\" {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_octave\
    \ = 0;\n            } else if note == \"o|\" {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 1;\n            } else if note == \".|\" {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_octave\
    \ = 2;\n            } else {\n                current_note.push_str(note);\n \
    \           }\n        } else {\n            current_note.push_str(&c.to_string());\n\
    \        }\n    }\n\n    beats.push(current_beat);\n    current_beat = 0;\n  \
    \  current_note = String::new();\n    current_octave = 0;\n\n    beats", "   \
    \ let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_octave = 0;\n    let\
    \ mut current_note_is_rest = false;\n\n    for c in music_string.chars() {\n \
    \       match c {\n            'o' => current_note_is_rest = false,\n        \
    \    'o|' => current_note_is_rest = true,\n            '.|' => current_note_is_rest\
    \ = false,\n            _ => {\n                let note = match c {\n       \
    \             'o' => \"whole_note\",\n                    'o|' => \"half_note\"\
    ,\n                    '.|' => \"quater_note\",\n                    _ => panic!(\"\
    Unexpected character in music string: {}\", c),\n                };\n\n      \
    \          let octave = match c {\n                    'o' => 0,\n           \
    \         'o|' => 1,\n                    '.|' => 2,\n                    _ =>\
    \ panic!(\"Unexpected character in music string: {}\", c),\n                };\n\
    \n                let beat = current_beat + octave * 12 + note_to_beat(note);\n\
    \                beats.push(beat);\n                current_beat = beat;\n   \
    \             current_note = note;\n                current_octave = octave;\n\
    \                current_note_is_rest = false;\n            }\n        }\n   \
    \ }\n\n    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_length =\
    \ 0;\n    let mut current_note_length_index = 0;\n    for c in music_string {\n\
    \        if c == 'o' {\n            if current_note_length_index == 0 {\n    \
    \            current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            }\n      \
    \      current_note.push(c);\n            current_note_length += 1;\n        \
    \    current_note_length_index += 1;\n        } else if c == '|' {\n         \
    \   if current_note_length_index == 0 {\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            }\n            current_note.push(c);\n            current_note_length\
    \ += 1;\n            current_note_length_index += 1;\n        } else if c == '\
    \ ' {\n            if current_note_length_index == 0 {\n                current_note\
    \ = String::new();\n                current_note_length = 0;\n               \
    \ current_note_length_index = 0;\n            }\n            current_note.push(c);\n\
    \            current_note_length += 1;\n            current_note_length_index\
    \ += 1;\n        } else {\n            if current_note_length_index == 0 {\n \
    \               current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            }\n      \
    \      current_note.push(c);\n            current_note_length += 1;\n        \
    \    current_note_length_index += 1;\n        }\n        if current_note_length_index\
    \ == 4 {\n            beats.push(current_beat + current_note_length);\n      \
    \      current_beat = 0;\n            current_note_length = 0;\n            current_note_length_index\
    \ = 0;\n        }\n    }\n    beats.push(current_beat + current_note_length);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new", "    let mut\
    \ beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != 'o');\n    let mut current_note = 0;\n    for note in notes {\n        let\
    \ mut current_beat = 0;\n        note.for_each(|c| {\n            match c {\n\
    \                'o' => beats.push(current_beat),\n                '|' => beats.push(current_beat\
    \ + 1),\n                '.' => current_beat += 1,\n                _ => current_beat\
    \ += 1,\n            }\n        });\n        current_note += 1;\n    }\n    beats",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = ", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note =\
    \ String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != '|');\n    for note in notes {\n        let mut beat = 0;\n \
    \       let mut last_note = note.1;\n        for _ in 0..note.0 {\n          \
    \  beat += 1;\n            last_note = notes[notes.len() - 1].1;\n        }\n\
    \        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index48\
    \ = 1;\n    let mut current_", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string {\n        if c == 'o' {\n            current_note\
    \ = String::new();\n            current_note_length = 0;\n            current_beat\
    \ += 1;\n            beats.push(current_beat);\n        } else if c == '|' {\n\
    \            current_beat += 1;\n            beats.push(current_beat);\n     \
    \   } else if c == '.' {\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n            beats.push(current_beat);\n        } else {\n           \
    \ current_note.push(c);\n            current_note_length += 1;\n        }\n  \
    \  }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_len = 0;\n   \
    \ let mut current_note_char = 0;\n    let mut current_note_char_len = 0;\n   \
    \ let mut current_note_char_char = 0;\n    let mut current_note_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char = 0;\n    let mut current_note_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char = 0;\n    let mut\
    \ current_note_char_char_char_char_char_char_len = 0;\n    let mut current_note_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_len = 0;\n\
    \    let mut current_note_char_char_char_char_char_char_char_char = 0;\n    let\
    \ mut current_note_char_char_char_char_char_char_char_char_len = 0;\n    let mut\
    \ current_note_char_char_char_char_char_char_char_char_char = 0;\n    let mut\
    \ current_note_char_char_char_char_char_char_char_char_char_len = 0;\n    let\
    \ mut current_note_char_char_char_char_char_char_char_char_char_char = 0;\n  \
    \  let mut current_note_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = 0;\n    let mut current_note_char_char_char_char_", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_value = 0;\n    let mut current_note_length_value_length\
    \ = 0;\n    let mut current_note_length_value_length_index = 0;\n    let mut current_note_length_value_length_value\
    \ = 0;\n    let mut current_note_length_value_length_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n", "   \
    \ let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            current_note += c.to_ascii_lowercase();\n        }\n    }\n \
    \   beats.push(current_beat);\n    current_beat = 0;\n    current_note.trim().to_string().chars().for_each(|c|\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            current_note += c.to_ascii_lowercase();\n        }\n    });\n\
    \    beats.push(current_beat);\n    current_beat = 0;\n    current_note.trim().to_string().chars().for_each(|c|\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            current_note += c.to_ascii_lowercase();\n        }\n    });\n\
    \    beats.push(current_beat);\n    current_beat = 0;\n    current_note.trim().to_string().chars().for_each(|c|\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n", "    let mut beats = Vec::new();\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != 'o');\n    for note in notes {\n        note = note.unwrap();\n        if\
    \ note == 'o' {\n            beats.push(4);\n        } else {\n            beats.push(note\
    \ as isize);\n        }\n    }\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length", "    let mut beats = vec![];\n    let\
    \ mut notes = music_string.split_whitespace();\n    for note in notes {\n    \
    \    if note.len() == 1 {\n            beats.push(4);\n        } else {\n    \
    \        let mut beat = 1;\n            let mut last_note = note[0];\n       \
    \     for c in note.chars().skip(1) {\n                let note = match c {\n\
    \                    'o' => 4,\n                    'o|' => 2,\n             \
    \       '.|' => 1,\n                    _ => panic!(\"Unknown note {}\", c),\n\
    \                };\n                if note != last_note {\n                \
    \    beat += 1;\n                }\n                last_note = note;\n      \
    \      }\n            beats.push(beat);\n        }\n    }\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_", "    let mut\
    \ beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = vec![];\n    let\
    \ mut current_note = String::from(\"\");\n    let mut current_beat = 0;\n    let\
    \ mut current_beats: isize = 0;\n    let mut current_notes: isize = 0;\n    for\
    \ c in music_string.chars() {\n        if c == ' ' {\n            if current_notes.is_empty()\
    \ {\n                notes.push(current_note);\n                current_note =\
    \ String::from(\"\");\n                current_beat = 0;\n                current_beats\
    \ = 0;\n                current_notes = 0;\n            } else {\n           \
    \     current_notes.push(current_note);\n                current_note = String::from(\"\
    \");\n                current_beat = 0;\n                current_beats = 0;\n\
    \                current_notes = 0;\n            }\n        } else {\n       \
    \     if current_note.is_empty() {\n                current_note = String::from(c);\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        }\n        if current_note.is_empty() {\n            current_beats +=\
    \ 1;\n        } else {\n            current_beats += 1;\n            if current_notes.is_empty()\
    \ {\n                current_notes.push(current_note);\n                current_note\
    \ = String::from(\"\");\n                current_beat = 0;\n                current_beats\
    \ = 0;\n                current_notes = 0;\n            } else {\n           \
    \     current_notes.push(current_note);\n                current_note = String::from(\"\
    \");\n                current_beat = 0;\n                current_beats = 0;\n\
    \                current_notes = 0;\n            }\n        }\n    }\n    if current_notes.is_empty()\
    \ {\n        current_notes.push(current_note);\n    }\n    for note in current_notes\
    \ {\n        beats.push(current_beats);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_whitespace() {\n            continue;\n        }\n      \
    \  if c.is_ascii_digit() {\n            current_note = c.to_string();\n      \
    \      current_note_len = c.len() as isize;\n        } else {\n            if\
    \ current_note.len() == 0 {\n                continue;\n            }\n      \
    \      beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = String::new();\n            current_note_len = c.len() as isize;\n       \
    \ }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let\
    \ mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut\
    \ current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6\
    \ = 0;\n    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n\
    \    let mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n   \
    \ let mut current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let\
    \ mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n    let mut\
    \ current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17\
    \ = 0;\n    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 =\
    \ 0;\n    let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n\
    \    let mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n  \
    \  let mut current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let\
    \ mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n    let mut\
    \ current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30\
    \ = 0;\n    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 =\
    \ 0;\n    let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n\
    \    let mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n  \
    \  let mut current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let\
    \ mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n    let mut\
    \ current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43\
    \ = 0;\n    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 =\
    \ 0;\n    let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n\
    \    let mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n  \
    \  let mut current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let\
    \ mut current_note_oct52 = 0;\n    let mut current_note_oct53", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_octave = 0;\n    let mut current_length = 0;\n    let mut\
    \ current_length_index = 0;\n    let mut current_length_index2 = 0;\n    let mut\
    \ current_length_index3 = 0;\n    let mut current_length_index4 = 0;\n    let\
    \ mut current_length_index5 = 0;\n    let mut current_length_index6 = 0;\n   \
    \ let mut current_length_index7 = 0;\n    let mut current_length_index8 = 0;\n\
    \    let mut current_length_index9 = 0;\n    let mut current_length_index10 =\
    \ 0;\n    let mut current_length_index11 = 0;\n    let mut current_length_index12\
    \ = 0;\n    let mut current_length_index13 = 0;\n    let mut current_length_index14\
    \ = 0;\n    let mut current_length_index15 = 0;\n    let mut current_length_index16\
    \ = 0;\n    let mut current_length_index17 = 0;\n    let mut current_length_index18\
    \ = 0;\n    let mut current_length_index19 = 0;\n    let mut current_length_index20\
    \ = 0;\n    let mut current_length_index21 = 0;\n    let mut current_length_index22\
    \ = 0;\n    let mut current_length_index23 = 0;\n    let mut current_length_index24\
    \ = 0;\n    let mut current_length_index25 = 0;\n    let mut current_length_index26\
    \ = 0;\n    let mut current_length_index27 = 0;\n    let mut current_length_index28\
    \ = 0;\n    let mut current_length_index29 = 0;\n    let mut current_length_index30\
    \ = 0;\n    let mut current_length_index31 = 0;\n    let mut current_length_index32\
    \ = 0;\n    let mut current_length_index33 = 0;\n    let mut current_length_index34\
    \ = 0;\n    let mut current_length_index35 = 0;\n    let mut current_length_index36\
    \ = 0;\n    let mut current_length_index37 = 0;\n    let mut current_length_index38\
    \ = 0;\n    let mut current_length_index39 = 0;\n    let mut current_length_index40\
    \ = 0;\n    let mut current_length_index41 = 0;\n    let mut current_length_index42\
    \ = 0;\n    let mut current_length_index43 = 0;\n    let mut current_length_index44\
    \ = 0;\n    let mut current_length_index45 = 0;\n    let mut current_length_index46\
    \ = 0;\n    let mut current_length_index47 = 0;\n    let mut current_length_index48\
    \ = 0;\n    let mut current_length_index49 = 0;\n    let mut current_length_index50\
    \ = 0;\n    let mut current_length_index51 = 0;\n    let mut current_length_index52\
    \ = 0;\n    let mut current_length_index53", "    let mut beats: Vec<isize> =\
    \ vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '|' {\n                current_beat\
    \ = 1;\n            } else if c.to_ascii_lowercase() == '.' {\n              \
    \  current_beat = 2;\n            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \            }\n        } else {\n            current_note += c.to_ascii_lowercase();\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        match c {\n \
    \           'o' => current_note = String::from(\"o\"),\n            'o|' => current_note\
    \ = String::from(\"o|\"),\n            '.|' => current_note = String::from(\"\
    .|\"),\n            _ => continue,\n        }\n        beats.push(current_beat);\n\
    \        current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length = 0;\n    let\
    \ mut current_note_length_to_beat_with_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        } else {\n            if current_note.is_empty() {\n                println!(\"\
    Invalid music string\");\n                return beats;\n            }\n     \
    \       let note = current_note.trim_end().to_string();\n            beats.push(note.parse().unwrap());\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave: isize = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c == 'o' {\n                if\
    \ current_note.is_empty() {\n                    current_note = String::from(\"\
    o\");\n                    current_octave = 0;\n                } else {\n   \
    \                 current_note = String::from(current_note + \"o\");\n       \
    \         }\n            } else if c == '|' {\n                if current_note.is_empty()\
    \ {\n                    current_note = String::from(\"|\");\n               \
    \     current_octave = 0;\n                } else {\n                    current_note\
    \ = String::from(current_note + \"|\");\n                }\n            } else\
    \ if c == '.' {\n                if current_note.is_empty() {\n              \
    \      current_note = String::from(\".\");\n                    current_octave\
    \ = 0;\n                } else {\n                    current_note = String::from(current_note\
    \ + \".\");\n                }\n            } else {\n                let note\
    \ = c.to_ascii_lowercase();\n                if note == \"o\" {\n            \
    \        current_note = String::from(\"o\");\n                    current_octave\
    \ = 0;\n                } else if note == \"|\" {\n                    current_note\
    \ = String::from(\"|\");\n                    current_octave = 0;\n          \
    \      } else if note == \".\" {\n                    current_note = String::from(\"\
    .\");\n                    current_octave = 0;\n                } else {\n   \
    \                 current_note = String::from(note);\n                }\n    \
    \        }\n        } else {\n            if current_note.is_empty() {\n     \
    \           beats.push(current_beat);\n                current_beat = 0;\n   \
    \         } else {\n                current_beat = current_beat + 1;\n       \
    \     }\n            current_note = String::new();\n            current_octave\
    \ = 0;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_len = 0;\n    for\
    \ c in music_string {\n        if c.is_ascii() {\n            current_note.push_str(&c.to_string());\n\
    \            current_note_len = c.len();\n        } else {\n            if current_note_len\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  return beats;\n            }\n            beats.push(current_beat);\n     \
    \       current_beat = 0;\n            current_note.clear();\n            current_note_len\
    \ = c.len();\n        }\n    }\n    beats.push(current_beat);\n    beats", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 1;\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 2;\n            } else {\n            \
    \    current_note.push(c);\n                current_note_length += 1;\n      \
    \      }\n        } else {\n            if current_note.is_empty() {\n       \
    \         println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            let note = current_note.trim_left_matches('o').trim_left_matches('|').trim_left_matches('.');\n\
    \            beats.push(current_beat + note.chars().filter(|c| c.is_ascii()).count()\
    \ as isize);\n            current_beat = 0;\n            current_note = String::new();\n\
    \            current_note_length = 0;\n        }\n    }\n    beats.push(current_beat\
    \ + current_note.chars().filter(|c| c.is_ascii()).count() as isize);\n    beats",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        match c {\n            'o' | 'o|' => current_note += 1,\n       \
    \     '.|' => current_note += 2,\n            _ => {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 0;\n      \
    \          current_note_length = 1;\n            }\n        }\n        current_beat\
    \ += 1;\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = 0;\n    current_note_length = 1;\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    for c in music_string.chars() {\n   \
    \     if c == 'o' {\n            if current_note != String::new() {\n        \
    \        beats.push(current_beat);\n                current_beat = 0;\n      \
    \          current_note = String::new();\n            }\n            current_note_length\
    \ = 0;\n            current_note.push_str(&c.to_string());\n        } else if\
    \ c == '|' {\n            if current_note != String::new() {\n               \
    \ beats.push(current_beat);\n                current_beat = 0;\n             \
    \   current_note = String::new();\n            }\n            current_note_length\
    \ = 1;\n            current_note.push_str(&c.to_string());\n        } else if\
    \ c == '.' {\n            if current_note != String::new() {\n               \
    \ beats.push(current_beat);\n                current_beat = 0;\n             \
    \   current_note = String::new();\n            }\n            current_note_length\
    \ = 2;\n            current_note.push_str(&c.to_string());\n        } else {\n\
    \            current_note.push_str(&c.to_string());\n            current_note_length\
    \ += 1;\n        }\n        current_beat += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_beats_left\
    \ = 0;\n    let mut last_note = -1;\n    let mut last_beat = -1;\n    let mut\
    \ last_beats_left = 0;\n    while let Some(note) = notes.next() {\n        if\
    \ note.1 == last_note {\n            last_beats_left += 1;\n        } else {\n\
    \            beats.push(current_beats_left);\n            current_beats_left =\
    \ 0;\n            current_beat = 0;\n            current_note = note.1;\n    \
    \        last_beat = current_note;\n            last_beats_left = 0;\n       \
    \ }\n        if note.1 == current_note {\n            current_beat += 1;\n   \
    \     } else {\n            current_beats_left += 1;\n        }\n        last_note\
    \ = note.1;\n    }\n    beats.push(current_beats_left);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_is_last\
    \ = false;\n\n    for c in music_string.chars() {\n        match c {\n       \
    \     'o' => current_note_is_last = true,\n            'o|' => current_note_is_last\
    \ = false,\n            '.|' => current_note_is_last = false,\n            'o'\
    \ => current_note = c.to_string(),\n            '|' => current_octave += 1,\n\
    \            '.' => current_octave -= 1,\n            _ => (),\n        }\n\n\
    \        if current_note_is_last {\n            beats.push(current_beat);\n  \
    \          current_beat = 0;\n            current_note_is_last = false;\n    \
    \    }\n\n        current_beat += 1;\n    }\n\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_index = 0;\n    let mut current_note_length =\
    \ 0;\n    while current_note_index < notes.len() {\n        let note = notes[current_note_index].to_string();\n\
    \        let note = note.trim_left_matches('o|');\n        let note = note.trim_left_matches('.|');\n\
    \        let note = note.trim_left_matches('o');\n        let note = note.trim_left_matches('.');\n\
    \        let note = note.trim_left_matches('|');\n        let note = note.trim_left_matches('\
    \ ');\n        let note = note.trim_left_matches('o');\n        let note = note.trim_left_matches('|');\n\
    \        let note = note.trim_left_matches(' ');\n        let note = note.trim_left_matches('.');\n\
    \        let note = note.trim_left_matches('|');\n        let note = note.trim_left_matches('\
    \ ');\n        let note = note.trim_left_matches('o');\n        let note = note.trim_left_matches('|');\n\
    \        let note = note.trim_left_matches(' ');\n        let note = note.trim_left_matches('.');\n\
    \        let note = note.trim_left_matches('|');\n        let note = note.trim_left_matches('\
    \ ');\n        let note = note.trim_left_matches('o');\n        let note = note.trim_left_matches('|');\n\
    \        let note = note.trim_left_matches(' ');\n        let note = note.trim_left_matches('.');\n\
    \        let note = note.trim_left_matches('|');\n        let note = note.trim_left_matches('\
    \ ');\n        let note = note.trim_left_matches('o');\n        let note = note.trim_left_matches('|');\n\
    \        let note = note.trim_left_matches(' ');\n        let note = note.trim_left_matches('.');\n\
    \        let note = note.trim_left_matches('|');\n        let note = note.trim_left_matches('\
    \ ');\n        let note = note.trim_left_matches('o');\n        let note = note.trim_left_matches('|');\n\
    \        let note = note.trim_left_matches(' ');\n        let note = note.trim_left_matches('.');\n\
    \        let note = note.trim_left_matches('", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c == 'o' {\n            if current_beat\
    \ == 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_beat += 1;\n            }\n        } else if c == '|'\
    \ {\n            if current_beat == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_beat += 1;\n            }\n   \
    \     } else if c == '.' {\n            if current_beat == 0 {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n            } else {\n                current_beat\
    \ += 1;\n            }\n        } else {\n            current_note.push(c);\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ c)| c != '|').collect::<Vec<_>>();\n    let mut last_note = notes.len() - 1;\n\
    \    let mut last_beat = 0;\n    let mut last_beats = vec![];\n    for note in\
    \ notes {\n        let beat = note.1.to_digit(10).unwrap();\n        if note.1\
    \ == last_note {\n            last_beats.push(beat);\n        } else {\n     \
    \       beats.push(beat);\n            last_beats.push(beat);\n        }\n   \
    \     last_beat = beat;\n        last_note = note.1;\n    }\n    last_beats.push(beats.len());\n\
    \    last_beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::from(\"\");\n    let mut current_note_length\
    \ = 0;\n    for c in music_string {\n        if c == 'o' {\n            if current_note.len()\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  return beats;\n            }\n            beats.push(current_beat);\n     \
    \       current_beat = 0;\n            current_note = String::from(\"\");\n  \
    \          current_note_length = 0;\n        } else if c == '|' {\n          \
    \  if current_note.len() == 0 {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::from(\"\");\n\
    \            current_note_length = 0;\n        } else if c == '.' {\n        \
    \    if current_note.len() == 0 {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            current_beat +=\
    \ 1;\n        } else {\n            current_note += c;\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats"]
stop_tokens:
- "\n}"

name: HumanEval_17_parse_music
language: rs
prompt: "/// Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n/// Your task is to parse this string and return vector of integers\
  \ corresponding to how many beats does each\n/// not last.\n/// Here is a legend:\n\
  /// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts two beats\n\
  /// '.|' - quater note, lasts one beat\n/// >>> parse_music(String::from(\"o o|\
  \ .| o| o| .| .| .| .| o o\"))\n/// vec![4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfn parse_music(music_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_music;\n    assert_eq!(candidate(String::from(\"\
  \")), Vec::<isize>::new());\n    assert_eq!(candidate(String::from(\"o o o o\")),\
  \ vec![4, 4, 4, 4]);\n    assert_eq!(candidate(String::from(\".| .| .| .|\")), vec![1,\
  \ 1, 1, 1]);\n    assert_eq!(candidate(String::from(\"o| o| .| .| o o o o\")), vec![2,\
  \ 2, 1, 1, 4, 4, 4, 4]);\n    assert_eq!(candidate(String::from(\"o| .| o| .| o\
  \ o| o o|\")), vec![2, 1, 2, 1, 4, 2, 4, 2]);\n}\n"
completions: ["    let mut beats = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    for c in music_string.chars() {\n   \
    \     if c.is_ascii() {\n            current_note += c.to_string();\n        }\
    \ else {\n            if current_note.len() == 1 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n            current_note += c.to_string();\n        }\n    }\n\
    \    beats.push(current_beat);\n    current_beat = 0;\n    current_note.len()",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_index = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_value\
    \ = 0;\n    let mut current_note_length_value_index = 0;\n    let mut current_note_length_value_value\
    \ = 0;\n    let mut current_note_length_value_value_index = 0;\n    let mut current_note_length_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave: isize\
    \ = 0;\n    let mut current_note_len: isize = 0;\n    let mut current_note_octave:\
    \ isize = 0;\n    let mut current_note_octave_len: isize = 0;\n    let mut current_note_octave_octave:\
    \ isize = 0;\n    let mut current_note_octave_octave_len: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave: isize = 0;\n    let mut current_note_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave: isize = 0;\n\
    \    let mut current_note_octave_octave_octave_octave_len: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave: isize = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave_octave_len: isize = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave_octave_octave: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_len: isize = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_octave_len: isize = 0;\n\
    \    let mut current_note_octave_octave_octave_octave_octave_octave_len: isize\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_len:\
    \ isize = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_type = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = ", "    let mut beats_vec: Vec<isize> = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string {\n        if c == 'o' {\n            if current_beat\
    \ > 0 {\n                beats_vec.push(current_beat);\n                current_beat\
    \ = 0;\n            }\n            current_note = String::new();\n        } else\
    \ if c == '|' {\n            if current_note.is_empty() {\n                println!(\"\
    Invalid music string\");\n                break;\n            }\n            beats_vec.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '.' {\n            if current_note.is_empty() {\n      \
    \          println!(\"Invalid music string\");\n                break;\n     \
    \       }\n            beats_vec.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        } else {\n        \
    \    current_note.push(c);\n            current_beat += 1;\n        }\n    }\n\
    \    if current_beat > 0 {\n        beats_vec.push(current_beat);\n    }\n   \
    \ beats_vec", "    let mut beats = vec![];\n    let mut current_beat = 0;\n  \
    \  let mut current_note = String::new();\n    for c in music_string.chars() {\n\
    \        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            current_note += c.to_ascii_lowercase();\n        }\n    }\n \
    \   beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length = 0;\n    let\
    \ mut current_note_length_to_beat_with_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat = 0;\n   \
    \ let mut last_beat_index = 0;\n    let mut last_beat_index2 = 0;\n    let mut\
    \ last_beat_index3 = 0;\n    let mut last_beat_index4 = 0;\n    let mut last_beat_index5\
    \ = 0;\n    let mut last_beat_index6 = 0;\n    let mut last_beat_index7 = 0;\n\
    \    let mut last_beat_index8 = 0;\n    let mut last_beat_index9 = 0;\n    let\
    \ mut last_beat_index10 = 0;\n    let mut last_beat_index11 = 0;\n    let mut\
    \ last_beat_index12 = 0;\n    let mut last_beat_index13 = 0;\n    let mut last_beat_index14\
    \ = 0;\n    let mut last_beat_index15 = 0;\n    let mut last_beat_index16 = 0;\n\
    \    let mut last_beat_index17 = 0;\n    let mut last_beat_index18 = 0;\n    let\
    \ mut last_beat_index19 = 0;\n    let mut last_beat_index20 = 0;\n    let mut\
    \ last_beat_index21 = 0;\n    let mut last_beat_index22 = 0;\n    let mut last_beat_index23\
    \ = 0;\n    let mut last_beat_index24 = 0;\n    let mut last_beat_index25 = 0;\n\
    \    let mut last_beat_index26 = 0;\n    let mut last_beat_index27 = 0;\n    let\
    \ mut last_beat_index28 = 0;\n    let mut last_beat_index29 = 0;\n    let mut\
    \ last_beat_index30 = 0;\n    let mut last_beat_index31 = 0;\n    let mut last_beat_index32\
    \ = 0;\n    let mut last_beat_index33 = 0;\n    let mut last_beat_index34 = 0;\n\
    \    let mut last_beat_index35 = 0;\n    let mut last_beat_index36 = 0;\n    let\
    \ mut last_beat_index37 = 0;\n    let mut last_beat_index38 = 0;\n    let mut\
    \ last_beat_index39 = 0;\n    let mut last_beat_index40 = 0;\n    let mut last_beat_index41\
    \ = 0;\n    let mut last_beat_index42 = 0;\n    let mut last_beat_index43 = 0;\n\
    \    let mut last_beat_index44 = 0;\n    let mut last_beat_index45 = 0;\n    let\
    \ mut last_beat_index46 = 0;\n    let mut last_beat_index47 = 0;\n    let mut\
    \ last_beat_index48 = 0;\n    let mut last_beat_index49 = 0;\n    let mut last_beat_index50\
    \ = 0;\n    let mut last_beat_index51 = 0;\n    let mut last_beat", "    let mut\
    \ beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n    let mut ", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.clone();\n    let mut current_beat = 0;\n  \
    \  while current_note.is_not_empty() {\n        let note = current_note.clone();\n\
    \        let beat = current_beat;\n        if note == \"o\" {\n            beats.push(beat);\n\
    \            current_beat += 4;\n        } else if note == \"o|\" {\n        \
    \    beats.push(beat);\n            current_beat += 2;\n        } else if note\
    \ == \".|\" {\n            beats.push(beat);\n            current_beat += 1;\n\
    \        } else {\n            beats.push(beat);\n            current_beat +=\
    \ 1;\n        }\n        current_note.pop();\n    }\n    beats", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_beats:\
    \ isize = 0;\n    while notes.len() > 0 {\n        let note = notes.remove(0);\n\
    \        note = note.chars().next().unwrap();\n        if note == 'o' {\n    \
    \        beats.push(current_beats);\n            current_beats += 4;\n       \
    \     current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_beat", "    let mut beats: Vec<isize> = Vec::new();\n   \
    \ let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n \
    \   let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_note_length += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o' {\n              \
    \  current_note_length += 1;\n            } else if c.to_ascii_lowercase() ==\
    \ '|' {\n                current_beat += 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                current_beat += 1;\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let ", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::from(\"\"\
    );\n    let mut current_beat = 0;\n    let mut current_octave = 0;\n    let mut\
    \ current_length = 0;\n    let mut current_length_index = 0;\n    let mut current_length_index2\
    \ = 0;\n    let mut current_length_index3 = 0;\n    let mut current_length_index4\
    \ = 0;\n    let mut current_length_index5 = 0;\n    let mut current_length_index6\
    \ = 0;\n    let mut current_length_index7 = 0;\n    let mut current_length_index8\
    \ = 0;\n    let mut current_length_index9 = 0;\n    let mut current_length_index10\
    \ = 0;\n    let mut current_length_index11 = 0;\n    let mut current_length_index12\
    \ = 0;\n    let mut current_length_index13 = 0;\n    let mut current_length_index14\
    \ = 0;\n    let mut current_length_index15 = 0;\n    let mut current_length_index16\
    \ = 0;\n    let mut current_length_index17 = 0;\n    let mut current_length_index18\
    \ = 0;\n    let mut current_length_index19 = 0;\n    let mut current_length_index20\
    \ = 0;\n    let mut current_length_index21 = 0;\n    let mut current_length_index22\
    \ = 0;\n    let mut current_length_index23 = 0;\n    let mut current_length_index24\
    \ = 0;\n    let mut current_length_index25 = 0;\n    let mut current_length_index26\
    \ = 0;\n    let mut current_length_index27 = 0;\n    let mut current_length_index28\
    \ = 0;\n    let mut current_length_index29 = 0;\n    let mut current_length_index30\
    \ = 0;\n    let mut current_length_index31 = 0;\n    let mut current_length_index32\
    \ = 0;\n    let mut current_length_index33 = 0;\n    let mut current_length_index34\
    \ = 0;\n    let mut current_length_index35 = 0;\n    let mut current_length_index36\
    \ = 0;\n    let mut current_length_index37 = 0;\n    let mut current_length_index38\
    \ = 0;\n    let mut current_length_index39 = 0;\n    let mut current_length_index40\
    \ = 0;\n    let mut current_length_index41 = 0;\n    let mut current_length_index42\
    \ = 0;\n    let mut current_length_index43 = 0;\n    let mut current_length_index44\
    \ = 0;\n    let mut current_length_index45 = 0;\n    let mut current_length_index46\
    \ = 0;\n    let mut current_length_index47 = 0;\n    let mut current_length_index48\
    \ = 0;\n    let mut current_length_index49 = 0;\n    let mut current_length_index50\
    \ = 0;\n    let mut current_", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note_length = 0;\n    for\
    \ c in music_string.chars() {\n        if c == 'o' {\n            if current_note_length\
    \ == 0 {\n                notes.push(current_note);\n                current_note\
    \ = String::new();\n                current_beat = 0;\n                current_note_length\
    \ = 0;\n            }\n            current_note_length += 1;\n        } else if\
    \ c == '|' {\n            if current_note_length == 0 {\n                notes.push(current_note);\n\
    \                current_note = String::new();\n                current_beat =\
    \ 0;\n                current_note_length = 0;\n            }\n            current_note_length\
    \ += 1;\n        } else if c == ' ' {\n            if current_note_length == 0\
    \ {\n                notes.push(current_note);\n                current_note =\
    \ String::new();\n                current_beat = 0;\n                current_note_length\
    \ = 0;\n            }\n            current_note_length += 1;\n        } else {\n\
    \            if current_note_length == 0 {\n                notes.push(current_note);\n\
    \                current_note = String::new();\n                current_beat =\
    \ 0;\n                current_note_length = 0;\n            }\n            current_note_length\
    \ += 1;\n            current_note.push_str(&c);\n        }\n    }\n    for note\
    \ in notes {\n        beats.push(current_beat + 4);\n    }\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&'static str> =\
    \ vec![];\n    let mut last_note = String::new();\n    let mut last_beat = 0;\n\
    \    let mut last_beat_size = 0;\n    let mut last_beat_length = 0;\n    let mut\
    \ last_beat_length_size = 0;\n    let mut last_beat_length_length = 0;\n    let\
    \ mut last_beat_length_length_size = 0;\n    let mut last_beat_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_size = 0;\n    let mut\
    \ last_beat_length_length_length_length_length = 0;\n    let mut last_beat_length_length_length_length_length_size\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_size\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_length = 0;\n\
    \    let mut last_beat_length_length_length_length_length_size = 0;\n    let mut\
    \ last_beat_length_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mut last_beat_length_length_length_length_length_size = 0;\n \
    \   let mut last_beat_length_length_length_length_length_length = 0;\n    let\
    \ mut last_beat_length_length_length_length_length_size = 0;\n    let mut last_beat_length_length_length_length_length_length\
    \ = 0;\n    let mu", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else {\n       \
    \         current_note += c.to_ascii_lowercase();\n            }\n        } else\
    \ {\n            if current_note.is_empty() {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = String::new();\n        }\n    }\n    beats.push(current_beat);\n    beats"]
stop_tokens:
- "\n}"

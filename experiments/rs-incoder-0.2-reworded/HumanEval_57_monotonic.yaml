name: HumanEval_57_monotonic
language: rs
prompt: "/// Return true is vector elements are monotonically increasing or decreasing.\n\
  /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20, 4,\
  \ 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
  \ Vec<isize>) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
  \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
  \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n \
  \   assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
  \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
  \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
completions: ["    let mut i = 0;\n    let mut j = l.len() - 1;\n    let mut is_increasing\
    \ = true;\n    let mut is_decreasing = true;\n    while i < j {\n        if l[i]\
    \ > l[j] {\n            is_decreasing = false;\n        }\n        if l[i] < l[j]\
    \ {\n            is_increasing = false;\n        }\n        if l[i] > l[j] {\n\
    \            is_decreasing = false;\n        }\n        if l[i] < l[j] {\n   \
    \         is_increasing = false;\n        }\n        i += 1;\n        j -= 1;\n\
    \    }\n    is_increasing || is_decreasing", "    let mut i = 0;\n    let mut\
    \ j = 0;\n    let mut is_increasing = true;\n    let mut is_decreasing = true;\n\
    \    for &x in l {\n        if i > j {\n            j = i;\n        }\n      \
    \  if x < i {\n            is_decreasing = false;\n        }\n        if x > j\
    \ {\n            is_increasing = false;\n        }\n        i += 1;\n        j\
    \ += 1;\n    }\n    is_increasing || is_decreasing", "    let mut i = 0;\n   \
    \ let mut j = 0;\n    let mut min_value = l[0];\n    let mut max_value = l[0];\n\
    \    while i < l.len() {\n        if l[i] < min_value {\n            min_value\
    \ = l[i];\n        }\n        if l[i] > max_value {\n            max_value = l[i];\n\
    \        }\n        i += 1;\n    }\n    i == l.len() || l[i] < min_value || l[i]\
    \ > max_value", "    let mut i = 0;\n    let mut j = 0;\n    let mut is_increasing\
    \ = true;\n    let mut is_decreasing = true;\n    while i < l.len() {\n      \
    \  if l[i] < l[j] {\n            is_decreasing = false;\n        } else {\n  \
    \          is_increasing = false;\n        }\n        if i == j {\n          \
    \  break;\n        }\n        if l[i] > l[j] {\n            i += 1;\n        }\
    \ else {\n            j += 1;\n        }\n    }\n    is_increasing || is_decreasing",
  "    let mut i = 0;\n    let mut j = 1;\n    let mut k = l.len() - 1;\n    while\
    \ i <= k {\n        if l[i] < l[j] {\n            i += 1;\n        } else if l[i]\
    \ > l[j] {\n            j -= 1;\n        } else {\n            return false;\n\
    \        }\n    }\n    true", "    let mut i = 0;\n    let mut j = 0;\n    let\
    \ mut k = l.len();\n    while i < k {\n        if l[i] < l[j] {\n            i\
    \ += 1;\n        } else if l[i] > l[j] {\n            j += 1;\n        } else\
    \ {\n            i += 1;\n            j += 1;\n        }\n        if i == k {\n\
    \            return true;\n        }\n    }\n    false", "    let mut i = 0;\n\
    \    let mut j = 1;\n    let mut k = l.len() - 1;\n    while i <= k {\n      \
    \  if l[i] < l[j] {\n            i += 1;\n        } else if l[i] > l[j] {\n  \
    \          j += 1;\n        } else {\n            return true;\n        }\n  \
    \  }\n    return false;", "    let mut i = 0;\n    let mut j = 0;\n    let mut\
    \ is_increasing = true;\n    let mut is_decreasing = true;\n    while i < l.len()\
    \ {\n        if l[i] > l[j] {\n            is_increasing = false;\n        }\n\
    \        if l[i] < l[j] {\n            is_decreasing = false;\n        }\n   \
    \     i += 1;\n        j += 1;\n    }\n    !is_increasing && !is_decreasing",
  "    let mut i = 0;\n    let mut j = 0;\n    let mut k = l.len() - 1;\n    while\
    \ i < k {\n        if l[i] < l[j] {\n            i += 1;\n        } else if l[i]\
    \ > l[j] {\n            j += 1;\n        } else {\n            return true;\n\
    \        }\n    }\n    false", "    let mut i = 0;\n    let mut j = 0;\n    let\
    \ mut k = l.len() - 1;\n    let mut is_increasing = true;\n\n    while i < k {\n\
    \        if l[i] > l[j] {\n            is_increasing = false;\n            break;\n\
    \        }\n        if l[i] < l[j] {\n            break;\n        }\n        i\
    \ += 1;\n        j += 1;\n    }\n\n    is_increasing", "    let mut i = 0;\n \
    \   let mut j = 0;\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    while i < l.len() {\n        if l[j] > l[j + 1] {\n           \
    \ is_increasing = false;\n        } else {\n            is_decreasing = false;\n\
    \        }\n        i += 1;\n        j += 1;\n    }\n    is_increasing || is_decreasing",
  "    let mut i = 0;\n    let mut j = 0;\n    let mut is_increasing = true;\n   \
    \ let mut is_decreasing = true;\n    while i < l.len() {\n        if l[i] < l[j]\
    \ {\n            is_increasing = false;\n        } else {\n            is_decreasing\
    \ = false;\n        }\n        if i == j {\n            break;\n        }\n  \
    \      i += 1;\n        j += 1;\n    }\n    is_increasing || is_decreasing", " \
    \   let mut i = 0;\n    let mut j = 1;\n    let mut k = l.len() - 1;\n    while\
    \ i <= k {\n        if l[i] < l[j] {\n            i += 1;\n        } else if l[i]\
    \ > l[j] {\n            j -= 1;\n        } else {\n            return false;\n\
    \        }\n    }\n    true", "    let mut i = 0;\n    let mut j = 1;\n    let\
    \ mut is_increasing = true;\n    let mut is_decreasing = true;\n    while i <\
    \ l.len() {\n        if l[i] < l[j] {\n            is_increasing = false;\n  \
    \      } else {\n            is_decreasing = false;\n        }\n        if i ==\
    \ j {\n            break;\n        }\n        i += 1;\n        j += 1;\n    }\n\
    \    is_increasing || is_decreasing", "    let mut i = 0;\n    let mut j = 0;\n\
    \    let mut k = l.len();\n    while i < k {\n        if l[i] < l[j] {\n     \
    \       i += 1;\n        } else if l[i] > l[j] {\n            j += 1;\n      \
    \  } else {\n            return true;\n        }\n    }\n    false", "    let\
    \ mut i = 0;\n    let mut j = 0;\n    let mut is_increasing = true;\n    let mut\
    \ is_decreasing = true;\n    while i < l.len() {\n        if l[i] < l[j] {\n \
    \           is_decreasing = false;\n        }\n        if l[i] > l[j] {\n    \
    \        is_increasing = false;\n        }\n        i += 1;\n        j += 1;\n\
    \    }\n    !is_increasing && !is_decreasing", "    let mut i = 0;\n    let mut\
    \ j = 0;\n    let mut is_increasing = true;\n    let mut is_decreasing = true;\n\
    \n    while i < l.len() {\n        if l[j] < l[i] {\n            is_decreasing\
    \ = false;\n        } else {\n            is_increasing = false;\n        }\n\n\
    \        if j == 0 {\n            is_decreasing = is_decreasing && l[j] > l[i];\n\
    \        } else {\n            is_increasing = is_increasing && l[j] < l[i];\n\
    \        }\n\n        i += 1;\n        j += 1;\n    }\n\n    is_increasing ||\
    \ is_decreasing", "    let mut i = 0;\n    let mut j = l.len() - 1;\n    while\
    \ i < j {\n        if l[i] > l[j] {\n            i += 1;\n        } else {\n \
    \           j -= 1;\n        }\n    }\n    i == j", "    let mut min_value = l[0];\n\
    \    let mut max_value = l[0];\n    for i in l.iter().rev() {\n        if *i <\
    \ min_value {\n            min_value = *i;\n        }\n        if *i > max_value\
    \ {\n            max_value = *i;\n        }\n    }\n    min_value <= max_value",
  "    let mut i = 0;\n    let mut j = 0;\n    let mut is_increasing = true;\n   \
    \ let mut is_decreasing = true;\n    while i < l.len() {\n        if l[j] < l[i]\
    \ {\n            i += 1;\n        } else {\n            j += 1;\n        }\n \
    \       if i == j {\n            is_increasing = is_increasing && l[i] < l[j];\n\
    \            is_decreasing = is_decreasing && l[i] > l[j];\n        }\n    }\n\
    \    is_increasing || is_decreasing"]
stop_tokens:
- "\n}"

name: HumanEval_141_file_name_check
language: rs
prompt: "/// Create a function which takes a string representing a file's name, and\
  \ returns\n/// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  /// A file's name is considered to be valid if and only if all the following conditions\
  \ \n/// are met:\n/// - There should not be more than three digits ('0'-'9') in\
  \ the file's name.\n/// - The file's name contains exactly one dot '.'\n/// - The\
  \ substring before the dot should not be empty, and it starts with a letter from\
  \ \n/// the latin alphapet ('a'-'z' and 'A'-'Z').\n/// - The substring after the\
  \ dot should be one of these: ['txt', 'exe', 'dll']\n/// Examples:\n/// >>> file_name_check(String::from(\"\
  example.txt\"))\n/// String::from(\"Yes\")\n/// >>> file_name_check(String::from(\"\
  1example.dll\"))\n/// String::from(\"No\")\nfn file_name_check(file_name: String)\
  \ -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = file_name_check;\n    assert_eq!(candidate(String::from(\"\
  example.txt\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"\
  1example.dll\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  s1sdf3.asd\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  K.dll\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"MY16FILE3.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"His12FILE94.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_Y.txt\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"?aREYA.exe\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"/this_is_valid.dll\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.wow\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txtexe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"#this2_i4s_5valid.ten\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"@this1_is6_valid.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_12valid.6exe4.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"all.exe.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_No.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"Is3youfault.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"no_one#knows.dll\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"1I563_Yes3.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_Yes3.txtt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final..txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final132\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_f4indsartal132.\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\".txt\")), String::from(\"\
  No\"));\n    assert_eq!(candidate(String::from(\"s.\")), String::from(\"No\"));\n\
  }\n"
completions: ["    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n\
    \    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter_pos = 0;\n    let mut dot_pos_end_letter_pos\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end = 0;\n    let mut dot_pos_end_letter_pos_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_2 = dot_pos_2 + 1;\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = dot_pos_3 + 1;\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = dot_pos_4 + 1;\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = dot_pos_5 + 1;\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = dot_pos_6 + 1;\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = dot_pos_7 + 1;\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = dot_pos_8 + 1;\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = dot_pos_9 + 1;\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_10 = dot_pos_10 + 1;\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = dot_pos_11 + 1;\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut ", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name.chars().next().unwrap();\n \
    \           if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos_2 = file_name.find('.')\n\
    \                    if dot_pos_2 == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos_3\
    \ = file_name.find('.')\n                        if dot_pos_3 == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_pos_4 = file_name.find('.')\n\
    \                            if dot_pos_4 == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_pos_5 = file_name.find('.')\n   \
    \                             if dot_pos_5 == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_pos_6 = file_name.find('.')\n\
    \                                    if dot_pos_6 == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_pos_7\
    \ = file_name.find('.')\n                                        if dot_pos_7\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_pos_8 = file_name.find('.')\n           \
    \                                 if dot_pos_8 == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_pos_9 = file_name.find('.')\n                          \
    \                      if dot_pos_9 == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_pos_10 = file_name.find('.')\n                        \
    \                            if dot_pos_10 == String::npos {\n               \
    \                                         String::from(\"No\")\n             \
    \                                       } else {\n                           \
    \                             let mut dot_pos_11 = file_name.find('.')\n     \
    \                                                   if dot_pos_11 == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_pos_12 =\
    \ file_name.find('.')\n                                                      \
    \      if dot_pos_12 == String::npos {\n                                     \
    \                           String::from(\"No\")\n                           \
    \                                 } else {\n                                 \
    \                               let mut dot_pos_13 = file_name.find('.')\n   \
    \                                                             if dot_", "    if\
    \ file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n        let\
    \ mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos {\n  \
    \          String::from(\"No\")\n        } else {\n            let mut dot_pos_end\
    \ = dot_pos;\n            dot_pos_end += 1;\n            let mut dot_pos_start\
    \ = dot_pos;\n            dot_pos_start += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter\
    \ += 1;\n            let mut dot_pos_start_letter = dot_pos_start;\n         \
    \   dot_pos_start_letter += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n\
    \            dot_pos_end_letter += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter\
    \ += 1;\n            let mut dot_pos_start_letter = dot_pos_start;\n         \
    \   dot_pos_start_letter += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n\
    \            dot_pos_end_letter += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter\
    \ += 1;\n            let mut dot_pos_start_letter = dot_pos_start;\n         \
    \   dot_pos_start_letter += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n\
    \            dot_pos_end_letter += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    while dot_pos_end < file_name.len() {\n\
    \        let mut dot_pos_end = dot_pos_end + 1;\n        if dot_pos_end > file_name.len()\
    \ {\n            break;\n        }\n        let mut dot_pos_start = dot_pos_end\
    \ - 1;\n        if dot_pos_start < 0 {\n            dot_pos_start = 0;\n     \
    \   }\n        let mut dot_pos_start_letter = dot_pos_start;\n        while dot_pos_start_letter\
    \ < dot_pos_start {\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n", "    let mut file_name_len = file_name.len();\n \
    \   let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    while dot_pos != String::npos\
    \ {\n        if file_name_len > 3 {\n            return String::from(\"No\");\n\
    \        }\n        if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos\
    \ - 1] != String::from('9') {\n            return String::from(\"No\");\n    \
    \    }\n        if file_name[dot_pos - 1] != String::from('.') {\n           \
    \ return String::from(\"No\");\n        }\n        if file_name[dot_pos - 2] !=\
    \ String::from('a') && file_name[dot_pos - 2] != String::from('z') && file_name[dot_pos\
    \ - 2] != String::from('A') && file_name[dot_pos - 2] != String::from('Z') {\n\
    \            return String::from(\"No\");\n        }\n        dot_pos = file_name.find('.')\n\
    \        file_name_len += 1;\n    }\n    \n    if file_name_len != 1 {\n     \
    \   return String::from(\"No\");\n    }\n    \n    if file_name[0] != String::from('a')\
    \ && file_name[0] != String::from('z') && file_name[0] != String::from('A') &&\
    \ file_name[0] != String::from('Z') {\n        return String::from(\"No\");\n\
    \    }\n    \n    String::from(\"Yes\")", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        let mut dot_pos_end = dot_pos;\n       \
    \ dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n \
    \       let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n      \
    \  let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n        let mut\
    \ dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        let mut dot_pos_end = dot_pos;\n       \
    \ dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n \
    \       let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n      \
    \  let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n        let mut\
    \ dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        let mut dot_pos_end = dot_pos;\n       \
    \ dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n \
    \       let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n      \
    \  let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n        let mut\
    \ dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n    while dot_pos\
    \ < dot_len {\n        let mut dot_char = file_name[dot_pos];\n        if dot_char\
    \ == '.' {\n            dot_pos = dot_pos + 1;\n            dot_len = dot_len\
    \ - dot_pos;\n        } else {\n            break;\n        }\n    }\n    let\
    \ mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n        let mut\
    \ dot_pos = dot_pos + 1;\n        let mut dot_len = file_name.len();\n       \
    \ while dot_pos < dot_len {\n            let mut dot_char = file_name[dot_pos];\n\
    \            if dot_char == '.' {\n                dot_pos = dot_pos + 1;\n  \
    \              dot_len = dot_len - dot_pos;\n            } else {\n          \
    \      break;\n            }\n        }\n        let mut dot_char = file_name[dot_pos];\n\
    \        if dot_char == '.' {\n            let mut dot_pos = dot_pos + 1;\n  \
    \          let mut dot_len = file_name.len();\n            while dot_pos < dot_len\
    \ {\n                let mut dot_char = file_name[dot_pos];\n                if\
    \ dot_char == '.' {\n                    dot_pos = dot_pos + 1;\n            \
    \        dot_len = dot_len - dot_pos;\n                } else {\n            \
    \        break;\n                }\n            }\n            let mut dot_char\
    \ = file_name[dot_pos];\n            if dot_char == '.' {\n                return\
    \ String::from(\"Yes\");\n            }\n        }\n    }\n    return String::from(\"\
    No\");", "    let mut file_name = file_name.to_string();\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_letter()).count();\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count();\n\
    \    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count()\
    \ == 0 &&\n    file_name.chars().filter(", "    if file_name.len() > 3 {\n   \
    \     String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos = file_name.find('.')\n\
    \                    if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            if dot_pos == dot_pos + 1 {\n               \
    \                 String::from(\"Yes\")\n                            } else {\n\
    \                                String::from(\"No\")\n                      \
    \      }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\")\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = String::from(\"a\");\n    let mut dot_pos_end_letter = String::from(\"z\"\
    );\n    let mut dot_pos_end_letter_pos = 0;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = ", "    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.contains(\".\") {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_letter()\
    \ || c != 'a' && c != 'z' || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count(|c| c == '.') != 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| c == '.') !=\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_letter = dot_pos;\n    let mut dot_pos_letter2 = dot_pos;\n    let mut\
    \ dot_pos_letter3 = dot_pos;\n    let mut dot_pos_letter4 = dot_pos;\n    let\
    \ mut dot_pos_letter5 = dot_pos;\n    let mut dot_pos_letter6 = dot_pos;\n   \
    \ let mut dot_pos_letter7 = dot_pos;\n    let mut dot_pos_letter8 = dot_pos;\n\
    \    let mut dot_pos_letter9 = dot_pos;\n    let mut dot_pos_letter10 = dot_pos;\n\
    \    let mut dot_pos_letter11 = dot_pos;\n    let mut dot_pos_letter12 = dot_pos;\n\
    \    let mut dot_pos_letter13 = dot_pos;\n    let mut dot_pos_letter14 = dot_pos;\n\
    \    let mut dot_pos_letter15 = dot_pos;\n    let mut dot_pos_letter16 = dot_pos;\n\
    \    let mut dot_pos_letter17 = dot_pos;\n    let mut dot_pos_letter18 = dot_pos;\n\
    \    let mut dot_pos_letter19 = dot_pos;\n    let mut dot_pos_letter20 = dot_pos;\n\
    \    let mut dot_pos_letter21 = dot_pos;\n    let mut dot_pos_letter22 = dot_pos;\n\
    \    let mut dot_pos_letter23 = dot_pos;\n    let mut dot_pos_letter24 = dot_pos;\n\
    \    let mut dot_pos_letter25 = dot_pos;\n    let mut dot_pos_letter26 = dot_pos;\n\
    \    let mut dot_pos_letter27 = dot_pos;\n    let mut dot_pos_letter28 = dot_pos;\n\
    \    let mut dot_pos_letter29 = dot_pos;\n    let mut dot_pos_letter30 = dot_pos;\n\
    \    let mut dot_pos_letter31 = dot_pos;\n    let mut dot_pos_letter32 = dot_pos;\n\
    \    let mut dot_pos_letter33 = dot_pos;\n    let mut dot_pos_letter34 = dot_pos;\n\
    \    let mut dot_pos_letter35 = dot_pos;\n    let mut dot_pos_letter36 = dot_pos;\n\
    \    let mut dot_pos_letter37 = dot_", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    if file_name_len > 3 {\n        return String::from(\"No\");\n\
    \    }\n    \n    let mut first_letter = file_name[dot_pos - 1..dot_pos];\n  \
    \  if first_letter != \"a\" && first_letter != \"A\" && first_letter != \"b\"\
    \ && first_letter != \"B\" && first_letter != \"c\" && first_letter != \"C\" &&\
    \ first_letter != \"d\" && first_letter != \"D\" && first_letter != \"e\" && first_letter\
    \ != \"E\" && first_letter != \"f\" && first_letter != \"F\" && first_letter !=\
    \ \"g\" && first_letter != \"G\" && first_letter != \"h\" && first_letter != \"\
    H\" && first_letter != \"i\" && first_letter != \"I\" && first_letter != \"j\"\
    \ && first_letter != \"J\" && first_letter != \"k\" && first_letter != \"K\" &&\
    \ first_letter != \"l\" && first_letter != \"L\" && first_letter != \"m\" && first_letter\
    \ != \"M\" && first_letter != \"n\" && first_letter != \"N\" && first_letter !=\
    \ \"o\" && first_letter != \"O\" && first_letter != \"p\" && first_letter != \"\
    P\" && first_letter != \"q\" && first_letter != \"Q\" && first_letter != \"r\"\
    \ && first_letter != \"R\" && first_letter != \"s\" && first_letter != \"S\" &&\
    \ first_letter != \"t\" && first_letter != \"T\" && first_letter != \"u\" && first_letter\
    \ != \"U\" && first_letter != \"v\" && first_letter != \"V\" && first_letter !=\
    \ \"w\" && first_letter != \"W\" && first_letter != \"x\" && first_letter != \"\
    X\" && first_letter != \"y\" && first_letter != \"Y\" && first_letter != \"z\"\
    \ && first_letter != \"Z\" {\n        return String::from(\"No\");\n    }\n  \
    \  \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_3 != dot_pos_4 {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_3 != dot_pos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_3 != dot_pos_2 {\n        return String::from(\"\
    No\");\n", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    while\
    \ dot_pos_start < dot_pos_end {\n        if file_name[dot_pos_start] >= 'a' &&\
    \ file_name[dot_pos_start] <= 'z' {\n            dot_pos_start_letter = dot_pos_start;\n\
    \            break;\n        }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter\
    \ >= dot_pos_start {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    while dot_pos_end_letter >= dot_pos_start\
    \ {\n        if file_name[dot_pos_end_letter] >= 'a' && file_name[dot_pos_end_letter]\
    \ <= 'z' {\n            break;\n        }\n        dot_pos_end_letter -= 1;\n\
    \    }\n    if dot_pos_end_letter < dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start_letter] == '.' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter] != 'txt'\
    \ && file_name[dot_pos_end_letter] != 'exe' && file_name[dot_pos_end_letter] !=\
    \ 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.len() <\
    \ 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.ends_with(\"\
    txt\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.ends_with(\"\
    exe\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.ends_with(\"\
    dll\") {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else\
    \ {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name.chars().next().unwrap();\n            if first_letter < 'a' || first_letter\
    \ > 'z' {\n                String::from(\"No\")\n            } else {\n      \
    \          let mut dot_pos = file_name.find('.')\n                if dot_pos ==\
    \ String::npos {\n                    String::from(\"No\")\n                }\
    \ else {\n                    let mut dot_pos = file_name.find('.')\n        \
    \            if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            let mut dot_pos = file_name.find('.')\n     \
    \                       if dot_pos == String::npos {\n                       \
    \         String::from(\"No\")\n                            } else {\n       \
    \                         let mut dot_pos = file_name.find('.')\n            \
    \                    if dot_pos == String::npos {\n                          \
    \          String::from(\"No\")\n                                } else {\n  \
    \                                  let mut dot_pos = file_name.find('.')\n   \
    \                                 if dot_pos == String::npos {\n             \
    \                           String::from(\"No\")\n                           \
    \         } else {\n                                        let mut dot_pos =\
    \ file_name.find('.')\n                                        if dot_pos == String::npos\
    \ {\n                                            String::from(\"No\")\n      \
    \                                  } else {\n                                \
    \            let mut dot_pos = file_name.find('.')\n                         \
    \                   if dot_pos == String::npos {\n                           \
    \                     String::from(\"No\")\n                                 \
    \           } else {\n                                                let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \    if dot_pos == String::npos {\n                                          \
    \          String::from(\"No\")\n                                            \
    \    } else {\n                                                    let mut dot_pos\
    \ = file_name.find('.')\n                                                    if\
    \ dot_pos == String::npos {\n                                                \
    \        String::from(\"No\")\n                                              \
    \      } else {\n                                                        let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \            if dot_pos == String::npos {\n                                  \
    \                          String::from(\"No\")\n                            \
    \                            } else {\n                                      \
    \                      let mut dot_pos = file_name.find('.')\n               \
    \                                             if dot_pos == String::npos {\n \
    \                                                               String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_pos\
    \ = file_name.find('.')\n                                                    \
    \            if dot_pos == String::npos {\n                                  \
    \                                  String::from(\"No\")\n                    \
    \                                            } else {\n                      \
    \                                              ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    if file_name.len()\
    \ < 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n    if\
    \ first_char < 'a' || first_char > 'z' {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos + 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[..dot_pos].chars().any(|c| c != 'a' && c != 'z'\
    \ && c != 'A' && c != 'Z') {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name[dot_pos + 2] != \"txt\" && file_name[dot_pos + 2] != \"exe\" &&\
    \ file_name[dot_pos + 2] != \"dll\" {\n        return String::from(\"No\");\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            break;\n        }\n        if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    while\
    \ dot_pos_start < dot_pos_end {\n        if file_name[dot_pos_start] >= 'a' &&\
    \ file_name[dot_pos_start] <= 'z' {\n            dot_pos_start_letter += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start_letter += 1;\n        }\n        if dot_pos_start_letter\
    \ >= 3 { \n            return String::from(\"No\");\n        }\n        dot_pos_start\
    \ += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end_letter {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    if file_name.len() < 3\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_letter = file_name.chars().next().unwrap();\n    if first_letter\
    \ < 'a' || first_letter > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 2] != 'txt' && file_name[dot_pos - 2] != 'exe'\
    \ && file_name[dot_pos - 2] != 'dll' {\n        return String::from(\"No\");\n\
    \    }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    loop {\n        if dot_pos_end == file_name.len() {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_end] != '\\\\\
    ' {\n            break;\n        }\n        dot_pos_end += 1;\n    }\n    let\
    \ mut dot_pos_start = dot_pos + 1;\n    loop {\n        if dot_pos_start == dot_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos_start]\
    \ != '\\\\' {\n            break;\n        }\n        dot_pos_start += 1;\n  \
    \  }\n    let mut dot_pos_start = dot_pos_start + 1;\n    loop {\n        if dot_pos_start\
    \ == dot_pos_end {\n            return String::from(\"No\");\n        }\n    \
    \    if file_name[dot_pos_start] != '\\\\' {\n            break;\n        }\n\
    \        dot_pos_start += 1;\n    }\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    loop {\n        if dot_pos_start == dot_pos_end {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_start] != '\\\
    \\' {\n            break;\n        }\n        dot_pos_start += 1;\n    }\n   \
    \ let mut dot_pos_start = dot_pos_start + 1;\n    loop {\n        if dot_pos_start\
    \ == dot_pos_end {\n            return String::from(\"No\");\n        }\n    \
    \    if file_name[dot_pos_start] != '\\\\' {\n            break;\n        }\n\
    \        dot_pos_start += 1;\n    }\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    loop {\n        if dot_pos_start == dot_pos_end {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_start] != '\\\
    \\' {\n            break;\n        }\n        dot_pos_start += 1;\n    }\n   \
    \ let mut dot_pos_start = dot_pos_start + 1;\n    loop {\n        if dot_pos_start\
    \ == dot_pos_end {\n            return String::from(\"No\");\n        }\n    \
    \    if file_name[dot_pos_start] != '\\\\' {\n            break;\n        }\n\
    \        dot_pos_start += 1;\n    }\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    loop {\n        if dot_pos_start == dot_pos_end {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_start] != '\\\
    \\' {\n            break;\n        }\n        dot_pos_start ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n    while dot_pos\
    \ < dot_len {\n        let mut dot_char = file_name[dot_pos];\n        if dot_char\
    \ == '.' {\n            dot_pos = dot_pos + 1;\n            dot_len = dot_len\
    \ - dot_pos;\n        } else {\n            break;\n        }\n    }\n    if dot_pos\
    \ == dot_len {\n        return String::from(\"No\");\n    }\n    let mut dot_char\
    \ = file_name[dot_pos];\n    if dot_char == '.' {\n        dot_pos = dot_pos +\
    \ 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let mut dot_char = file_name[dot_pos];\n\
    \    if dot_char == '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len\
    \ - dot_pos;\n    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char\
    \ == '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n\
    \    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n\
    \        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n\
    \    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n      \
    \  dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let\
    \ mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n        dot_pos\
    \ = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let mut dot_char\
    \ = file_name[dot_pos];\n    if dot_char == '.' {\n        dot_pos = dot_pos +\
    \ 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let mut dot_char = file_name[dot_pos];\n\
    \    if dot_char == '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len\
    \ - dot_pos;\n    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char\
    \ == '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n\
    \    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n\
    \        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n\
    \    let mut dot_char = file_name[dot_pos];\n    if dot_char == '", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        if file_name[dot_pos_end] != '0' && file_name[dot_pos_end]\
    \ != '9' {\n            return String::from(\"No\");\n        }\n        dot_pos_end\
    \ += 1;\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter != 'a' && first_letter != 'A' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start -= 1;\n\
    \    while dot_pos_start >= 0 {\n        if file_name[dot_pos_start] != '.' {\n\
    \            return String::from(\"No\");\n        }\n        dot_pos_start -=\
    \ 1;\n    }\n    if dot_pos_start == 0 {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 2 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 3 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 4 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 5 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 6 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 7 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 8 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 9 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 10 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 11 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 12 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 13 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 14 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_2 = file_name.find('.')\n    while dot_pos_2 != String::npos\
    \ && dot_pos_2 < file_name.len() {\n        if file_name[dot_pos_2] != 'a' &&\
    \ file_name[dot_pos_2] != 'A' && file_name[dot_pos_2] != 'b' && file_name[dot_pos_2]\
    \ != 'B' && file_name[dot_pos_2] != 'c' && file_name[dot_pos_2] != 'C' && file_name[dot_pos_2]\
    \ != 'd' && file_name[dot_pos_2] != 'D' && file_name[dot_pos_2] != 'e' && file_name[dot_pos_2]\
    \ != 'E' && file_name[dot_pos_2] != 'f' && file_name[dot_pos_2] != 'F' && file_name[dot_pos_2]\
    \ != 'g' && file_name[dot_pos_2] != 'G' && file_name[dot_pos_2] != 'h' && file_name[dot_pos_2]\
    \ != 'H' && file_name[dot_pos_2] != 'i' && file_name[dot_pos_2] != 'I' && file_name[dot_pos_2]\
    \ != 'j' && file_name[dot_pos_2] != 'J' && file_name[dot_pos_2] != 'k' && file_name[dot_pos_2]\
    \ != 'K' && file_name[dot_pos_2] != 'l' && file_name[dot_pos_2] != 'L' && file_name[dot_pos_2]\
    \ != 'm' && file_name[dot_pos_2] != 'M' && file_name[dot_pos_2] != 'n' && file_name[dot_pos_2]\
    \ != 'N' && file_name[dot_pos_2] != 'o' && file_name[dot_pos_2] != 'O' && file_name[dot_pos_2]\
    \ != 'p' && file_name[dot_pos_2] != 'P' && file_name[dot_pos_2] != 'q' && file_name[dot_pos_2]\
    \ != 'Q' && file_name[dot_pos_2] != 'r' && file_name[dot_pos_2] != 'R' && file_name[dot_pos_2]\
    \ != 's' && file_name[dot_pos_2] != 'S' && file_name[dot_pos_2] != 't' && file_name[dot_pos_2]\
    \ != 'T' && file_name[dot_pos_2] != 'u' && file_name[dot_pos_2] != 'U' && file_name[dot_pos_2]\
    \ != 'v' && file_name[dot_pos_2] != 'V' && file_name[dot_pos_2] != 'w' && file_name[dot_pos_2]\
    \ != 'W' && file_name[dot_pos_2] != 'x' && file_name[dot_pos_2] != 'X' && file_name[dot_pos_2]\
    \ != 'y' && file_name[dot_pos_2] != 'Y' && file_name[dot_pos_2] != 'z' && file_name[dot_pos_2]\
    \ != 'Z' {\n            return String::from(\"No\");\n        }\n        dot_pos_2\
    \ += ", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos;\n\
    \    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len2\
    \ = dot_pos_len;\n    let mut dot_pos_len3 = dot_pos_len;\n    let mut dot_pos_len4\
    \ = dot_pos_len;\n    let mut dot_pos_len5 = dot_pos_len;\n    let mut dot_pos_len6\
    \ = dot_pos_len;\n    let mut dot_pos_len7 = dot_pos_len;\n    let mut dot_pos_len8\
    \ = dot_pos_len;\n    let mut dot_pos_len9 = dot_pos_len;\n    let mut dot_pos_len10\
    \ = dot_pos_len;\n    let mut dot_pos_len11 = dot_pos_len;\n    let mut dot_pos_len12\
    \ = dot_pos_len;\n    let mut dot_pos_len13 = dot_pos_len;\n    let mut dot_pos_len14\
    \ = dot_pos_len;\n    let mut dot_pos_len15 = dot_pos_len;\n    let mut dot_pos_len16\
    \ = dot_pos_len;\n    let mut dot_pos_len17 = dot_pos_len;\n    let mut dot_pos_len18\
    \ = dot_pos_len;\n    let mut dot_pos_len19 = dot_pos_len;\n    let mut dot_pos_len20\
    \ = dot_pos_len;\n    let mut dot_pos_len21 = dot_pos_len;\n    let mut dot_pos_len22\
    \ = dot_pos_len;\n    let mut dot_pos_len23 = dot_pos_len;\n    let mut dot_pos_len24\
    \ = dot_pos_len;\n    let mut dot_pos_len25 = dot_pos_len;\n    let mut dot_pos_len26\
    \ = dot_pos_len;\n    let mut dot_pos_len27 = dot_pos_len;\n    let mut dot_pos_len28\
    \ = dot_pos_len;\n    let mut dot_pos_len29 = dot_pos_len;\n    let mut dot_pos_len30\
    \ = dot_pos_len;\n    let mut dot_pos_len31 = dot_pos_len;\n    let mut dot_pos_len32\
    \ = dot_pos_len;\n    let mut dot_pos_len33 = dot_pos_len;\n    let mut dot_pos_len34\
    \ = dot_pos_len;\n    let mut dot_pos_len35 = dot_pos_len;\n    let mut dot_pos_len36\
    \ = dot_pos_len;\n    let mut dot_pos_len37 = dot_pos_len;\n    let mut dot_pos_len38\
    \ = dot_pos_len;\n    let mut dot_pos_len39", "    if file_name.len() < 3 {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit() || c != '.' || c != 'a' &&\n        c != 'A' || c != 'z'\
    \ && c != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != 'a' &&\n        c != 'A' || c != 'z'\
    \ && c != 'Z' || c != '0' && c != '9') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' || c\
    \ != 'a' &&\n        c != 'A' || c != 'z' && c != 'Z' || c != '0' && c != '9'\
    \ || c != '.' ||\n        c != 'txt' || c != 'exe' || c != 'dll') {\n        return\
    \ String::from(\"No\");\n    }\n    return String::from(\"Yes\");", "    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end\
    \ += 1;\n    dot_pos_end += 1;\n    dot_pos_end += 1;\n    if dot_pos_end >= file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name[dot_pos\
    \ - 1];\n    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut second_letter = file_name[dot_pos_end];\n    if second_letter\
    \ < 'a' || second_letter > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    if first_letter != second_letter {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.len() > 3 {\n        return String::from(\"No\");\n \
    \   }\n    if file_name.len() < 3 {\n        return String::from(\"No\");\n  \
    \  }\n    if file_name.starts_with(String::from(\".\")) == false {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.ends_with(String::from(\".txt\"\
    )) == false {\n        return String::from(\"No\");\n    }\n    if file_name.ends_with(String::from(\"\
    .exe\")) == false {\n        return String::from(\"No\");\n    }\n    if file_name.ends_with(String::from(\"\
    .dll\")) == false {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String", "    let mut file_name = file_name.to_string();\n   \
    \ let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String", "    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_start = dot_pos + 1;\n    if dot_pos_start == 0 { return String::from(\"\
    No\") }\n    let mut dot_pos_start_end = dot_pos_end;\n    if dot_pos_start ==\
    \ dot_pos_end {\n        dot_pos_start_end = dot_pos_end;\n    }\n    let mut\
    \ dot_pos_start_end_2 = dot_pos_start_end;\n    if dot_pos_start_end_2 == dot_pos_end\
    \ {\n        dot_pos_start_end_2 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_3\
    \ = dot_pos_start_end_2;\n    if dot_pos_start_end_3 == dot_pos_end {\n      \
    \  dot_pos_start_end_3 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_4\
    \ = dot_pos_start_end_3;\n    if dot_pos_start_end_4 == dot_pos_end {\n      \
    \  dot_pos_start_end_4 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_5\
    \ = dot_pos_start_end_4;\n    if dot_pos_start_end_5 == dot_pos_end {\n      \
    \  dot_pos_start_end_5 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_6\
    \ = dot_pos_start_end_5;\n    if dot_pos_start_end_6 == dot_pos_end {\n      \
    \  dot_pos_start_end_6 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_7\
    \ = dot_pos_start_end_6;\n    if dot_pos_start_end_7 == dot_pos_end {\n      \
    \  dot_pos_start_end_7 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_8\
    \ = dot_pos_start_end_7;\n    if dot_pos_start_end_8 == dot_pos_end {\n      \
    \  dot_pos_start_end_8 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_9\
    \ = dot_pos_start_end_8;\n    if dot_pos_start_end_9 == dot_pos_end {\n      \
    \  dot_pos_start_end_9 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_10\
    \ = dot_pos_start_end_9;\n    if dot_pos_start_end_10 == dot_pos_end {\n     \
    \   dot_pos_start_end_10 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_11\
    \ = dot_pos_start_end_10;\n    if dot_pos_start_end_11 == dot_pos_end {\n    \
    \    dot_pos_start_end_11 = dot_pos_end;\n    }\n    let mut dot_pos_start_end_12\
    \ = dot_pos_start_end_11;\n    if dot_pos_start_end_12 == dot_", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_end_letter\
    \ = dot_", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    let mut file_name = file_name.clone();\n   \
    \ let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 2] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 3] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 4] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 5] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 6] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 7] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 8] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 9] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 10] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 11] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 12] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 13] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 14] != '.' {\n        return String::from", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '_' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if dot_pos == dot_pos_end\
    \ - 1 {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] == '.' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] == '_' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] >= 'a' && file_name[dot_pos - 1] <= 'z' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos - 1] >= 'A' && file_name[dot_pos - 1]\
    \ <= 'Z' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] == '.' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] == '_' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] >= 'a' && file_name[dot_pos - 1] <= 'z' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos - 1] >= 'A' && file_name[dot_pos - 1]\
    \ <= 'Z' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] == '.' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos\
    \ - 1] == '", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut first_letter = String::from(\"a\");\n    let\
    \ mut last_letter = String::from(\"z\");\n    let mut first_letter_pos = 0;\n\
    \    \n    while first_letter_pos < dot_pos {\n        if file_name[first_letter_pos]\
    \ >= 'a' && file_name[first_letter_pos] <= 'z' {\n            first_letter +=\
    \ file_name[first_letter_pos];\n            first_letter_pos += 1;\n        }\n\
    \        else {\n            return String::from(\"No\");\n        }\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == ", "    let mut file_name_str = file_name.to_string();\n\
    \    file_name_str.truncate(file_name_str.len() - 1);\n    let mut dot_pos = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_2 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_3 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_4 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_5 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_6 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_7 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_8 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_9 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_10 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_11 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_12 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_13 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_14 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_15 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_16 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_17 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_18 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_19 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_20 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.len());\n    let mut dot_pos_21 = file_name_str.find('.')\n\
    \        .unwrap_or(file_name_str.", "    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.contains(\".\") {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !", "    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_2 = file_name.find('.', dot_pos + 1);\n    if dot_pos_2\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_3 = file_name.find('.', dot_pos_2 + 1);\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.',\
    \ dot_pos_3 + 1);\n    if dot_pos_4 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_5 = file_name.find('.', dot_pos_4 + 1);\n \
    \   if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_6 = file_name.find('.', dot_pos_5 + 1);\n    if dot_pos_6\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_7 = file_name.find('.', dot_pos_6 + 1);\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.',\
    \ dot_pos_7 + 1);\n    if dot_pos_8 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_9 = file_name.find('.', dot_pos_8 + 1);\n \
    \   if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_10 = file_name.find('.', dot_pos_9 + 1);\n    if dot_pos_10\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_11 = file_name.find('.', dot_pos_10 + 1);\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.',\
    \ dot_pos_11 + 1);\n    if dot_pos_12 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_13 = file_name.find('.', dot_pos_12 + 1);\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.', dot_pos_13 + 1);\n    if dot_pos_14\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mu",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_end = dot_pos_end + 1;\n        if file_name[dot_pos_end]\
    \ != '\\0' {\n            return String::from(\"No\");\n        }\n        if\
    \ dot_pos_end == file_name.len() {\n            return String::from(\"No\");\n\
    \        }\n        if file_name[dot_pos_end] != '\\0' {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos_end] != '\\0' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_end] != '\\0'\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos_end]\
    \ != '\\0' {\n            return String::from(\"No\");\n        }\n        if\
    \ file_name[dot_pos_end] != '\\0' {\n            return String::from(\"No\");\n\
    \        }\n        if file_name[dot_pos_end] != '\\0' {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos_end] != '\\0' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_end] != '\\0'\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos_end]\
    \ != '\\0' {\n            return String::from(\"No\");\n        }\n        if\
    \ file_name[dot_pos_end] != '\\0' {\n            return String::from(\"No\");\n\
    \        }\n        if file_name[dot_pos_end] != '\\0' {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos_end] != '\\0' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_end] != '\\0'\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos_end]\
    \ != '\\0' {\n            return String::from(\"No\");\n        }\n        if\
    \ file_name[dot_pos_end] != '\\0' {\n            return String::from(\"No\");\n\
    \        }\n        if file_name[dot_pos_end] != '\\0' {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos_end] != '\\0' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_end] != '\\0'\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name[",
  "    let mut file_name = file_name.to_string();\n    if file_name.len() > 3 {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() < 3 {\n \
    \       return String::from(\"Yes\");\n    }\n    if file_name.contains(\".\"\
    ) {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\"0\") || file_name.starts_with(\"9\") {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    ..\") {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .exe\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .dll\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .rar\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .tar\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .tar.gz\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .tar.bz2\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .tar.xz\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .zip", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos > dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start2\
    \ = dot_pos_end;\n    let mut dot_pos_end2 = dot_pos_end;\n    let mut dot_pos_start3\
    \ = dot_pos_end;\n    let mut dot_pos_end3 = dot_pos_end;\n    let mut dot_pos_start4\
    \ = dot_pos_end;\n    let mut dot_pos_end4 = dot_pos_end;\n    let mut dot_pos_start5\
    \ = dot_pos_end;\n    let mut dot_pos_end5 = dot_pos_end;\n    let mut dot_pos_start6\
    \ = dot_pos_end;\n    let mut dot_pos_end6 = dot_pos_end;\n    let mut dot_pos_start7\
    \ = dot_pos_end;\n    let mut dot_pos_end7 = dot_pos_end;\n    let mut dot_pos_start8\
    \ = dot_pos_end;\n    let mut dot_pos_end8 = dot_pos_end;\n    let mut dot_pos_start9\
    \ = dot_pos_end;\n    let mut dot_pos_end9 = dot_pos_end;\n    let mut dot_pos_start10\
    \ = dot_pos_end;\n    let mut dot_pos_end10 = dot_pos_end;\n    let mut dot_pos_start11\
    \ = dot_pos_end;\n    let mut dot_pos_end11 = dot_pos_end;\n    let mut dot_pos_start12\
    \ = dot_pos_end;\n    let mut dot_pos_end12 = dot_pos_end;\n    let mut dot_pos_start13\
    \ = dot_pos_end;\n    let mut dot_pos_end13 = dot_pos_end;\n    let mut dot_pos_start14\
    \ = dot_pos_end;\n    let mut dot_pos_end14 = dot_pos_end;\n    let mut dot_pos_start15\
    \ = dot_pos_end;\n    let mut dot_pos_end15 = dot_pos_end;\n    let mut dot_pos_start16\
    \ = dot_pos_end;\n    let mut dot_pos_end16 = dot_pos_end;\n    let mut dot_pos_start17\
    \ = dot_pos_end;\n    let mut dot_pos_end17 = dot_pos_end;\n    let mut dot_pos_start18\
    \ = dot_pos_end;\n    let mut dot_pos_end18 = dot_pos_end;\n    let mut dot_pos_start19\
    \ = dot_pos_end;\n    let mut dot_", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_len = dot_pos -\
    \ file_name.len() - 1;\n    while dot_len >= 0 {\n        if file_name[dot_len]\
    \ != '0' && file_name[dot_len] != '9' {\n            return String::from(\"No\"\
    );\n        }\n        dot_len -= 1;\n    }\n    let mut first_letter = file_name[0];\n\
    \    if first_letter != 'a' && first_letter != 'A' {\n        return String::from(\"\
    No\");\n    }\n    let mut last_letter = file_name[file_name_len - 1];\n    if\
    \ last_letter != 'z' && last_letter != 'Z' {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == file_name_len {\n        return String::from(\"No\");\n   \
    \ }\n    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] != '.' && file_name[dot_pos - 2] != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2]\
    \ != '.' && file_name[dot_pos - 2] != '.' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] != '.' && file_name[dot_pos - 2] != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2]\
    \ != '.' && file_name[dot_pos - 2] != '.' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] != '.' && file_name[dot_pos - 2] != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2]\
    \ != '.' && file_name[dot_pos - 2] != '.' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] != '.' && file_name[dot_pos - 2] != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2]\
    \ != '.' && file_name[dot_pos - 2] != '.' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] != '.' && file_name[dot_pos - 2] != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2]\
    \ != '.' && file_name", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n\
    \    let mut dot_len = file_name.len();\n    while dot_pos < dot_len {\n     \
    \   let mut c = file_name[dot_pos];\n        if c != '0' && c != '9' {\n     \
    \       return String::from(\"No\");\n        }\n        dot_pos += 1;\n    }\n\
    \    let mut first_letter = file_name[0];\n    if first_letter != 'a' && first_letter\
    \ != 'A' {\n        return String::from(\"No\");\n    }\n    let mut last_letter\
    \ = file_name[dot_len - 1];\n    if last_letter != 'z' && last_letter != 'Z' {\n\
    \        return String::from(\"No\");\n    }\n    String::from(\"Yes\")", "  \
    \  if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.contains('.') == false {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != 'a' && c != 'z') {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'A' && c != 'Z')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0' && c != '9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a'\
    \ && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9' || c\
    \ != '.') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != '.' || c != 'txt' || c != 'exe' || c != 'dll') {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != '.' || c != 'txt' || c != 'exe' || c != 'dll') {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != '.' || c != 'txt' || c != 'exe' || c != 'dll') {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c ", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n   \
    \ let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n\
    \    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n    let mut dot_pos_len\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start = dot_pos_start;\n\
    \    let mut dot_pos_end = dot_pos_start;\n    let mut dot_pos_len = dot_pos_end\
    \ - dot_pos_start;\n    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end\
    \ = dot_pos_start;\n    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n \
    \   let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n\
    \    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n    let mut dot_pos_len\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start = dot_pos_start;\n\
    \    let mut dot_pos_end = dot_pos_start;\n    let mut dot_pos_len = dot_pos_end\
    \ - dot_pos_start;\n    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end\
    \ = dot_pos_start;\n    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n \
    \   let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n\
    \    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n    let mut dot_pos_len\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start = dot_pos_start;\n\
    \    let mut dot_pos_end = dot_pos_start;\n    let mut dot_pos_len = dot_pos_end\
    \ - dot_pos_start;\n    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end\
    \ = dot_pos_start;\n    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n \
    \   let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_start;\n\
    \    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let ", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_letter = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n    if dot_letter != 'txt' && dot_letter !=\
    \ 'exe' && dot_letter != 'dll' {\n        return String::from(\"No\");\n    }\n\
    \    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != '9' {\n        return String::from(\"No\");\n    }\n    if file_name.len()\
    \ < 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 2] != 'txt' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 3] != 'exe' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 4] != 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    if file_name.len() < 3 {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_index = file_name.rfind('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_index == 0 {\n  \
    \      return String::from(\"No\");\n    }\n    let mut first_letter = file_name[0..dot_index].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_index..].chars().any(|c| c != 'txt' && c !=\
    \ 'exe' && c != 'dll') {\n        return String::from(\"No\");\n    }\n    String::from(\"\
    Yes\")", "    if file_name.len() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_letter = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n    if dot_letter != 'txt' && dot_letter !=\
    \ 'exe' && dot_letter != 'dll' {\n        return String::from(\"No\");\n    }\n\
    \    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_start = dot_pos + 1;\n    \n    while\
    \ dot_pos_start < dot_pos_end {\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        \n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        \n   \
    \     let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        \n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        \n        let mut dot_pos_start = dot_pos_start;\n \
    \       let mut dot_pos_end = dot_pos_end;\n        \n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        \n   \
    \     let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        \n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        \n        let mut dot_pos_start = dot_pos_start;\n \
    \       let mut dot_pos_end = dot_pos_end;\n        \n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        \n   \
    \     let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        \n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        \n        let mut dot_pos_start = dot_pos_start;\n \
    \       let mut dot_pos_end = dot_pos_end;\n        \n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        \n   \
    \     let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        \n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        \n        let mut dot_pos_start = dot_pos_start;\n \
    \       let mut dot_pos_end = dot_pos_end;\n        \n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;", "    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\")\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let\
    \ mut dot_pos_start = dot_pos;\n    while dot_pos_end < file_name.len() {\n  \
    \      let mut dot_pos_end = dot_pos_end;\n        if dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n      \
    \      dot_pos_end += 1;\n        }\n        if dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end] <= 'Z' {\n      \
    \      dot_pos_end += 1;\n        }\n        if dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= '0' && file_name[dot_pos_end] <= '9' {\n      \
    \      dot_pos_end += 1;\n        }\n        if dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] != '.' {\n            return String::from(\"No\");\n\
    \        }\n        if dot_pos_end < file_name.len() && file_name[dot_pos_end]\
    \ == '.' {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end <\
    \ file_name.len() && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <=\
    \ 'z' {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end] <= 'Z' {\n      \
    \      dot_pos_end += 1;\n        }\n        if dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= '0' && file_name[dot_pos_end] <= '9' {\n      \
    \      dot_pos_end += 1;\n        }\n    }\n    if dot_pos_start == dot_pos {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos\
    \ + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start ==\
    \ dot_pos {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start\
    \ -= 1;\n    let mut dot_pos_first_letter = dot_pos_start;\n    while dot_pos_first_letter\
    \ > 0 && file_name[dot_pos_first_letter] >= 'a' && file_name[dot_pos_first_letter]\
    \ <= 'z' {\n        dot_pos_first_letter -= 1;\n    }\n    if dot_pos_first_letter\
    \ != 0 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_last_letter\
    \ = dot_pos_end;\n    while dot_pos_last_letter < file_name.len() && file_name[dot_pos_last_letter]\
    \ >= 'a' && file_name[dot_pos_last_letter] <= 'z' {\n        dot_pos_last_letter\
    \ += 1;\n    }\n    if dot_pos_last_letter != file_name.len() {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_first_letter = dot_pos_start;\n\
    \    while dot_pos_first_letter < file_name.len() && file_name[dot_pos_first_letter]\
    \ >= 'a' && file_name[dot_pos_first_letter] <= 'z' {\n        dot_pos_first_letter\
    \ += 1;\n    }\n    if dot_pos_first_letter != 0 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_last_letter = dot_pos_end;\n    while dot_pos_last_letter\
    \ > 0 && file_name[dot_pos_last_letter] >= 'a' && file_name[dot_pos_last_letter]\
    \ <= 'z' {\n        dot_pos_last_letter -= 1;\n    }\n    if dot_pos_last_letter\
    \ != file_name.len() {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_first_letter = dot_pos_start;\n    while dot_pos_first_letter < file_name.len()\
    \ && file_name[dot_pos_first_letter] >= 'a' && file_name[dot_pos_first_letter]\
    \ <= 'z' {\n        dot_pos_first_letter += 1;\n    }\n    if dot_pos_first_letter\
    \ != 0 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_last_letter\
    \ = dot_pos_end;\n    while dot_pos_last_letter > 0 && file_name[dot_pos_last_letter]\
    \ >= 'a' && file_name[dot_pos_last_letter] <= 'z' {\n        dot_pos_last_letter\
    \ -= 1;\n    }\n    if dot_pos_last_letter != file_name.len() {\n        return\
    \ String::from(\"", "    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut dot_pos_start_letter4\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter7 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter7 = dot_pos_end;\n    let mut dot_pos_start_letter8 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter13 = dot_pos_start;\n    let mut dot_pos_end_letter13 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter17 = dot_pos_start;\n    let mut dot_pos_end_letter17 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19 = dot_pos_start;\n\
    \    let mut dot_pos_", "    let mut file_name = file_name.to_string();\n    \n\
    \    if file_name.chars().count() > 3 {\n        file_name.truncate(3);\n    }\n\
    \    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().count() == 0 {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.chars().", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] == '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] >= 'a' && file_name[dot_pos_end - 1] <= 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 1] >= 'A' && file_name[dot_pos_end\
    \ - 1] <= 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] == '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] >= 'a' && file_name[dot_pos_end - 1] <= 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 1] >= 'A' && file_name[dot_pos_end\
    \ - 1] <= 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] == '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] >= 'a' && file_name[dot_pos_end - 1] <= 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 1] >= 'A' && file_name[dot_pos_end\
    \ - 1] <= 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] == '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] >= 'a' && file_name[dot_pos_end - 1] <= 'z' {\n        return ", "    let\
    \ mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = false;\n    while dot_pos_start < dot_pos_end\
    \ {\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <=\
    \ 'z' {\n            dot_pos_start_letter = true;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start_letter\
    \ = true;\n        }\n        if dot_pos_start_letter == false {\n           \
    \ break;\n        }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end ", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_ascii_digit() || c == '.') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_ascii_digit() ||\
    \ c == '.' || c == '_') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase() ||\
    \ c.is_ascii_uppercase() || c.is_ascii_digit() || c == '.' || c == '_' || c ==\
    \ '-') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_ascii_digit() || c == '.' || c == '_' || c == '-' || c == '.' || c == '-')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_ascii_digit() || c == '.' || c == '_' || c == '-' || c == '.' || c == '-'\
    \ || c == '-') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter", "    let mut dot_pos = file_name.find('.')\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    let mut dot_pos_4 = file_name.find('.')\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    let mut dot_pos_6 = file_name.find('.')\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    let mut dot_pos_8 = file_name.find('.')\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    let mut dot_pos_10 = file_name.find('.')\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    let mut dot_pos_12 = file_name.find('.')\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    let mut dot_pos_14 = file_name.find('.')\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    let mut dot_pos_16 = file_name.find('.')\n    let mut dot_pos_17 = file_name.find('.')\n\
    \    let mut dot_pos_18 = file_name.find('.')\n    let mut dot_pos_19 = file_name.find('.')\n\
    \    let mut dot_pos_20 = file_name.find('.')\n    let mut dot_pos_21 = file_name.find('.')\n\
    \    let mut dot_pos_22 = file_name.find('.')\n    let mut dot_pos_23 = file_name.find('.')\n\
    \    let mut dot_pos_24 = file_name.find('.')\n    let mut dot_pos_25 = file_name.find('.')\n\
    \    let mut dot_pos_26 = file_name.find('.')\n    let mut dot_pos_27 = file_name.find('.')\n\
    \    let mut dot_pos_28 = file_name.find('.')\n    let mut dot_pos_29 = file_name.find('.')\n\
    \    let mut dot_pos_30 = file_name.find('.')\n    let mut dot_pos_31 = file_name.find('.')\n\
    \    let mut dot_pos_32 = file_name.find('.')\n    let mut dot_pos_33 = file_name.find('.')\n\
    \    let mut dot_pos_34 = file_name.find('.')\n    let mut dot_pos_35 = file_name.find('.')\n\
    \    let mut dot_pos_36 = file_name.find('.')\n    let mut dot_pos_37 = file_name.find('.')\n\
    \    let mut dot_pos_38 = file_name.find('.')\n    let mut dot_pos_39 = file_name.find('.')\n\
    \    let mut dot_pos_40 = file_name.find('.')\n    let mut dot_pos_41 = file_name.find('.')\n\
    \    let mut dot_pos_42 = file_name.find('.')\n    let mut dot_pos_43 = file_name.find('.')\n\
    \    let mut dot_pos_44 = file_name.", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n        return ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let\
    \ mut dot_pos_start = dot_pos + 1;\n    while dot_pos_start < file_name.len()\
    \ {\n        let mut dot_pos_end = dot_pos_start;\n        while dot_pos_end <\
    \ file_name.len() {\n            if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' ||\n                file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' ||\n                file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n                dot_pos_end++;\n            } else {\n           \
    \     break;\n            }\n        }\n        if dot_pos_start == dot_pos_end\
    \ {\n            break;\n        }\n        let mut dot_pos_start = dot_pos_end;\n\
    \    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos > dot_pos_end {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos] != 'txt' &&\n        file_name[dot_pos]\
    \ != 'exe' &&\n        file_name[dot_pos] != 'dll' {\n        return String::from(\"\
    No\");\n    }\n    String::from(\"Yes\")", "    let mut file_name_chars = file_name.chars();\n\
    \    let mut dot_index = file_name_chars.find_first_of('.');\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);\n    let mut dot_index\
    \ = file_name_chars.find_first_not_of('.', dot_index);", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_start = dot_pos;\n        while dot_pos_start < dot_pos_end\
    \ && file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z' {\n  \
    \          dot_pos_start++;\n        }\n        let mut dot_pos_end = dot_pos\
    \ + 1;\n        while dot_pos_end < dot_pos_end && file_name[dot_pos_end] >= 'a'\
    \ && file_name[dot_pos_end] <= 'z' {\n            dot_pos_end++;\n        }\n\
    \        if dot_pos_start == dot_pos_end {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos_start > dot_pos {\n            dot_pos =\
    \ dot_pos_start;\n        }\n        if dot_pos_end < dot_pos_end {\n        \
    \    dot_pos_end = dot_pos_end;\n        }\n    }\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos] !=\
    \ 'a' && file_name[dot_pos] != 'z' {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos + 1] == '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 1] == '.' && file_name[dot_pos + 2]\
    \ != 'x' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 1] == '.' && file_name[dot_pos + 2] != 'x' && file_name[dot_pos + 3] != 'm'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos + 1]\
    \ == '.' && file_name[dot_pos + 2] != 'x' && file_name[dot_pos + 3] != 'm' &&\
    \ file_name[dot_pos + 4] != 'p' {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[dot_pos + 1] == '.' && file_name[dot_pos + 2] != 'x' && file_name[dot_pos\
    \ + 3] != 'm' && file_name[dot_pos + 4] != 'p' && file_name[dot_pos + 5] != 'l'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos + 1]\
    \ == '.' && file_name[dot_pos + 2] != 'x' && file_name[dot_pos + 3] != 'm' &&\
    \ file_name[dot_pos + 4] != 'p' && file_name[dot_pos + 5] != 'l' && file_name[dot_pos\
    \ + 6] != 'd' {\n        return String::", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter2 = dot_pos_start;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter3 = dot_pos_start;\n    let mut dot_pos_end_letter3\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter4 = dot_pos_end;\n    let mut dot_pos_start_letter5 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter7 = dot_pos_start;\n    let mut dot_pos_end_letter7\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter8 = dot_pos_end;\n    let mut dot_pos_start_letter9 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut dot_pos_start_letter13\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter14 = dot_pos_start;\n    let mut dot_pos_end_letter14 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut dot_pos_start_letter17\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter18 = dot_pos_start;\n    let mut dot_pos_end_letter18 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter", "    let mut file_name_len\
    \ = file_name.len();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let ", "    if file_name.chars().count() > 3 {\n        String::from(\"No\"\
    )\n    } else {\n        let mut dot_pos = file_name.rfind('.')\n        if dot_pos\
    \ == String::npos {\n            String::from(\"No\")\n        } else {\n    \
    \        let mut first_char = file_name[dot_pos - 1];\n            if first_char.chars().count()\
    \ > 1 {\n                String::from(\"No\")\n            } else {\n        \
    \        let mut first_char_lower = first_char.chars().next().unwrap();\n    \
    \            if first_char_lower != 'a' && first_char_lower != 'A' &&\n      \
    \              first_char_lower != 'b' && first_char_lower != 'B' &&\n       \
    \             first_char_lower != 'c' && first_char_lower != 'C' &&\n        \
    \            first_char_lower != 'd' && first_char_lower != 'D' &&\n         \
    \           first_char_lower != 'e' && first_char_lower != 'E' &&\n          \
    \          first_char_lower != 'f' && first_char_lower != 'F' &&\n           \
    \         first_char_lower != 'g' && first_char_lower != 'G' &&\n            \
    \        first_char_lower != 'h' && first_char_lower != 'H' &&\n             \
    \       first_char_lower != 'i' && first_char_lower != 'I' &&\n              \
    \      first_char_lower != 'j' && first_char_lower != 'J' &&\n               \
    \     first_char_lower != 'k' && first_char_lower != 'K' &&\n                \
    \    first_char_lower != 'l' && first_char_lower != 'L' &&\n                 \
    \   first_char_lower != 'm' && first_char_lower != 'M' &&\n                  \
    \  first_char_lower != 'n' && first_char_lower != 'N' &&\n                   \
    \ first_char_lower != 'o' && first_char_lower != 'O' &&\n                    first_char_lower\
    \ != 'p' && first_char_lower != 'P' &&\n                    first_char_lower !=\
    \ 'q' && first_char_lower != 'Q' &&\n                    first_char_lower != 'r'\
    \ && first_char_lower != 'R' &&\n                    first_char_lower != 's' &&\
    \ first_char_lower != 'S' &&\n                    first_char_lower != 't' && first_char_lower\
    \ != 'T' &&\n                    first_char_lower != 'u' && first_char_lower !=\
    \ 'U' &&\n                    first_char_lower != 'v' && first_char_lower != 'V'\
    \ &&\n                    first_char_lower != 'w' && first_char_lower != 'W' &&\n\
    \                    first_char_lower != 'x' && first_char_lower != 'X' &&\n \
    \                   first_char_lower != 'y' && first_char_lower != 'Y' &&\n  \
    \                  first_char_lower != 'z' && first_char_lower != 'Z' {\n    \
    \                String::from(\"No\")\n                } else {\n            \
    \        String::from(\"Yes\")\n                }\n            }\n        }",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n", "    let mut file_name = file_name.to_owned();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = file_name.find('.')\n    if dot_pos_start == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos_start + 1;\n\
    \    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_", "    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter4 = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter6 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter6 = dot_pos_end;\n    let mut dot_pos_start_letter7 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter8 = dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter10 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter10 = dot_pos_end;\n    let mut dot_pos_start_letter11\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter11 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter12 = dot_pos_start;\n    let mut dot_pos_end_letter12 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter13 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter13 = dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter16 = dot_pos_start;\n    let mut dot_pos_end_letter16 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter17 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter17 = dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19\
    \ = dot_pos_start;\n    let mut dot_pos_", "    if file_name.chars().count() >\
    \ 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name.chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos = file_name.find('.')\n\
    \                    if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            let mut dot_pos = file_name.find('.')\n     \
    \                       if dot_pos == String::npos {\n                       \
    \         String::from(\"No\")\n                            } else {\n       \
    \                         let mut dot_pos = file_name.find('.')\n            \
    \                    if dot_pos == String::npos {\n                          \
    \          String::from(\"No\")\n                                } else {\n  \
    \                                  let mut dot_pos = file_name.find('.')\n   \
    \                                 if dot_pos == String::npos {\n             \
    \                           String::from(\"No\")\n                           \
    \         } else {\n                                        let mut dot_pos =\
    \ file_name.find('.')\n                                        if dot_pos == String::npos\
    \ {\n                                            String::from(\"No\")\n      \
    \                                  } else {\n                                \
    \            let mut dot_pos = file_name.find('.')\n                         \
    \                   if dot_pos == String::npos {\n                           \
    \                     String::from(\"No\")\n                                 \
    \           } else {\n                                                let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \    if dot_pos == String::npos {\n                                          \
    \          String::from(\"No\")\n                                            \
    \    } else {\n                                                    let mut dot_pos\
    \ = file_name.find('.')\n                                                    if\
    \ dot_pos == String::npos {\n                                                \
    \        String::from(\"No\")\n                                              \
    \      } else {\n                                                        let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \            if dot_pos == String::npos {\n                                  \
    \                          String::from(\"No\")\n                            \
    \                            } else {\n                                      \
    \                      let mut dot_pos = file_name.find('.')\n               \
    \                                             if dot_pos == String::npos {\n \
    \                                                               String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_pos\
    \ = file_name.find('.')\n                                                    \
    \            if dot_pos == String::npos {\n                                  \
    \                                  String::from(\"No\")\n                    \
    \                                            } else {\n", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    if dot_pos > dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    while dot_pos_start > 0 && file_name[dot_pos_start - 1] >= 'a'\
    \ && file_name[dot_pos_start - 1] <= 'z' {\n        dot_pos_start -= 1;\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    while dot_pos_end < file_name.len() &&\
    \ file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n        dot_pos_end\
    \ += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start >\
    \ 0 && file_name[dot_pos_start - 1] >= 'A' && file_name[dot_pos_start - 1] <=\
    \ 'Z' {\n        dot_pos_start -= 1;\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    while dot_pos_end < file_name.len() && file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' {\n        dot_pos_end += 1;\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start > dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos_start\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start\
    \ - 1] != file_name[dot_pos_end - 1] {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos_start - 1] != file_name[dot_pos_end - 1] {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start -\
    \ 1] != file_name[dot_pos_end - 1] {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos_start - 1] != file_name[dot_pos_end - 1] {\n \
    \       return String::from(\"No\");\n    }\n    if file_name[dot_pos_start -\
    \ 1] != file_name[dot_pos_end - 1] {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos_start - 1]", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    while dot_pos_start < dot_pos_end {\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start_letter\
    \ += 1;\n        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start_letter += 1;\n        }\n        if dot_pos_start_letter\
    \ > 3 {\n            return String::from(\"No\");\n        }\n        dot_pos_start\
    \ += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_start_letter {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_start_letter +\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_start_letter\
    \ + 2 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start ==\
    \ dot_pos_start_letter + 3 {\n        return String::from(\"No\");\n    }\n  \
    \  if dot_pos_start == dot_pos_start_letter + 4 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_start_letter + 5 {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_start_letter +\
    \ 6 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_start_letter\
    \ + 7 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start ==\
    \ dot_pos_start_letter + 8 {\n        return String::from(\"No\");\n    }\n  \
    \  if dot_pos_start == dot_pos_start_letter + 9 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_start_letter + 10 {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_start_letter +\
    \ 11 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_start_letter\
    \ + 12 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start ==\
    \ dot_pos_start_letter + 13 {\n        return String::from(\"No\");\n    }\n \
    \   if dot_", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    let mut dot_pos_next = dot_pos + 1;\n    while dot_pos_next\
    \ < file_name.len() {\n        if file_name[dot_pos_next] >= 'a' && file_name[dot_pos_next]\
    \ <= 'z' {\n            dot_pos_start = dot_pos_next;\n        }\n        if file_name[dot_pos_next]\
    \ >= 'A' && file_name[dot_pos_next] <= 'Z' {\n            dot_pos_start = dot_pos_next;\n\
    \        }\n        dot_pos_next = dot_pos_next + 1;\n    }\n    if dot_pos_start\
    \ == dot_pos {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 2 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 3 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 4 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 5 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 6 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 7 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 8 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 9 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 10 {\n        return String::from(\"Yes\");\n    }\n    if\
    \ dot_pos_start == dot_pos_end + 11 {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos_start == dot_pos_end + 12 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 13 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end + 14 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 15 {", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_name = file_name.clone();\n\
    \    dot_name.truncate(dot_pos);\n    let mut dot_name_pos = 0;\n    let mut dot_name_len\
    \ = dot_name.len();\n    let mut dot_name_char = String::new();\n    while dot_name_pos\
    \ < dot_name_len {\n        dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \        if dot_name_char == String::from('.') {\n            dot_name_pos +=\
    \ 1;\n        } else {\n            break;\n        }\n    }\n    if dot_name_pos\
    \ == dot_name_len {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n    if dot_name_char\
    \ == String::from('.') {\n        dot_name_pos += 1;\n    }\n    let mut dot_name_char\
    \ = dot_name.chars().nth(dot_name_pos).unwrap();\n    if dot_name_char == String::from('.')\
    \ {\n        dot_name_pos += 1;\n    }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n    let mut dot_name_char = dot_name.chars().nth(dot_name_pos).unwrap();\n\
    \    if dot_name_char == String::from('.') {\n        dot_name_pos += 1;\n   \
    \ }\n", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_2 > dot_pos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos_3 > dot_pos_2 {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_4 > dot_pos_3\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos_5 > dot_pos_4 {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_6 > dot_pos_5\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos_7 > dot_pos_6 {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_8 > dot_pos_7\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos_9 > dot_pos_8 {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_10 > dot_pos_9\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n",
  "    let mut file_name = file_name.to_owned();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter", "    let mut file_name_chars\
    \ = file_name.chars();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars.iter();\n\
    \    let mut file_name_chars_iter = file_name_chars.iter();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos_2 > dot_pos_3 {\n        return String::from(\"No\");\n \
    \   }\n    if dot_pos < 2 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name[dot_pos-1] < 'a' || file_name[dot_pos-1] > 'z' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos] != 'a' && file_name[dot_pos]\
    \ != 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos+1]\
    \ < 'a' || file_name[dot_pos+1] > 'z' {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos+2] != 'a' && file_name[dot_pos+2] != 'z' {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos+3] != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos+4]\
    \ != 'txt' && file_name[dot_pos+4] != 'exe' && file_name[dot_pos+4] != 'dll' {\n\
    \        return String::from(\"No\");\n    }\n    return String::from(\"Yes\"\
    );", "    if file_name.len() > 3 {\n        return String::from(\"No\");\n   \
    \ }\n    if file_name.contains('.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\"a\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"A\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"0\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"9\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"_\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"$\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"%\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"*\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"(\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\")\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"~\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"\\\\\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"\\\"\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"'\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"<\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"=\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"?\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"|\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\",\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\";\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"[\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"]\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"{\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"}\") {\n        return String::from(\"\
    No\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start = dot_pos + 1;\n    while dot_pos_start < dot_pos_end {\n    \
    \    let mut char_pos = file_name.chars().position(|c| c == dot_pos).unwrap();\n\
    \        let mut char_pos_end = file_name.chars().position(|c| c == dot_pos_end).unwrap();\n\
    \        if char_pos == char_pos_end {\n            return String::from(\"No\"\
    );\n        }\n        if char_pos == char_pos_start {\n            return String::from(\"\
    No\");\n        }\n        if char_pos == char_pos_end - 1 {\n            return\
    \ String::from(\"No\");\n        }\n        if char_pos == char_pos_start - 1\
    \ {\n            return String::from(\"No\");\n        }\n        if char_pos\
    \ == char_pos_end - 2 {\n            return String::from(\"No\");\n        }\n\
    \        if char_pos == char_pos_start - 2 {\n            return String::from(\"\
    No\");\n        }\n        if char_pos == char_pos_end - 3 {\n            return\
    \ String::from(\"No\");\n        }\n        if char_pos == char_pos_start - 3\
    \ {\n            return String::from(\"No\");\n        }\n        if char_pos\
    \ == char_pos_end - 4 {\n            return String::from(\"No\");\n        }\n\
    \        if char_pos == char_pos_start - 4 {\n            return String::from(\"\
    No\");\n        }\n        if char_pos == char_pos_end - 5 {\n            return\
    \ String::from(\"No\");\n        }\n        if char_pos == char_pos_start - 5\
    \ {\n            return String::from(\"No\");\n        }\n        if char_pos\
    \ == char_pos_end - 6 {\n            return String::from(\"No\");\n        }\n\
    \        if char_pos == char_pos_start - 6 {\n            return String::from(\"\
    No\");\n        }\n        if char_pos == char_pos_end - 7 {\n            return\
    \ String::from(\"No\");\n        }\n        if char_pos == char_pos_start - 7\
    \ {\n            return String::from(\"No\");\n        }\n        if char_pos\
    \ == char_pos_end - 8 {\n            return String::from(\"No\");\n        }\n\
    \        if char_pos == char_pos_start - 8 {\n            return String::from(\"\
    No\");\n        }\n        if char_pos == char_pos_end - 9 {\n            return\
    \ String::from(\"No\");\n        }\n", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n \
    \   dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        if file_name[dot_pos_end]\
    \ >= 'a' && file_name[dot_pos_end] <= 'z' ||\n            file_name[dot_pos_end]\
    \ >= 'A' && file_name[dot_pos_end] <= 'Z' ||\n            file_name[dot_pos_end]\
    \ >= '0' && file_name[dot_pos_end] <= '9' {\n            break;\n        }\n \
    \       dot_pos_end += 1;\n    }\n    if dot_pos_end == file_name.len() {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name[dot_pos_end - 1]\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[0..dot_pos\
    \ - 1].is_empty() {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != 'a' && file_name[dot_pos - 1] != 'A' &&\n        file_name[dot_pos -\
    \ 1] != '0' && file_name[dot_pos - 1] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 1] != '.' || file_name[dot_pos + 2]\
    \ != 'txt' ||\n        file_name[dot_pos + 3] != 'exe' || file_name[dot_pos +\
    \ 4] != 'dll' {\n        return String::from(\"No\");\n    }\n    String::from(\"\
    Yes\")", "    let mut file_name_chars = file_name.chars();\n    let mut dot_count\
    \ = 0;\n    let mut first_char = false;\n    let mut first_char_valid = false;\n\
    \    let mut first_char_valid_file_name = false;\n    let mut first_char_valid_file_name_chars\
    \ = false;\n    let mut first_char_valid_file_name_chars_count = false;\n    let\
    \ mut first_char_valid_file_name_chars_count_minus_one = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_minus_one\
    \ = false;\n    let mut first_char_valid_file_name_chars_count_minus_one_valid_file_name_chars_count_min",
  "    let mut file_name = file_name.to_string();\n    file_name.truncate(3);\n  \
    \  file_name.push_str(\"0\");\n    file_name.push_str(\"1\");\n    file_name.push_str(\"\
    2\");\n    file_name.push_str(\"3\");\n    file_name.push_str(\"4\");\n    file_name.push_str(\"\
    5\");\n    file_name.push_str(\"6\");\n    file_name.push_str(\"7\");\n    file_name.push_str(\"\
    8\");\n    file_name.push_str(\"9\");\n    file_name.push_str(\"0\");\n    file_name.push_str(\"\
    1\");\n    file_name.push_str(\"2\");\n    file_name.push_str(\"3\");\n    file_name.push_str(\"\
    4\");\n    file_name.push_str(\"5\");\n    file_name.push_str(\"6\");\n    file_name.push_str(\"\
    7\");\n    file_name.push_str(\"8\");\n    file_name.push_str(\"9\");\n    file_name.push_str(\"\
    0\");\n    file_name.push_str(\"1\");\n    file_name.push_str(\"2\");\n    file_name.push_str(\"\
    3\");\n    file_name.push_str(\"4\");\n    file_name.push_str(\"5\");\n    file_name.push_str(\"\
    6\");\n    file_name.push_str(\"7\");\n    file_name.push_str(\"8\");\n    file_name.push_str(\"\
    9\");\n    file_name.push_str(\"0\");\n    file_name.push_str(\"1\");\n    file_name.push_str(\"\
    2\");\n    file_name.push_str(\"3\");\n    file_name.push_str(\"4\");\n    file_name.push_str(\"\
    5\");\n    file_name.push_str(\"6\");\n    file_name.push_str(\"7\");\n    file_name.push_str(\"\
    8\");\n    file_name.push_str(\"9\");\n    file_name.push_str(\"0\");\n    file_name.push_str(\"\
    1\");\n    file_name.push_str(\"2\");\n    file_name.push_str(\"3\");\n    file_name.push_str(\"\
    4\");\n    file_name.push_str(\"5\");\n    file_name.push_str(\"6\");\n    file_name.push_str(\"\
    7\");\n    file_name.push_str(\"8\");\n    file_name.push_str(\"9\");\n    file_name.push_str(\"\
    0\");\n    file_name.push_str(\"1\");\n    file_name.push_str(\"2\");\n    file_name.push_str(\"\
    3\");\n    file_name.push_str(\"4\");\n    file_name.push_str(\"5\");\n    file_name.push_str(\"\
    6\");\n    file_name.push_str(\"7\");\n    file_name.push_str(\"8\");\n    file_name.push_str(\"\
    9\");\n    file_name.push_str(\"0\");\n    file_name.push_str(\"1\");", "    if\
    \ file_name.chars().count() > 3 {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().count() == 0 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().last().",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    while dot_pos_start <\
    \ dot_pos_end {\n        let mut dot_pos_start_letter = dot_pos_start;\n     \
    \   while dot_pos_start_letter < dot_pos_end {\n            if file_name[dot_pos_start_letter]\
    \ >= 'a' && file_name[dot_pos_start_letter] <= 'z' {\n                dot_pos_start_letter\
    \ += 1;\n            } else {\n                break;\n            }\n       \
    \ }\n        if dot_pos_start_letter < dot_pos_end {\n            break;\n   \
    \     }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut\
    \ dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end +\
    \ 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_end + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let\
    \ mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut\
    \ dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end +\
    \ 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_end + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let\
    \ mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut\
    \ dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end +\
    \ 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_end + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let\
    \ mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut\
    \ dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end +\
    \ 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_end + 1;\n    let mut dot_pos_start = ", "    let mut file_name =\
    \ file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while\
    \ dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start] >= 'a'\
    \ && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n    \
    \    } else if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <=\
    \ 'Z' {\n            dot_pos_start += 1;\n        } else {\n            break;\n\
    \        }\n    }\n    while dot_pos_end < file_name.len() {\n        if file_name[dot_pos_end]\
    \ >= 'a' && file_name[dot_pos_end] <= 'z' {\n            dot_pos_end += 1;\n \
    \       } else if file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end] <= 'Z'\
    \ {\n            dot_pos_end += 1;\n        } else {\n            break;\n   \
    \     }\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 1] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 2] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 3] != 'txt' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 4] != 'exe' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 5] != 'dll' {\n        return String::from(\"\
    No\");\n    }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.contains('.') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.starts_with('0') && file_name.starts_with('9') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.starts_with('a') && file_name.starts_with('z')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with('A')\
    \ && file_name.starts_with('Z') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.starts_with('.')\n        && file_name.chars().count(|c| !c.is_ascii_letter())\n\
    \        > 1\n    {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ !c.is_ascii_letter()) > 1 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().count(|c| !c.is_ascii_letter()) > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| !c.is_ascii_letter())\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ !c.is_ascii_letter()) > 1 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().count(|c| !c.is_ascii_letter()) > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| !c.is_ascii_letter())\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ !c.is_ascii_letter()) > 1 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().count(|c| !c.is_ascii_letter()) > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| !c.is_ascii_letter())\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ !c.is_ascii_letter()) > 1 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().count(|c| !c.is_ascii_letter()) > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| !c.is_ascii_letter())\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.char",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_name = file_name.clone();\n    dot_name.truncate(dot_pos);\n   \
    \ let mut dot_name_pos = dot_name.find('.')\n    if dot_name_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_name_str = dot_name.to_string();\n\
    \    dot_name_str.truncate(dot_name_pos);\n    let mut dot_name_str = dot_name_str.to_lowercase();\n\
    \    if dot_name_str.len() != 3 {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_name_str = dot_name_str.to_ascii_lowercase();\n    if dot_name_str.len()\
    \ != 1 {\n        return String::from(\"No\");\n    }\n    let mut dot_name_str\
    \ = dot_name_str.to_ascii_lowercase();\n    if dot_name_str[0] != 'a' && dot_name_str[0]\
    \ != 'b' && dot_name_str[0] != 'c' && dot_name_str[0] != 'd' && dot_name_str[0]\
    \ != 'e' && dot_name_str[0] != 'f' && dot_name_str[0] != 'g' && dot_name_str[0]\
    \ != 'h' && dot_name_str[0] != 'i' && dot_name_str[0] != 'j' && dot_name_str[0]\
    \ != 'k' && dot_name_str[0] != 'l' && dot_name_str[0] != 'm' && dot_name_str[0]\
    \ != 'n' && dot_name_str[0] != 'o' && dot_name_str[0] != 'p' && dot_name_str[0]\
    \ != 'q' && dot_name_str[0] != 'r' && dot_name_str[0] != 's' && dot_name_str[0]\
    \ != 't' && dot_name_str[0] != 'u' && dot_name_str[0] != 'v' && dot_name_str[0]\
    \ != 'w' && dot_name_str[0] != 'x' && dot_name_str[0] != 'y' && dot_name_str[0]\
    \ != 'z' {\n        return String::from(\"No\");\n    }\n    if dot_name_str[1]\
    \ != 'a' && dot_name_str[1] != 'b' && dot_name_str[1] != 'c' && dot_name_str[1]\
    \ != 'd' && dot_name_str[1] != 'e' && dot_name_str[1] != 'f' && dot_name_str[1]\
    \ != 'g' && dot_name_str[1] != 'h' && dot_name_str[1] != 'i' && dot_name_str[1]\
    \ != 'j' && dot_name_str[1] != 'k' && dot_name_str[1] != 'l' && dot_name_str[1]\
    \ != 'm' && dot_name_str[1] != 'n' && dot_name_str[1] != 'o' && dot_name_str[1]\
    \ != 'p' && dot_name_str[1] != 'q' && dot_name_str[1] != 'r' && dot_", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while\
    \ dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start] >= 'a'\
    \ && file_name[dot_pos_start] <= 'z' ||\n            file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' ||\n            file_name[dot_pos_start]\
    \ >= '0' && file_name[dot_pos_start] <= '9' {\n            dot_pos_start++;\n\
    \        } else {\n            break;\n        }\n    }\n    let mut dot_pos_end\
    \ = dot_pos_start + 1;\n    while dot_pos_end < file_name.len() {\n        if\
    \ file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' ||\n        \
    \    file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end] <= 'Z' ||\n     \
    \       file_name[dot_pos_end] >= '0' && file_name[dot_pos_end] <= '9' {\n   \
    \         dot_pos_end++;\n        } else {\n            break;\n        }\n  \
    \  }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos_end - dot_pos_start > 3 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == 0 {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos_start > 0 && dot_pos_start < file_name.len() - 1 {\n\
    \        if file_name[dot_pos_start - 1] >= 'a' && file_name[dot_pos_start - 1]\
    \ <= 'z' ||\n            file_name[dot_pos_start - 1] >= 'A' && file_name[dot_pos_start\
    \ - 1] <= 'Z' ||\n            file_name[dot_pos_start - 1] >= '0' && file_name[dot_pos_start\
    \ - 1] <= '9' {\n            return String::from(\"No\");\n        }\n    }\n\
    \    if dot_pos_end == file_name.len() - 1 {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos_end > 0 && dot_pos_end < file_name.len() - 1 {\n   \
    \     if file_name[dot_pos_end + 1] >= 'a' && file_name[dot_pos_end + 1] <= 'z'\
    \ ||\n            file_name[dot_pos_end + 1] >= 'A' && file_name[dot_pos_end +\
    \ 1] <= 'Z' ||\n            file_name[dot_pos_end + 1] >= ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    while dot_pos_start != dot_pos_end {\n        if dot_pos_start == dot_pos_end\
    \ {\n            break;\n        }\n        let mut letter = file_name[dot_pos_start];\n\
    \        if dot_pos_start_letter == false {\n            if letter == 'a' || letter\
    \ == 'A' {\n                dot_pos_start_letter = true;\n            }\n    \
    \    }\n        if dot_pos_end_letter == false {\n            if letter == 'z'\
    \ || letter == 'Z' {\n                dot_pos_end_letter = true;\n           \
    \ }\n        }\n        if dot_pos_start_digit == false {\n            if letter\
    \ == '0' || letter == '9' {\n                dot_pos_start_digit = true;\n   \
    \         }\n        }\n        if dot_pos_end_digit == false {\n            if\
    \ letter == '0' || letter == '9' {\n                dot_pos_end_digit = true;\n\
    \            }\n        }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter\
    \ == false {\n        return String::from(\"No\");\n    }\n    if dot_pos_end_letter\
    \ == false {\n        return String::from(\"No\");\n    }\n    if dot_pos_start_digit\
    \ == false {\n        return String::from(\"No\");\n    }\n    if dot_pos_end_digit\
    \ == false {\n        return String::from(\"No\");\n    }\n    if dot_pos_start_letter\
    \ && dot_pos_end_letter {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_pos_start_letter && dot_pos_end_digit {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start_digit && dot_pos_end_letter {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start_digit && dot_pos_end_digit\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start_letter\
    \ && dot_pos_end_letter && dot_pos_start_digit && dot_pos_end_digit {\n      \
    \  return String::from(\"No\");\n    }\n    if dot_pos_start_letter && dot_pos_end_letter\
    \ && dot_pos_start_digit {", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.contains(\".\") {\n                        String::from(\"\
    No\")\n                    } else {\n                        if dot_name.len()\
    \ == 1 {\n                            String::from(\"No\")\n                 \
    \       } else {\n                            if dot_name.starts_with(\"0\") ||\
    \ dot_name.starts_with(\"1\") || dot_name.starts_with(\"2\") || dot_name.starts_with(\"\
    3\") || dot_name.starts_with(\"4\") || dot_name.starts_with(\"5\") || dot_name.starts_with(\"\
    6\") || dot_name.starts_with(\"7\") || dot_name.starts_with(\"8\") || dot_name.starts_with(\"\
    9\") {\n                                String::from(\"No\")\n               \
    \             } else {\n                                String::from(\"Yes\")\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { return String::from(\"No\") }\n    \n    let mut first_letter\
    \ = String::from(\"\");\n    for c in file_name.chars() {\n        if c.is_ascii_letter()\
    \ {\n            first_letter += c;\n        }\n    }\n    \n    if first_letter.len()\
    \ != 1 || first_letter != \"a\" || first_letter != \"b\" || first_letter != \"\
    c\" || first_letter != \"d\" || first_letter != \"e\" || first_letter != \"f\"\
    \ || first_letter != \"g\" || first_letter != \"h\" || first_letter != \"i\" ||\
    \ first_letter != \"j\" || first_letter != \"k\" || first_letter != \"l\" || first_letter\
    \ != \"m\" || first_letter != \"n\" || first_letter != \"o\" || first_letter !=\
    \ \"p\" || first_letter != \"q\" || first_letter != \"r\" || first_letter != \"\
    s\" || first_letter != \"t\" || first_letter != \"u\" || first_letter != \"v\"\
    \ || first_letter != \"w\" || first_letter != \"x\" || first_letter != \"y\" ||\
    \ first_letter != \"z\" {\n        return String::from(\"No\");\n    }\n    \n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos { return String::from(\"No\") }\n    \n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_char.ascii_lowercase() != first_char {\n               \
    \ String::from(\"No\")\n            } else {\n                let mut dot_pos\
    \ = file_name.find('.')\n                if dot_pos == String::npos {\n      \
    \              String::from(\"No\")\n                } else {\n              \
    \      let mut dot_char = file_name[dot_pos + 1..].chars().next().unwrap();\n\
    \                    if dot_char.ascii_lowercase() != dot_char {\n           \
    \             String::from(\"No\")\n                    } else {\n           \
    \             String::from(\"Yes\")\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String", "    let mut file_name = file_name.clone();\n  \
    \  let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    else { \n        file_name.truncate(dot_pos);\n\
    \        file_name.push_str(\".txt\");\n    }\n    let mut first_letter = String::from(\"\
    a\");\n    while first_letter <= String::from(\"z\") {\n        let mut second_letter\
    \ = String::from(\"A\");\n        while second_letter <= String::from(\"Z\") {\n\
    \            let mut third_letter = String::from(\"0\");\n            while third_letter\
    \ <= String::from(\"9\") {\n                let mut fourth_letter = String::from(\"\
    a\");\n                while fourth_letter <= String::from(\"z\") {\n        \
    \            let mut fifth_letter = String::from(\"A\");\n                   \
    \ while fifth_letter <= String::from(\"Z\") {\n                        let mut\
    \ sixth_letter = String::from(\"0\");\n                        while sixth_letter\
    \ <= String::from(\"9\") {\n                            let mut seventh_letter\
    \ = String::from(\"a\");\n                            while seventh_letter <=\
    \ String::from(\"z\") {\n                                let mut eighth_letter\
    \ = String::from(\"A\");\n                                while eighth_letter\
    \ <= String::from(\"Z\") {\n                                    let mut ninth_letter\
    \ = String::from(\"0\");\n                                    while ninth_letter\
    \ <= String::from(\"9\") {\n                                        let mut tenth_letter\
    \ = String::from(\"a\");\n                                        while tenth_letter\
    \ <= String::from(\"z\") {\n                                            let mut\
    \ eleventh_letter = String::from(\"A\");\n                                   \
    \         while eleventh_letter <= String::from(\"Z\") {\n                   \
    \                             let mut twelfth_letter = String::from(\"0\");\n\
    \                                                while twelfth_letter <= String::from(\"\
    9\") {\n                                                    let mut thirteenth_letter\
    \ = String::from(\"a\");\n                                                   \
    \ while thirteenth_letter <= String::from(\"z\") {\n                         \
    \                               let mut fourteenth_letter = String::from(\"A\"\
    );\n                                                        while fourteenth_letter\
    \ <= String::from(\"Z\") {\n                                                 \
    \           let mut fifteenth_letter = String::from(\"0\");\n                \
    \                                            while fifteenth_letter <= String::from(\"\
    9\") {\n                                                                let mut\
    \ sixteenth_letter = String::from(\"a\");\n                                  \
    \                              while sixteenth_letter <= String::from(\"z", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] == '.' {\n            break;\n\
    \        }\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end - dot_pos == 3 {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter2 = dot_pos_start;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter3 = dot_pos_start;\n    let mut dot_pos_end_letter3\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter4 = dot_pos_end;\n    let mut dot_pos_start_letter5 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter7 = dot_pos_start;\n    let mut dot_pos_end_letter7\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter8 = dot_pos_end;\n    let mut dot_pos_start_letter9 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut dot_pos_start_letter13\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter14 = dot_pos_start;\n    let mut dot_pos_end_letter14 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut dot_pos_start_letter17\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter18 = dot_pos_start;\n    let mut dot_pos_end_letter18 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter19 = ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = String::from(\"a\");\n    let mut dot_pos_end_letter\
    \ = String::from(\"z\");\n    let mut dot_pos_end_letter_pos = String::from(\"\
    A\");\n    let mut dot_pos_start_letter_pos = String::from(\"a\");\n    let mut\
    \ dot_pos_end_letter_pos = String::from(\"z\");\n    let mut dot_pos_start_letter_pos\
    \ = String::from(\"A\");\n    while dot_pos_start != dot_pos_end {\n        if\
    \ dot_pos_start == dot_pos_end {\n            break;\n        }\n        let mut\
    \ dot_pos_start_letter = String::from(\"a\");\n        let mut dot_pos_end_letter\
    \ = String::from(\"z\");\n        let mut dot_pos_end_letter_pos = String::from(\"\
    A\");\n        let mut dot_pos_start_letter_pos = String::from(\"a\");\n     \
    \   let mut dot_pos_end_letter_pos = String::from(\"z\");\n        let mut dot_pos_start_letter_pos\
    \ = String::from(\"A\");\n        if dot_pos_start == dot_pos_start_letter {\n\
    \            dot_pos_start_letter_pos = String::from(\"a\");\n        }\n    \
    \    if dot_pos_end == dot_pos_end_letter {\n            dot_pos_end_letter_pos\
    \ = String::from(\"z\");\n        }\n        if dot_pos_start_letter_pos != dot_pos_end_letter_pos\
    \ {\n            if dot_pos_start_letter_pos < dot_pos_end_letter_pos {\n    \
    \            dot_pos_start_letter_pos = String::from(\"A\");\n               \
    \ dot_pos_end_letter_pos = String::from(\"z\");\n            } else {\n      \
    \          dot_pos_start_letter_pos = String::from(\"a\");\n                dot_pos_end_letter_pos\
    \ = String::from(\"z\");\n            }\n        }\n        if dot_pos_start_letter_pos\
    \ == dot_pos_end_letter_pos {\n            if dot_pos_start < dot_pos_end {\n\
    \                dot_pos_start_letter_pos = String::from(\"a\");\n           \
    \     dot_pos_end_letter_pos = String::from(\"z\");\n            } else {\n  \
    \              dot_pos_start_letter_pos = String::from(\"A\");\n             \
    \   dot_pos_end_letter_pos = String::from(\"z\");\n            }\n        }\n\
    \        if dot_pos_start_letter_pos < dot_pos_end_letter_pos {\n            dot_pos_start_letter_pos\
    \ = String::from(\"A\");\n            ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos > dot_pos_end {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos\
    \ - 1] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 2] != String::from('0') && file_name[dot_pos - 2] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 3] != String::from('0') && file_name[dot_pos - 3] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 4] !=\
    \ String::from('0') && file_name[dot_pos - 4] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 5] != String::from('0')\
    \ && file_name[dot_pos - 5] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 6] != String::from('0') && file_name[dot_pos\
    \ - 6] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 7] != String::from('0') && file_name[dot_pos - 7] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 8] != String::from('0') && file_name[dot_pos - 8] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 9] !=\
    \ String::from('0') && file_name[dot_pos - 9] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 10] != String::from('0')\
    \ && file_name[dot_pos - 10] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 11] != String::from('0') && file_name[dot_pos\
    \ - 11] != String::from('9') {\n        return String::", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.find('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         if dot_name.len() == 1 {\n                            String::from(\"\
    No\")\n                        } else {\n                            if dot_name.starts_with(\"\
    0\") || dot_name.starts_with(\"1\") || dot_name.starts_with(\"2\") || dot_name.starts_with(\"\
    3\") || dot_name.starts_with(\"4\") || dot_name.starts_with(\"5\") || dot_name.starts_with(\"\
    6\") || dot_name.starts_with(\"7\") || dot_name.starts_with(\"8\") || dot_name.starts_with(\"\
    9\") {\n                                String::from(\"No\")\n               \
    \             } else {\n                                String::from(\"Yes\")\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { \n        return ", "    let mut file_name = file_name.to_owned();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ - 1;\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n        let\
    \ mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;", "    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return String::from(\"No\")\n  \
    \  }\n    let mut first_letter = file_name.chars().next().unwrap();\n    if first_letter\
    \ < 'a' || first_letter > 'z' {\n        return String::from(\"No\")\n    }\n\
    \    if file_name.chars().count() > 3 {\n        return String::from(\"No\")\n\
    \    }\n    if file_name.chars().count() == 1 && file_name.chars().next() != '.'\
    \ {\n        return String::from(\"No\")\n    }\n    if file_name.chars().count()\
    \ == 1 && file_name.chars().next() == '.' {\n        let mut dot_index = file_name.find('.')\n\
    \        if dot_index == String::npos { \n            return String::from(\"No\"\
    )\n        }\n        let mut first_letter = file_name.chars().next().unwrap();\n\
    \        if first_letter < 'a' || first_letter > 'z' {\n            return String::from(\"\
    No\")\n        }\n    }\n    return String::from(\"Yes\")", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with('0')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('a') && file_name.len() == 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('A') && file_name.len() == 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.starts_with('z')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('Z') && file_name.len() == 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('1') && file_name.len() == 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.starts_with('2')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('3') && file_name.len() == 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('4') && file_name.len() == 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.starts_with('5')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('6') && file_name.len() == 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('7') && file_name.len() == 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.starts_with('8')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('9') && file_name.len() == 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('0') && file_name.len() == 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.starts_with('a')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('A') && file_name.len() == 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('z') && file_name.len() == 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.starts_with('Z')\
    \ && file_name.len(", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos_2 = dot_pos_2 + 1;\n\
    \    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = dot_pos_3\
    \ + 1;\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = dot_pos_4\
    \ + 1;\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = dot_pos_5\
    \ + 1;\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = dot_pos_6\
    \ + 1;\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = dot_pos_7\
    \ + 1;\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = dot_pos_8\
    \ + 1;\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = dot_pos_9\
    \ + 1;\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = dot_pos_10\
    \ + 1;\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = dot_pos_11\
    \ + 1;\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    while dot_pos_end != String::npos {\n        if dot_pos == dot_pos_end {\n\
    \            return String::from(\"No\");\n        }\n        if file_name[dot_pos]\
    \ >= 'a' && file_name[dot_pos] <= 'z' ||\n            file_name[dot_pos] >= 'A'\
    \ && file_name[dot_pos] <= 'Z' {\n            dot_pos_end = dot_pos_end + 1;\n\
    \        } else {\n            return String::from(\"No\");\n        }\n     \
    \   dot_pos = dot_pos + 1;\n    }\n    if dot_pos == dot_pos_end {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos] >= '0' && file_name[dot_pos]\
    \ <= '9' {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let ", "    let\
    \ mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_letter()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_digit()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n", "    let mut file_name_len\
    \ = file_name.len();\n    let mut dot_count = 0;\n    let mut first_letter = false;\n\
    \    let mut last_letter = false;\n    let mut first_letter_is_letter = false;\n\
    \    let mut last_letter_is_letter = false;\n    let mut first_letter_is_digit\
    \ = false;\n    let mut last_letter_is_digit = false;\n    let mut first_letter_is_dot\
    \ = false;\n    let mut last_letter_is_dot = false;\n    let mut dot_is_digit\
    \ = false;\n    let mut dot_is_letter = false;\n    let mut dot_is_dot = false;\n\
    \    let mut dot_is_space = false;\n    let mut dot_is_dash = false;\n    let\
    \ mut dot_is_underscore = false;\n    let mut dot_is_slash = false;\n    let mut\
    \ dot_is_colon = false;\n    let mut dot_is_semicolon = false;\n    let mut dot_is_open_brace\
    \ = false;\n    let mut dot_is_close_brace = false;\n    let mut dot_is_open_square\
    \ = false;\n    let mut dot_is_close_square = false;\n    let mut dot_is_open_bracket\
    \ = false;\n    let mut dot_is_close_bracket = false;\n    let mut dot_is_open_brace_bracket\
    \ = false;\n    let mut dot_is_close_brace_bracket = false;\n    let mut dot_is_open_square_bracket\
    \ = false;\n    let mut dot_is_close_square_bracket = false;\n    let mut dot_is_open_brace_square\
    \ = false;\n    let mut dot_is_close_brace_square = false;\n    let mut dot_is_open_brace_square_bracket\
    \ = false;\n    let mut dot_is_close_brace_square_bracket = false;\n    let mut\
    \ dot_is_open_square_brace_square = false;\n    let mut dot_is_close_square_brace_square\
    \ = false;\n    let mut dot_is_open_brace_square_brace_bracket = false;\n    let\
    \ mut dot_is_close_brace_square_brace_bracket = false;\n    let mut dot_is_open_square_brace_square_brace_bracket\
    \ = false;\n    let mut dot_is_close_square_brace_square_brace_bracket = false;\n\
    \    let mut dot_is_open_brace_square_brace_square_brace_bracket = false;\n  \
    \  let mut dot_is_close_brace_square_brace_square_brace_bracket = false;\n   \
    \ let mut dot_is_open_brace_square_brace_square_brace_square_brace_bracket = false;\n\
    \    let mut dot_is_close_brace_square_brace_square_brace_square_brace_bracket\
    \ = false;\n    let mut dot_is_open", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start\
    \ += 1;\n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            return String::from(\"No\");\n        }\n    }\n \
    \   if file_name[dot_pos] == '.' {\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        while dot_pos_start < dot_pos_end {\n  \
    \          let mut dot_pos_start = dot_pos;\n            dot_pos_start += 1;\n\
    \            if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <=\
    \ 'z' {\n                dot_pos_start += 1;\n            }\n            if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n                dot_pos_start +=\
    \ 1;\n            }\n            if dot_pos_start == dot_pos {\n             \
    \   return String::from(\"No\");\n            }\n        }\n    }\n    return\
    \ String::from(\"Yes\");", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n\
    \    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut ", "    if file_name.len() > 3 {\n        String::from(\"No\")\n\
    \    } else {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos\
    \ == String::npos {\n            String::from(\"No\")\n        } else {\n    \
    \        let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         if dot_name.len() == 1 {\n                            String::from(\"\
    No\")\n                        } else {\n                            if dot_name.starts_with(String::from(\"\
    .\")) {\n                                String::from(\"No\")\n              \
    \              } else {\n                                String::from(\"Yes\"\
    )\n                            }\n                        }\n                \
    \    }\n                }\n            }\n        }\n    }", "    let mut file_name_len\
    \ = file_name.len();\n    let mut dot_pos = file_name.find('.')\n        .unwrap_or(file_name_len);\n\
    \    let mut dot_pos_1 = dot_pos;\n    let mut dot_pos_2 = dot_pos;\n    let mut\
    \ dot_pos_3 = dot_pos;\n    let mut dot_pos_4 = dot_pos;\n    let mut dot_pos_5\
    \ = dot_pos;\n    let mut dot_pos_6 = dot_pos;\n    let mut dot_pos_7 = dot_pos;\n\
    \    let mut dot_pos_8 = dot_pos;\n    let mut dot_pos_9 = dot_pos;\n    let mut\
    \ dot_pos_10 = dot_pos;\n    let mut dot_pos_11 = dot_pos;\n    let mut dot_pos_12\
    \ = dot_pos;\n    let mut dot_pos_13 = dot_pos;\n    let mut dot_pos_14 = dot_pos;\n\
    \    let mut dot_pos_15 = dot_pos;\n    let mut dot_pos_16 = dot_pos;\n    let\
    \ mut dot_pos_17 = dot_pos;\n    let mut dot_pos_18 = dot_pos;\n    let mut dot_pos_19\
    \ = dot_pos;\n    let mut dot_pos_20 = dot_pos;\n    let mut dot_pos_21 = dot_pos;\n\
    \    let mut dot_pos_22 = dot_pos;\n    let mut dot_pos_23 = dot_pos;\n    let\
    \ mut dot_pos_24 = dot_pos;\n    let mut dot_pos_25 = dot_pos;\n    let mut dot_pos_26\
    \ = dot_pos;\n    let mut dot_pos_27 = dot_pos;\n    let mut dot_pos_28 = dot_pos;\n\
    \    let mut dot_pos_29 = dot_pos;\n    let mut dot_pos_30 = dot_pos;\n    let\
    \ mut dot_pos_31 = dot_pos;\n    let mut dot_pos_32 = dot_pos;\n    let mut dot_pos_33\
    \ = dot_pos;\n    let mut dot_pos_34 = dot_pos;\n    let mut dot_pos_35 = dot_pos;\n\
    \    let mut dot_pos_36 = dot_pos;\n    let mut dot_pos_37 = dot_pos;\n    let\
    \ mut dot_pos_38 = dot_pos;\n    let mut dot_pos_39 = dot_pos;\n    let mut dot_pos_40\
    \ = dot_pos;\n    let mut dot_pos_41 = dot_pos;\n    let mut dot_pos_42 = dot_pos;\n\
    \    let mut dot_pos_43 = dot_pos;\n    let mut dot_pos_44 = dot_pos;\n    let\
    \ mut dot_pos_45 = dot_pos;", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"\
    A\") || file_name.starts_with(\"0\") || file_name.starts_with(\"9\") {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.contains(\".\") {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.contains(\"txt\"\
    ) || file_name.contains(\"exe\") || file_name.contains(\"dll\") {\n        return\
    \ String::from(\"Yes\");\n    }\n    return String::from(\"No\");", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n    while dot_pos_end\
    \ != String::npos && \n        file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' &&\n        file_name[dot_pos_end] != 'A' && file_name[dot_pos_end] !=\
    \ 'Z' {\n        dot_pos_end++;\n    }\n    if dot_pos_end == String::npos { return\
    \ String::from(\"No\") }\n    if dot_pos == dot_pos_end {\n        if file_name[dot_pos]\
    \ >= 'a' && file_name[dot_pos] <= 'z' &&\n            file_name[dot_pos] != 'A'\
    \ && file_name[dot_pos] != 'Z' {\n            return String::from(\"No\");\n \
    \       }\n    }\n    if dot_pos == 0 {\n        if file_name[dot_pos] >= 'a'\
    \ && file_name[dot_pos] <= 'z' &&\n            file_name[dot_pos] != 'A' && file_name[dot_pos]\
    \ != 'Z' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ dot_pos == 1 {\n        if file_name[dot_pos] >= 'a' && file_name[dot_pos] <=\
    \ 'z' &&\n            file_name[dot_pos] != 'A' && file_name[dot_pos] != 'Z' {\n\
    \            return String::from(\"No\");\n        }\n    }\n    if dot_pos ==\
    \ 2 {\n        if file_name[dot_pos] >= 'a' && file_name[dot_pos] <= 'z' &&\n\
    \            file_name[dot_pos] != 'A' && file_name[dot_pos] != 'Z' {\n      \
    \      return String::from(\"No\");\n        }\n    }\n    if dot_pos == 3 {\n\
    \        if file_name[dot_pos] >= 'a' && file_name[dot_pos] <= 'z' &&\n      \
    \      file_name[dot_pos] != 'A' && file_name[dot_pos] != 'Z' {\n            return\
    \ String::from(\"No\");\n        }\n    }\n    if dot_pos == 4 {\n        if file_name[dot_pos]\
    \ >= 'a' && file_name[dot_pos] <= 'z' &&\n            file_name[dot_pos] != 'A'\
    \ && file_name[dot_pos] != 'Z' {\n            return String::from(\"No\");\n \
    \       }\n    }\n    if dot_pos == 5 {\n        if file_name[dot_pos] >= 'a'\
    \ && file_name[dot_pos] <= '", "    if file_name.chars().count() > 3 {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().count() == 0\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 4 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 5 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 6 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 7 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 8 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 9 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 10 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 11 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 12 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 13 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 14 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 15 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 16 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 17 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 18 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 19 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 20 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 21 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 22 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 23 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 24 {\n        return String::from(\"Yes\");\n", "    if file_name.len() >\
    \ 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\"0\") || file_name.starts_with(\"9\") {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .\") {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos\
    \ {\n            return String::from(\"No\");\n        }\n        let dot_str\
    \ = file_name.substr(0, dot_pos);\n        if dot_str.is_empty() {\n         \
    \   return String::from(\"No\");\n        }\n        if dot_str.len() != 1 {\n\
    \            return String::from(\"No\");\n        }\n        let dot_char = dot_str[0];\n\
    \        if dot_char != 'a' && dot_char != 'A' && dot_char != '0' && dot_char\
    \ != '9' {\n            return String::from(\"No\");\n        }\n    }\n    return\
    \ String::from(\"Yes\");", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() < 3 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"A\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"0\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"9\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.ends_with(\"txt\") {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.ends_with(\"exe\") {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.ends_with(\"dll\") {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos_end = dot_pos;\n    dot_pos_end\
    \ += 1;\n    \n    let mut dot_pos_start = dot_pos;\n    dot_pos_start -= 1;\n\
    \    \n    let mut dot_pos_start_letter = dot_pos_start;\n    dot_pos_start_letter\
    \ -= 1;\n    \n    let mut dot_pos_end_letter = dot_pos_end;\n    dot_pos_end_letter\
    \ += 1;\n    \n    let mut dot_pos_start_letter2 = dot_pos_start;\n    dot_pos_start_letter2\
    \ -= 1;\n    \n    let mut dot_pos_end_letter2 = dot_pos_end;\n    dot_pos_end_letter2\
    \ += 1;\n    \n    let mut dot_pos_start_letter3 = dot_pos_start;\n    dot_pos_start_letter3\
    \ -= 1;\n    \n    let mut dot_pos_end_letter3 = dot_pos_end;\n    dot_pos_end_letter3\
    \ += 1;\n    \n    let mut dot_pos_start_letter4 = dot_pos_start;\n    dot_pos_start_letter4\
    \ -= 1;\n    \n    let mut dot_pos_end_letter4 = dot_pos_end;\n    dot_pos_end_letter4\
    \ += 1;\n    \n    let mut dot_pos_start_letter5 = dot_pos_start;\n    dot_pos_start_letter5\
    \ -= 1;\n    \n    let mut dot_pos_end_letter5 = dot_pos_end;\n    dot_pos_end_letter5\
    \ += 1;\n    \n    let mut dot_pos_start_letter6 = dot_pos_start;\n    dot_pos_start_letter6\
    \ -= 1;\n    \n    let mut dot_pos_end_letter6 = dot_pos_end;\n    dot_pos_end_letter6\
    \ += 1;\n    \n    let mut dot_pos_start_letter7 = dot_pos_start;\n    dot_pos_start_letter7\
    \ -= 1;\n    \n    let mut dot_pos_end_letter7 = dot_pos_end;\n    dot_pos_end_letter7\
    \ += 1;\n    \n    let mut dot_pos_start_letter8 = dot_pos_start;\n    dot_pos_start_letter8\
    \ -= 1;\n    \n    let mut dot_pos_end_letter8 = dot_pos_end;\n    dot_pos_end_letter8\
    \ += 1;\n    \n    let mut dot_pos_start_letter9 = dot_pos_start;\n    dot_pos_start_letter9\
    \ -= 1;\n    \n    let mut dot_pos_end_letter9 = dot_pos_end;\n    dot_pos_end_letter9\
    \ += 1;\n    \n    let mut dot_pos_start_letter10 = dot_pos_start;\n    dot_pos_start_letter10\
    \ -= 1;\n    \n", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase().is_ascii())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase().is_ascii()) {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_digit().is_ascii()) {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase().is_ascii()\
    \ || \n        !c.is_ascii_uppercase().is_ascii() || \n        !c.is_digit().is_ascii())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase().is_ascii() || \n        !c.is_ascii_uppercase().is_ascii()\
    \ || \n        !c.is_digit().is_ascii() || \n        !c.is_ascii_lowercase().is_ascii()\
    \ || \n        !c.is_ascii_uppercase().is_ascii() || \n        !c.is_digit().is_ascii())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase().is_ascii() || \n        !c.is_ascii_uppercase().is_ascii()\
    \ || \n        !c.is_digit().is_ascii() || \n        !c.is_ascii_lowercase().is_ascii()\
    \ || \n        !c.is_ascii_uppercase().is_ascii() || \n        !c.is_digit().is_ascii()\
    \ || \n        !c.is_ascii_lowercase().is_ascii() || \n        !c.is_ascii_uppercase().is_ascii()\
    \ || \n        !c.is_digit().is_ascii()) {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase().is_ascii()\
    \ || \n        !c.is_ascii_uppercase().", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        if dot_pos_start < dot_pos_end\
    \ {\n            if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n                if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n                    if dot_pos_start < dot_pos_end {\n           \
    \             if file_name[dot_pos_start] == file_name[dot_pos_end] {\n      \
    \                      dot_pos_end += 1;\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    if dot_pos_end\
    \ == file_name.len() {\n        return String::from(\"Yes\");\n    }\n    return\
    \ String::from(\"No\");", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() < 3 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"A\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"0\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"9\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.ends_with(\"txt\") {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.ends_with(\"exe\") {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.ends_with(\"dll\") {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    if file_name.len() > 3\
    \ {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_char < 'a' || first_char > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_char = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_char < 'a' || dot_char\
    \ > 'z' {\n                        String::from(\"No\")\n                    }\
    \ else {\n                        String::from(\"Yes\")\n                    }\n\
    \                }\n            }\n        }\n    }", "    let mut file_name =\
    \ file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_end = dot_pos + 1;\n    \n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_start = dot_pos;\n        \n        while dot_pos_start\
    \ < dot_pos_end {\n            let mut dot_pos_end = dot_pos_start;\n        \
    \    \n            while dot_pos_end < dot_pos_end + 1 && \n                 \
    \  file_name[dot_pos_end] >= 'a' && \n                   file_name[dot_pos_end]\
    \ <= 'z' &&\n                   file_name[dot_pos_end] >= 'A' && \n          \
    \         file_name[dot_pos_end] <= 'Z' {\n                dot_pos_end += 1;\n\
    \            }\n            \n            if dot_pos_end == dot_pos_end + 1 {\n\
    \                dot_pos_end += 1;\n            }\n            \n            if\
    \ dot_pos_end == dot_pos_end + 1 && \n                file_name[dot_pos_end] >=\
    \ '0' && \n                file_name[dot_pos_end] <= '9' {\n                break;\n\
    \            }\n            \n            dot_pos_start = dot_pos_end;\n     \
    \   }\n        \n        if dot_pos_start < dot_pos_end {\n            dot_pos\
    \ = dot_pos_end;\n        } else {\n            break;\n        }\n    }\n   \
    \ \n    if dot_pos == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_start = dot_pos;\n    \n    while dot_pos_start\
    \ < dot_pos_end {\n        let mut dot_pos_end = dot_pos_start;\n        \n  \
    \      while dot_pos_end < dot_pos_end + 1 && \n               file_name[dot_pos_end]\
    \ >= 'a' && \n               file_name[dot_pos_end] <= 'z' &&\n              \
    \ file_name[dot_pos_end] >= 'A' && \n               file_name[dot_pos_end] <=\
    \ 'Z' {\n            dot_pos_end += 1;\n        }\n        \n        if dot_pos_end\
    \ == dot_pos_end + 1 {\n            dot_pos_end += 1;\n        }\n        \n \
    \       if dot_pos_end == dot_pos_end + 1 && \n            file_name[dot_pos_end]\
    \ >= '0' && \n            file_name[dot_pos_end] <= '9' {\n            break;\n\
    \        }\n        \n        dot_pos_start = dot_pos_end;\n    }\n    \n    if\
    \ dot_pos_start == dot_pos_end {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos_start = dot_pos;\n    \n    while dot_", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    while dot_pos_end != String::npos {\n        if dot_pos == dot_pos_end {\n\
    \            return String::from(\"No\");\n        }\n        if file_name[dot_pos]\
    \ >= 'a' && file_name[dot_pos] <= 'z' {\n            dot_pos_end = dot_pos_end\
    \ + 1;\n        } else if file_name[dot_pos] >= 'A' && file_name[dot_pos] <= 'Z'\
    \ {\n            dot_pos_end = dot_pos_end + 1;\n        } else {\n          \
    \  return String::from(\"No\");\n        }\n        dot_pos = dot_pos + 1;\n \
    \   }\n    if dot_pos == dot_pos_end {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos] >= '0' && file_name[dot_pos] <= '9' {\n    \
    \    return String::from(\"Yes\");\n    }\n    return String::from(\"No\");",
  "    if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.len() == 0 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.contains(\".\") {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.starts_with(\"a\") || file_name.starts_with(\"A\") {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.starts_with(\"0\") ||\
    \ file_name.starts_with(\"9\") {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.starts_with(\".\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.contains(\"/\") {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.contains(\"\\\\\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\":\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"*\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"?\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"<\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\">\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"|\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"\\\"\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"%\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"<\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\">\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"|\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"\\\"\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"%\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"<\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\">\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"|\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"\\\"\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"%\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\"<\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\">\") {\n        return ", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut first_letter = file_name.chars().next().unwrap();\n   \
    \ if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    \n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13\
    \ == String::npos { \n        return String", "    if file_name.len() > 3 {\n\
    \        String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.contains(\".\") {\n                        dot_name.truncate(dot_name.len()\
    \ - 1);\n                    }\n                    let mut dot_name_chars = dot_name.chars();\n\
    \                    let mut dot_name_chars_iter = dot_name_chars.iter();\n  \
    \                  let mut dot_name_chars_first = dot_name_chars.next();\n   \
    \                 let mut dot_name_chars_last = dot_name_chars.next();\n     \
    \               let mut dot_name_chars_next = dot_name_chars.next();\n       \
    \             let mut dot_name_chars_prev = dot_name_chars.next();\n         \
    \           let mut dot_name_chars_prev = dot_name_chars.next();\n           \
    \         let mut dot_name_chars_prev = dot_name_chars.next();\n             \
    \       let mut dot_name_chars_prev = dot_name_chars.next();\n               \
    \     let mut dot_name_chars_prev = dot_name_chars.next();\n                 \
    \   let mut dot_name_chars_prev = dot_name_chars.next();\n                   \
    \ let mut dot_name_chars_prev = dot_name_chars.next();\n                    let\
    \ mut dot_name_chars_prev = dot_name_chars.next();\n                    let mut\
    \ dot_name_chars_prev = dot_name_chars.next();\n                    let mut dot_name_chars_prev\
    \ = dot_name_chars.next();\n                    let mut dot_name_chars_prev =\
    \ dot_name_chars.next();\n                    let mut dot_name_chars_prev = dot_name_chars.next();\n\
    \                    let mut dot_name_chars_prev = dot_name_chars.next();\n  \
    \                  let mut dot_name_chars_prev = dot_name_chars.next();\n    \
    \                let mut dot_name_chars_prev = dot_name_chars.next();\n      \
    \              let mut dot_name_chars_prev = dot_name_chars.next();\n        \
    \            let mut dot_name_chars_prev = dot_name_chars.next();\n          \
    \          let mut dot_name_chars_prev = dot_name_chars.next();\n            \
    \        let mut dot_name_chars_prev = dot_name_chars.", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ == false {\n        return String::from(\"No\");\n    }\n    if file_name.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count() > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().filter(|c| c >= '0' &&\
    \ c <= '9').count() > 0 {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count()\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count() > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().filter(|c| c >= 'a' &&\
    \ c <= 'z' || c >= 'A' && c <= 'Z').count() > 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().filter(|c| c >= 'a' && c <= 'z' || c >=\
    \ 'A' && c <= 'Z').count() > 1 {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <=\
    \ 'Z').count() > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count() > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().filter(|c| c >= 'a' &&\
    \ c <= 'z' || c >= 'A' && c <= 'Z').count() > 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().filter(|c| c >= 'a' && c <= 'z' || c >=\
    \ 'A' && c <= 'Z').count() > 1 {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <=\
    \ 'Z').count() > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().filter(|c|\
    \ c >= '", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos < dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ < 'a' || file_name[dot_pos - 1] > 'z' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos + 1] < 'a' || file_name[dot_pos + 1] > 'z'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ != file_name[dot_pos + 1] {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().count() != 1 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| c < 'a' || c > 'z' || c < 'A'\
    \ || c > 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ c != '0' && c != '9') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| c != '.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| c != 'a' && c != 'z' && c != 'A' && c\
    \ != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ c != '0' && c != '9' && c != '.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| c != 'a' && c != 'z' && c != 'A' && c\
    \ != 'Z' && c != '.') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ c != 'a' && c != 'z' && c != 'A' && c != 'Z' && c != '.' && c != 'txt' && c\
    \ != 'exe' && c != 'dll') {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.chars().any(|c| c != 'a' && c != 'z' && c != 'A' && c != 'Z' &&\
    \ c != '.' && c != 'txt' && c != 'exe' && c != 'dll' && c != '", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.find('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name.chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos = file_name.find('.')\n\
    \                    if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            let mut dot_pos = file_name.find('.')\n     \
    \                       if dot_pos == String::npos {\n                       \
    \         String::from(\"No\")\n                            } else {\n       \
    \                         let mut dot_pos = file_name.find('.')\n            \
    \                    if dot_pos == String::npos {\n                          \
    \          String::from(\"No\")\n                                } else {\n  \
    \                                  let mut dot_pos = file_name.find('.')\n   \
    \                                 if dot_pos == String::npos {\n             \
    \                           String::from(\"No\")\n                           \
    \         } else {\n                                        let mut dot_pos =\
    \ file_name.find('.')\n                                        if dot_pos == String::npos\
    \ {\n                                            String::from(\"No\")\n      \
    \                                  } else {\n                                \
    \            let mut dot_pos = file_name.find('.')\n                         \
    \                   if dot_pos == String::npos {\n                           \
    \                     String::from(\"No\")\n                                 \
    \           } else {\n                                                let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \    if dot_pos == String::npos {\n                                          \
    \          String::from(\"No\")\n                                            \
    \    } else {\n                                                    let mut dot_pos\
    \ = file_name.find('.')\n                                                    if\
    \ dot_pos == String::npos {\n                                                \
    \        String::from(\"No\")\n                                              \
    \      } else {\n                                                        let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \            if dot_pos == String::npos {\n                                  \
    \                          String::from(\"No\")\n                            \
    \                            } else {\n                                      \
    \                      let mut dot_pos = file_name.find('.')\n               \
    \                                             if dot_pos == String::npos {\n \
    \                                                               String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_pos\
    \ = file_name.find('.')\n                                                    \
    \            if dot_pos == String::npos {\n                                  \
    \                                  String::from(\"No\")\n                    \
    \                                            } else {\n                      \
    \                                              ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::n",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_name = file_name.clone();\n\
    \    dot_name.truncate(dot_pos);\n    let mut dot_name_pos = dot_name.find('.')\n\
    \    if dot_name_pos == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_name_len = dot_name_pos - dot_pos;\n    let mut dot_name_str\
    \ = String::new();\n    dot_name_str.push_str(&dot_name[..dot_name_len]);\n  \
    \  let mut dot_name_char = String::new();\n    dot_name_char.push_str(&dot_name[dot_name_pos+1..]);\n\
    \    if dot_name_str == \"txt\" || dot_name_str == \"exe\" || dot_name_str ==\
    \ \"dll\" {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    let mut file_name_chars = file_name.chars();\n    let mut dot_index\
    \ = file_name_chars.find_first_of(\".\");\n    let mut first_letter = file_name_chars.next().unwrap();\n\
    \    if dot_index == file_name_chars.len() {\n        return String::from(\"No\"\
    );\n    }\n    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name_chars.next().unwrap() != 'a' && file_name_chars.next().unwrap()\
    \ != 'z' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 'A' && file_name_chars.next().unwrap() != 'Z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name_chars.next().unwrap() != '0' && file_name_chars.next().unwrap()\
    \ != '9' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 'txt' && file_name_chars.next().unwrap() != 'exe' && file_name_chars.next().unwrap()\
    \ != 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    dot_pos_start += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter_pos = dot_pos_start;\n\
    \    dot_pos_start_letter_pos += 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end;\n\
    \    dot_pos_end_letter_pos += 1;\n    let mut dot_pos_start_letter_pos_end =\
    \ dot_pos_start;\n    dot_pos_start_letter_pos_end += 1;\n    let mut dot_pos_end_letter_pos_end\
    \ = dot_pos_end;\n    dot_pos_end_letter_pos_end += 1;\n    let mut dot_pos_start_letter_pos_end_letter\
    \ = dot_pos_start;\n    dot_pos_start_letter_pos_end_letter += 1;\n    let mut\
    \ dot_pos_end_letter_pos_end_letter = dot_pos_end;\n    dot_pos_end_letter_pos_end_letter\
    \ += 1;\n    let mut dot_pos_start_letter_pos_end_letter_pos = dot_pos_start;\n\
    \    dot_pos_start_letter_pos_end_letter_pos += 1;\n    let mut dot_pos_end_letter_pos_end_letter_pos\
    \ = dot_pos_end;\n    dot_pos_end_letter_pos_end_letter_pos += 1;\n    let mut\
    \ dot_pos_start_letter_pos_end_letter_pos_end = dot_pos_start;\n    dot_pos_start_letter_pos_end_letter_pos_end\
    \ += 1;\n    let mut dot_pos_end_letter_pos_end_letter_pos_end = dot_pos_end;\n\
    \    dot_pos_end_letter_pos_end_letter_pos_end += 1;\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter\
    \ = dot_pos_start;\n    dot_pos_start_letter_pos_end_letter_pos_end_letter +=\
    \ 1;\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter_pos_end_letter_pos_end_letter += 1;\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos\
    \ = dot_pos_start;\n    dot_pos_start_letter_pos_end_letter_pos_end_letter_pos\
    \ += 1;\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos = dot_pos_end;\n\
    \    dot_pos_end_letter_pos_end_letter_pos_end_letter_pos += 1;\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = dot_pos_", "    if file_name.chars().count() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_char = file_name[0..dot_pos].chars().next().unwrap();\n\
    \            if first_char < 'a' || first_char > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_char = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_char < 'a' || dot_char\
    \ > 'z' {\n                        String::from(\"No\")\n                    }\
    \ else {\n                        String::from(\"Yes\")\n                    }\n\
    \                }\n            }\n        }\n    }", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n    if\
    \ first_char < 'a' || first_char > 'z' {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_char = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n    if dot_char != String::from(\"txt\") &&\
    \ dot_char != String::from(\"exe\") && dot_char != String::from(\"dll\") {\n \
    \       return String::from(\"No\");\n    }\n    return String::from(\"Yes\");",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\")\n    }\n\
    \    \n    let mut first_letter = String::from(\"a\");\n    let mut last_letter\
    \ = String::from(\"z\");\n    \n    if dot_pos == 0 {\n        return String::from(\"\
    No\")\n    }\n    \n    if dot_pos == file_name.len() - 1 {\n        return String::from(\"\
    No\")\n    }\n    \n    if file_name[dot_pos - 1] >= first_letter {\n        return\
    \ String::from(\"No\")\n    }\n    \n    if file_name[dot_pos + 1] >= last_letter\
    \ {\n        return String::from(\"No\")\n    }\n    \n    if file_name[dot_pos\
    \ - 1] != first_letter {\n        return String::from(\"No\")\n    }\n    \n \
    \   if file_name[dot_pos + 1] != last_letter {\n        return String::from(\"\
    No\")\n    }\n    \n    if file_name[dot_pos - 1] != first_letter || file_name[dot_pos\
    \ + 1] != last_letter {\n        return String::from(\"No\")\n    }\n    \n  \
    \  if file_name[dot_pos - 1] != first_letter && file_name[dot_pos + 1] != last_letter\
    \ {\n        return String::from(\"No\")\n    }\n    \n    if file_name[dot_pos\
    \ - 1] != first_letter || file_name[dot_pos + 1] != last_letter {\n        return\
    \ String::from(\"No\")\n    }\n    \n    if file_name[dot_pos - 1] != first_letter\
    \ && file_name[dot_pos + 1] != last_letter {\n        return String::from(\"No\"\
    )\n    }\n    \n    if file_name[dot_pos - 1] != first_letter || file_name[dot_pos\
    \ + 1] != last_letter {\n        return String::from(\"No\")\n    }\n    \n  \
    \  if file_name[dot_pos - 1] != first_letter && file_name[dot_pos + 1] != last_letter\
    \ {\n        return String::from(\"No\")\n    }\n    \n    if file_name[dot_pos\
    \ - 1] != first_letter || file_name[dot_pos + 1] != last_letter {\n        return\
    \ String::from(\"No\")\n    }\n    \n    if file_name[dot_pos - 1] != first_letter\
    \ && file_name[dot_pos + 1] != last_letter {\n        return String::from(\"No\"\
    )\n    }\n    \n    if file_name[dot_pos - 1] != first_letter || file_name[dot_pos\
    \ + 1] != last_letter {\n        return String::from(\"No\")\n    }\n    \n  \
    \  if file_name[dot_pos - 1] != first_letter && file_name", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos = dot_pos + 1;\n    while dot_pos < file_name.len() {\n    \
    \    let mut char_pos = 0;\n        while char_pos < dot_pos {\n            if\
    \ file_name[char_pos] >= 'a' && file_name[char_pos] <= 'z' {\n               \
    \ char_pos += 1;\n            } else if file_name[char_pos] >= 'A' && file_name[char_pos]\
    \ <= 'Z' {\n                char_pos += 1;\n            } else {\n           \
    \     return String::from(\"No\");\n            }\n        }\n        if file_name[dot_pos]\
    \ != 'd' && file_name[dot_pos] != 'D' && file_name[dot_pos] != 'l' && file_name[dot_pos]\
    \ != 'L' {\n            return String::from(\"No\");\n        }\n        dot_pos\
    \ += 1;\n    }\n    if file_name.len() > 3 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.len() == 0 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.len() == 1 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 2 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 3 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 4 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 5 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 6 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 7 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 8 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 9 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 10 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 11 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 12 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 13 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 14 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 15 {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name.len() == 16 {\n        return String::from(\"Yes\");\n",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return ", "    let mut file_name = file_name.to_string();\n    \n\
    \    // Remove all non-alphanumeric characters from the file's name\n    file_name\
    \ = file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file's name\n    file_name =\
    \ file_name.chars().filter(|c| !c.is_alphanumeric()).collect();\n    \n    //\
    \ Remove all non-alphanumeric characters from the file", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    if file_name.chars().count() > 3 {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name.chars().count() < 3 {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        if file_name.chars().first().unwrap().is_ascii_letter() {\n\
    \            if file_name.chars().last().unwrap().is_ascii_letter() {\n      \
    \          if file_name.chars().first().unwrap().is_ascii_letter() &&\n      \
    \              file_name.chars().last().unwrap().is_ascii_letter() {\n       \
    \             if file_name.chars().first().unwrap().is_ascii_letter() &&\n   \
    \                     file_name.chars().last().unwrap().is_ascii_letter() {\n\
    \                        return String::from(\"Yes\");\n                    }\n\
    \                }\n            }\n        }\n    }\n    return String::from(\"\
    No\");", "    let mut file_name : String = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_next = dot_pos + 1;\n    while\
    \ dot_pos_next < file_name.len() {\n        let mut dot_pos_next = dot_pos + 1;\n\
    \        if file_name[dot_pos_next] != '\\\\' {\n            break;\n        }\n\
    \        dot_pos_next += 1;\n    }\n    if dot_pos_next == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_prev = dot_pos\
    \ - 1;\n    while dot_pos_prev >= 0 {\n        let mut dot_pos_prev = dot_pos\
    \ - 1;\n        if file_name[dot_pos_prev] != '\\\\' {\n            break;\n \
    \       }\n        dot_pos_prev -= 1;\n    }\n    if dot_pos_prev == 0 {\n   \
    \     return String::from(\"No\");\n    }\n    let mut dot_pos_next = dot_pos\
    \ + 1;\n    let mut dot_pos_prev = dot_pos - 1;\n    let mut dot_pos_prev_next\
    \ = dot_pos_prev + 1;\n    let mut dot_pos_next_prev = dot_pos_next + 1;\n   \
    \ let mut dot_pos_prev_prev_next = dot_pos_prev_next + 1;\n    let mut dot_pos_next_next_prev\
    \ = dot_pos_next_prev + 1;\n    let mut dot_pos_prev_next_next_prev = dot_pos_prev_next_next\
    \ + 1;\n    let mut dot_pos_next_prev_next_prev = dot_pos_next_prev_next + 1;\n\
    \    let mut dot_pos_prev_next_next_next_prev = dot_pos_prev_next_next_next +\
    \ 1;\n    let mut dot_pos_next_prev_next_next_prev = dot_pos_next_prev_next_next\
    \ + 1;\n    let mut dot_pos_prev_next_next_next_next_prev = dot_pos_prev_next_next_next_next\
    \ + 1;\n    let mut dot_pos_next_prev_next_next_next_prev = dot_pos_next_prev_next_next_next\
    \ + 1;\n    let mut dot_pos_prev_next_next_next_next_next_prev = dot_pos_prev_next_next_next_next_next\
    \ + 1;\n    let mut dot_pos_next_prev_next_next_next_next_next_prev = dot_pos_next_prev_next_next_next_next_next\
    \ + 1;\n    let mut dot_pos_prev_next_next_next_next_next_next_next_prev = dot_pos_prev_next_next_next_next_next_next_next\
    \ + 1;\n    let mut dot_pos_next_prev_next_next_next_next_next_next_prev = dot_pos_next_prev_next_next_next_next_next_next\
    \ + 1;\n    let mut dot_pos_prev_next_next_next_next_next_next_next_next_prev\
    \ = dot_pos_prev_next_next_next_next_next_next_next_next + 1;\n    let mut dot_",
  "    if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.len() == 0 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.len() == 1 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != 'a' || c != 'z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c !=\
    \ 'A' || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_digit() || c != '.') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' || c != 'txt'\
    \ || c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n\
    \    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut first_letter =\
    \ file_name.chars().next().unwrap();\n    if first_letter < 'a' || first_letter\
    \ > 'z' {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_po", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n",
  "    let mut file_name_str = file_name.to_string();\n    file_name_str.truncate(3);\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"1\");\n    file_name_str.push_str(\"\
    2\");\n    file_name_str.push_str(\"3\");\n    file_name_str.push_str(\"4\");\n\
    \    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"6\");\n    file_name_str.push_str(\"\
    7\");\n    file_name_str.push_str(\"8\");\n    file_name_str.push_str(\"9\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"1\");\n    file_name_str.push_str(\"\
    2\");\n    file_name_str.push_str(\"3\");\n    file_name_str.push_str(\"4\");\n\
    \    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"6\");\n    file_name_str.push_str(\"\
    7\");\n    file_name_str.push_str(\"8\");\n    file_name_str.push_str(\"9\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"1\");\n    file_name_str.push_str(\"\
    2\");\n    file_name_str.push_str(\"3\");\n    file_name_str.push_str(\"4\");\n\
    \    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"6\");\n    file_name_str.push_str(\"\
    7\");\n    file_name_str.push_str(\"8\");\n    file_name_str.push_str(\"9\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"1\");\n    file_name_str.push_str(\"\
    2\");\n    file_name_str.push_str(\"3\");\n    file_name_str.push_str(\"4\");\n\
    \    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"6\");\n    file_name_str.push_str(\"\
    7\");\n    file_name_str.push_str(\"8\");\n    file_name_str.push_str(\"9\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"1\");\n    file_name_str.push_str(\"\
    2\");\n    file_name_str.push_str(\"3\");\n    file_name_str.push_str(\"4\");\n\
    \    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"6\");\n    file_name_str.push_str(\"\
    7\");\n    file_name_str.push_str(\"8\");\n    file_name_str.push_str(\"9\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"1\");\n    file_name_str.push_str(\"\
    2\");\n    file_name_str.push_str(\"3\");\n    file_name_str.push_str(\"4", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos_start = dot_pos_start;\n        while dot_pos_start != dot_pos_end {\n\
    \            let mut dot_pos_start = dot_pos_start;\n            let mut dot_pos_end\
    \ = dot_pos_end;\n            let mut dot_pos_start = dot_pos_start;\n       \
    \     while dot_pos_start != dot_pos_end {\n                let mut dot_pos_start\
    \ = dot_pos_start;\n                let mut dot_pos_end = dot_pos_end;\n     \
    \           let mut dot_pos_start = dot_pos_start;\n                while dot_pos_start\
    \ != dot_pos_end {\n                    let mut dot_pos_start = dot_pos_start;\n\
    \                    let mut dot_pos_end = dot_pos_end;\n                    let\
    \ mut dot_pos_start = dot_pos_start;\n                    while dot_pos_start\
    \ != dot_pos_end {\n                        let mut dot_pos_start = dot_pos_start;\n\
    \                        let mut dot_pos_end = dot_pos_end;\n                \
    \        let mut dot_pos_start = dot_pos_start;\n                        while\
    \ dot_pos_start != dot_pos_end {\n                            let mut dot_pos_start\
    \ = dot_pos_start;\n                            let mut dot_pos_end = dot_pos_end;\n\
    \                            let mut dot_pos_start = dot_pos_start;\n        \
    \                    while dot_pos_start != dot_pos_end {\n                  \
    \              let mut dot_pos_start = dot_pos_start;\n                      \
    \          let mut dot_pos_end = dot_pos_end;\n                              \
    \  let mut dot_pos_start = dot_pos_start;\n                                while\
    \ dot_pos_start != dot_pos_end {\n                                    let mut\
    \ dot_pos_start = dot_pos_start;\n                                    let mut\
    \ dot_pos_end = dot_pos_end;\n                                    let mut dot_pos_start\
    \ = dot_pos_start;\n                                    while dot_pos_start !=\
    \ dot_pos_end {\n                                        let mut dot_pos_start\
    \ = dot_pos_start;\n                                        let mut dot_pos_end\
    \ = dot_pos_end;\n                                        let mut dot_pos_start\
    \ = dot_pos_start;\n                                        while dot_pos_start\
    \ != dot_pos_end {\n                                            let mut dot_pos_start\
    \ = dot_pos_start;\n                                            let mut dot_pos_end\
    \ = dot_pos_end;\n                                            let mut dot_pos_start\
    \ = dot_pos_start;\n                                            ", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { \n        return ", "    let mut file_parts: Vec<&str> = file_name.split_whitespace();\n\
    \    let mut dot_pos = file_parts.iter().position(|&x| x == \".\").unwrap();\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_parts: Vec<&str> = file_parts.split_at(dot_pos);\n    let mut dot_part_1:\
    \ &str = dot_parts.remove(0);\n    let mut dot_part_2: &str = dot_parts.remove(0);\n\
    \    let mut dot_part_3: &str = dot_parts.remove(0);\n    if dot_part_1.len()\
    \ != 1 || dot_part_1.chars().any(|&x| !x.is_ascii_letter()) {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_part_2.len() != 1 || dot_part_2.chars().any(|&x|\
    \ !x.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_part_3.len() != 1 || dot_part_3.chars().any(|&x| !x.is_ascii_letter()) {\n\
    \        return String::from(\"No\");\n    }\n    if dot_part_1.starts_with(dot_part_2)\
    \ || dot_part_1.starts_with(dot_part_3) {\n        return String::from(\"No\"\
    );\n    }\n    if dot_part_2.starts_with(dot_part_3) {\n        return String::from(\"\
    No\");\n    }\n    if dot_part_3.starts_with(dot_part_1) {\n        return String::from(\"\
    No\");\n    }\n    if dot_part_1.starts_with(dot_part_3) || dot_part_2.starts_with(dot_part_3)\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_part_3.starts_with(dot_part_2)\
    \ || dot_part_1.starts_with(dot_part_3) {\n        return String::from(\"No\"\
    );\n    }\n    if dot_part_1.starts_with(dot_part_2) || dot_part_3.starts_with(dot_part_2)\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_part_2.starts_with(dot_part_1)\
    \ || dot_part_3.starts_with(dot_part_1) {\n        return String::from(\"No\"\
    );\n    }\n    if dot_part_1.starts_with(dot_part_3) || dot_part_2.starts_with(dot_part_3)\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_part_3.starts_with(dot_part_1)\
    \ || dot_part_1.starts_with(dot_part_3) {\n        return String::from(\"No\"\
    );\n    }\n    if dot_part_2.starts_with(dot_part_1) || dot_part_3.starts_with(dot_part_1)\
    \ {\n        return String::from(\"No\");\n    }\n    if ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::", "    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_", "    let mut file_name_chars = file_name.chars();\n\
    \    let mut dot_pos = file_name_chars.find_first_of(\".\");\n    let mut dot_pos_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev = dot_pos;\n    let mut dot_pos_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next = dot_pos + 1;\n    let mut dot_pos_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next = dot_pos + 1;\n   \
    \ let mut dot_pos_prev_next_prev_next_prev = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev = dot_pos\
    \ + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next = dot_pos\
    \ + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev = dot_pos\
    \ + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + 1;\n    let mut dot_pos_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev_next_prev\
    \ = dot_pos + ", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains('.') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| c < 'a' || c > 'z' || c < 'A'\
    \ || c > 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().take_while(|c|\
    \ c >= 'a' && c <= 'z').count() > 1 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().take_while(|c| c >= 'A' && c <= 'Z').count()\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().take_while(|c|\
    \ c >= '0' && c <= '9').count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_start\
    \ = dot_pos;\n    let mut dot_pos_end = dot_pos;\n    \n    while dot_pos_start\
    \ != String::npos {\n        dot_pos_end = dot_pos_start;\n        dot_pos_end\
    \ = dot_pos_end.next_char();\n        \n        if dot_pos_end == String::npos\
    \ {\n            return String::from(\"No\");\n        }\n        \n        if\
    \ dot_pos_end < dot_pos_start {\n            return String::from(\"No\");\n  \
    \      }\n        \n        let mut dot_pos_start = dot_pos_end;\n        dot_pos_start\
    \ = dot_pos_start.next_char();\n        \n        if dot_pos_start < String::from(\"\
    a\"..\"z\").len() {\n            return String::from(\"No\");\n        }\n   \
    \     \n        if dot_pos_start < String::from(\"A\"..\"Z\").len() {\n      \
    \      return String::from(\"No\");\n        }\n    }\n    \n    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    \n    if file_name.len()\
    \ == 3 {\n        if file_name.chars().any(|c| !c.is_ascii_letter()) {\n     \
    \       return String::from(\"No\");\n        }\n    }\n    \n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.') {\n        return String::from(\"No\");\n\
    \    }\n    \n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.'\
    \ || c != 'a' || c != 'b' || c != 'c' || c != 'd' || c != 'e' || c != 'f' || c\
    \ != 'g' || c != 'h' || c != 'i' || c != 'j' || c != 'k' || c != 'l' || c != 'm'\
    \ || c != 'n' || c != 'o' || c != 'p' || c != 'q' || c != 'r' || c != 's' || c\
    \ != 't' || c != 'u' || c != 'v' || c != 'w' || c != 'x' || c != 'y' || c != 'z')\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != 'a' || c != 'b' || c != 'c' || c !=\
    \ 'd' || c != 'e' || c != 'f' || c != 'g' || c != 'h' || c != 'i' || c != 'j'\
    \ || c ", "    if file_name.len() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_char.len() != 1 || first_char != 'a' || first_char != 'A' || first_char\
    \ != 'z' || first_char != 'Z' {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_char = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n    if dot_char.len() != 1 || dot_char != 'txt'\
    \ || dot_char != 'exe' || dot_char != 'dll' {\n        return String::from(\"\
    No\");\n    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    if file_name[..dot_pos].chars().count() != 1 { return\
    \ String::from(\"No\") }\n    if file_name[..dot_pos].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'a' &&\n       file_name[..dot_pos].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'z' &&\n       file_name[..dot_pos].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'A' &&\n       file_name[..dot_pos].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'Z' {\n        return String::from(\"No\")\n    }\n    if file_name[dot_pos+1..].chars().count()\
    \ != 1 { return String::from(\"No\") }\n    if file_name[dot_pos+1..].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'a' &&\n       file_name[dot_pos+1..].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'z' &&\n       file_name[dot_pos+1..].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'A' &&\n       file_name[dot_pos+1..].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'Z' {\n        return String::from(\"No\")\n    }\n    if file_name[dot_pos+1..dot_pos+3].chars().count()\
    \ != 1 { return String::from(\"No\") }\n    if file_name[dot_pos+1..dot_pos+3].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'a' &&\n       file_name[dot_pos+1..dot_pos+3].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'z' &&\n       file_name[dot_pos+1..dot_pos+3].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'A' &&\n       file_name[dot_pos+1..dot_pos+3].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'Z' {\n        return String::from(\"No\")\n    }\n    if file_name[dot_pos+1..dot_pos+4].chars().count()\
    \ != 1 { return String::from(\"No\") }\n    if file_name[dot_pos+1..dot_pos+4].chars().first().unwrap().to_ascii_lowercase()\
    \ !~ 'a' &&\n       file_name[dot_pos+1..dot_pos+", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_letter = dot_pos;\n    while dot_pos_letter != dot_pos_end {\n     \
    \   let mut dot_pos_letter = dot_pos_letter + 1;\n        if dot_pos_letter >\
    \ dot_pos_end {\n            dot_pos_letter = dot_pos_start;\n        }\n    \
    \    if file_name[dot_pos_letter] >= 'a' && file_name[dot_pos_letter] <= 'z' {\n\
    \            dot_pos_start_letter = dot_pos_letter;\n        }\n        if file_name[dot_pos_letter]\
    \ >= 'A' && file_name[dot_pos_letter] <= 'Z' {\n            dot_pos_end_letter\
    \ = dot_pos_letter;\n        }\n    }\n    if dot_pos_start_letter != dot_pos_end_letter\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start_letter\
    \ < dot_pos_end_letter {\n        if file_name[dot_pos_start_letter] != '0' {\n\
    \            return String::from(\"No\");\n        }\n    }\n    if dot_pos_end_letter\
    \ < file_name.len() {\n        if file_name[dot_pos_end_letter] != '9' {\n   \
    \         return String::from(\"No\");\n        }\n    }\n    if dot_pos_end_letter\
    \ < dot_pos_start_letter {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_pos_end_letter < dot_pos_end_letter + 3 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end_letter < dot_pos_end_letter + 4 {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_end_letter < dot_pos_end_letter\
    \ + 5 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end_letter\
    \ < dot_pos_end_letter + 6 {\n        return String::from(\"No\");\n    }\n  \
    \  if dot_pos_end_letter < dot_pos_end_letter + 7 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end_letter < dot_pos_end_letter + 8 {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_end_letter < dot_pos_end_letter\
    \ + 9 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end_letter\
    \ < dot_pos_end_letter + 10 {\n        return String::from(\"", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n", "    let mut file_name = file_name.to_string();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end\
    \ += 1;\n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n        if dot_pos_end == file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    else if dot_pos == 0 { return String::from(\"No\") }\n    else if\
    \ file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9')\
    \ { return String::from(\"No\") }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { return String::from(\"No\") }\n    else if\
    \ dot_pos_2 == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos_2\
    \ - 1] != String::from('a') && file_name[dot_pos_2 - 1] != String::from('z') &&\
    \ file_name[dot_pos_2 - 1] != String::from('A') && file_name[dot_pos_2 - 1] !=\
    \ String::from('Z') { return String::from(\"No\") }\n    else if file_name[dot_pos_2\
    \ - 1] != String::from('a') && file_name[dot_pos_2 - 1] != String::from('z') &&\
    \ file_name[dot_pos_2 - 1] != String::from('A') && file_name[dot_pos_2 - 1] !=\
    \ String::from('Z') { return String::from(\"No\") }\n    else if file_name[dot_pos_2\
    \ - 1] != String::from('a') && file_name[dot_pos_2 - 1] != String::from('z') &&\
    \ file_name[dot_pos_2 - 1] != String::from('A') && file_name[dot_pos_2 - 1] !=\
    \ String::from('Z') { return String::from(\"No\") }\n    else if file_name[dot_pos_2\
    \ - 1] != String::from('a') && file_name[dot_pos_2 - 1] != String::from('z') &&\
    \ file_name[dot_pos_2 - 1] != String::from('A') && file_name[dot_pos_2 - 1] !=\
    \ String::from('Z') { return String::from(\"No\") }\n    else if file_name[dot_pos_2\
    \ - 1] != String::from('a') && file_name[dot_pos_2 - 1] != String::from('z') &&\
    \ file_name[dot_pos_2 - 1] != String::from('A') && file_name[dot_pos_2 - 1] !=\
    \ String::from('Z') { return String::from(\"No\") }\n    else if file_name[dot_pos_2\
    \ - 1] != String::from('a') && file_name[dot_pos_2 - 1] != String::from('z') &&\
    \ file_name[dot_pos_2 - 1] != String::from('A') && file_name[dot_pos_2 - 1] !=\
    \ String", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n   \
    \ while dot_pos_end < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] == '.' {\n            if dot_pos_start\
    \ == dot_pos_end {\n                return String::from(\"Yes\");\n          \
    \  }\n            if dot_pos_start > dot_pos_end {\n                return String::from(\"\
    No\");\n            }\n        }\n        dot_pos_end += 1;\n    }\n    return\
    \ String::from(\"No\");", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos == dot_pos_end {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mu", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_end\
    \ = dot_pos_start;\n        let mut dot_pos_start = dot_pos_end;\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end = dot_pos_end + 1;\n        }\n  \
    \      let mut dot_pos_start = dot_pos_end;\n        if dot_pos_start < dot_pos_end\
    \ {\n            let mut dot_pos_end = dot_pos_start;\n            let mut dot_pos_start\
    \ = dot_pos_end;\n            if dot_pos_start == dot_pos_end {\n            \
    \    dot_pos_end = dot_pos_end + 1;\n            }\n            let mut dot_pos_start\
    \ = dot_pos_end;\n            if dot_pos_start < dot_pos_end {\n             \
    \   let mut dot_pos_end = dot_pos_start;\n                let mut dot_pos_start\
    \ = dot_pos_end;\n                if dot_pos_start == dot_pos_end {\n        \
    \            dot_pos_end = dot_pos_end + 1;\n                }\n             \
    \   let mut dot_pos_start = dot_pos_end;\n                if dot_pos_start < dot_pos_end\
    \ {\n                    let mut dot_pos_end = dot_pos_start;\n              \
    \      let mut dot_pos_start = dot_pos_end;\n                    if dot_pos_start\
    \ == dot_pos_end {\n                        dot_pos_end = dot_pos_end + 1;\n \
    \                   }\n                    let mut dot_pos_start = dot_pos_end;\n\
    \                    if dot_pos_start < dot_pos_end {\n                      \
    \  let mut dot_pos_end = dot_pos_start;\n                        let mut dot_pos_start\
    \ = dot_pos_end;\n                        if dot_pos_start == dot_pos_end {\n\
    \                            dot_pos_end = dot_pos_end + 1;\n                \
    \        }\n                        let mut dot_pos_start = dot_pos_end;\n   \
    \                     if dot_pos_start < dot_pos_end {\n                     \
    \       let mut dot_pos_end = dot_pos_start;\n                            let\
    \ mut dot_pos_start = dot_pos_end;\n                            if dot_pos_start\
    \ == dot_pos_end {\n                                dot_pos_end = dot_pos_end\
    \ + 1;\n                            }\n                            let mut dot_pos_start\
    \ = dot_pos_end;\n                            if dot_pos_start < dot_pos_end {\n\
    \                                let mut dot_pos_end = dot_pos_start;\n      \
    \                          let mut dot_pos_start = dot_pos_end;\n            \
    \                    if dot_pos_start == dot_pos_end {\n                     \
    \               dot_pos_end = dot_pos_end + 1;\n                             \
    \   }\n                                let mut dot_pos_start = dot_pos_end;\n\
    \                                if dot_pos_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start = dot_pos_end;\n\
    \        while dot_pos_start < file_name.len() {\n            if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' &&\n                file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' &&\n                dot_pos_start\
    \ != dot_pos_end {\n                break;\n            }\n            dot_pos_start\
    \ += 1;\n        }\n        if dot_pos_start == dot_pos_end {\n            break;\n\
    \        }\n        if file_name[dot_pos_start] == '.' {\n            break;\n\
    \        }\n        dot_pos_end = dot_pos_start;\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start\
    \ = dot_pos_end;\n    while dot_pos_start < file_name.len() {\n        let mut\
    \ dot_pos_end = dot_pos_start;\n        while dot_pos_end < file_name.len() {\n\
    \            if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z'\
    \ &&\n                file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' &&\n                dot_pos_end != dot_pos_start {\n                break;\n\
    \            }\n            dot_pos_end += 1;\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            break;\n        }\n        if file_name[dot_pos_end]\
    \ == '.' {\n            break;\n        }\n        dot_pos_start = dot_pos_end;\n\
    \    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos_end;\n    while dot_pos_start\
    \ < file_name.len() {\n        let mut dot_pos_end = dot_pos_start;\n        while\
    \ dot_pos_end < file_name.len() {\n            if file_name[dot_pos_end] >= 'a'\
    \ && file_name[dot_pos_end] <= 'z' &&\n                file_name[dot_pos_end]\
    \ >= 'A' && file_name[dot_pos_end] <= 'Z' &&\n                dot_pos_end != dot_pos_start\
    \ {\n                break;\n            }\n            dot_pos_end += 1;\n  \
    \      }\n        if dot_pos_end == dot_pos_start {\n            break;\n    \
    \    }\n        if file_name[dot_pos_end] == '.' {\n            break;\n", " \
    \   let mut file_name = file_name.to_string();\n    if file_name.len() > 3 {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() < 3 {\n \
    \       return String::from(\"Yes\");\n    }\n    if file_name.contains(\".\"\
    ) {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.ends_with(\"txt\") || file_name.ends_with(\"exe\") ||\
    \ file_name.ends_with(\"dll\") {\n        return String::from(\"Yes\");\n    }\n\
    \    String::from(\"No\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter_pos = 0;\n    let mut dot_pos_end_letter_pos = 0;\n   \
    \ let mut dot_pos_start_letter_pos_end = 0;\n    let mut dot_pos_end_letter_pos_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mu", "    let mut file_name : String = file_name.to_string();\n\
    \    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n", "    let mut file_name_chars = file_name.chars();\n    let\
    \ mut dot_index = file_name_chars.find_first_of(\".\");\n    let mut first_letter\
    \ = file_name_chars.next().unwrap();\n    if dot_index == file_name_chars.len()\
    \ {\n        return String::from(\"No\");\n    }\n    if first_letter < 'a' ||\
    \ first_letter > 'z' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 'x' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' {\n        return String::from(\"No\");\n    }\n    if file_name_chars.next().unwrap()\
    \ != 't' ", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3\
    \ = file_name.find('.')\n    if dot_pos_3 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7\
    \ = file_name.find('.')\n    if dot_pos_7 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    while dot_pos_2 != String::npos {\n        if dot_pos_2 != dot_pos {\n  \
    \          if file_name[dot_pos - 1] != file_name[dot_pos_2 - 1] {\n         \
    \       return String::from(\"No\");\n            }\n        }\n        dot_pos_2\
    \ = dot_pos_2 + 1;\n        dot_pos = dot_pos_2;\n    }\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    let mut dot_pos_4 = file_name.find('.')\n    while dot_pos_4 != String::npos\
    \ {\n        if dot_pos_4 != dot_pos {\n            if file_name[dot_pos - 1]\
    \ != file_name[dot_pos_4 - 1] {\n                return String::from(\"No\");\n\
    \            }\n        }\n        dot_pos_4 = dot_pos_4 + 1;\n        dot_pos\
    \ = dot_pos_4;\n    }\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n    let mut dot_pos_6\
    \ = file_name.find('.')\n    while dot_pos_6 != String::npos {\n        if dot_pos_6\
    \ != dot_pos {\n            if file_name[dot_pos - 1] != file_name[dot_pos_6 -\
    \ 1] {\n                return String::from(\"No\");\n            }\n        }\n\
    \        dot_pos_6 = dot_pos_6 + 1;\n        dot_pos = dot_pos_6;\n    }\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_7 = file_name.find('.')\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    while dot_pos_8 != String::npos {\n        if dot_pos_8 != dot_pos {\n  \
    \          if file_name[dot_pos - 1] != file_name[dot_pos_8 - 1] {\n         \
    \       return String::from(\"No\");\n            }\n        }\n        dot_pos_8\
    \ = dot_pos_8 + 1;\n        dot_pos = dot_pos_8;\n    }\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    let mut dot_pos_10 = file_name.find('.')\n    while dot_pos_10 != String::npos\
    \ {\n        if dot_pos_10 != dot_pos {\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    else { \n        file_name.truncate(dot_pos);\n\
    \        let mut first_letter = file_name.chars().next().unwrap();\n        if\
    \ first_letter < 'a' || first_letter > 'z' { return String::from(\"No\") }\n \
    \   }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    else { \n        file_name.truncate(dot_pos);\n\
    \        let mut dot_letter = file_name.chars().next().unwrap();\n        if dot_letter\
    \ < 'a' || dot_letter > 'z' { return String::from(\"No\") }\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    else { \n        file_name.truncate(dot_pos);\n        let mut dot_letter\
    \ = file_name.chars().next().unwrap();\n        if dot_letter < 'a' || dot_letter\
    \ > 'z' { return String::from(\"No\") }\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else { \n\
    \        file_name.truncate(dot_pos);\n        let mut dot_letter = file_name.chars().next().unwrap();\n\
    \        if dot_letter < 'a' || dot_letter > 'z' { return String::from(\"No\"\
    ) }\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    else { \n        file_name.truncate(dot_pos);\n\
    \        let mut dot_letter = file_name.chars().next().unwrap();\n        if dot_letter\
    \ < 'a' || dot_letter > 'z' { return String::from(\"No\") }\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    else { \n        file_name.truncate(dot_pos);\n        let mut dot_letter\
    \ = file_name.chars().next().unwrap();\n        if dot_letter < 'a' || dot_letter\
    \ > 'z' { return String::from(\"No\") }\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else { \n\
    \        file_name.", "    let mut file_name = file_name.to_string();\n    if\
    \ file_name.chars().count() > 3 {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().count() == 0 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 {\n        if file_name[0]\
    \ != 'a' && file_name[0] != 'A' {\n            return String::from(\"No\");\n\
    \        }\n    }\n    if file_name.chars().count() == 3 {\n        if file_name[1]\
    \ != '.' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() > 4 {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().count() < 5 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() > 6 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 7 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 8 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 9 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 9 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 10 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 10 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 11 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 11 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 12 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 12 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 13 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 13 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 14 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 14 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() < 15 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 15 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.", "    if file_name.chars().count() > 3 {\n \
    \       String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.rfind('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name[dot_pos - 1..dot_pos].chars().next()\n\
    \            if first_letter != String::from('a'..'z') && first_letter != String::from('A'..'Z')\
    \ {\n                String::from(\"No\")\n            } else {\n            \
    \    String::from(\"Yes\")\n            }\n        }\n    }", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = ", "    let mut file_name =\
    \ file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while\
    \ dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start] >= 'a'\
    \ && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start++;\n       \
    \ } else if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <= 'Z'\
    \ {\n            dot_pos_start++;\n        } else {\n            break;\n    \
    \    }\n    }\n    while dot_pos_end < file_name.len() {\n        if file_name[dot_pos_end]\
    \ >= 'a' && file_name[dot_pos_end] <= 'z' {\n            dot_pos_end++;\n    \
    \    } else if file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end] <= 'Z'\
    \ {\n            dot_pos_end++;\n        } else {\n            break;\n      \
    \  }\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_end == dot_pos {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_end == dot_pos {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_end == dot_pos {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end {", "    let mut file_name\
    \ = file_name.to_string();\n    file_name.chars().filter(|c| c >= '0' && c <=\
    \ '9').count();\n    file_name.chars().filter(|c| c >= 'a' && c <= 'z').count();\n\
    \    file_name.chars().filter(|c| c >= 'A' && c <= 'Z').count();\n    file_name.chars().filter(|c|\
    \ c != '.').count();\n    file_name.chars().filter(|c| c != '/').count();\n  \
    \  file_name.chars().filter(|c| c != '\\\\').count();\n    file_name.chars().filter(|c|\
    \ c != '-').count();\n    file_name.chars().filter(|c| c != '_').count();\n  \
    \  file_name.chars().filter(|c| c != '/').count();\n    file_name.chars().filter(|c|\
    \ c != '\\\\').count();\n    file_name.chars().filter(|c| c != '-').count();\n\
    \    file_name.chars().filter(|c| c != '_').count();\n    file_name.chars().filter(|c|\
    \ c != '/').count();\n    file_name.chars().filter(|c| c != '\\\\').count();\n\
    \    file_name.chars().filter(|c| c != '-').count();\n    file_name.chars().filter(|c|\
    \ c != '_').count();\n    file_name.chars().filter(|c| c != '/').count();\n  \
    \  file_name.chars().filter(|c| c != '\\\\').count();\n    file_name.chars().filter(|c|\
    \ c != '-').count();\n    file_name.chars().filter(|c| c != '_').count();\n  \
    \  file_name.chars().filter(|c| c != '/').count();\n    file_name.chars().filter(|c|\
    \ c != '\\\\').count();\n    file_name.chars().filter(|c| c != '-').count();\n\
    \    file_name.chars().filter(|c| c != '_').count();\n    file_name.chars().filter(|c|\
    \ c != '/').count();\n    file_name.chars().filter(|c| c != '\\\\').count();\n\
    \    file_name.chars().filter(|c| c != '-').count();\n    file_name.chars().filter(|c|\
    \ c != '_').count();\n    file_name.chars().filter(|c| c != '/').count();\n  \
    \  file_name.chars().filter(|c| c != '\\\\').count();\n    file_name.char", " \
    \   let mut file_name = file_name.to_string();\n    file_name.trim_left_matches('0');\n\
    \    file_name.trim_left_matches('9');\n    file_name.trim_left_matches('.');\n\
    \    file_name.trim_left_matches(\"\");\n    file_name.trim_left_matches(&\"a..zA..Z\"\
    );\n    file_name", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\")\n    }\n    if file_name.len() < 3 {\n        return String::from(\"No\"\
    )\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return\
    \ String::from(\"No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\")\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\")\n    }\n   \
    \ if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n\
    \        return String::from(\"No\")\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_symbol()) {\n        return String::from(\"No\")\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n  \
    \      return String::from(\"No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit())\
    \ {\n        return String::from(\"No\")\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"No\")\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n        return String::from(\"\
    No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n  \
    \      return String::from(\"No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ {\n        return String::from(\"No\")\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit()) {\n        return String::from(\"No\")\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"No\")\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n        return String::from(\"\
    No\")\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n  \
    \      return String::from(\"No\")\n    }\n    if file_name.chars().any(|c"]
stop_tokens:
- "\n}"

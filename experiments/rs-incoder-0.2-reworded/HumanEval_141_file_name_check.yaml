name: HumanEval_141_file_name_check
language: rs
prompt: "/// Create a function which takes a string representing a file's name, and\
  \ returns\n/// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  /// A file's name is considered to be valid if and only if all the following conditions\
  \ \n/// are met:\n/// - There should not be more than three digits ('0'-'9') in\
  \ the file's name.\n/// - The file's name contains exactly one dot '.'\n/// - The\
  \ substring before the dot should not be empty, and it starts with a letter from\
  \ \n/// the latin alphapet ('a'-'z' and 'A'-'Z').\n/// - The substring after the\
  \ dot should be one of these: ['txt', 'exe', 'dll']\n/// Examples:\n/// >>> file_name_check(String::from(\"\
  example.txt\"))\n/// String::from(\"Yes\")\n/// >>> file_name_check(String::from(\"\
  1example.dll\"))\n/// String::from(\"No\")\nfn file_name_check(file_name: String)\
  \ -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = file_name_check;\n    assert_eq!(candidate(String::from(\"\
  example.txt\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"\
  1example.dll\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  s1sdf3.asd\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  K.dll\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"MY16FILE3.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"His12FILE94.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_Y.txt\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"?aREYA.exe\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"/this_is_valid.dll\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.wow\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txtexe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"#this2_i4s_5valid.ten\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"@this1_is6_valid.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_12valid.6exe4.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"all.exe.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_No.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"Is3youfault.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"no_one#knows.dll\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"1I563_Yes3.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_Yes3.txtt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final..txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final132\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_f4indsartal132.\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\".txt\")), String::from(\"\
  No\"));\n    assert_eq!(candidate(String::from(\"s.\")), String::from(\"No\"));\n\
  }\n"
completions: ["    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n\
    \    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter_pos = 0;\n    let mut dot_pos_end_letter_pos\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end = 0;\n    let mut dot_pos_end_letter_pos_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_2 = dot_pos_2 + 1;\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = dot_pos_3 + 1;\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = dot_pos_4 + 1;\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = dot_pos_5 + 1;\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = dot_pos_6 + 1;\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = dot_pos_7 + 1;\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = dot_pos_8 + 1;\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = dot_pos_9 + 1;\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_10 = dot_pos_10 + 1;\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = dot_pos_11 + 1;\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut ", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name.chars().next().unwrap();\n \
    \           if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos_2 = file_name.find('.')\n\
    \                    if dot_pos_2 == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos_3\
    \ = file_name.find('.')\n                        if dot_pos_3 == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_pos_4 = file_name.find('.')\n\
    \                            if dot_pos_4 == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_pos_5 = file_name.find('.')\n   \
    \                             if dot_pos_5 == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_pos_6 = file_name.find('.')\n\
    \                                    if dot_pos_6 == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_pos_7\
    \ = file_name.find('.')\n                                        if dot_pos_7\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_pos_8 = file_name.find('.')\n           \
    \                                 if dot_pos_8 == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_pos_9 = file_name.find('.')\n                          \
    \                      if dot_pos_9 == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_pos_10 = file_name.find('.')\n                        \
    \                            if dot_pos_10 == String::npos {\n               \
    \                                         String::from(\"No\")\n             \
    \                                       } else {\n                           \
    \                             let mut dot_pos_11 = file_name.find('.')\n     \
    \                                                   if dot_pos_11 == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_pos_12 =\
    \ file_name.find('.')\n                                                      \
    \      if dot_pos_12 == String::npos {\n                                     \
    \                           String::from(\"No\")\n                           \
    \                                 } else {\n                                 \
    \                               let mut dot_pos_13 = file_name.find('.')\n   \
    \                                                             if dot_", "    if\
    \ file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n        let\
    \ mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos {\n  \
    \          String::from(\"No\")\n        } else {\n            let mut dot_pos_end\
    \ = dot_pos;\n            dot_pos_end += 1;\n            let mut dot_pos_start\
    \ = dot_pos;\n            dot_pos_start += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter\
    \ += 1;\n            let mut dot_pos_start_letter = dot_pos_start;\n         \
    \   dot_pos_start_letter += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n\
    \            dot_pos_end_letter += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter\
    \ += 1;\n            let mut dot_pos_start_letter = dot_pos_start;\n         \
    \   dot_pos_start_letter += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n\
    \            dot_pos_end_letter += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter\
    \ += 1;\n            let mut dot_pos_start_letter = dot_pos_start;\n         \
    \   dot_pos_start_letter += 1;\n            let mut dot_pos_end_letter = dot_pos_end;\n\
    \            dot_pos_end_letter += 1;\n            let mut dot_pos_start_letter\
    \ = dot_pos_start;\n            dot_pos_start_letter += 1;\n            let mut\
    \ dot_pos_end_letter = dot_pos_end;\n            dot_pos_end_letter += 1;\n  \
    \          let mut dot_pos_start_letter = dot_pos_start;\n            dot_pos_start_letter\
    \ += 1;\n            let mut dot_pos_end_letter = dot_pos_end;", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    while dot_pos_end < file_name.len() {\n\
    \        let mut dot_pos_end = dot_pos_end + 1;\n        if dot_pos_end > file_name.len()\
    \ {\n            break;\n        }\n        let mut dot_pos_start = dot_pos_end\
    \ - 1;\n        if dot_pos_start < 0 {\n            dot_pos_start = 0;\n     \
    \   }\n        let mut dot_pos_start_letter = dot_pos_start;\n        while dot_pos_start_letter\
    \ < dot_pos_start {\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            if dot_pos_start_letter > dot_pos_start {\n              \
    \  break;\n            }\n", "    let mut file_name_len = file_name.len();\n \
    \   let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    while dot_pos != String::npos\
    \ {\n        if file_name_len > 3 {\n            return String::from(\"No\");\n\
    \        }\n        if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos\
    \ - 1] != String::from('9') {\n            return String::from(\"No\");\n    \
    \    }\n        if file_name[dot_pos - 1] != String::from('.') {\n           \
    \ return String::from(\"No\");\n        }\n        if file_name[dot_pos - 2] !=\
    \ String::from('a') && file_name[dot_pos - 2] != String::from('z') && file_name[dot_pos\
    \ - 2] != String::from('A') && file_name[dot_pos - 2] != String::from('Z') {\n\
    \            return String::from(\"No\");\n        }\n        dot_pos = file_name.find('.')\n\
    \        file_name_len += 1;\n    }\n    \n    if file_name_len != 1 {\n     \
    \   return String::from(\"No\");\n    }\n    \n    if file_name[0] != String::from('a')\
    \ && file_name[0] != String::from('z') && file_name[0] != String::from('A') &&\
    \ file_name[0] != String::from('Z') {\n        return String::from(\"No\");\n\
    \    }\n    \n    String::from(\"Yes\")", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        let mut dot_pos_end = dot_pos;\n       \
    \ dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n \
    \       let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n      \
    \  let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n        let mut\
    \ dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        let mut dot_pos_end = dot_pos;\n       \
    \ dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n \
    \       let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n      \
    \  let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n        let mut\
    \ dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        let mut dot_pos_end = dot_pos;\n       \
    \ dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n \
    \       let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n      \
    \  let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n        let mut\
    \ dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        let mut dot_pos_end\
    \ = dot_pos;\n        dot_pos_end += 1;\n        let mut dot_", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n    while dot_pos\
    \ < dot_len {\n        let mut dot_char = file_name[dot_pos];\n        if dot_char\
    \ == '.' {\n            dot_pos = dot_pos + 1;\n            dot_len = dot_len\
    \ - dot_pos;\n        } else {\n            break;\n        }\n    }\n    let\
    \ mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n        let mut\
    \ dot_pos = dot_pos + 1;\n        let mut dot_len = file_name.len();\n       \
    \ while dot_pos < dot_len {\n            let mut dot_char = file_name[dot_pos];\n\
    \            if dot_char == '.' {\n                dot_pos = dot_pos + 1;\n  \
    \              dot_len = dot_len - dot_pos;\n            } else {\n          \
    \      break;\n            }\n        }\n        let mut dot_char = file_name[dot_pos];\n\
    \        if dot_char == '.' {\n            let mut dot_pos = dot_pos + 1;\n  \
    \          let mut dot_len = file_name.len();\n            while dot_pos < dot_len\
    \ {\n                let mut dot_char = file_name[dot_pos];\n                if\
    \ dot_char == '.' {\n                    dot_pos = dot_pos + 1;\n            \
    \        dot_len = dot_len - dot_pos;\n                } else {\n            \
    \        break;\n                }\n            }\n            let mut dot_char\
    \ = file_name[dot_pos];\n            if dot_char == '.' {\n                return\
    \ String::from(\"Yes\");\n            }\n        }\n    }\n    return String::from(\"\
    No\");", "    let mut file_name = file_name.to_string();\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_letter()).count();\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count();\n\
    \    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count()\
    \ == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0\
    \ &&\n    file_name.chars().filter(|c| !c.is_ascii_digit()).count() == 0 &&\n\
    \    file_name.chars().filter(|c| !c.is_ascii_letter()).count() == 0 &&\n    file_name.chars().filter(|c|\
    \ !c.is_ascii_digit()).count() == 0 &&\n    file_name.chars().filter(|c| !c.is_ascii_letter()).count()\
    \ == 0 &&\n    file_name.chars().filter(", "    if file_name.len() > 3 {\n   \
    \     String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos = file_name.find('.')\n\
    \                    if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            if dot_pos == dot_pos + 1 {\n               \
    \                 String::from(\"Yes\")\n                            } else {\n\
    \                                String::from(\"No\")\n                      \
    \      }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\")\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = String::from(\"a\");\n    let mut dot_pos_end_letter = String::from(\"z\"\
    );\n    let mut dot_pos_end_letter_pos = 0;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos\
    \ = dot_pos_end_letter_pos + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos\
    \ + 1;\n    let mut dot_pos_end_letter_pos = dot_pos_end_letter_pos + 1;\n   \
    \ let mut dot_pos_end_letter_pos = ", "    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.contains(\".\") {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_letter()\
    \ || c != 'a' && c != 'z' || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count(|c| c == '.') != 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| c == '.') !=\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_letter = dot_pos;\n    let mut dot_pos_letter2 = dot_pos;\n    let mut\
    \ dot_pos_letter3 = dot_pos;\n    let mut dot_pos_letter4 = dot_pos;\n    let\
    \ mut dot_pos_letter5 = dot_pos;\n    let mut dot_pos_letter6 = dot_pos;\n   \
    \ let mut dot_pos_letter7 = dot_pos;\n    let mut dot_pos_letter8 = dot_pos;\n\
    \    let mut dot_pos_letter9 = dot_pos;\n    let mut dot_pos_letter10 = dot_pos;\n\
    \    let mut dot_pos_letter11 = dot_pos;\n    let mut dot_pos_letter12 = dot_pos;\n\
    \    let mut dot_pos_letter13 = dot_pos;\n    let mut dot_pos_letter14 = dot_pos;\n\
    \    let mut dot_pos_letter15 = dot_pos;\n    let mut dot_pos_letter16 = dot_pos;\n\
    \    let mut dot_pos_letter17 = dot_pos;\n    let mut dot_pos_letter18 = dot_pos;\n\
    \    let mut dot_pos_letter19 = dot_pos;\n    let mut dot_pos_letter20 = dot_pos;\n\
    \    let mut dot_pos_letter21 = dot_pos;\n    let mut dot_pos_letter22 = dot_pos;\n\
    \    let mut dot_pos_letter23 = dot_pos;\n    let mut dot_pos_letter24 = dot_pos;\n\
    \    let mut dot_pos_letter25 = dot_pos;\n    let mut dot_pos_letter26 = dot_pos;\n\
    \    let mut dot_pos_letter27 = dot_pos;\n    let mut dot_pos_letter28 = dot_pos;\n\
    \    let mut dot_pos_letter29 = dot_pos;\n    let mut dot_pos_letter30 = dot_pos;\n\
    \    let mut dot_pos_letter31 = dot_pos;\n    let mut dot_pos_letter32 = dot_pos;\n\
    \    let mut dot_pos_letter33 = dot_pos;\n    let mut dot_pos_letter34 = dot_pos;\n\
    \    let mut dot_pos_letter35 = dot_pos;\n    let mut dot_pos_letter36 = dot_pos;\n\
    \    let mut dot_pos_letter37 = dot_", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    if file_name_len > 3 {\n        return String::from(\"No\");\n\
    \    }\n    \n    let mut first_letter = file_name[dot_pos - 1..dot_pos];\n  \
    \  if first_letter != \"a\" && first_letter != \"A\" && first_letter != \"b\"\
    \ && first_letter != \"B\" && first_letter != \"c\" && first_letter != \"C\" &&\
    \ first_letter != \"d\" && first_letter != \"D\" && first_letter != \"e\" && first_letter\
    \ != \"E\" && first_letter != \"f\" && first_letter != \"F\" && first_letter !=\
    \ \"g\" && first_letter != \"G\" && first_letter != \"h\" && first_letter != \"\
    H\" && first_letter != \"i\" && first_letter != \"I\" && first_letter != \"j\"\
    \ && first_letter != \"J\" && first_letter != \"k\" && first_letter != \"K\" &&\
    \ first_letter != \"l\" && first_letter != \"L\" && first_letter != \"m\" && first_letter\
    \ != \"M\" && first_letter != \"n\" && first_letter != \"N\" && first_letter !=\
    \ \"o\" && first_letter != \"O\" && first_letter != \"p\" && first_letter != \"\
    P\" && first_letter != \"q\" && first_letter != \"Q\" && first_letter != \"r\"\
    \ && first_letter != \"R\" && first_letter != \"s\" && first_letter != \"S\" &&\
    \ first_letter != \"t\" && first_letter != \"T\" && first_letter != \"u\" && first_letter\
    \ != \"U\" && first_letter != \"v\" && first_letter != \"V\" && first_letter !=\
    \ \"w\" && first_letter != \"W\" && first_letter != \"x\" && first_letter != \"\
    X\" && first_letter != \"y\" && first_letter != \"Y\" && first_letter != \"z\"\
    \ && first_letter != \"Z\" {\n        return String::from(\"No\");\n    }\n  \
    \  \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_3 != dot_pos_4 {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_3 != dot_pos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_3 != dot_pos_2 {\n        return String::from(\"\
    No\");\n", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    while\
    \ dot_pos_start < dot_pos_end {\n        if file_name[dot_pos_start] >= 'a' &&\
    \ file_name[dot_pos_start] <= 'z' {\n            dot_pos_start_letter = dot_pos_start;\n\
    \            break;\n        }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter\
    \ >= dot_pos_start {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    while dot_pos_end_letter >= dot_pos_start\
    \ {\n        if file_name[dot_pos_end_letter] >= 'a' && file_name[dot_pos_end_letter]\
    \ <= 'z' {\n            break;\n        }\n        dot_pos_end_letter -= 1;\n\
    \    }\n    if dot_pos_end_letter < dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start_letter] == '.' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter] != 'txt'\
    \ && file_name[dot_pos_end_letter] != 'exe' && file_name[dot_pos_end_letter] !=\
    \ 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.len() <\
    \ 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.ends_with(\"\
    txt\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.ends_with(\"\
    exe\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.ends_with(\"\
    dll\") {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else\
    \ {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name.chars().next().unwrap();\n            if first_letter < 'a' || first_letter\
    \ > 'z' {\n                String::from(\"No\")\n            } else {\n      \
    \          let mut dot_pos = file_name.find('.')\n                if dot_pos ==\
    \ String::npos {\n                    String::from(\"No\")\n                }\
    \ else {\n                    let mut dot_pos = file_name.find('.')\n        \
    \            if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            let mut dot_pos = file_name.find('.')\n     \
    \                       if dot_pos == String::npos {\n                       \
    \         String::from(\"No\")\n                            } else {\n       \
    \                         let mut dot_pos = file_name.find('.')\n            \
    \                    if dot_pos == String::npos {\n                          \
    \          String::from(\"No\")\n                                } else {\n  \
    \                                  let mut dot_pos = file_name.find('.')\n   \
    \                                 if dot_pos == String::npos {\n             \
    \                           String::from(\"No\")\n                           \
    \         } else {\n                                        let mut dot_pos =\
    \ file_name.find('.')\n                                        if dot_pos == String::npos\
    \ {\n                                            String::from(\"No\")\n      \
    \                                  } else {\n                                \
    \            let mut dot_pos = file_name.find('.')\n                         \
    \                   if dot_pos == String::npos {\n                           \
    \                     String::from(\"No\")\n                                 \
    \           } else {\n                                                let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \    if dot_pos == String::npos {\n                                          \
    \          String::from(\"No\")\n                                            \
    \    } else {\n                                                    let mut dot_pos\
    \ = file_name.find('.')\n                                                    if\
    \ dot_pos == String::npos {\n                                                \
    \        String::from(\"No\")\n                                              \
    \      } else {\n                                                        let mut\
    \ dot_pos = file_name.find('.')\n                                            \
    \            if dot_pos == String::npos {\n                                  \
    \                          String::from(\"No\")\n                            \
    \                            } else {\n                                      \
    \                      let mut dot_pos = file_name.find('.')\n               \
    \                                             if dot_pos == String::npos {\n \
    \                                                               String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_pos\
    \ = file_name.find('.')\n                                                    \
    \            if dot_pos == String::npos {\n                                  \
    \                                  String::from(\"No\")\n                    \
    \                                            } else {\n                      \
    \                                              ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    if file_name.len()\
    \ < 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n    if\
    \ first_char < 'a' || first_char > 'z' {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos + 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[..dot_pos].chars().any(|c| c != 'a' && c != 'z'\
    \ && c != 'A' && c != 'Z') {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name[dot_pos + 2] != \"txt\" && file_name[dot_pos + 2] != \"exe\" &&\
    \ file_name[dot_pos + 2] != \"dll\" {\n        return String::from(\"No\");\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            break;\n        }\n        if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n    }\n    return String::from(\"\
    Yes\");"]
stop_tokens:
- "\n}"

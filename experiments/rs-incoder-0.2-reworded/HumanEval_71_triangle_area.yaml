name: HumanEval_71_triangle_area
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return the area of\n\
  /// the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n/// Otherwise return -1\n/// Three sides make a valid triangle when the sum\
  \ of any two sides is greater \n/// than the third side.\n/// Example:\n/// >>>\
  \ triangle_area(3, 4, 5)\n/// 6.0\n/// >>> triangle_area(1, 2, 10)\n/// -1\nfn triangle_area(a:\
  \ isize, b: isize, c: isize) -> f64 {\n"
tests: "}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(3,\
  \ 4, 5), 6.0);\n    assert_eq!(candidate(1, 2, 10), -1.0);\n    assert_eq!(candidate(4,\
  \ 8, 5), 8.18);\n    assert_eq!(candidate(2, 2, 2), 1.73);\n    assert_eq!(candidate(1,\
  \ 2, 3), -1.0);\n    assert_eq!(candidate(10, 5, 7), 16.25);\n    assert_eq!(candidate(2,\
  \ 6, 3), -1.0);\n    assert_eq!(candidate(1, 1, 1), 0.43);\n    assert_eq!(candidate(2,\
  \ 2, 10), -1.0);\n}\n"
completions: ["    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n     \
    \   _ => match a + b {\n            a if b > c => b * b - c * a,\n           \
    \ a if b < c => c * c - a * b\n        }\n    }", "    if a + b > c {\n      \
    \  return -1\n    }\n    if a + c > b {\n        return -1\n    }\n    if b +\
    \ c > a {\n        return -1\n    }\n    let mut s = 0.0;\n    if a + b > c {\n\
    \        s = s + (a + b - c) * 0.5;\n    }\n    if a + c > b {\n        s = s\
    \ + (a + c - b) * 0.5;\n    }\n    if b + c > a {\n        s = s + (b + c - a)\
    \ * 0.5;\n    }\n    s * 0.5", "    let mut s = a + b + c;\n    if s > 0 {\n \
    \       s /= 2;\n    }\n    s * s", "    if a + b > c {\n        return -1;\n\
    \    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n  \
    \      return -1;\n    }\n    let mut area = 0.0;\n    area = area + (a + b) *\
    \ (a + c) * (b + c);\n    area = area / 3.0;\n    area = area.round();\n    area",
  "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b + c);\n\
    \    }\n    if a + c > b {\n        s = s + (c - b) * (c + b);\n    }\n    if\
    \ b + c > a {\n        s = s + (a - b) * (a + b);\n    }\n    s / 2.0", "    if\
    \ a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut area:\
    \ f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area\
    \ = area.round();\n    \n    return area;", "    if a + b > c {\n        return\
    \ -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a\
    \ {\n        return -1;\n    }\n    (a * b + c) * 0.5", "    let mut s = 0.0;\n\
    \    if a + b > c {\n        s = s + (a + b - c) * (a + b - c);\n    }\n    if\
    \ a + c > b {\n        s = s + (a + c - b) * (a + c - b);\n    }\n    if b + c\
    \ > a {\n        s = s + (b + c - a) * (b + c - a);\n    }\n    s / (a + b + c)",
  "    if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n    } else\
    \ if b + c > a {\n        -1\n    } else {\n        (a * b + c) / 2.0\n    }",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut\
    \ s = (a + b + c) / 2;\n    if s == 0 {\n        return 0;\n    }\n    \n    let\
    \ mut area = 0.0;\n    while s > 0 {\n        area += s;\n        s /= 2.0;\n\
    \    }\n    \n    area", "    let mut area = 0.0;\n    if a + b > c {\n      \
    \  area = area + (c - a) * (b - a);\n    }\n    if a + c > b {\n        area =\
    \ area + (b - a) * (c - a);\n    }\n    if b + c > a {\n        area = area +\
    \ (a - b) * (c - b);\n    }\n    area = area / 2.0;\n    area = area.round();\n\
    \    area", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n\
    \        return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n  \
    \  let mut area = 0.0;\n    area = area + (a * b) - (c * a);\n    area = area\
    \ + (b * c) - (a * b);\n    area = area + (c * a) - (b * c);\n    area = area\
    \ / 2.0;\n    area = round(area, 2);\n    area", "    if a + b > c {\n       \
    \ return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b +\
    \ c > a {\n        return -1;\n    }\n    (a * b + c) / 2.0", "    if a + b >\
    \ c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n    }\n\
    \    if b + c > a {\n        return -1\n    }\n    \n    let mut area: f64 = 0.0;\n\
    \    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n", " \
    \   if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n    } else\
    \ if b + c > a {\n        -1\n    } else {\n        (a * b + c) / 2.0\n    }",
  "    if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n    } else\
    \ if b + c > a {\n        -1\n    } else {\n        ((a + b + c) / 2)\n    }",
  "    match a + b + c {\n        c if c > a + b => a,\n        c if c > a => b,\n\
    \        c if c > b => c,\n        _ => return -1.0,\n    }", "    let mut a =\
    \ a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if a +\
    \ b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n        b = a +\
    \ c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n    (a * b\
    \ * c) / ((a * b) + c * c)", "    if a + b > c {\n        return -1\n    }\n \
    \   if a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return\
    \ -1\n    }\n    (a * b + c) / 2.0", "    let mut s = a + b + c;\n    if s > 0\
    \ {\n        s /= 2;\n    }\n    s", "    if a + b > c {\n        return -1;\n\
    \    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n  \
    \      return -1;\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n\
    \        area += b * b - a * a;\n    }\n    if a > c {\n        area += c * c\
    \ - a * a;\n    }\n    if b > c {\n        area += a * a - b * b;\n    }\n   \
    \ \n    area /= 2.0;\n    \n    area = round(area * 100.0) / 100.0;\n    \n  \
    \  return area;", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let\
    \ mut c = c as f64;\n    if a + b > c {\n        a = a as f64;\n        b = b\
    \ as f64;\n        c = c as f64;\n    }\n    if a + c > b {\n        a = a as\
    \ f64;\n        c = c as f64;\n    }\n    if b + c > a {\n        b = b as f64;\n\
    \        c = c as f64;\n    }\n    (a * b * c).round() as f64", "    let mut a\
    \ = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if a\
    \ + b > c {\n        a = b - c;\n    }\n    if a + c > b {\n        b = c - a;\n\
    \    }\n    if b + c > a {\n        c = a - b;\n    }\n    a + b + c", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c /\
    \ 3.0,\n    }", "    if a + b > c {\n        return -1;\n    }\n    if a + c >\
    \ b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n   \
    \ }\n    \n    let mut s = (a + b + c) / 2;\n    if s == 0 {\n        return 0;\n\
    \    }\n    \n    let mut area: f64 = s * s;\n    \n    if a > b {\n        area\
    \ -= (b - c) * (s - a);\n    }\n    if a > c {\n        area -= (c - a) * (s -\
    \ b);\n    }\n    if b > c {\n        area -= (c - b) * (s - c);\n    }\n    \n\
    \    area /= 2;\n    \n    area", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    if s\
    \ == 1 {\n        return 1.0;\n    }\n    if s == 2 {\n        return 0.0;\n \
    \   }\n    if s == 3 {\n        return 0.0;\n    }\n    if s == 4 {\n        return\
    \ 0.0;\n    }\n    if s == 5 {\n        return 0.0;\n    }\n    if s == 6 {\n\
    \        return 0.0;\n    }\n    if s == 7 {\n        return 0.0;\n    }\n   \
    \ if s == 8 {\n        return 0.0;\n    }\n    if s == 9 {\n        return 0.0;\n\
    \    }\n    if s == 10 {\n        return 0.0;\n    }\n    if s == 11 {\n     \
    \   return 0.0;\n    }\n    if s == 12 {\n        return 0.0;\n    }\n    if s\
    \ == 13 {\n        return 0.0;\n    }\n    if s == 14 {\n        return 0.0;\n\
    \    }\n    if s == 15 {\n        return 0.0;\n    }\n    if s == 16 {\n     \
    \   return 0.0;\n    }\n    if s == 17 {\n        return 0.0;\n    }\n    if s\
    \ == 18 {\n        return 0.0;\n    }\n    if s == 19 {\n        return 0.0;\n\
    \    }\n    if s == 20 {\n        return 0.0;\n    }\n    if s == 21 {\n     \
    \   return 0.0;\n    }\n    if s == 22 {\n        return 0.0;\n    }\n    if s\
    \ == 23 {\n        return 0.0;\n    }\n    if s == 24 {\n        return 0.0;\n\
    \    }\n    if s == 25 {\n        return 0.0;\n    }\n    if s == 26 {\n     \
    \   return 0.0;\n    }\n    if s == 27 {\n        return 0.0;\n    }\n    if s\
    \ == 28 {\n        return 0.0;\n    }\n    if s == 29 {\n        return 0.0;\n\
    \    }\n    if s == 30 {\n        return 0.0;\n    }\n    if s == 31 {\n     \
    \   return 0.0;\n    }\n    if s == 32 {\n        return 0.0;\n    }\n    if s\
    \ == 33 {\n        return 0.0;\n    }\n    if s == 34 {\n        return 0.0;\n\
    \    }\n    if s == 35 {\n        return 0.0;\n    }\n    if s == 36 {\n     \
    \   return 0.0;\n    }\n    if s == 37 {\n        return 0.0;\n    }\n    if s\
    \ == 38 {\n        return 0.0;\n    }\n    if s == 39 {\n        return 0.0;\n\
    \    }\n    if s == 40 {\n        return 0.0;\n    }\n    if s == 41 {\n     \
    \   return 0.0;\n    }\n    if s == 42 {\n        return 0.0;\n    }\n    if s\
    \ == 43 {\n        return 0.0;\n    }\n    if s == 44 {\n        return 0.0;\n\
    \    }\n    if s == ", "    let mut a = a as f64;\n    let mut b = b as f64;\n\
    \    let mut c = c as f64;\n    if a + b > c {\n        a = b - c;\n    }\n  \
    \  if a + c > b {\n        b = c - a;\n    }\n    if b + c > a {\n        c =\
    \ a - b;\n    }\n    (a * b * c) / ((a * b) + c * a)", "    let mut s = a + b\
    \ + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let ", "    if a + b > c {\n\
    \        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n  \
    \  if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area += c / a;\n    }\n    \n    if a > c {\n \
    \       area += b / a;\n    }\n    \n    if b > c {\n        area += a / b;\n\
    \    }\n    \n    area", "    match a + b + c {\n        0 => 0.0,\n        1\
    \ => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "    if a + b > c {\n\
    \        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n  \
    \  if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a + b > c {\n        area = area + (b - c) * (b + c) / 2.0;\n  \
    \  }\n    \n    if a + c > b {\n        area = area + (c - a) * (c + a) / 2.0;\n\
    \    }\n    \n    if b + c > a {\n        area = area + (a - b) * (a + b) / 2.0;\n\
    \    }\n    \n    area = area / 2.0;\n    \n    area = round(area, 2);\n    \n\
    \    return area;", "    if a + b > c {\n        return -1\n    }\n    if a +\
    \ c > b {\n        return -1\n    }\n    if b + c > a {\n        return -1\n \
    \   }\n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area =\
    \ area / 2.0;\n    area = area.round();\n    return area;", "    if a + b > c\
    \ {\n        -1\n    } else {\n        (a * b) / (a + b + c)\n    }", "    let\
    \ mut area = 0.0;\n    if a + b > c {\n        area = area + b * b - c * c;\n\
    \    }\n    if a + c > b {\n        area = area + c * c - b * b;\n    }\n    if\
    \ b + c > a {\n        area = area + b * b - c * c;\n    }\n    area = area /\
    \ 2.0;\n    if area < 0.0 {\n        area = -1.0;\n    }\n    area = area.round();\n\
    \    area", "    let mut sum: f64 = 0.0;\n    let mut product: f64 = 0.0;\n  \
    \  \n    if a + b > c {\n        sum = a + b;\n        product = c;\n    } else\
    \ {\n        sum = c;\n        product = a + b;\n    }\n    \n    if product >\
    \ sum {\n        product = sum;\n    }\n    \n    product / 2.0", "    match a\
    \ + b + c {\n        c => if a + b > c { c } else { a },\n        b => if a +\
    \ c > b { b } else { a },\n        a => if b + c > a { a } else { b },\n     \
    \   _ => -1.0,\n    }", "    let mut a = a as f64;\n    let mut b = b as f64;\n\
    \    let mut c = c as f64;\n    let mut s = 0.0;\n    if a + b > c {\n       \
    \ a = b;\n        b = c;\n        c = a;\n    }\n    if a + c > b {\n        a\
    \ = c;\n        c = b;\n        b = a;\n    }\n    if b + c > a {\n        b =\
    \ c;\n        c = a;\n        a = b;\n    }\n    s = (a * b + c * a + b * c) as\
    \ f64;\n    if s > 0.0 {\n        s /= 2.0;\n    }\n    s ", "    let mut s =\
    \ a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    let mut\
    \ area = 0.0;\n    if a + b > c {\n        area = area + (c - b) * (c - a);\n\
    \    }\n    if a + c > b {\n        area = area + (b - a) * (b - c);\n    }\n\
    \    if a + b > c {\n        area = area + (c - a) * (c - b);\n    }\n    area",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut\
    \ area = 0.0;\n    \n    if a + b > c {\n        area = area + (b - c) * 0.5;\n\
    \    }\n    if a + c > b {\n        area = area + (c - a) * 0.5;\n    }\n    if\
    \ b + c > a {\n        area = area + (a - b) * 0.5;\n    }\n    \n    area = area\
    \ / 2.0;\n    area = area.round();\n    \n    return area;", "    if a + b > c\
    \ {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n\
    \    if b + c > a {\n        return -1;\n    }\n    let mut s = 0.0;\n    let\
    \ mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ a = 0.0;\n    let mut b = 0.0;\n    let mut c = 0.0;\n    let mut d = 0.0;\n\
    \    let mut e = 0.0;\n    let mut f = 0.0;\n    let mut g = 0.0;\n    let mut\
    \ h = 0.0;\n    let mut i = 0.0;\n    let mut j = 0.0;\n    let mut k = 0.0;\n\
    \    let mut l = 0.0;\n    let mut m = 0.0;\n    let mut n = 0.0;\n    let mut\
    \ o = 0.0;\n    let mut p = 0.0;\n    let mut q = 0.0;\n    let mut r = 0.0;\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut\
    \ c = 0.0;\n    let mut d = 0.0;\n    let mut e = 0.0;\n    let mut f = 0.0;\n\
    \    let mut g = 0.0;\n    let mut h = 0.0;\n    let mut i = 0.0;\n    let mut\
    \ j = 0.0;\n    let mut k = 0.0;\n    let mut l = 0.0;\n    let mut m = 0.0;\n\
    \    let mut n = 0.0;\n    let mut o = 0.0;\n    let mut p = 0.0;\n    let mut\
    \ q = 0.0;\n    let mut r = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a = 0.0;\n\
    \    let mut b = 0.0;\n    let mut c = 0.0;\n    let mut d = 0.0;\n    let mut\
    \ e = 0.0;\n    let mut f = 0.0;\n    let mut g = 0.0;\n    let mut h = 0.0;\n",
  "    let mut sum: f64 = 0.0;\n    let mut product: f64 = 0.0;\n    if a + b > c\
    \ {\n        sum = a + b;\n        product = a * b as f64;\n    } else {\n   \
    \     sum = c;\n        product = a * b as f64;\n    }\n    if product > sum {\n\
    \        product = sum;\n    }\n    product = product / 2.0;\n    product = product\
    \ * product;\n    product = product / 2.0;\n    product = product * product;\n\
    \    product = product / 2.0;\n    product = product * product;\n    product =\
    \ product / 2.0;\n    product = product * product;\n    product = product / 2.0;\n\
    \    product = product * product;\n    product = product / 2.0;\n    product =\
    \ product * product;\n    product = product / 2.0;\n    product = product * product;\n\
    \    product = product / 2.0;\n    product = product * product;\n    product =\
    \ product / 2.0;\n    product = product * product;\n    product = product / 2.0;\n\
    \    product = product * product;\n    product = product / 2.0;\n    product =\
    \ product * product;\n    product = product / 2.0;\n    product = product * product;\n\
    \    product = product / 2.0;\n    product = product * product;\n    product =\
    \ product / 2.0;\n    product = product * product;\n    product = product / 2.0;\n\
    \    product = product * product;\n    product = product / 2.0;\n    product =\
    \ product * product;\n    product = product / 2.0;\n    product = product * product;\n\
    \    product = product / 2.0;\n    product = product * product;\n    product =\
    \ product / 2.0;\n    product = product * product;\n    product = product / 2.0;\n\
    \    product = product * product;\n    product = product / 2.0;\n    product =\
    \ product * product;\n    product = product / 2.0;\n    product = product * product;\n\
    \    product = product / 2.0;\n    product = product * product;\n    product =\
    \ product / 2.0;\n    product = product * product;\n    product = product / 2.0;\n\
    \    product = product * product;\n    product = product / 2.0;\n    product =\
    \ product * product;\n    product = product / 2.0;\n    product = product * product;\n\
    \    product = product / 2.0;\n", "    if a + b > c {\n        return -1;\n  \
    \  }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n    \
    \    return -1;\n    }\n    let mut area: f64 = 0.0;\n    area = (a * b) - (c\
    \ * a);\n    area = area / 2.0;\n    area = area.round();\n    return area;",
  "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    if a + b > c {\n        a = b - c;\n    }\n    if a + c > b {\n        b\
    \ = c - a;\n    }\n    if b + c > a {\n        c = a - b;\n    }\n    a + b +\
    \ c", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n  \
    \  s * s", "    if a + b > c {\n        return -1\n    }\n    if a + c > b {\n\
    \        return -1\n    }\n    if b + c > a {\n        return -1\n    }\n    let\
    \ mut area = 0.0;\n    area += a * b\n    area += a * c\n    area += b * c\n \
    \   area /= 3.0\n    area", "    match a + b + c {\n        0 => 0.0,\n      \
    \  _ => 2.0 * (a + b + c) / 3.0,\n    }", "    if a + b > c {\n        return\
    \ -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a\
    \ {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n    \n    if a\
    \ > b {\n        area += (b - a) * c / 2.0;\n    }\n    if a > c {\n        area\
    \ += (b - a) * (c - a) / 2.0;\n    }\n    if b > c {\n        area += (b - a)\
    \ * (c - a) / 2.0;\n    }\n    \n    area += (b - a) * (c - a) / 2.0;\n    \n\
    \    area = area.round();\n    \n    return area;", "    let mut s = a + b + c;\n\
    \    if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n\
    \    }\n    let mut area = 0.0;\n    area += a * b;\n    area += b * c;\n    area\
    \ += c * s;\n    area /= s;\n    area", "    if a + b > c {\n        return -1\n\
    \    }\n    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n   \
    \     return -1\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n\
    \        area = area + (b - a) * (b + c - a) / (2.0 * b + c);\n    }\n    \n \
    \   if a > c {\n        area = area + (c - a) * (a + b - c) / (2.0 * c + a);\n\
    \    }\n    \n    if b > c {\n        area = area + (c - b) * (a + c - b) / (2.0\
    \ * c + b);\n    }\n    \n    area = area.round();\n    \n    if area < 0.0 {\n\
    \        area = 0.0;\n    }\n    \n    area", "    let mut area = 0.0;\n    if\
    \ a + b > c {\n        area = area + b * c / a;\n    }\n    if a + c > b {\n \
    \       area = area + c * a / b;\n    }\n    if b + c > a {\n        area = area\
    \ + c * b / a;\n    }\n    area", "    let mut area = 0.0;\n    if a + b > c {\n\
    \        area = area + b - c;\n    }\n    if a + c > b {\n        area = area\
    \ + c - b;\n    }\n    if b + c > a {\n        area = area + c - a;\n    }\n \
    \   area = area / 2.0;\n    area = area.round();\n    area", "    if a + b > c\
    \ {\n        return -1\n    }\n    if a + c > b {\n        return -1\n    }\n\
    \    if b + c > a {\n        return -1\n    }\n    (a * b + c) / 2.0", "    let\
    \ mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "  \
    \  if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area:\
    \ f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area\
    \ = area.round();\n    return area;", "    let mut area_sum = 0.0;\n    let mut\
    \ area_product = 0.0;\n    let mut side1_sum = 0.0;\n    let mut side2_sum = 0.0;\n\
    \    let mut side3_sum = 0.0;\n    let mut side1_product = 0.0;\n    let mut side2_product\
    \ = 0.0;\n    let mut side3_product = 0.0;\n    let mut side1_length = 0.0;\n\
    \    let mut side2_length = 0.0;\n    let mut side3_length = 0.0;\n    let mut\
    \ side1_area = 0.0;\n    let mut side2_area = 0.0;\n    let mut side3_area = 0.0;\n\
    \    let mut side1_area_rounded = 0.0;\n    let mut side2_area_rounded = 0.0;\n\
    \    let mut side3_area_rounded = 0.0;\n    let mut side1_area_rounded_rounded\
    \ = 0.0;\n    let mut side2_area_rounded_rounded = 0.0;\n    let mut side3_area_rounded_rounded\
    \ = 0.0;\n    let mut side1_area_rounded_rounded_rounded = 0.0;\n    let mut side2_area_rounded_rounded_rounded\
    \ = 0.0;\n    let mut side3_area_rounded_rounded_rounded = 0.0;\n    let mut side1_area_rounded_rounded_rounded_rounded\
    \ = 0.0;\n    let mut side2_area_rounded_rounded_rounded_rounded = 0.0;\n    let\
    \ mut side3_area_rounded_rounded_rounded_rounded = 0.0;\n    let mut side1_area_rounded_rounded_rounded_rounded_rounded\
    \ = 0.0;\n    let mut side2_area_rounded_rounded_rounded_rounded_rounded = 0.0;\n\
    \    let mut side3_area_rounded_rounded_rounded_rounded_rounded = 0.0;\n    let\
    \ mut side1_area_rounded_rounded_rounded_rounded_rounded_rounded = 0.0;\n    let\
    \ mut side2_area_rounded_rounded_rounded_rounded_rounded_rounded = 0.0;\n    let\
    \ mut side3_area_rounded_rounded_rounded_rounded_rounded_rounded = 0.0;\n    let\
    \ mut side1_area_rounded_rounded_rounded_rounded_rounded_rounded_rounded = 0.0;\n\
    \    let mut side2_area_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = 0.0;\n    let mut side3_area_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = 0.0;\n    let mut side1_area_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = 0.0;\n    let mut side", "    if a + b > c {\n        return -1;\n    }\n\
    \    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n        area\
    \ = area + (a - b) * (b - c);\n    }\n    if a > c {\n        area = area + (a\
    \ - c) * (c - b);\n    }\n    if b > c {\n        area = area + (b - c) * (c -\
    \ a);\n    }\n    \n    area = area.round();\n    \n    return area;", "    let\
    \ mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let ", "    if a +\
    \ b > c {\n        -1\n    } else if b + c > a {\n        -1\n    } else if c\
    \ + a > b {\n        -1\n    } else {\n        (a * b + c * a + b * c) / (2.0\
    \ * a)\n    }", "    if a + b > c {\n        return -1;\n    }\n    if a + c >\
    \ b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n   \
    \ }\n    let mut area = 0.0;\n    area = area + (a + b + c) / 2.0;\n    area =\
    \ area + (a - b - c) / 2.0;\n    area = area + (b - a - c) / 2.0;\n    area =\
    \ area - (a + b + c) / 2.0;\n    area = area - (a - b - c) / 2.0;\n    area =\
    \ area - (b - a - c) / 2.0;\n    area = area / 2.0;\n    area = area.round();\n\
    \    return area;", "    if a + b > c {\n        return -1.0\n    }\n    if a\
    \ + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area += a\
    \ * b;\n    }\n    \n    if a < c {\n        area += a * c;\n    }\n    \n   \
    \ if b < c {\n        area += b * c;\n    }\n    \n    area /= 2.0;\n    \n  \
    \  area.round()", "    let mut area = 0.0;\n    if a + b > c {\n        area =\
    \ area + b - c;\n    }\n    if a + c > b {\n        area = area + c - b;\n   \
    \ }\n    if b + c > a {\n        area = area + c - a;\n    }\n    area = area\
    \ / 2.0;\n    area = round(area, 2);\n    area", "    let mut a = a as f64;\n\
    \    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n  \
    \      a = a + b - c;\n    }\n    if a + c > b {\n        b = a + c - b;\n   \
    \ }\n    if b + c > a {\n        c = b + c - a;\n    }\n    (a * b * c) / ((a\
    \ * b) + c * c)", "    let mut area = 0.0;\n    if a + b > c {\n        area =\
    \ area + (c - a + b) * (b - c);\n    }\n    if a + c > b {\n        area = area\
    \ + (b - a + c) * (c - b);\n    }\n    if b + c > a {\n        area = area + (c\
    \ - b + a) * (a - c);\n    }\n    area = area / 2.0;\n    area = round(area, 2);\n\
    \    area", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n\
    \        return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n  \
    \  let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area /\
    \ 2.0;\n    area = area.round();\n    return area;", "    use std::f64;\n    use\
    \ std::cmp::Ordering;\n    \n    if a + b > c {\n        return -1;\n    }\n \
    \   \n    if a + c > b {\n        return -1;\n    }\n    \n    if b + c > a {\n\
    \        return -1;\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b\
    \ {\n        area += b * c / a;\n    }\n    \n    if a > c {\n        area +=\
    \ c * a / b;\n    }\n    \n    if b > c {\n        area += a * c / b;\n    }\n\
    \    \n    area / 2.0", "    if a + b > c {\n        return -1\n    }\n    if\
    \ a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return -1\n\
    \    }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area += a\
    \ * b\n    }\n    \n    if a < c {\n        area += a * c\n    }\n    \n    if\
    \ b < c {\n        area += b * c\n    }\n    \n    area / 2.0", "    match a +\
    \ b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n\
    \    }", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c\
    \ = c as f64;\n    if a + b > c {\n        a = b - c;\n    }\n    if a + c > b\
    \ {\n        b = c - a;\n    }\n    if b + c > a {\n        c = a - b;\n    }\n\
    \    (a * b * c) / ((a * b) + (c * c))", "    if a + b > c {\n        return -1;\n\
    \    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n  \
    \      return -1;\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n\
    \        area += (b - a) * c / 2.0;\n    }\n    \n    if a > c {\n        area\
    \ += (b - c) * a / 2.0;\n    }\n    \n    if b > c {\n        area += (b - c)\
    \ * b / 2.0;\n    }\n    \n    if area > 0.0 {\n        area = round(area as f64\
    \ * 100.0) / 100.0;\n    }\n    \n    return area;", "    if a + b > c {\n   \
    \     -1\n    } else {\n        (a * b) / (a + b + c)\n    }", "    if a + b >\
    \ c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n   \
    \ }\n    if b + c > a {\n        return -1;\n    }\n    let mut area = 0.0;\n\
    \    area = area + (b * c);\n    area = area + (a * c);\n    area = area + (a\
    \ * b);\n    area = area + (b * a);\n    area = area / 3.0;\n    area = area.round();\n\
    \    area", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n\
    \    let mut w1 = 0.0;\n    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n    let\
    \ mut z2 = 0.0;\n    let mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2\
    \ = 0.0;\n    let mut x3 = 0.0;\n    let mut y3 = 0.0;\n    let mut z3 = 0.0;\n\
    \    let mut u3 = 0.0;\n    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let\
    \ mut x4 = 0.0;\n    let mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let mut u4\
    \ = 0.0;\n    let mut v4 = 0.0;\n    let mut w4 = 0.0;\n    let mut x5 = 0.0;\n\
    \    let mut y5 = 0.0;\n    let mut z5 = 0.0;\n    let mut u5 = 0.0;\n    let\
    \ mut v5 = 0.0;\n    let mut w5 = 0.0;\n    let mut x6 = 0.0;\n    let mut y6\
    \ = 0.0;\n    let mut z6 = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n\
    \    let mut w6 = 0.0;\n    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n    let\
    \ mut z7 = 0.0;\n    let mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7\
    \ = 0.0;\n    let mut x8 = 0.0;\n    let mut y8 = 0.0;\n    let mut z8 = 0.0;\n\
    \    let mut u8 = 0.0;\n    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let\
    \ mut x9 = 0.0;\n    let mut y9 = 0.0;\n    let mut z9 = 0.0;\n    let mut u9\
    \ = 0.0;\n    let mut v9 = 0.0;\n    let mut w9 = 0.0;\n    let mut x10 = 0.0;\n\
    \    let mut y10 = 0.0;\n    let mut z10 = 0.0;\n    let mut u10 = 0.0;\n    let\
    \ mut v10 = 0.0;\n    let mut w10 = 0.0;\n    let mut x11", "    if a + b > c\
    \ {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n\
    \    if b + c > a {\n        return -1;\n    }\n    a + b + c", "    if a + b\
    \ > c {\n        -1\n    } else {\n        (a * b + c * a + b * b - c * c) / (2.0\
    \ * b)\n    }", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut a = a as f64;\n    let\
    \ mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        s\
    \ = 0.0;\n        t = 0.0;\n        w = 0.0;\n    } else {\n        s = (a * b\
    \ + c * t) / (b * b);\n        t = (a * c - b * s) / (b * b);\n        w = (a\
    \ * c + b * s) / (b * b);\n    }\n    if w > 0.0 {\n        u = s / w;\n     \
    \   v = t / w;\n    } else {\n        u = s;\n        v = t;\n    }\n    if u\
    \ > 0.0 {\n        return u;\n    }\n    if v > 0.0 {\n        return v;\n   \
    \ }\n    return -1.0;", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    if a + b > c {\n \
    \       s = b * b - c;\n        w = b * c;\n    } else {\n        s = a * a -\
    \ b * b;\n        w = a * b;\n    }\n    if s > 0.0 {\n        t = s / w;\n  \
    \      u = 1.0 - t;\n        v = t * t;\n    }\n    if u > 0.0 {\n        return\
    \ u * u * w;\n    } else {\n        return -1.0 * v * v;\n    }", "    if a +\
    \ b > c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n \
    \   }\n    if b + c > a {\n        return -1\n    }\n    \n    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    \n    s\
    \ = a + b + c;\n    t = a + c;\n    u = b + c;\n    v = a;\n    \n    if s > t\
    \ {\n        return -1\n    }\n    \n    if s > u {\n        return -1\n    }\n\
    \    \n    if s > v {\n        return -1\n    }\n    \n    if t > u {\n      \
    \  return -1\n    }\n    \n    if t > v {\n        return -1\n    }\n    \n  \
    \  if u > v {\n        return -1\n    }\n    \n    if u > t {\n        return\
    \ -1\n    }\n    \n    if v > t {\n        return -1\n    }\n    \n    if v >\
    \ u {\n        return -1\n    }\n    \n    if u > t {\n        return -1\n   \
    \ }\n    \n    if t > v {\n        return -1\n    }\n    \n    if t > u {\n  \
    \      return -1\n    }\n    \n    if u > v {\n        return -1\n    }\n    \n\
    \    if v > t {\n        return -1\n    }\n    \n    if v > u {\n        return\
    \ -1\n    }\n    \n    if u > t {\n        return -1\n    }\n    \n    if t >\
    \ v {\n        return -1\n    }\n    \n    if t > u {\n        return -1\n   \
    \ }\n    \n    if u > v {\n        return -1\n    }\n    \n    if v > t {\n  \
    \      return -1\n    }\n    \n    if v > u {\n        return -1\n    }\n    \n\
    \    if u > t {\n        return -1\n    }\n    \n    if t > v {\n        return\
    \ -1\n    }\n    \n    if t > u {\n        return -1\n    }\n    \n    if u >\
    \ v {\n        return -1\n    }\n    \n    if v > t {\n        return -1\n   \
    \ }\n    \n    if v > u {\n        return -1\n    }\n    \n    if u > t {\n  \
    \      return -1\n    }\n    \n    if t > v {\n        return -1\n    }\n    \n\
    \    if t > u {\n        return -1\n    }\n    \n    if u > v {\n        return\
    \ -1\n    }\n    \n    if v > t {\n        return -1\n    }\n    \n    if v >\
    \ u {\n        return -1\n    }", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    s * s", "    let mut a = a as f64;\n    let mut b\
    \ = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = a +\
    \ b - c;\n    }\n    if a + c > b {\n        b = a + c - b;\n    }\n    if b +\
    \ c > a {\n        c = b + c - a;\n    }\n    a + b + c", "    if a + b > c {\n\
    \        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n  \
    \  if b + c > a {\n        return -1;\n    }\n    (a * b + c) / 2.0", "    if\
    \ a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    a + b + c", "    let\
    \ mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n  \
    \  if a + b > c {\n        a = a as f64;\n        b = b as f64;\n        c = c\
    \ as f64;\n    }\n    if a + c > b {\n        a = a as f64;\n        c = c as\
    \ f64;\n    }\n    if b + c > a {\n        b = b as f64;\n        c = c as f64;\n\
    \    }\n    a + b + c", "    let mut a = a as f64;\n    let mut b = b as f64;\n\
    \    let mut c = c as f64;\n    if a + b > c {\n        a = a + b as f64;\n  \
    \  }\n    if a + c > b {\n        b = a + c as f64;\n    }\n    if b + c > a {\n\
    \        c = b + c as f64;\n    }\n    (a * b * c) / ((a * b) + c)", "    let\
    \ mut area_sum: f64 = 0.0;\n    let mut area_product: f64 = 0.0;\n    let mut\
    \ area_product2: f64 = 0.0;\n    let mut area_product3: f64 = 0.0;\n\n    if a\
    \ + b > c {\n        area_product = area_product2 = area_product3 = 0.0;\n   \
    \ } else {\n        area_product = area_product2 = area_product3 = (a * b) / c;\n\
    \    }\n\n    if a + c > b {\n        area_product2 = area_product3 = 0.0;\n \
    \   } else {\n        area_product2 = (a * c) / b;\n    }\n\n    if b + c > a\
    \ {\n        area_product3 = 0.0;\n    } else {\n        area_product3 = (b *\
    \ c) / a;\n    }\n\n    area_sum += area_product;\n    area_sum += area_product2;\n\
    \    area_sum += area_product3;\n\n    area_sum.round()", "    if a + b > c {\n\
    \        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n  \
    \  if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a < b {\n        area = area + (b - a);\n    }\n    if a < c {\n\
    \        area = area + (c - a);\n    }\n    if b < c {\n        area = area +\
    \ (c - b);\n    }\n    \n    area = area / 2.0;\n    area = area.round();\n  \
    \  \n    return area;", "    if a + b > c {\n        return -1;\n    }\n    if\
    \ a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n\
    \    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c *\
    \ 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area", "    if a + b >\
    \ c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n   \
    \ }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    area += a * b * c / 6.0;\n    area += a * c;\n    area += b * c;\n    area\
    \ /= 2.0;\n    \n    area", "    if a + b > c {\n        return -1;\n    }\n \
    \   if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    \n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n\
    \    area = area / 2.0;\n    area = area.round();\n    \n    return area;", " \
    \   if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    \n    let mut area\
    \ = 0.0;\n    \n    if a > b {\n        area += b * (b - a)\n    }\n    if a >\
    \ c {\n        area += c * (c - a)\n    }\n    if b > c {\n        area += a *\
    \ (a - b)\n    }\n    \n    area /= 2.0;\n    \n    area = area.round();\n   \
    \ \n    return area;", "    let mut sum: f64 = 0.0;\n    if a + b > c {\n    \
    \    sum = a + b - c;\n    } else {\n        sum = a + c;\n    }\n    if a + c\
    \ > b {\n        sum += a + c - b;\n    } else {\n        sum += b + c;\n    }\n\
    \    sum", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n    \
    \    2 => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "    if a + b >\
    \ c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n   \
    \ }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a + b > c {\n        area = area + (b - c) * (b + c) / 2.0;\n  \
    \  }\n    \n    if a + c > b {\n        area = area + (c - a) * (c + a) / 2.0;\n\
    \    }\n    \n    if b + c > a {\n        area = area + (a - b) * (a + b) / 2.0;\n\
    \    }\n    \n    area = area / 2.0;\n    \n    area = area.round();\n    \n \
    \   return area;", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n\
    \        _ => a * b * c / 3.0,\n    }", "    let mut a = a as f64;\n    let mut\
    \ b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = a\
    \ as f64;\n        b = b as f64;\n        c = c as f64;\n    }\n    if a + c >\
    \ b {\n        a = a as f64;\n        c = c as f64;\n    }\n    if b + c > a {\n\
    \        b = b as f64;\n        c = c as f64;\n    }\n    (a * b + c) as f64 /\
    \ 2", "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b\
    \ + c);\n    }\n    if a + c > b {\n        s = s + (c - b) * (c + b);\n    }\n\
    \    if b + c > a {\n        s = s + (a - b) * (a + b);\n    }\n    s / (a + b\
    \ + c)", "    if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n\
    \    } else if b + c > a {\n        -1\n    } else {\n        (a * b + c) / 2\n\
    \    }", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n\
    \        return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n  \
    \  \n    let mut s = (a + b + c) / 2;\n    if s == 0 {\n        return 0;\n  \
    \  }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area += ((b\
    \ - a) * (s - a));\n    }\n    if a < c {\n        area += ((c - a) * (s - a));\n\
    \    }\n    if b < c {\n        area += ((c - b) * (s - b));\n    }\n    \n  \
    \  return area / s;", "    if a + b > c {\n        return -1\n    }\n    if a\
    \ + c > b {\n        return -1\n    }\n    if b + c > a {\n        return -1\n\
    \    }\n    \n    let mut area = 0.0;\n    \n    if a + b > c {\n        area\
    \ = (a * b) / c;\n    }\n    \n    if a + c > b {\n        area = (a * c) / b;\n\
    \    }\n    \n    if b + c > a {\n        area = (b * c) / a;\n    }\n    \n \
    \   area = area.round();\n    \n    area", "    if a + b > c {\n        return\
    \ -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a\
    \ {\n        return -1;\n    }\n    (a * b + c) / 2.0", "    if a + b > c {\n\
    \        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n  \
    \  if b + c > a {\n        return -1;\n    }\n    \n    let mut s = (a + b + c)\
    \ / 2;\n    let mut t = (a + b + c) / 2;\n    \n    while s > t {\n        if\
    \ s > t {\n            t += 1;\n        }\n        s -= 1;\n    }\n    \n    if\
    \ s == t {\n        return s;\n    }\n    \n    return -1;", "    if a + b > c\
    \ {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n\
    \    if b + c > a {\n        return -1;\n    }\n    let mut area = 0.0;\n    area\
    \ += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area\
    \ /= 3.0;\n    area", "    if a + b > c {\n        return -1;\n    }\n    if a\
    \ + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n\
    \    }\n    (a * b + c) / 2.0", "    let mut a = a as f64;\n    let mut b = b\
    \ as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = a as f64;\n\
    \        b = b as f64;\n        c = c as f64;\n    }\n    if a + c > b {\n   \
    \     a = a as f64;\n        c = c as f64;\n    }\n    if b + c > a {\n      \
    \  b = b as f64;\n        c = c as f64;\n    }\n    if a + b + c > 0 {\n     \
    \   let area = (a * b * c) as f64;\n        area = area.round() as f64;\n    \
    \    return area;\n    }\n    -1", "    if a + b > c {\n        return -1\n  \
    \  }\n    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n     \
    \   return -1\n    }\n    (a * b + c) / 2.0", "    let mut s = a + b + c;\n  \
    \  if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n\
    \    }\n    s / 2.0", "    match a + b + c {\n        0 => 0.0,\n        1 =>\
    \ 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "    if a + b > c {\n \
    \       return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n   \
    \ if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n \
    \   \n    if a > b {\n        area += (b - a) * (b - c);\n    }\n    \n    if\
    \ a > c {\n        area += (b - a) * (c - b);\n    }\n    \n    if b > c {\n \
    \       area += (b - a) * (a - c);\n    }\n    \n    area /= 2.0;\n    \n    area",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c) /\
    \ 2.0", "    if a + b > c {\n        return -1\n    }\n    if a + c > b {\n  \
    \      return -1\n    }\n    if b + c > a {\n        return -1\n    }\n    (a\
    \ * b + c) / 2", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n\
    \    }\n    if s == 0 {\n        return 0.0;\n    }\n    s / 2.0", "    if a +\
    \ b > c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n \
    \   }\n    if b + c > a {\n        return -1\n    }\n    \n    let mut s = 0.0;\n\
    \    if a > b {\n        s += b - a;\n    }\n    if a > c {\n        s += c -\
    \ a;\n    }\n    if b > c {\n        s += c - b;\n    }\n    \n    if s == 0.0\
    \ {\n        return 0.0\n    }\n    \n    s /= 2.0;\n    \n    s * s", "    let\
    \ mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "  \
    \  if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c) /\
    \ 2.0", "    match a + b + c {\n        0 => 0.,\n        x => if a + b > c {\
    \ x } else { c },\n        y => if a + c > b { y } else { b },\n    }", "    let\
    \ mut area_sum = 0.0;\n    if a + b > c {\n        area_sum += (a + b - c) * 0.5;\n\
    \    }\n    if a + c > b {\n        area_sum += (a + c - b) * 0.5;\n    }\n  \
    \  if b + c > a {\n        area_sum += (b + c - a) * 0.5;\n    }\n    area_sum",
  "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    if a + b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n     \
    \   b = a + c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n\
    \    (a * b * c) / ((a * b) + (c * c))", "    if a + b > c {\n        return -1\n\
    \    }\n    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n   \
    \     return -1\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n\
    \        area += b * b - 4 * a * c;\n    }\n    else {\n        area += a * a\
    \ - 4 * b * c;\n    }\n    \n    if a > c {\n        area += a * a - 4 * b * c;\n\
    \    }\n    else {\n        area += b * b - 4 * a * c;\n    }\n    \n    area\
    \ /= 2.0;\n    \n    area = area.round();\n    \n    return area;", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        2 => a,\n       \
    \ _ => a,\n    }", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u\
    \ = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n \
    \   let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ s = 0.0;\n    let ", "    let mut s = a + b + c;\n    if s > 0 {\n        s\
    \ /= 2;\n    }\n    s * s", "    if a + b > c {\n        return -1;\n    }\n \
    \   if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    a + b + c", "    if a + b > c {\n        return -1;\n    }\n\
    \    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n\
    \    area = area + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n\
    \    area = area + (c * b) - (a * a);\n    area = area / 2.0;\n    area = round(area,\
    \ 2);\n    return area;", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let\
    \ mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    \n    if a + b\
    \ > c {\n        s = 0.0;\n    } else {\n        s = (a * b) / c;\n    }\n   \
    \ \n    if a + c > b {\n        t = 0.0;\n    } else {\n        t = (c * a) /\
    \ b;\n    }\n    \n    if b + c > a {\n        u = 0.0;\n    } else {\n      \
    \  u = (a * b) / c;\n    }\n    \n    if a + b > c {\n        v = 0.0;\n    }\
    \ else {\n        v = (c * a) / b;\n    }\n    \n    if b + c > a {\n        w\
    \ = 0.0;\n    } else {\n        w = (a * b) / c;\n    }\n    \n    if s + t +\
    \ u + v + w > 0.0 {\n        return s * t + u * v + w * s\n    } else {\n    \
    \    return -1.0;\n    }", "    if a + b > c {\n        return -1;\n    }\n  \
    \  if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n        area\
    \ += b * b - 4 * a * c;\n    }\n    if a > c {\n        area += a * c - 4 * a\
    \ * b;\n    }\n    if b > c {\n        area += a * c - b * b + 4 * a * a;\n  \
    \  }\n    \n    if area < 0.0 {\n        area = 0.0;\n    }\n    \n    area /=\
    \ 2.0;\n    \n    area", "    if a + b > c {\n        return -1;\n    }\n    if\
    \ a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n\
    \    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n        area += b\
    \ * (c - a);\n    }\n    if a > c {\n        area += c * (b - a);\n    }\n   \
    \ if b > c {\n        area += a * (c - b);\n    }\n    \n    area = area.round()\
    \ as f64;\n    \n    return area;", "    if a + b > c {\n        -1\n    } else\
    \ {\n        a + b + c\n    }", "    if a + b > c {\n        return -1\n    }\n\
    \    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return\
    \ -1\n    }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area\
    \ += a * b;\n    }\n    \n    if a < c {\n        area += a * c;\n    }\n    \n\
    \    if b < c {\n        area += b * c;\n    }\n    \n    area / 2.0", "    if\
    \ a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut area\
    \ = 0.0;\n    \n    if a + b > c {\n        area = area + (a - b) * (c - a);\n\
    \    }\n    if a + c > b {\n        area = area + (a - b) * (b - c);\n    }\n\
    \    if b + c > a {\n        area = area + (b - a) * (c - b);\n    }\n    \n \
    \   area = area / 2.0;\n    \n    area = area.round();\n    \n    area", "   \
    \ if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut\
    \ s = 0.0;\n    if a > b {\n        s += (a - b) * (b - c);\n    }\n    if a >\
    \ c {\n        s += (a - c) * (c - b);\n    }\n    if b > c {\n        s += (b\
    \ - c) * (c - a);\n    }\n    \n    s / (a + b + c)", "    match a + b + c {\n\
    \        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }",
  "    if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    (a * b + c) / 2.0",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c *\
    \ a) / 2.0", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b\
    \ {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n\
    \    let mut s = 0.0;\n    if a > b {\n        s += a * b / c;\n    }\n    if\
    \ a > c {\n        s += a * c / b;\n    }\n    if b > c {\n        s += b * c\
    \ / a;\n    }\n    s * 0.5", "    let mut a = a as f64;\n    let mut b = b as\
    \ f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = b - c;\n  \
    \  }\n    if a + c > b {\n        b = c - a;\n    }\n    if b + c > a {\n    \
    \    c = a - b;\n    }\n    a + b + c", "    let mut s = 0.0;\n    let mut t =\
    \ 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n   \
    \ let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a\
    \ = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if a\
    \ + b > c {\n        s += c;\n        t = b;\n    } else {\n        s += a;\n\
    \        t = c;\n    }\n    if a + c > b {\n        s += b;\n        t = c;\n\
    \    } else {\n        s += a;\n        t = b;\n    }\n    if b + c > a {\n  \
    \      s += c;\n        t = a;\n    } else {\n        s += b;\n        t = a;\n\
    \    }\n    if a + b > c {\n        s += c;\n        t = b;\n    } else {\n  \
    \      s += a;\n        t = c;\n    }\n    if a + c > b {\n        s += b;\n \
    \       t = c;\n    } else {\n        s += a;\n        t = b;\n    }\n    if b\
    \ + c > a {\n        s += c;\n        t = a;\n    } else {\n        s += b;\n\
    \        t = a;\n    }\n    if a + b > c {\n        s += c;\n        t = b;\n\
    \    } else {\n        s += a;\n        t = c;\n    }\n    if a + c > b {\n  \
    \      s += b;\n        t = c;\n    } else {\n        s += a;\n        t = b;\n\
    \    }\n    if b + c > a {\n        s += c;\n        t = a;\n    } else {\n  \
    \      s += b;\n        t = a;\n    }\n    if a + b > c {\n        s += c;\n \
    \       t = b;\n    } else {\n        s += a;\n        t = c;\n    }\n    if a\
    \ + c > b {\n        s += b;\n        t = c;\n    } else {\n        s += a;\n\
    \        t = b;\n    }\n    if b + c > a {\n        s += c;\n        t = a;\n\
    \    } else {\n        s += b;\n        t = a;\n    }\n    if a + b > c {\n  \
    \      s += c;\n        t = b;\n    } else {\n        s += a;\n        t = c;\n\
    \    }\n    if a + c > b {\n        s += b;\n        t = c;\n    } else {\n  \
    \      s += a;\n        t = b;\n    }\n    if b + c > a {\n        s += c;\n \
    \       t = a;\n    } else {\n        s += b;\n        t = a;\n    }\n    if a\
    \ + b > c {\n        s += c;\n        t = b;\n    } else {\n        s += a;\n\
    \        t = c;\n    }\n    if a + c > b {\n        s += b;\n        t = c;\n\
    \    } else {\n        s += a;\n        t = b;\n    }\n    if ", "    if a + b\
    \ > c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n   \
    \ }\n    if b + c > a {\n        return -1\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    area = area + (b * b);\n    area = area + (c * c);\n    area = area\
    \ + (a * a);\n    \n    area = area.sqrt();\n    area = area.round();\n    \n\
    \    return area;", "    let mut s = a + b + c;\n    if s > 0 {\n        s /=\
    \ 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    s / 2.0", "    if\
    \ a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c * a) * (a\
    \ + b + c) * (a + c + b)", "    if a + b > c {\n        -1\n    } else {\n   \
    \     a + b + c\n    }", "    if a + b > c {\n        return -1\n    }\n    if\
    \ a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return -1\n\
    \    }\n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area\
    \ = area / 2.0;\n    area = area.round();\n    return area;", "    if a + b >\
    \ c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n   \
    \ }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c) / 2.0", " \
    \   match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a *\
    \ b * c / (a + b + c),\n    }", "    match a + b + c {\n        0 => 0.,\n   \
    \     _ => if a + b > c { c } else { b },\n    }", "    let mut a = a as f64;\n\
    \    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n  \
    \      a = b - c;\n    }\n    if a + c > b {\n        b = c - a;\n    }\n    if\
    \ b + c > a {\n        c = a - b;\n    }\n    (a * b * c) / ((a * b) + c)", " \
    \   if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut\
    \ s = (a + b + c) / 2;\n    let mut area = 0.0;\n    \n    if s > 0 {\n      \
    \  area += s / a;\n    }\n    \n    if s > 1 {\n        area += s / b;\n    }\n\
    \    \n    if s > 2 {\n        area += s / c;\n    }\n    \n    area as f64",
  "    let mut s = 0.0;\n    let mut t = 0.0;\n    if a + b > c {\n        s = b *\
    \ b - c;\n    } else {\n        s = a * a - b * b;\n    }\n    if s > 0.0 {\n\
    \        t = s / 2.0;\n    }\n    if t > 0.0 {\n        return t * sqrt(t);\n\
    \    } else {\n        return -1.0;\n    }", "    if a + b > c {\n        return\
    \ -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a\
    \ {\n        return -1;\n    }\n    let mut area = 0.0;\n    area = area + (b\
    \ * c);\n    area = area + (a * c);\n    area = area + (a * b);\n    area = area\
    \ - (a * b) - (b * a);\n    area = area / 2.0;\n    area = f64::round(area * 100.0)\
    \ / 100.0;\n    return area;", "    if a + b > c {\n        return -1\n    }\n\
    \    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return\
    \ -1\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n        area\
    \ += (b - c) * (a + b - c);\n    }\n    \n    if a > c {\n        area += (b -\
    \ a) * (a + c - b);\n    }\n    \n    if b > c {\n        area += (c - a) * (b\
    \ + c - a);\n    }\n    \n    area /= 2.0;\n    \n    area = area.round();\n \
    \   \n    return area;", "    if a + b > c {\n        return -1;\n    }\n    if\
    \ a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n\
    \    }\n    \n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n  \
    \  area = area / 2.0;\n    area = area.round();\n    \n    return area;", "  \
    \  let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s",
  "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        2 => 1.0,\n\
    \        3 => a,\n        4 => b,\n        5 => c,\n        6 => a + b,\n    \
    \    7 => a + c,\n        8 => b + c,\n        _ => -1.0,\n    }", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => match a + b\
    \ {\n            a if a > c => 0.0,\n            b if b > c => 1.0,\n        \
    \    _ => 2.0 * (a + b + c) / 3.0,\n        },\n    }", "    match a + b + c {\n\
    \        0 => 0.0,\n        _ => if a + b > c { \n            a / b + c / a \n\
    \        } else {\n            c / a + b / c \n        },\n    }", "    if a +\
    \ b > c {\n        -1\n    } else {\n        (a * b + c) / 2.0\n    }", "    use\
    \ std::f64::consts::PI;\n    use std::f64::consts::E;\n    use std::f64::consts::NAN;\n\
    \    use std::f64::consts::INFINITY;\n    use std::f64::consts::EPSILON;\n   \
    \ use std::f64::consts::MINUS_INFINITY;\n    use std::f64::consts::NAN;\n    use\
    \ std::f64::consts::EPSILON;\n    use std::f64::consts::MINUS_INFINITY;\n    use\
    \ std::f64::consts::INFINITY;\n    use std::f64::consts::NAN;\n    use std::f64::consts::EPSILON;\n\
    \    use std::f64::consts::MINUS_INFINITY;\n    use std::f64::consts::INFINITY;\n\
    \    use std::f64::consts::NAN;\n    use std::f64::consts::EPSILON;\n    use std::f64::consts::MINUS_INFINITY;\n\
    \    use std::f64::consts::INFINITY;\n    use std::f64::consts::NAN;\n    use\
    \ std::f64::consts::EPSILON;\n    use std::f64::consts::MINUS_INFINITY;\n    use\
    \ std::f64::consts::INFINITY;\n    use std::f64::consts::NAN;\n    use std::f64::consts::EPSILON;\n\
    \    use std::f64::consts::MINUS_INFINITY;\n    use std::f64::consts::INFINITY;\n\
    \    use std::f64::consts::NAN;\n    use std::f64::consts::EPSILON;\n    use std::f64::consts::MINUS_INFINITY;\n\
    \    use std::f64::consts::INFINITY;\n    use std::f64::consts::NAN;\n    use\
    \ std::f64::consts::EPSILON;\n    use std::f64::consts::MINUS_INFINITY;\n    use\
    \ std::f64::consts::INFINITY;\n    use std::f64::consts::NAN;\n    use std::f64::consts::EPSILON;\n\
    \    use std::f64::consts::MINUS_INFINITY;\n    use std::f64::consts::INFINITY;\n\
    \    use std::f64::consts::NAN;\n    use std::f64::consts::EPSILON;\n    use std::f64::consts::MINUS_INFINITY;\n\
    \    use std::", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u =\
    \ 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n   \
    \ let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t\
    \ = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n \
    \   let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ s = 0.0;\n    let ", "    if a + b > c {\n        return -1;\n    }\n    if\
    \ a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n\
    \    }\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n   \
    \ let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y\
    \ = 0.0;\n    let mut z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n\
    \    let mut w1 = 0.0;\n    let mut x1 = 0.0;\n    let mut y1 = 0.0;\n    let\
    \ mut z1 = 0.0;\n    let mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2\
    \ = 0.0;\n    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n    let mut z2 = 0.0;\n\
    \    let mut u3 = 0.0;\n    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let\
    \ mut x3 = 0.0;\n    let mut y3 = 0.0;\n    let mut z3 = 0.0;\n    let mut u4\
    \ = 0.0;\n    let mut v4 = 0.0;\n    let mut w4 = 0.0;\n    let mut x4 = 0.0;\n\
    \    let mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let mut u5 = 0.0;\n    let\
    \ mut v5 = 0.0;\n    let mut w5 = 0.0;\n    let mut x5 = 0.0;\n    let mut y5\
    \ = 0.0;\n    let mut z5 = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n\
    \    let mut w6 = 0.0;\n    let mut x6 = 0.0;\n    let mut y6 = 0.0;\n    let\
    \ mut z6 = 0.0;\n    let mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7\
    \ = 0.0;\n    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n    let mut z7 = 0.0;\n\
    \    let mut u8 = 0.0;\n    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let\
    \ mut x8 = 0.0;\n    let mut y8 = 0.0;\n    let mut z8 = 0.0;\n    let mut u9\
    \ = 0.0;\n    let mut v9 = 0.0;\n    let mut w9 = 0.0;\n    let mut x9 = 0.0;\n\
    \    let mut y9 = 0.0;\n    let mu", "    let mut s = 0.0;\n    if a + b > c {\n\
    \        s = s + (b - c) * (b - a);\n    }\n    if a + c > b {\n        s = s\
    \ + (c - b) * (c - a);\n    }\n    if b + c > a {\n        s = s + (a - b) * (a\
    \ - c);\n    }\n    s * 0.5", "    if a + b > c {\n        return -1;\n    }\n\
    \    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    (a * b + c) / 2.0", "    let mut s = 0.0;\n    if a + b > c\
    \ {\n        s = s + (c - b) * (a - b) / (a - c);\n    }\n    if a + c > b {\n\
    \        s = s + (b - c) * (a - c) / (a - b);\n    }\n    if b + c > a {\n   \
    \     s = s + (c - a) * (b - a) / (b - c);\n    }\n    s", "    if a + b > c {\n\
    \        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n  \
    \  if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area = area + (a - b) * (b - c);\n    }\n    else\
    \ {\n        area = area + (b - a) * (c - b);\n    }\n    \n    if a > c {\n \
    \       area = area + (a - c) * (c - b);\n    }\n    else {\n        area = area\
    \ + (c - a) * (b - c);\n    }\n    \n    area = area / 2.0;\n    \n    area =\
    \ round(area, 2);\n    \n    return area;", "    let mut sum: f64 = 0.0;\n   \
    \ \n    if a + b > c {\n        sum = a + b - c;\n    } else {\n        sum =\
    \ a + c;\n    }\n    \n    if a + c > b {\n        sum += c;\n    } else {\n \
    \       sum += b;\n    }\n    \n    sum", "    let mut area = 0.0;\n    if a +\
    \ b > c {\n        area = area + b * (c - a + b) / 2.0;\n    }\n    if a + c >\
    \ b {\n        area = area + c * (b - a + c) / 2.0;\n    }\n    if b + c > a {\n\
    \        area = area + a * (c - b + a) / 2.0;\n    }\n    area", "    let mut\
    \ s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n  \
    \      return 0.0;\n    }\n    if s == 1 {\n        return 1.0;\n    }\n    if\
    \ s == 2 {\n        return 2.0;\n    }\n    if s == 3 {\n        return 3.0;\n\
    \    }\n    if s == 4 {\n        return 4.0;\n    }\n    if s == 5 {\n       \
    \ return 5.0;\n    }\n    if s == 6 {\n        return 6.0;\n    }\n    if s ==\
    \ 7 {\n        return 7.0;\n    }\n    if s == 8 {\n        return 8.0;\n    }\n\
    \    if s == 9 {\n        return 9.0;\n    }\n    if s == 10 {\n        return\
    \ 10.0;\n    }\n    if s == 11 {\n        return 11.0;\n    }\n    if s == 12\
    \ {\n        return 12.0;\n    }\n    if s == 13 {\n        return 13.0;\n   \
    \ }\n    if s == 14 {\n        return 14.0;\n    }\n    if s == 15 {\n       \
    \ return 15.0;\n    }\n    if s == 16 {\n        return 16.0;\n    }\n    if s\
    \ == 17 {\n        return 17.0;\n    }\n    if s == 18 {\n        return 18.0;\n\
    \    }\n    if s == 19 {\n        return 19.0;\n    }\n    if s == 20 {\n    \
    \    return 20.0;\n    }\n    if s == 21 {\n        return 21.0;\n    }\n    if\
    \ s == 22 {\n        return 22.0;\n    }\n    if s == 23 {\n        return 23.0;\n\
    \    }\n    if s == 24 {\n        return 24.0;\n    }\n    if s == 25 {\n    \
    \    return 25.0;\n    }\n    if s == 26 {\n        return 26.0;\n    }\n    if\
    \ s == 27 {\n        return 27.0;\n    }\n    if s == 28 {\n        return 28.0;\n\
    \    }\n    if s == 29 {\n        return 29.0;\n    }\n    if s == 30 {\n    \
    \    return 30.0;\n    }\n    if s == 31 {\n        return 31.0;\n    }\n    if\
    \ s == 32 {\n        return 32.0;\n    }\n    if s == 33 {\n        return 33.0;\n\
    \    }\n    if s == 34 {\n        return 34.0;\n    }\n    if s == 35 {\n    \
    \    return 35.0;\n    }\n    if s == 36 {\n        return 36.0;\n    }\n    if\
    \ s == 37 {\n        return 37.0;\n    }\n    if s == 38 {\n        return 38.0;\n\
    \    }\n    if s == 39 {\n        return 39.0;\n    }\n    if s == 40 {\n    \
    \    return 40.0;\n    }\n    if s == 41 {\n        return 41.0;\n    }\n    if\
    \ s == 42 {\n        return 42.0;\n    }\n    if s == 43 {\n        return 43.0;\n\
    \    }\n    if s == 44 {\n        return 44.0;\n", "    if a + b > c {\n     \
    \   return -1\n    }\n    if a + c > b {\n        return -1\n    }\n    if b +\
    \ c > a {\n        return -1\n    }\n    (a * b + c) / 2.0", "    if a + b > c\
    \ {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n\
    \    if b + c > a {\n        return -1;\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area += b * b - 4 * a * c;\n    }\n    if a > c\
    \ {\n        area += c * c - 4 * a * b;\n    }\n    if b > c {\n        area +=\
    \ a * a - 4 * b * c;\n    }\n    \n    if area < 0.0 {\n        area = 0.0;\n\
    \    }\n    \n    area = round(area / 2.0);\n    \n    return area;", "    let\
    \ mut area_sum = 0.0;\n    let mut area_product = 0.0;\n    let mut area_product2\
    \ = 0.0;\n    let mut area_product3 = 0.0;\n    let mut area_product4 = 0.0;\n\
    \    let mut area_product5 = 0.0;\n    let mut area_product6 = 0.0;\n    let mut\
    \ area_product7 = 0.0;\n    let mut area_product8 = 0.0;\n    let mut area_product9\
    \ = 0.0;\n    let mut area_product10 = 0.0;\n    let mut area_product11 = 0.0;\n\
    \    let mut area_product12 = 0.0;\n    let mut area_product13 = 0.0;\n    let\
    \ mut area_product14 = 0.0;\n    let mut area_product15 = 0.0;\n    let mut area_product16\
    \ = 0.0;\n    let mut area_product17 = 0.0;\n    let mut area_product18 = 0.0;\n\
    \    let mut area_product19 = 0.0;\n    let mut area_product20 = 0.0;\n    let\
    \ mut area_product21 = 0.0;\n    let mut area_product22 = 0.0;\n    let mut area_product23\
    \ = 0.0;\n    let mut area_product24 = 0.0;\n    let mut area_product25 = 0.0;\n\
    \    let mut area_product26 = 0.0;\n    let mut area_product27 = 0.0;\n    let\
    \ mut area_product28 = 0.0;\n    let mut area_product29 = 0.0;\n    let mut area_product30\
    \ = 0.0;\n    let mut area_product31 = 0.0;\n    let mut area_product32 = 0.0;\n\
    \    let mut area_product33 = 0.0;\n    let mut area_product34 = 0.0;\n    let\
    \ mut area_product35 = 0.0;\n    let mut area_product36 = 0.0;\n    let mut area_product37\
    \ = 0.0;\n    let mut area_product38 = 0.0;\n    let mut area_product39 = 0.0;\n\
    \    let mut area_product40 = 0.0;\n    let mut area_product41 = 0.0;\n    let\
    \ mut area_product42 = 0.0;\n    let mut area_product43 = 0.0;\n    let mut area_product44\
    \ = 0.0;\n    let mut area_product45 = 0.0;\n    let mut area_product46 = 0.0;\n\
    \    let mut area_product47 = 0.0;\n    let mut area_product48 = 0.0;\n    let\
    \ mut area_product49 = 0.0;\n    let mut area_product50 = 0.0;\n    let mut area_product51\
    \ = 0.0;\n    let mut area_product52 = 0.0;\n    let mut area_product53 = 0.0;\n\
    \    let mut area_product54 = 0.0;\n    let mut area_product55 = 0.0;\n    let ",
  "    if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    let mut area =\
    \ 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c\
    \ * 0.5;\n    area /= 3.0;\n    area", "    if a + b > c {\n        return -1;\n\
    \    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n  \
    \      return -1;\n    }\n    let mut s = (a + b + c) / 2;\n    if s == 0 {\n\
    \        return 0;\n    }\n    let mut area: f64 = 0.0;\n    while s > 0 {\n \
    \       area += s * (s - a) * (s - b) * (s - c);\n        s /= 2.0;\n    }\n \
    \   area", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n\
    \        return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n  \
    \  let mut area = 0.0;\n    area = area + (b * c);\n    area = area + (a * c);\n\
    \    area = area + (a * b);\n    area = area - (a * b);\n    area = area - (a\
    \ * c);\n    area = area - (b * c);\n    area = area / 2.0;\n    area = round(area,\
    \ 2);\n    area", "    if a + b > c {\n        return -1;\n    }\n    if a + c\
    \ > b {\n        return -1;\n    }\n    if b + c > a {\n        return -1;\n \
    \   }\n    (a * b + c) * 0.5", "    match a + b + c {\n        0 => 0.0,\n   \
    \     _ => if a + b > c { a / 2.0 } else { b / 2.0 },\n    }", "    let mut s\
    \ = 0.0;\n    let mut t = 0.0;\n    if a + b > c {\n        t = b - c;\n     \
    \   s = t * t / 2.0;\n    } else {\n        t = a - c;\n        s = t * t / 2.0;\n\
    \    }\n    if a + c > b {\n        t = b - c;\n        s = s + t * t / 2.0;\n\
    \    } else {\n        t = a - c;\n        s = s + t * t / 2.0;\n    }\n    if\
    \ b + c > a {\n        t = b - c;\n        s = s + t * t / 2.0;\n    } else {\n\
    \        t = a - c;\n        s = s + t * t / 2.0;\n    }\n    s * 0.5", "    if\
    \ a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c) / 2.0",
  "    match a + b + c {\n        0 => 0.0,\n        x => if x > c { -1.0 } else {\
    \ 1.0 },\n        _ => if a + b > c { -1.0 } else { 1.0 },\n    }", "    if a\
    \ + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    let mut area: f64 =\
    \ 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area = area.round();\n\
    \    return area;", "    let mut s = 0.0;\n    if a + b > c {\n        s += (a\
    \ + b - c) * 0.5;\n    }\n    if a + c > b {\n        s += (a + c - b) * 0.5;\n\
    \    }\n    if b + c > a {\n        s += (b + c - a) * 0.5;\n    }\n    s * 0.5",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c) /\
    \ 2.0", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n \
    \       return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n   \
    \ \n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area\
    \ / 2.0;\n    area = area.round();\n    \n    return area;", "    if a + b > c\
    \ {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n\
    \    if b + c > a {\n        return -1;\n    }\n    let mut area: f64 = 0.0;\n\
    \    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area = area.round();\n\
    \    return area;", "    if a + b > c {\n        -1\n    } else {\n        ((a\
    \ + b) * c) / 2.0\n    }", "    let mut s = 0.0;\n    if a + b > c {\n       \
    \ s = b * b - c;\n    }\n    else if b + c > a {\n        s = a * a - b * b;\n\
    \    }\n    else if c + a > b {\n        s = a * a - b * b;\n    }\n    else if\
    \ a + c > b {\n        s = a * a - b * b;\n    }\n    else if b + a > c {\n  \
    \      s = a * a - b * b;\n    }\n    else if c + b > a {\n        s = a * a -\
    \ b * b;\n    }\n    else if a + b > c {\n        s = a * a - b * b;\n    }\n\
    \    else if b + c > a {\n        s = a * a - b * b;\n    }\n    else if c + a\
    \ > b {\n        s = a * a - b * b;\n    }\n    else if a + c > b {\n        s\
    \ = a * a - b * b;\n    }\n    else if b + a > c {\n        s = a * a - b * b;\n\
    \    }\n    else if c + b > a {\n        s = a * a - b * b;\n    }\n    else if\
    \ a + b > c {\n        s = a * a - b * b;\n    }\n    else if b + c > a {\n  \
    \      s = a * a - b * b;\n    }\n    else if c + a > b {\n        s = a * a -\
    \ b * b;\n    }\n    else if a + c > b {\n        s = a * a - b * b;\n    }\n\
    \    else if b + a > c {\n        s = a * a - b * b;\n    }\n    else if c + b\
    \ > a {\n        s = a * a - b * b;\n    }\n    else if a + b > c {\n        s\
    \ = a * a - b * b;\n    }\n    else if b + c > a {\n        s = a * a - b * b;\n\
    \    }\n    else if c + a > b {\n        s = a * a - b * b;\n    }\n    else if\
    \ a + c > b {\n        s = a * a - b * b;\n    }\n    else if b + a > c {\n  \
    \      s = a * a - b * b;\n    }\n    else if c + b > a {\n        s = a * a -\
    \ b * b;\n    }\n    else if a + b > c {\n        s = a * a - b * b;\n    }\n\
    \    else if b + c > a {\n        s = a * a - b * b;\n    }\n    else if c + a\
    \ > b {\n        s = a * a - b * ", "    if a + b > c {\n        return -1;\n\
    \    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n  \
    \      return -1;\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 2.0;\n    area",
  "    let mut area = 0.0;\n    if a + b > c {\n        area = area + (b - c) * (b\
    \ + c) / 2.0;\n    } else {\n        area = area + (c - a) * (c + a) / 2.0;\n\
    \    }\n    if a + c > b {\n        area = area + (a - b) * (a + b) / 2.0;\n \
    \   } else {\n        area = area + (b - a) * (b + a) / 2.0;\n    }\n    if a\
    \ + b > c {\n        area = area + (c - a) * (c + a) / 2.0;\n    } else {\n  \
    \      area = area + (b - a) * (b + a) / 2.0;\n    }\n    area", "    let mut\
    \ s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    if\
    \ a + b > c {\n        -1\n    } else {\n        ((a + b) * c) / (a + b + c)\n\
    \    }", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c\
    \ = c as f64;\n    if a + b > c {\n        a = a as f64;\n        b = b as f64;\n\
    \        c = c as f64;\n    }\n    if a + c > b {\n        a = a as f64;\n   \
    \     c = c as f64;\n    }\n    if b + c > a {\n        b = b as f64;\n      \
    \  c = c as f64;\n    }\n    a + b + c", "    let mut sum = a;\n    sum += b;\n\
    \    sum += c;\n    sum.sqrt()", "    let mut area = 0.0;\n    if a + b > c {\n\
    \        area = area + (c - b) * (c - a);\n    }\n    if a + c > b {\n       \
    \ area = area + (b - a) * (b - c);\n    }\n    if b + c > a {\n        area =\
    \ area + (a - b) * (a - c);\n    }\n    area = area / 2.0;\n    area = area.round();\n\
    \    return area;", "    if a + b > c {\n        return -1\n    }\n    if a +\
    \ c > b {\n        return -1\n    }\n    if b + c > a {\n        return -1\n \
    \   }\n    let mut s = (a + b + c) / 2;\n    if s == 0 {\n        return 0;\n\
    \    }\n    let mut area = 0.0;\n    while s > 0 {\n        area += s;\n     \
    \   s /= 2;\n    }\n    area", "    if a + b > c {\n        return -1;\n    }\n\
    \    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    let mut s = 0.0;\n    if a + b > c {\n        s = s + (a - b)\
    \ * (c - b);\n    }\n    if a + c > b {\n        s = s + (a - c) * (b - c);\n\
    \    }\n    if b + c > a {\n        s = s + (b - c) * (a - c);\n    }\n    s /\
    \ (a + b + c)", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n\
    \    }\n    if s == 0 {\n        return 0.0;\n    }\n    let mut area = 0.0;\n\
    \    if a > b {\n        if b > c {\n            area = s * s;\n        } else\
    \ {\n            area = s * s - c;\n        }\n    } else {\n        if c > a\
    \ {\n            area = s * s - b;\n        } else {\n            area = s * s\
    \ - a;\n        }\n    }\n    area = area.round() as f64;\n    return area;",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    a + b + c", " \
    \   if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    (a * b + c) /\
    \ 2.0", "    let mut s = 0.0;\n    let mut t = 0.0;\n    if a + b > c {\n    \
    \    s = c - (a + b);\n    } else {\n        s = a + b;\n    }\n    if a + c >\
    \ b {\n        t = c - (a + c);\n    } else {\n        t = a + c;\n    }\n   \
    \ if b + c > a {\n        t -= (b + c);\n    } else {\n        t -= (b + c);\n\
    \    }\n    s / (t * t)", "    if a + b > c {\n        return -1;\n    }\n   \
    \ if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n        return\
    \ -1;\n    }\n    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n\
    \    area = area + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n\
    \    area = area + (c * b) - (a * a);\n    area = area / 2.0;\n    area = round(area,\
    \ 2);\n    return area;", "    if a + b > c {\n        return -1\n    }\n    if\
    \ a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return -1\n\
    \    }\n    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n    area\
    \ = area / (a * b + c * c);\n    area = area.round();\n    area", "    let mut\
    \ a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if\
    \ a + b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n        b =\
    \ a + c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n    (a\
    \ * b * c) / ((a * b) + c * c)"]
stop_tokens:
- "\n}"

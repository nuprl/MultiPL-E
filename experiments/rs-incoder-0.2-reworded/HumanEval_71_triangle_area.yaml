name: HumanEval_71_triangle_area
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return the area of\n\
  /// the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n/// Otherwise return -1\n/// Three sides make a valid triangle when the sum\
  \ of any two sides is greater \n/// than the third side.\n/// Example:\n/// >>>\
  \ triangle_area(3, 4, 5)\n/// 6.0\n/// >>> triangle_area(1, 2, 10)\n/// -1\nfn triangle_area(a:\
  \ isize, b: isize, c: isize) -> f64 {\n"
tests: "}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(3,\
  \ 4, 5), 6.0);\n    assert_eq!(candidate(1, 2, 10), -1.0);\n    assert_eq!(candidate(4,\
  \ 8, 5), 8.18);\n    assert_eq!(candidate(2, 2, 2), 1.73);\n    assert_eq!(candidate(1,\
  \ 2, 3), -1.0);\n    assert_eq!(candidate(10, 5, 7), 16.25);\n    assert_eq!(candidate(2,\
  \ 6, 3), -1.0);\n    assert_eq!(candidate(1, 1, 1), 0.43);\n    assert_eq!(candidate(2,\
  \ 2, 10), -1.0);\n}\n"
completions: ["    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n     \
    \   _ => match a + b {\n            a if b > c => b * b - c * a,\n           \
    \ a if b < c => c * c - a * b\n        }\n    }", "    if a + b > c {\n      \
    \  return -1\n    }\n    if a + c > b {\n        return -1\n    }\n    if b +\
    \ c > a {\n        return -1\n    }\n    let mut s = 0.0;\n    if a + b > c {\n\
    \        s = s + (a + b - c) * 0.5;\n    }\n    if a + c > b {\n        s = s\
    \ + (a + c - b) * 0.5;\n    }\n    if b + c > a {\n        s = s + (b + c - a)\
    \ * 0.5;\n    }\n    s * 0.5", "    let mut s = a + b + c;\n    if s > 0 {\n \
    \       s /= 2;\n    }\n    s * s", "    if a + b > c {\n        return -1;\n\
    \    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a {\n  \
    \      return -1;\n    }\n    let mut area = 0.0;\n    area = area + (a + b) *\
    \ (a + c) * (b + c);\n    area = area / 3.0;\n    area = area.round();\n    area",
  "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b + c);\n\
    \    }\n    if a + c > b {\n        s = s + (c - b) * (c + b);\n    }\n    if\
    \ b + c > a {\n        s = s + (a - b) * (a + b);\n    }\n    s / 2.0", "    if\
    \ a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return -1;\n\
    \    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut area:\
    \ f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area\
    \ = area.round();\n    \n    return area;", "    if a + b > c {\n        return\
    \ -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b + c > a\
    \ {\n        return -1;\n    }\n    (a * b + c) * 0.5", "    let mut s = 0.0;\n\
    \    if a + b > c {\n        s = s + (a + b - c) * (a + b - c);\n    }\n    if\
    \ a + c > b {\n        s = s + (a + c - b) * (a + c - b);\n    }\n    if b + c\
    \ > a {\n        s = s + (b + c - a) * (b + c - a);\n    }\n    s / (a + b + c)",
  "    if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n    } else\
    \ if b + c > a {\n        -1\n    } else {\n        (a * b + c) / 2.0\n    }",
  "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n        return\
    \ -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n    \n    let mut\
    \ s = (a + b + c) / 2;\n    if s == 0 {\n        return 0;\n    }\n    \n    let\
    \ mut area = 0.0;\n    while s > 0 {\n        area += s;\n        s /= 2.0;\n\
    \    }\n    \n    area", "    let mut area = 0.0;\n    if a + b > c {\n      \
    \  area = area + (c - a) * (b - a);\n    }\n    if a + c > b {\n        area =\
    \ area + (b - a) * (c - a);\n    }\n    if b + c > a {\n        area = area +\
    \ (a - b) * (c - b);\n    }\n    area = area / 2.0;\n    area = area.round();\n\
    \    area", "    if a + b > c {\n        return -1;\n    }\n    if a + c > b {\n\
    \        return -1;\n    }\n    if b + c > a {\n        return -1;\n    }\n  \
    \  let mut area = 0.0;\n    area = area + (a * b) - (c * a);\n    area = area\
    \ + (b * c) - (a * b);\n    area = area + (c * a) - (b * c);\n    area = area\
    \ / 2.0;\n    area = round(area, 2);\n    area", "    if a + b > c {\n       \
    \ return -1;\n    }\n    if a + c > b {\n        return -1;\n    }\n    if b +\
    \ c > a {\n        return -1;\n    }\n    (a * b + c) / 2.0", "    if a + b >\
    \ c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n    }\n\
    \    if b + c > a {\n        return -1\n    }\n    \n    let mut area: f64 = 0.0;\n\
    \    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n", " \
    \   if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n    } else\
    \ if b + c > a {\n        -1\n    } else {\n        (a * b + c) / 2.0\n    }",
  "    if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n    } else\
    \ if b + c > a {\n        -1\n    } else {\n        ((a + b + c) / 2)\n    }",
  "    match a + b + c {\n        c if c > a + b => a,\n        c if c > a => b,\n\
    \        c if c > b => c,\n        _ => return -1.0,\n    }", "    let mut a =\
    \ a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if a +\
    \ b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n        b = a +\
    \ c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n    (a * b\
    \ * c) / ((a * b) + c * c)", "    if a + b > c {\n        return -1\n    }\n \
    \   if a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return\
    \ -1\n    }\n    (a * b + c) / 2.0", "    let mut s = a + b + c;\n    if s > 0\
    \ {\n        s /= 2;\n    }\n    s"]
stop_tokens:
- "\n}"

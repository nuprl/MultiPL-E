name: HumanEval_152_compare
language: rs
results:
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    let mut i =\
    \ 0;\n    while i < game.len() {\n        let mut j = i;\n        while j < game.len()\
    \ {\n            if game[j] == guess[i] {\n                result[i] = 0;\n  \
    \              break;\n            }\n            i += 1;\n        }\n       \
    \ j += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = compare;\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0,\
    \ 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0, 0, 0], vec![0, 0,\
    \ 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        let mut guess = guess[i];\n        let mut score = game[i];\n   \
    \     while guess != score {\n            if guess > score {\n               \
    \ guess = guess - score;\n            } else {\n                guess = guess\
    \ + score;\n            }\n        }\n        result[i] = guess;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 0;\n    while\
    \ i < game.len() {\n        if game[i] != guess[i] {\n            result.push(i);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4,\
    \ 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0,\
    \ 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6pabmtp9.rs:22:5\n   |\n\
    13 | fn compare(game: Vec<isize>, guess: Vec<isize>) -> Vec<isize> {\n   |   \
    \                                                 ---------- expected `Vec<isize>`\
    \ because of return type\n...\n22 |     result\n   |     ^^^^^^ expected `isize`,\
    \ found `usize`\n   |\n   = note: expected struct `Vec<isize>`\n             \
    \ found struct `Vec<usize>`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    let mut score\
    \ = 0;\n    for (i, &score) in game.iter().zip(guess.iter()) {\n        if score\
    \ > 0 {\n            result[i] = score - guess[i];\n        } else {\n       \
    \     result[i] = guess[i] - score;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5,\
    \ 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0277]: the type `[{integer}]` cannot be indexed by `&isize`\n  -->\
    \ /tmp/tmp551dk1xk.rs:18:13\n   |\n18 |             result[i] = score - guess[i];\n\
    \   |             ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[{integer}]>` is not implemented for `&isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&isize>` for `Vec<{integer}>`\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `&isize`\n  --> /tmp/tmp551dk1xk.rs:18:33\n\
    \   |\n18 |             result[i] = score - guess[i];\n   |                  \
    \               ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n\
    \   |\n   = help: the trait `SliceIndex<[isize]>` is not implemented for `&isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&isize>` for `Vec<isize>`\n\
    \nerror[E0277]: the type `[{integer}]` cannot be indexed by `&isize`\n  --> /tmp/tmp551dk1xk.rs:20:13\n\
    \   |\n20 |             result[i] = guess[i] - score;\n   |             ^^^^^^^^^\
    \ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the\
    \ trait `SliceIndex<[{integer}]>` is not implemented for `&isize`\n   = help:\
    \ the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note: required\
    \ because of the requirements on the impl of `Index<&isize>` for `Vec<{integer}>`\n\
    \nerror[E0277]: the type `[isize]` cannot be indexed by `&isize`\n  --> /tmp/tmp551dk1xk.rs:20:25\n\
    \   |\n20 |             result[i] = guess[i] - score;\n   |                  \
    \       ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n\
    \   = help: the trait `SliceIndex<[isize]>` is not implemented for `&isize`\n\
    \   = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n   = note:\
    \ required because of the requirements on the impl of `Index<&isize>` for `Vec<isize>`\n\
    \nerror: aborting due to 4 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E027"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    let mut i =\
    \ 0;\n    while i < game.len() {\n        let mut j = i;\n        while j < game.len()\
    \ {\n            if game[j] == guess[i] {\n                result[i] += 1;\n \
    \               j += 1;\n            } else {\n                j += 1;\n     \
    \       }\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n \
    \   let candidate = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1],\
    \ vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 1, 1, 1, 0, 0]`,\n right: `[0, 0, 0, 0, 3, 3]`', /tmp/tmpa4ils35x.rs:33:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        let mut guess = guess[i];\n        if guess == 0 {\n            result[i]\
    \ = 0;\n        } else {\n            result[i] = abs(guess - game[i]);\n    \
    \    }\n    }\n    result\n}\n\nfn main() {\n    let candidate = compare;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0,\
    \ 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0, 0, 0], vec![0, 0,\
    \ 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpljljc7ff.rs:20:25\n\
    \   |\n20 |             result[i] = abs(guess - game[i]);\n   |              \
    \           ^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        let mut j = i;\n        while j > 0 && game[j - 1] > game[j] {\n\
    \            j -= 1;\n        }\n        result[i] = j;\n    }\n    for i in 0..guess.len()\
    \ {\n        let mut j = i;\n        while j > 0 && guess[j - 1] > guess[j] {\n\
    \            j -= 1;\n        }\n        result[i] = j;\n    }\n    for i in 0..game.len()\
    \ {\n        result[i] = result[i] - guess[i];\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5,\
    \ 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpfzcdkbgb.rs:30:33\n   |\n\
    30 |         result[i] = result[i] - guess[i];\n   |                         \
    \        ^^^^^^^^ expected `usize`, found `isize`\n\nerror[E0277]: cannot subtract\
    \ `isize` from `usize`\n  --> /tmp/tmpfzcdkbgb.rs:30:31\n   |\n30 |         result[i]\
    \ = result[i] - guess[i];\n   |                               ^ no implementation\
    \ for `usize - isize`\n   |\n   = help: the trait `Sub<isize>` is not implemented\
    \ for `usize`\n   = help: the following other types implement trait `Sub<Rhs>`:\n\
    \             <&'a f32 as Sub<f32>>\n             <&'a f64 as Sub<f64>>\n    \
    \         <&'a i128 as Sub<i128>>\n             <&'a i16 as Sub<i16>>\n      \
    \       <&'a i32 as Sub<i32>>\n             <&'a i64 as Sub<i64>>\n          \
    \   <&'a i8 as Sub<i8>>\n             <&'a isize as Sub<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfzcdkbgb.rs:32:5\n\
    \   |\n13 | fn compare(game: Vec<isize>, guess: Vec<isize>) -> Vec<isize> {\n\
    \   |                                                    ---------- expected `Vec<isize>`\
    \ because of return type\n...\n32 |     result\n   |     ^^^^^^ expected `isize`,\
    \ found `usize`\n   |\n   = note: expected struct `Vec<isize>`\n             \
    \ found struct `Vec<usize>`\n\nerror: aborting due to 3 previous errors\n\nSome\
    \ errors have detailed explanations: E0277, E0308.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    let mut i =\
    \ 0;\n    while i < game.len() {\n        if game[i] == guess[i] {\n         \
    \   result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4,\
    \ 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0,\
    \ 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp8x6eqrs_.rs:20:25\n\
    \   |\n20 |             result[i] = abs(game[i] - guess[i]);\n   |           \
    \              ^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for &g in &guess\
    \ {\n        let mut found = false;\n        for &s in &game {\n            if\
    \ s == g {\n                found = true;\n                break;\n          \
    \  }\n        }\n        if !found {\n            result[g.clone() as usize] -=\
    \ 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = compare;\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0,\
    \ 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0, 0, 0], vec![0, 0,\
    \ 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'index out of bounds: the len is 6 but the index\
    \ is 18446744073709551614', /tmp/tmphe47z9xv.rs:24:13\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    let mut i =\
    \ 0;\n    while i < game.len() {\n        let mut j = i;\n        while j < game.len()\
    \ {\n            if game[j] == guess[j] {\n                result[i] += 1;\n \
    \               j += 1;\n            } else {\n                j += 1;\n     \
    \       }\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n \
    \   let candidate = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1],\
    \ vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[4, 3, 2, 1, 0, 0]`,\n right: `[0, 0, 0, 0, 3, 3]`', /tmp/tmpv1nm85i1.rs:33:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        let score = game[i];\n        let guess = guess[i];\n        if score\
    \ == guess {\n            result[i] = 0;\n        } else {\n            result[i]\
    \ = abs(score - guess);\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1,\
    \ 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp4mi3c5k3.rs:21:25\n\
    \   |\n21 |             result[i] = abs(score - guess);\n   |                \
    \         ^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        if game[i] != guess[i] {\n            result[i] = abs(game[i] - guess[i]);\n\
    \        } else {\n            result[i] = 0;\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpirs3jfd1.rs:17:25\n\
    \   |\n17 |             result[i] = abs(game[i] - guess[i]);\n   |           \
    \              ^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut game = game.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut guess = guess.iter().cloned().collect::<Vec<_>>();\n    let mut i\
    \ = 0;\n    while i < game.len() {\n        if game[i] == guess[i] {\n       \
    \     result.push(i);\n            i += 1;\n        } else {\n            i +=\
    \ 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = compare;\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0,\
    \ 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0, 0, 0], vec![0, 0,\
    \ 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpn5xd7tvd.rs:26:5\n   |\n\
    13 | fn compare(game: Vec<isize>, guess: Vec<isize>) -> Vec<isize> {\n   |   \
    \                                                 ---------- expected `Vec<isize>`\
    \ because of return type\n...\n26 |     result\n   |     ^^^^^^ expected `isize`,\
    \ found `usize`\n   |\n   = note: expected struct `Vec<isize>`\n             \
    \ found struct `Vec<usize>`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut game = game.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut guess = guess.iter().cloned().collect::<Vec<_>>();\n    let mut game_size\
    \ = game.len();\n    let mut guess_size = guess.len();\n    let mut i = 0;\n \
    \   while i < game_size {\n        if game[i] == guess[i] {\n            result.push(i);\n\
    \            i += 1;\n        } else {\n            let mut j = i;\n         \
    \   while j < game_size && game[j] == guess[j] {\n                j += 1;\n  \
    \          }\n            if j == game_size {\n                result.push(i);\n\
    \                i += 1;\n            } else {\n                let mut j = i;\n\
    \                while j < game_size && game[j] != guess[j] {\n              \
    \      j += 1;\n                }\n                if j == game_size {\n     \
    \               result.push(i);\n                    i += 1;\n               \
    \ } else {\n                    let mut j = i;\n                    while j <\
    \ game_size && game[j] == guess[j] {\n                        j += 1;\n      \
    \              }\n                    result.push(j - i);\n                  \
    \  i += 1;\n                }\n            }\n        }\n    }\n    result\n}\n\
    \nfn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpy2gaiqlq.rs:51:5\n   |\n\
    13 | fn compare(game: Vec<isize>, guess: Vec<isize>) -> Vec<isize> {\n   |   \
    \                                                 ---------- expected `Vec<isize>`\
    \ because of return type\n...\n51 |     result\n   |     ^^^^^^ expected `isize`,\
    \ found `usize`\n   |\n   = note: expected struct `Vec<isize>`\n             \
    \ found struct `Vec<usize>`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        let mut diff = game[i] - guess[i];\n        if diff < 0 {\n     \
    \       diff *= -1;\n        }\n        result[i] = diff;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        if game[i] != guess[i] {\n            result[i] = abs(game[i] - guess[i]);\n\
    \        } else {\n            result[i] = 0;\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmptts30fwe.rs:17:25\n\
    \   |\n17 |             result[i] = abs(game[i] - guess[i]);\n   |           \
    \              ^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    let mut i =\
    \ 0;\n    while i < game.len() {\n        let mut j = i;\n        while j < game.len()\
    \ {\n            if game[j] == guess[j] {\n                result[i] += 1;\n \
    \               j += 1;\n            } else {\n                j += 1;\n     \
    \       }\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n \
    \   let candidate = compare;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1],\
    \ vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[4, 3, 2, 1, 0, 0]`,\n right: `[0, 0, 0, 0, 3, 3]`', /tmp/tmpomtaih7v.rs:33:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 0..game.len()\
    \ {\n        let mut guess = guess[i];\n        let mut score = game[i];\n   \
    \     if guess == score {\n            result.push(0);\n        } else {\n   \
    \         result.push(abs(guess - score));\n        }\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmpjw9x7sk7.rs:21:25\n\
    \   |\n21 |             result.push(abs(guess - score));\n   |               \
    \          ^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![0; game.len()];\n    for i in 0..game.len()\
    \ {\n        let mut guess = guess[i];\n        let mut score = game[i];\n   \
    \     if guess == score {\n            result[i] = 0;\n        } else {\n    \
    \        result[i] = abs(guess - score);\n        }\n    }\n    result\n}\n\n\
    fn main() {\n    let candidate = compare;\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0, 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0,\
    \ 0, 0, 0, 0, 0], vec![0, 0, 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `abs` in this scope\n  --> /tmp/tmp38ba856b.rs:21:25\n\
    \   |\n21 |             result[i] = abs(guess - score);\n   |                \
    \         ^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// I think we all remember that feeling when the result of some long-awaited\n\
    /// event is finally known. The feelings and thoughts you have at that moment\
    \ are\n/// definitely worth noting down and comparing.\n/// Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n/// You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n/// Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n/// the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n/// example:\n\
    /// >>> compare(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2])\n/// vec![0,\
    \ 0, 0, 0, 3, 3]\n/// >>> compare(vec![0, 5, 0, 0, 0, 4], vec![4, 1, 1, 0, 0,\
    \ -2])\n/// vec![4, 4, 1, 0, 0, 6]\nfn compare(game: Vec<isize>, guess: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut score = 0;\n\
    \    let mut guess = guess.to_owned();\n    for &g in &guess {\n        if *g\
    \ == 0 {\n            result.push(0);\n        } else {\n            result.push(*g\
    \ - score);\n        }\n    }\n    for &s in &game {\n        if *s == 0 {\n \
    \           result.push(0);\n        } else {\n            result.push(*s - score);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = compare;\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 1], vec![1, 2, 3, 4, 2, -2]), vec![0,\
    \ 0, 0, 0, 3, 3]);\n    assert_eq!(candidate(vec![0, 0, 0, 0, 0, 0], vec![0, 0,\
    \ 0, 0, 0, 0]), vec![0, 0, 0, 0, 0, 0]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3], vec![-1, -2, -3]), vec![2, 4, 6]);\n    assert_eq!(candidate(vec![1, 2,\
    \ 3, 5], vec![-1, 2, 3, 4]), vec![2, 0, 0, 1]);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n  --> /tmp/tmpwny9mfv7.rs:18:12\n\
    \   |\n18 |         if *g == 0 {\n   |            ^^\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmpwny9mfv7.rs:21:25\n   |\n21 |        \
    \     result.push(*g - score);\n   |                         ^^\n\nerror[E0614]:\
    \ type `isize` cannot be dereferenced\n  --> /tmp/tmpwny9mfv7.rs:25:12\n   |\n\
    25 |         if *s == 0 {\n   |            ^^\n\nerror[E0614]: type `isize` cannot\
    \ be dereferenced\n  --> /tmp/tmpwny9mfv7.rs:28:25\n   |\n28 |             result.push(*s\
    \ - score);\n   |                         ^^\n\nerror: aborting due to 4 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0614`.\n"
  exit_code: 1
  status: SyntaxError

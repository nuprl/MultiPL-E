name: HumanEval_120_maximum
language: rs
prompt: "/// Given a vector arr of integers and a positive integer k, return a sorted\
  \ vector \n/// of length k with the maximum k numbers in arr.\n/// Example 1:\n\
  /// >>> maximum(vec![-3, -4, 5], 3)\n/// vec![-4, -3, 5]\n/// Example 2:\n/// >>>\
  \ maximum(vec![4, -4, 4], 2)\n/// vec![4, 4]\n/// Example 3:\n/// >>> maximum(vec![-3,\
  \ 2, 1, 2, -1, -2, 1], 1)\n/// vec![2]\n/// Note:\n/// 1. The length of the vector\
  \ will be in the range of [1, 1000].\n/// 2. The elements in the vector will be\
  \ in the range of [-1000, 1000].\n/// 3. 0 <= k <= len(arr)\nfn maximum(arr: Vec<isize>,\
  \ k: isize) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(vec![-3,\
  \ -4, 5], 3), vec![-4, -3, 5]);\n    assert_eq!(candidate(vec![4, -4, 4], 2), vec![4,\
  \ 4]);\n    assert_eq!(candidate(vec![-3, 2, 1, 2, -1, -2, 1], 1), vec![2]);\n \
  \   assert_eq!(candidate(vec![123, -123, 20, 0, 1, 2, -3], 3), vec![2, 20, 123]);\n\
  \    assert_eq!(candidate(vec![-123, 20, 0, 1, 2, -3], 4), vec![0, 1, 2, 20]);\n\
  \    assert_eq!(candidate(vec![5, 15, 0, 3, -13, -8, 0], 7), vec![-13, -8, 0, 0,\
  \ 3, 5, 15]);\n    assert_eq!(candidate(vec![-1, 0, 2, 5, 3, -10], 2), vec![3, 5]);\n\
  \    assert_eq!(candidate(vec![1, 0, 5, -7], 1), vec![5]);\n    assert_eq!(candidate(vec![4,\
  \ -4], 2), vec![-4, 4]);\n    assert_eq!(candidate(vec![-10, 10], 2), vec![-10,\
  \ 10]);\n    assert_eq!(candidate(vec![1, 2, 3, -23, 243, -400, 0], 0), Vec::<isize>::new());\n\
  }\n"
completions: ["    let mut max_arr = vec![];\n    let mut max_k = k;\n    let mut\
    \ max_element = arr[0];\n    for i in arr.iter().rev() {\n        if i > max_element\
    \ {\n            max_element = i;\n        }\n        if max_k == 0 {\n      \
    \      break;\n        }\n        if max_k == 1 {\n            max_arr.push(max_element);\n\
    \            break;\n        }\n        if max_k == 2 {\n            if max_element\
    \ > max_arr[0] {\n                max_arr.push(max_element);\n            }\n\
    \            max_k -= 1;\n        }\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_k = k;\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n    \
    \        max_k = k;\n        }\n        if arr[i] > max_arr[1] {\n           \
    \ max_arr[1] = arr[i];\n            max_k = k;\n        }\n        if arr[i] >\
    \ max_arr[2] {\n            max_arr[2] = arr[i];\n            max_k = k;\n   \
    \     }\n        if arr[i] > max_arr[3] {\n            max_arr[3] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > max_arr[4] {\n       \
    \     max_arr[4] = arr[i];\n            max_k = k;\n        }\n        if arr[i]\
    \ > max_arr[5] {\n            max_arr[5] = arr[i];\n            max_k = k;\n \
    \       }\n        if arr[i] > max_arr[6] {\n            max_arr[6] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > max_arr[7] {\n       \
    \     max_arr[7] = arr[i];\n            max_k = k;\n        }\n        if arr[i]\
    \ > max_arr[8] {\n            max_arr[8] = arr[i];\n            max_k = k;\n \
    \       }\n        if arr[i] > max_arr[9] {\n            max_arr[9] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > max_arr[10] {\n      \
    \      max_arr[10] = arr[i];\n            max_k = k;\n        }\n        if arr[i]\
    \ > max_arr[11] {\n            max_arr[11] = arr[i];\n            max_k = k;\n\
    \        }\n        if arr[i] > max_arr[12] {\n            max_arr[12] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > max_arr[13] {\n      \
    \      max_arr[13] = arr[i];\n            max_k = k;\n        }\n        if arr[i]\
    \ > max_arr[14] {\n            max_arr[14] = arr[i];\n            max_k = k;\n\
    \        }\n        if arr[i] > max_arr[15] {\n            max_arr[15] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > max_arr[16] {\n      \
    \      max_arr[16] = arr[i];\n            max_k = k;\n        }\n        if arr[i]\
    \ > max_arr[17] {\n            max_arr[17] = arr[i];\n            max_k = k;\n\
    \        }\n        if arr[i] > max_arr[18] {\n            max_arr[18] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > max_arr[19] {\n      \
    \      max_arr[19] = arr[i];\n            max_k = k;\n        }\n        if arr[i]\
    \ > max_arr[20] {\n            max_arr[20] = arr[i];\n            max_k = k;\n\
    \        }\n        if arr[i] > max_arr[21] {\n            max_arr[21] = arr[i];\n\
    \            max_k = k;\n        }\n        if arr[i] > ", "    let mut max_arr\
    \ = vec![];\n    let mut max_num = arr[0];\n    for num in arr {\n        if num\
    \ > max_num {\n            max_num = num;\n        }\n    }\n    for num in arr\
    \ {\n        if num == max_num {\n            max_arr.push(num);\n        }\n\
    \    }\n    if k == 1 {\n        return max_arr;\n    }\n    if k == max_arr.len()\
    \ {\n        return max_arr;\n    }\n    if k > max_arr.len() {\n        return\
    \ max_arr;\n    }\n    let mut max_k = k;\n    let mut max_nums = vec![];\n  \
    \  while max_k > 0 {\n        let mut max_nums_temp: Vec<isize> = vec![];\n  \
    \      for num in max_arr {\n            if num == max_num {\n               \
    \ max_nums_temp.push(num);\n            }\n        }\n        if max_nums_temp.len()\
    \ > max_k {\n            max_k = max_nums_temp.len();\n        }\n        max_nums\
    \ = max_nums.concat(max_nums_temp);\n    }\n    return max_nums;", "    let mut\
    \ max = arr[0];\n    for i in 1..k {\n        if arr[i] > max {\n            max\
    \ = arr[i];\n        }\n    }\n    vec![max]", "    let mut max_arr = vec![];\n\
    \    let mut max_k = k;\n    let mut max_i = arr.len();\n    while max_i < max_k\
    \ {\n        if max_arr\n            .iter()\n            .any(|&x| x > arr[max_i\
    \ - max_k + k])\n        {\n            max_arr += arr[max_i - max_k + k];\n \
    \           max_k -= 1;\n        }\n        max_i += 1;\n    }\n    max_arr",
  "    let mut max_arr = arr.clone();\n    max_arr.sort_unstable();\n    max_arr.truncate(k);\n\
    \    max_arr", "    if arr.len() <= k {\n        return arr\n    }\n    let mut\
    \ max_arr = vec![arr[0]];\n    for i in 1..k {\n        if arr[i] > max_arr[0]\
    \ {\n            max_arr[0] = arr[i];\n        }\n    }\n    max_arr", "    if\
    \ arr.len() <= k {\n        return arr\n    }\n    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    let mut max_k = k;\n    let mut max_i = -1;\n    for i in 0..arr.len()\
    \ {\n        if max_k == i {\n            max_arr[i] = arr[i];\n        } else\
    \ {\n            if max_arr[i].0 > arr[i] {\n                max_arr[i] = arr[i];\n\
    \                max_k = i;\n            }\n        }\n    }\n    for i in 0..k\
    \ {\n        if max_arr[i].0 > max_arr[i-k].0 {\n            max_arr[i] = max_arr[i-k];\n\
    \        }\n    }\n    max_arr", "    if k > arr.len() {\n        vec![]\n   \
    \ } else {\n        let mut max = arr[0];\n        let mut max_idx = 1;\n    \
    \    for i in 1..k {\n            if arr[i] > max {\n                max = arr[i];\n\
    \                max_idx = i;\n            }\n        }\n        vec![max; max_idx\
    \ + 1]\n    }", "    if arr.len() <= k {\n        return arr;\n    }\n    let\
    \ mut max_idx = k;\n    let mut max_val = arr[k];\n    for i in 0..k {\n     \
    \   if arr[i] > max_val {\n            max_val = arr[i];\n            max_idx\
    \ = i;\n        }\n    }\n    vec![max_val; max_idx]", "    let mut max_arr =\
    \ vec![];\n    let mut max_k = k;\n    let mut max_element = arr[0];\n    for\
    \ i in arr.iter().take(max_k) {\n        if i > max_element {\n            max_element\
    \ = i;\n        }\n    }\n    max_arr.push(max_element);\n    for i in arr.iter().skip(max_k)\
    \ {\n        if i < max_element {\n            max_element = i;\n        }\n \
    \   }\n    max_arr.push(max_element);\n    return max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_k = k;\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n    \
    \        max_k = 0;\n        }\n        if max_k == 0 {\n            max_k = k;\n\
    \        }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if max_k == 0 {\n            max_k\
    \ = k;\n        }\n        if arr[i] > max_arr[0] {\n            max_arr[0] =\
    \ arr[i];\n            max_k = 0;\n        }\n        if max_k == 0 {\n      \
    \      max_k = k;\n        }\n        if arr[i] > max_arr[0] {\n            max_arr[0]\
    \ = arr[i];\n            max_k = 0;\n        }\n        if max_k == 0 {\n    \
    \        max_k = k;\n        }\n        if arr[i] > max_arr[0] {\n           \
    \ max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if max_k ==\
    \ 0 {\n            max_k = k;\n        }\n        if arr[i] > max_arr[0] {\n \
    \           max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if\
    \ max_k == 0 {\n            max_k = k;\n        }\n        if arr[i] > max_arr[0]\
    \ {\n            max_arr[0] = arr[i];\n            max_k = 0;\n        }\n   \
    \     if max_k == 0 {\n            max_k = k;\n        }\n        if arr[i] >\
    \ max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n   \
    \     }\n        if max_k == 0 {\n            max_k = k;\n        }\n        if\
    \ arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k =\
    \ 0;\n        }\n        if max_k == 0 {\n            max_k = k;\n        }\n\
    \        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n        \
    \    max_k = 0;\n        }\n        if max_k == 0 {\n            max_k = k;\n\
    \        }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if max_k == 0 {\n            max_k\
    \ = k;\n        }\n        if arr[i] > max_arr[0] {\n            max_arr[0] =\
    \ arr[i];\n            max_k = 0;\n        }\n        if max_k == 0 {\n      \
    \      max_k = k;\n        }\n        if arr[i] > max_arr[0] {\n            max_arr[0]\
    \ = arr[i];\n            max_k = 0;\n        }\n        if max_k == 0 {\n    \
    \        max_k = k;\n        }\n        if arr[i] > max_arr[0] {\n           \
    \ max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if max_k ==\
    \ 0 {\n            max_k = k;\n        }\n        if arr[i] > max_arr[0] {\n \
    \           max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if\
    \ max_", "    let mut max_arr = vec![];\n    let mut max_k = k;\n    let mut i\
    \ = 0;\n    while i < arr.len() {\n        if arr[i] > max_arr[0] {\n        \
    \    max_arr[0] = arr[i];\n            max_k = 1;\n        }\n        if arr[i]\
    \ > max_arr[1] {\n            max_arr[1] = arr[i];\n            max_k = 2;\n \
    \       }\n        if arr[i] > max_arr[2] {\n            max_arr[2] = arr[i];\n\
    \            max_k = 3;\n        }\n        if arr[i] > max_arr[3] {\n       \
    \     max_arr[3] = arr[i];\n            max_k = 4;\n        }\n        if arr[i]\
    \ > max_arr[4] {\n            max_arr[4] = arr[i];\n            max_k = 5;\n \
    \       }\n        if arr[i] > max_arr[5] {\n            max_arr[5] = arr[i];\n\
    \            max_k = 6;\n        }\n        if arr[i] > max_arr[6] {\n       \
    \     max_arr[6] = arr[i];\n            max_k = 7;\n        }\n        if arr[i]\
    \ > max_arr[7] {\n            max_arr[7] = arr[i];\n            max_k = 8;\n \
    \       }\n        if arr[i] > max_arr[8] {\n            max_arr[8] = arr[i];\n\
    \            max_k = 9;\n        }\n        if arr[i] > max_arr[9] {\n       \
    \     max_arr[9] = arr[i];\n            max_k = 10;\n        }\n        if arr[i]\
    \ > max_arr[10] {\n            max_arr[10] = arr[i];\n            max_k = 11;\n\
    \        }\n        if arr[i] > max_arr[11] {\n            max_arr[11] = arr[i];\n\
    \            max_k = 12;\n        }\n        if arr[i] > max_arr[12] {\n     \
    \       max_arr[12] = arr[i];\n            max_k = 13;\n        }\n        if\
    \ arr[i] > max_arr[13] {\n            max_arr[13] = arr[i];\n            max_k\
    \ = 14;\n        }\n        if arr[i] > max_arr[14] {\n            max_arr[14]\
    \ = arr[i];\n            max_k = 15;\n        }\n        if arr[i] > max_arr[15]\
    \ {\n            max_arr[15] = arr[i];\n            max_k = 16;\n        }\n \
    \       if arr[i] > max_arr[16] {\n            max_arr[16] = arr[i];\n       \
    \     max_k = 17;\n        }\n        if arr[i] > max_arr[17] {\n            max_arr[17]\
    \ = arr[i];\n            max_k = 18;\n        }\n        if arr[i] > max_arr[18]\
    \ {\n            max_arr[18] = arr[i];\n            max_k = 19;\n        }\n \
    \       if arr[i] > max_arr[19] {\n            max_arr[19] = arr[i];\n       \
    \     max_k = 20;\n        }\n        if arr[i] > max_arr[20] {\n            max_arr[20]\
    \ = arr[i];\n            max_k = 21;\n        }\n        if arr[i] > max_", " \
    \   if arr.len() <= k {\n        return arr\n    }\n    let mut max = arr[0];\n\
    \    for i in 1..k {\n        if arr[i] > max {\n            max = arr[i];\n \
    \       }\n    }\n    vec![max]", "    let mut max_arr = vec![];\n    let mut\
    \ max_k = k;\n    let mut min_arr = vec![];\n    let mut min_k = k;\n    let mut\
    \ i = 0;\n    while i < arr.len() {\n        if arr[i] > max_arr[0] {\n      \
    \      max_arr[0] = arr[i];\n            max_k = max_k - 1;\n        }\n     \
    \   if arr[i] < min_arr[0] {\n            min_arr[0] = arr[i];\n            min_k\
    \ = min_k - 1;\n        }\n        if max_k == 0 {\n            max_arr.push(arr[i]);\n\
    \        }\n        if min_k == 0 {\n            min_arr.push(arr[i]);\n     \
    \   }\n        if arr[i] > max_arr[0] {\n            max_arr.push(arr[i]);\n \
    \       }\n        if arr[i] < min_arr[0] {\n            min_arr.push(arr[i]);\n\
    \        }\n        i += 1;\n    }\n    if min_k == 0 {\n        min_arr.push(arr[0]);\n\
    \    }\n    if max_k == 0 {\n        max_arr.push(arr[0]);\n    }\n    if min_k\
    \ > max_k {\n        max_arr.push(min_arr[0]);\n    }\n    if min_k > max_k {\n\
    \        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n\
    \    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n   \
    \ if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n    if min_k >\
    \ max_k {\n        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n\
    \        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n\
    \    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n   \
    \ if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n    if min_k >\
    \ max_k {\n        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n\
    \        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n\
    \    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n   \
    \ if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n    if min_k >\
    \ max_k {\n        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n\
    \        min_arr.push(max_arr[0]);\n    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n\
    \    }\n    if min_k > max_k {\n        min_arr.push(max_arr[0]);\n    }\n   \
    \ if min_", "    let mut max_arr = vec![];\n    let mut max_k = k;\n    let mut\
    \ i = 0;\n    while i < arr.len() {\n        if arr[i] > max_arr[0] {\n      \
    \      max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n\
    \            max_k = 0;\n        }\n        if arr[i] > max_arr[0] {\n       \
    \     max_arr[0] = arr[i];\n            max_k = 0;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 0;\n \
    \       }\n        if arr", "    if k == 0 || arr.len() <= k {\n        return\
    \ arr\n    }\n    let mut max = arr[0];\n    for i in 1..k {\n        if arr[i]\
    \ > max {\n            max = arr[i];\n        }\n    }\n    vec![max]", "    if\
    \ k == 0 || arr.len() <= k {\n        return arr\n    }\n    let mut max_arr =\
    \ vec![];\n    let mut max_len = k;\n    for ele in arr {\n        if ele > max_arr[k]\
    \ {\n            max_arr[k] = ele;\n            len -= 1;\n        }\n       \
    \ if len == 0 {\n            break;\n        }\n    }\n    max_arr.extend_from_slice(&max_arr[0..max_len]);\n\
    \    max_arr", "    let mut max_arr = vec![];\n    let mut max_k = k;\n    let\
    \ mut i = 0;\n    while i < arr.len() {\n        if arr[i] > max_arr[0] {\n  \
    \          max_arr[0] = arr[i];\n            max_k = max_k - 1;\n        }\n \
    \       if max_k == 0 {\n            break;\n        }\n        if arr[i] > max_arr[1]\
    \ {\n            max_arr[1] = arr[i];\n            max_k -= 1;\n        }\n  \
    \      i += 1;\n    }\n    max_arr", "    let mut max_arr = vec![];\n    let mut\
    \ max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k = 1;\n \
    \       }\n        if arr[i] > max_arr[1] {\n            max_arr[1] = arr[i];\n\
    \            max_k = 2;\n        }\n        if arr[i] > max_arr[2] {\n       \
    \     max_arr[2] = arr[i];\n            max_k = 3;\n        }\n        if arr[i]\
    \ > max_arr[3] {\n            max_arr[3] = arr[i];\n            max_k = 4;\n \
    \       }\n        if arr[i] > max_arr[4] {\n            max_arr[4] = arr[i];\n\
    \            max_k = 5;\n        }\n        if arr[i] > max_arr[5] {\n       \
    \     max_arr[5] = arr[i];\n            max_k = 6;\n        }\n        if arr[i]\
    \ > max_arr[6] {\n            max_arr[6] = arr[i];\n            max_k = 7;\n \
    \       }\n        if arr[i] > max_arr[7] {\n            max_arr[7] = arr[i];\n\
    \            max_k = 8;\n        }\n        if arr[i] > max_arr[8] {\n       \
    \     max_arr[8] = arr[i];\n            max_k = 9;\n        }\n        if arr[i]\
    \ > max_arr[9] {\n            max_arr[9] = arr[i];\n            max_k = 10;\n\
    \        }\n        if arr[i] > max_arr[10] {\n            max_arr[10] = arr[i];\n\
    \            max_k = 11;\n        }\n        if arr[i] > max_arr[11] {\n     \
    \       max_arr[11] = arr[i];\n            max_k = 12;\n        }\n        if\
    \ arr[i] > max_arr[12] {\n            max_arr[12] = arr[i];\n            max_k\
    \ = 13;\n        }\n        if arr[i] > max_arr[13] {\n            max_arr[13]\
    \ = arr[i];\n            max_k = 14;\n        }\n        if arr[i] > max_arr[14]\
    \ {\n            max_arr[14] = arr[i];\n            max_k = 15;\n        }\n \
    \       if arr[i] > max_arr[15] {\n            max_arr[15] = arr[i];\n       \
    \     max_k = 16;\n        }\n        if arr[i] > max_arr[16] {\n            max_arr[16]\
    \ = arr[i];\n            max_k = 17;\n        }\n        if arr[i] > max_arr[17]\
    \ {\n            max_arr[17] = arr[i];\n            max_k = 18;\n        }\n \
    \       if arr[i] > max_arr[18] {\n            max_arr[18] = arr[i];\n       \
    \     max_k = 19;\n        }\n        if arr[i] > max_arr[19] {\n            max_arr[19]\
    \ = arr[i];\n            max_k = 20;\n        }\n        if arr[i] > max_arr[20]\
    \ {\n            max_arr[20] = arr[i];\n            max_k = 21;\n        }\n \
    \       if arr[i] > max_arr[21] {\n            max_arr[21] = arr[i];\n       \
    \     max_k = 22;\n        }"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_vowel()).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmpaxeurh_t.rs:13:32\n   |\n13 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n   |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::from(\"\");\n    for ch in text.chars() {\n\
    \        if !is_vowel(ch) {\n            result.push_str(&ch.to_string());\n \
    \       } else {\n            result.push_str(&ch);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5iicjadc.rs:15:13\n\
    \   |\n15 |         if !is_vowel(ch) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp5iicjadc.rs:18:29\n\
    \   |\n18 |             result.push_str(&ch);\n   |                          \
    \   ^^^ expected `str`, found `char`\n   |\n   = note: expected reference `&str`\n\
    \              found reference `&char`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = HashSet::new();\n    vowels.insert(String::from(\"a\"\
    ));\n    vowels.insert(String::from(\"e\"));\n    vowels.insert(String::from(\"\
    i\"));\n    vowels.insert(String::from(\"o\"));\n    vowels.insert(String::from(\"\
    u\"));\n    vowels.insert(String::from(\"A\"));\n    vowels.insert(String::from(\"\
    E\"));\n    vowels.insert(String::from(\"I\"));\n    vowels.insert(String::from(\"\
    O\"));\n    vowels.insert(String::from(\"U\"));\n\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !vowels.contains(&c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n  -->\
    \ /tmp/tmp8sa_vrwg.rs:13:22\n   |\n13 |     let mut vowels = HashSet::new();\n\
    \   |                      ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for ch in text.chars() {\n        if\
    \ !vowels.contains(&ch.to_string()) {\n            result.push_str(&ch.to_string());\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzbob158h.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&ch.to_string()) {\n   |                    \
    \         ^^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n   |\n   = note:\
    \ expected reference `&&str`\n              found reference `&String`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut\
    \ result = String::new();\n    for ch in text.chars() {\n        if !vowels.contains(&ch.to_ascii_lowercase())\
    \ {\n            result.push_str(&ch.to_ascii_lowercase());\n        } else {\n\
    \            result.push_str(&ch);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpkvpxpxhi.rs:16:29\n   |\n\
    16 |         if !vowels.contains(&ch.to_ascii_lowercase()) {\n   |           \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `char`\n  \
    \ |\n   = note: expected reference `&&str`\n              found reference `&char`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpkvpxpxhi.rs:17:29\n   |\n17 |\
    \             result.push_str(&ch.to_ascii_lowercase());\n   |               \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^ expected `str`, found `char`\n   |\n \
    \  = note: expected reference `&str`\n              found reference `&char`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpkvpxpxhi.rs:19:29\n   |\n19 |  \
    \           result.push_str(&ch);\n   |                             ^^^ expected\
    \ `str`, found `char`\n   |\n   = note: expected reference `&str`\n          \
    \    found reference `&char`\n\nerror: aborting due to 3 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for ch in text.chars() {\n        if\
    \ !vowels.contains(&ch.to_ascii_lowercase()) {\n            result.push_str(&ch.to_string());\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpclh6qs6a.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&ch.to_ascii_lowercase()) {\n   |           \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `char`\n  \
    \ |\n   = note: expected reference `&&str`\n              found reference `&char`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpharlqwwb.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpharlqwwb.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_punctuation())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect::<String>()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpe62vfoeh.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect::<String>()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpmp4sn78z.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpmp4sn78z.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .map(|c| c.to_ascii_lowercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpgti6uyre.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpgti6uyre.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    let mut vowels = vec!['A', 'B',\
    \ 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',\
    \ 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    for c in text.chars() {\n    \
    \    if !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpinwci0_6.rs:16:29\n   |\n\
    16 |         if !vowels.contains(c) {\n   |                             ^\n  \
    \ |                             |\n   |                             expected `&char`,\
    \ found `char`\n   |                             help: consider borrowing here:\
    \ `&c`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpeyqah2uf.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .map(|c| c.to_ascii_lowercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpgti6uyre.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpgti6uyre.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .filter(|c| !c.is_ascii_control())\n\
    \        .map(|c| c.to_ascii_lowercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpy9vchijr.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpy9vchijr.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv24y9xcg.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv24y9xcg.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for ch in text.chars() {\n        if\
    \ !vowels.contains(&ch.to_lowercase()) {\n            result.push(ch);\n     \
    \   }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_hru_jxz.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&ch.to_lowercase()) {\n   |                 \
    \            ^^^^^^^^^^^^^^^^^^ expected `char`, found struct `ToLowercase`\n\
    \   |\n   = note: expected reference `&char`\n              found reference `&ToLowercase`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect()\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbfhntcs2.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbtbviyti.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut\
    \ result = String::new();\n    let mut iter = text.chars().enumerate();\n    for\
    \ (i, c) in iter.next() {\n        if !vowels.contains(&c.to_string()) {\n   \
    \         result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp235qb8qe.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c.to_string()) {\n   |                     \
    \        ^^^^^^^^^^^^^^ expected `&str`, found struct `String`\n   |\n   = note:\
    \ expected reference `&&str`\n              found reference `&String`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for ch in text.chars() {\n        if\
    \ vowels.contains(ch) {\n            result.push(*ch);\n        } else {\n   \
    \         result.push(ch);\n        }\n    }\n    result\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpql_5sz8c.rs:17:28\n   |\n\
    17 |         if vowels.contains(ch) {\n   |                            ^^\n  \
    \ |                            |\n   |                            expected `&char`,\
    \ found `char`\n   |                            help: consider borrowing here:\
    \ `&ch`\n\nerror[E0614]: type `char` cannot be dereferenced\n  --> /tmp/tmpql_5sz8c.rs:18:25\n\
    \   |\n18 |             result.push(*ch);\n   |                         ^^^\n\n\
    error: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0614.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpm_6rhyp3.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^\n  \
    \ |                             |\n   |                             expected `&char`,\
    \ found `char`\n   |                             help: consider borrowing here:\
    \ `&c`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for ch in text.chars() {\n        if\
    \ !vowels.contains(&ch.to_ascii_lowercase()) {\n            result.push_str(&ch.to_ascii_lowercase());\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzlbhnk2_.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&ch.to_ascii_lowercase()) {\n   |           \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `char`\n  \
    \ |\n   = note: expected reference `&&str`\n              found reference `&char`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpzlbhnk2_.rs:18:29\n   |\n18 |\
    \             result.push_str(&ch.to_ascii_lowercase());\n   |               \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^ expected `str`, found `char`\n   |\n \
    \  = note: expected reference `&str`\n              found reference `&char`\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpharlqwwb.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpharlqwwb.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = HashSet::new();\n    vowels.insert(String::from(\"a\"\
    ));\n    vowels.insert(String::from(\"e\"));\n    vowels.insert(String::from(\"\
    i\"));\n    vowels.insert(String::from(\"o\"));\n    vowels.insert(String::from(\"\
    u\"));\n\n    let mut result = String::from(\"\");\n    for ch in text.chars()\
    \ {\n        if !vowels.contains(&ch) {\n            result.push_str(&ch);\n \
    \       }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n  -->\
    \ /tmp/tmparkcxv7s.rs:13:22\n   |\n13 |     let mut vowels = HashSet::new();\n\
    \   |                      ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmparkcxv7s.rs:23:29\n   |\n23 |             result.push_str(&ch);\n\
    \   |                             ^^^ expected `str`, found `char`\n   |\n   =\
    \ note: expected reference `&str`\n              found reference `&char`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0433.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| {\n        if c.is_uppercase() {\n      \
    \      Some(c.to_lowercase())\n        } else {\n            None\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `String` cannot be built from an iterator\
    \ over elements of type `ToLowercase`\n  --> /tmp/tmp6_e83n79.rs:19:8\n   |\n\
    19 |     }).collect()\n   |        ^^^^^^^ value of type `String` cannot be built\
    \ from `std::iter::Iterator<Item=ToLowercase>`\n   |\n   = help: the trait `FromIterator<ToLowercase>`\
    \ is not implemented for `String`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpm_6rhyp3.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^\n  \
    \ |                             |\n   |                             expected `&char`,\
    \ found `char`\n   |                             help: consider borrowing here:\
    \ `&c`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::from(text);\n    for ch in text.chars() {\n\
    \        if !is_vowel(ch) {\n            result.push(ch);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpnxfcdcrn.rs:15:13\n\
    \   |\n15 |         if !is_vowel(ch) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| {\n        if c.is_uppercase() {\n      \
    \      Some(c.to_lowercase())\n        } else {\n            None\n        }\n\
    \    }).filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp8le_blys.rs:19:20\n\
    \   |\n19 |     }).filter(|c| !is_vowel(c)).collect()\n   |                  \
    \  ^^^^^^^^ not found in this scope\n\nerror[E0277]: a value of type `String`\
    \ cannot be built from an iterator over elements of type `ToLowercase`\n  -->\
    \ /tmp/tmp8le_blys.rs:19:33\n   |\n19 |     }).filter(|c| !is_vowel(c)).collect()\n\
    \   |                                 ^^^^^^^ value of type `String` cannot be\
    \ built from `std::iter::Iterator<Item=ToLowercase>`\n   |\n   = help: the trait\
    \ `FromIterator<ToLowercase>` is not implemented for `String`\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv24y9xcg.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .map(|c| c.to_ascii_lowercase())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpj5fru1nq.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpj5fru1nq.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpdi7d080f.rs:14:1\n   |\n14 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpdi7d080f.rs:13:26\n   |\n12 | fn remove_vowels(text: String) -> String\
    \ {\n   |                                          - closing delimiter possibly\
    \ meant for this\n13 |     let mut vowels = vec!['a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ '...\n   |                          ^ unclosed delimiter\n14 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror: aborting due to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .map(|c| c.to_ascii_lowercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpgti6uyre.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpgti6uyre.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .map(|c| c.to_ascii_lowercase())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpj5fru1nq.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpj5fru1nq.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect::<String>()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpmp4sn78z.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpmp4sn78z.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = HashSet::new();\n    vowels.insert(String::from(\"a\"\
    ), 1);\n    vowels.insert(String::from(\"e\"), 1);\n    vowels.insert(String::from(\"\
    i\"), 1);\n    vowels.insert(String::from(\"o\"), 1);\n    vowels.insert(String::from(\"\
    u\"), 1);\n    vowels.insert(String::from(\"A\"), 1);\n    vowels.insert(String::from(\"\
    E\"), 1);\n    vowels.insert(String::from(\"I\"), 1);\n    vowels.insert(String::from(\"\
    O\"), 1);\n    vowels.insert(String::from(\"U\"), 1);\n    vowels.insert(String::from(\"\
    0\"), 1);\n    vowels.insert(String::from(\"1\"), 1);\n    vowels.insert(String::from(\"\
    2\"), 1);\n    vowels.insert(String::from(\"3\"), 1);\n    vowels.insert(String::from(\"\
    4\"), 1);\n    vowels.insert(String::from(\"5\"), 1);\n    vowels.insert(String::from(\"\
    6\"), 1);\n    vowels.insert(String::from(\"7\"), 1);\n    vowels.insert(String::from(\"\
    8\"), 1);\n    vowels.insert(String::from(\"9\"), 1);\n    vowels.insert(String::from(\"\
    !\"), 1);\n    vowels.insert(String::from(\"?\"), 1);\n    vowels.insert(String::from(\"\
    (\"), 1);\n    vowels.insert(String::from(\")\"), 1);\n    vowels.insert(String::from(\"\
    ,\"), 1);\n    vowels.insert(String::from(\".\"), 1);\n    vowels.insert(String::from(\"\
    :\"), 1);\n    vowels.insert(String::from(\";\"), 1);\n    vowels.insert(String::from(\"\
    <\"), 1);\n    vowels.insert(String::from(\"=\"), 1);\n    vowels.insert(String::from(\"\
    >\"), 1);\n    vowels.insert(String::from(\"[\"), 1);\n    vowels.insert(String::from(\"\
    ]\"), 1);\n    vowels.insert(String::from(\"{\"), 1);\n    vowels.insert(String::from(\"\
    }\"), 1);\n    vowels.insert(String::from(\"$\"), 1);\n    vowels.insert(String::from(\"\
    %\"), 1);\n    vowels.insert(String::from(\"^\"), 1);\n    vowels.insert(String::from(\"\
    &\"), 1);\n    vowels.insert(String::from(\"*\"), 1);\n    vowels.insert(String::from(\"\
    (\"), 1);\n    vowels.insert(String::from(\")\"), 1);\n\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n  -->\
    \ /tmp/tmpnx6jdsxg.rs:13:22\n   |\n13 |     let mut vowels = HashSet::new();\n\
    \   |                      ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpnx6jdsxg.rs:12:35\n   |\n12 | fn remove_vowels(text:\
    \ String) -> String {\n   |    -------------                  ^^^^^^ expected\
    \ struct `String`, found `()`\n   |    |\n   |    implicitly returns `()` as its\
    \ body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0433.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpkvm5_t57.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpkvm5_t57.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::from(\"\");\n    for c in text.chars() {\n     \
    \   if !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps_7njfd4.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .map(|c| c.to_ascii_lowercase())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpj5fru1nq.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpj5fru1nq.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect::<String>()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpmp4sn78z.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpmp4sn78z.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let mut\
    \ result = String::new();\n    for c in text.chars() {\n        if !vowels.contains(&c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgs1duy3w.rs:16:29\n   |\n\
    16 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect()\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbfhntcs2.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| c.is_uppercase())\n        .filter(|c|\
    \ !c.is_lowercase())\n        .filter(|c| !c.is_digit())\n        .filter(|c|\
    \ !c.is_punctuation())\n        .filter(|c| !c.is_whitespace())\n        .filter(|c|\
    \ !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_digit())\n        .filter(|c|\
    \ !c.is_ascii_lowercase())\n        .filter(|c| !c.is_ascii_uppercase())\n   \
    \     .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmp6un6ytae.rs:16:24\n    |\n16  |         .filter(|c| !c.is_digit())\n\
    \    |                        ^^^^^^^^- supplied 0 arguments\n    |          \
    \              |\n    |                        expected 1 argument\n    |\nnote:\
    \ associated function defined here\n\nerror[E0599]: no method named `is_punctuation`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmp6un6ytae.rs:17:24\n\
    \   |\n17 |         .filter(|c| !c.is_punctuation())\n   |                   \
    \     ^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]: no method named\
    \ `is_ascii_letter` found for reference `&char` in the current scope\n  --> /tmp/tmp6un6ytae.rs:19:24\n\
    \   |\n19 |         .filter(|c| !c.is_ascii_letter())\n   |                  \
    \      ^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0061, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| {\n        if c.is_uppercase() {\n      \
    \      Some(c.to_lowercase())\n        } else {\n            None\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `String` cannot be built from an iterator\
    \ over elements of type `ToLowercase`\n  --> /tmp/tmp6_e83n79.rs:19:8\n   |\n\
    19 |     }).collect()\n   |        ^^^^^^^ value of type `String` cannot be built\
    \ from `std::iter::Iterator<Item=ToLowercase>`\n   |\n   = help: the trait `FromIterator<ToLowercase>`\
    \ is not implemented for `String`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpiiu7k_s5.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = HashSet::new();\n    vowels.insert(String::from(\"a\"\
    ));\n    vowels.insert(String::from(\"e\"));\n    vowels.insert(String::from(\"\
    i\"));\n    vowels.insert(String::from(\"o\"));\n    vowels.insert(String::from(\"\
    u\"));\n    vowels.insert(String::from(\"A\"));\n    vowels.insert(String::from(\"\
    E\"));\n    vowels.insert(String::from(\"I\"));\n    vowels.insert(String::from(\"\
    O\"));\n    vowels.insert(String::from(\"U\"));\n    text.chars().filter(|c| vowels.contains(&c.to_string())).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n  -->\
    \ /tmp/tmp92rgn_xw.rs:13:22\n   |\n13 |     let mut vowels = HashSet::new();\n\
    \   |                      ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_ascii_lowercase()).collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\\n\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl0cvi5au.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect()\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbfhntcs2.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| c.is_uppercase())\n        .filter(|c|\
    \ !c.is_lowercase())\n        .filter(|c| !c.is_digit())\n        .filter(|c|\
    \ !c.is_punctuation())\n        .filter(|c| !c.is_whitespace())\n        .filter(|c|\
    \ !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_digit())\n        .filter(|c|\
    \ !c.is_ascii_lowercase())\n        .filter(|c| !c.is_ascii_uppercase())\n   \
    \     .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmp6un6ytae.rs:16:24\n    |\n16  |         .filter(|c| !c.is_digit())\n\
    \    |                        ^^^^^^^^- supplied 0 arguments\n    |          \
    \              |\n    |                        expected 1 argument\n    |\nnote:\
    \ associated function defined here\n\nerror[E0599]: no method named `is_punctuation`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmp6un6ytae.rs:17:24\n\
    \   |\n17 |         .filter(|c| !c.is_punctuation())\n   |                   \
    \     ^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]: no method named\
    \ `is_ascii_letter` found for reference `&char` in the current scope\n  --> /tmp/tmp6un6ytae.rs:19:24\n\
    \   |\n19 |         .filter(|c| !c.is_ascii_letter())\n   |                  \
    \      ^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0061, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| c.is_uppercase())\n        .filter(|c|\
    \ !c.is_lowercase())\n        .filter(|c| !c.is_digit())\n        .filter(|c|\
    \ !c.is_punctuation())\n        .filter(|c| !c.is_whitespace())\n        .filter(|c|\
    \ !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_digit())\n        .filter(|c|\
    \ !c.is_ascii_lowercase())\n        .filter(|c| !c.is_ascii_uppercase())\n   \
    \     .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmp6un6ytae.rs:16:24\n    |\n16  |         .filter(|c| !c.is_digit())\n\
    \    |                        ^^^^^^^^- supplied 0 arguments\n    |          \
    \              |\n    |                        expected 1 argument\n    |\nnote:\
    \ associated function defined here\n\nerror[E0599]: no method named `is_punctuation`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmp6un6ytae.rs:17:24\n\
    \   |\n17 |         .filter(|c| !c.is_punctuation())\n   |                   \
    \     ^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]: no method named\
    \ `is_ascii_letter` found for reference `&char` in the current scope\n  --> /tmp/tmp6un6ytae.rs:19:24\n\
    \   |\n19 |         .filter(|c| !c.is_ascii_letter())\n   |                  \
    \      ^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0061, E0599.\nFor\
    \ more information about an error, try `rustc --explain E0061`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    let mut vowels = vec!['a', 'e',\
    \ 'i', 'o', 'u'];\n    let mut vowels_set = HashSet::new();\n    for ch in text.chars()\
    \ {\n        if vowels.contains(&ch) {\n            vowels_set.insert(ch);\n \
    \       }\n    }\n    for ch in vowels_set.keys() {\n        result.append(&ch);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n   \
    \ assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n  -->\
    \ /tmp/tmpb81w8xjv.rs:15:26\n   |\n15 |     let mut vowels_set = HashSet::new();\n\
    \   |                          ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror[E0599]:\
    \ no method named `append` found for struct `String` in the current scope\n  -->\
    \ /tmp/tmpb81w8xjv.rs:22:16\n   |\n22 |         result.append(&ch);\n   |    \
    \            ^^^^^^ method not found in `String`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0433, E0599.\nFor more information\
    \ about an error, try `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpiiu7k_s5.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .filter(|c| !c.is_ascii_newline())\n\
    \        .filter(|c| !c.is_ascii_control())\n        .filter(|c| !c.is_ascii_ascii_graph())\n\
    \        .filter(|c| !c.is_ascii_ascii_tilde())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.is_ascii_ascii_backslash())\n\
    \        .filter(|c| !c.is_ascii_ascii_formfeed())\n        .filter(|c| !c.is_ascii_ascii_return())\n\
    \        .filter(|c| !c.is_ascii_ascii_newline())\n        .filter(|c| !c.\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `)`\n  --> /tmp/tmphveaqew0.rs:53:1\n   |\n53\
    \ | }\n   | ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmphveaqew0.rs:52:16\n\
    \   |\n12 | fn remove_vowels(text: String) -> String {\n   |                 \
    \                         - closing delimiter possibly meant for this\n...\n52\
    \ |         .filter(|c| !c.\n   |                ^ unclosed delimiter\n53 | }\n\
    \   | ^ mismatched closing delimiter\n\nerror[E0599]: no method named `is_ascii_letter`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmphveaqew0.rs:17:24\n\
    \   |\n17 |         .filter(|c| !c.is_ascii_letter())\n   |                  \
    \      ^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]: no method\
    \ named `is_ascii_symbol` found for reference `&char` in the current scope\n \
    \ --> /tmp/tmphveaqew0.rs:18:24\n   |\n18 |         .filter(|c| !c.is_ascii_symbol())\n\
    \   |                        ^^^^^^^^^^^^^^^ help: there is an associated function\
    \ with a similar name: `is_ascii_control`\n\nerror[E0599]: no method named `is_ascii_newline`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmphveaqew0.rs:20:24\n\
    \   |\n20 |         .filter(|c| !c.is_ascii_newline())\n   |                 \
    \       ^^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]: no method\
    \ named `is_ascii_ascii_graph` found for reference `&char` in the current scope\n\
    \  --> /tmp/tmphveaqew0.rs:22:24\n   |\n22 |         .filter(|c| !c.is_ascii_ascii_graph())\n\
    \   |                        ^^^^^^^^^^^^^^^^^^^^ method not found in `&char`\n\
    \nerror[E0599]: no method named `is_ascii_ascii_tilde` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmphveaqew0.rs:23:24\n   |\n23 |         .filter(|c|\
    \ !c.is_ascii_ascii_tilde())\n   |                        ^^^^^^^^^^^^^^^^^^^^\
    \ method not found in `&char`\n\nerror[E0599]: no method named `is_ascii_ascii_backslash`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmphveaqew0.rs:24:24\n\
    \   |\n24 |         .filter(|c| !c.is_ascii_ascii_backslash())\n   |         \
    \               ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&char`\n\n"
  stdout: ''
  timestamp: 1659747189
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::from(\"\");\n    for c in text.chars() {\n     \
    \   if !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpcjgpfatb.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::from(text);\n    for c in text.chars() {\n \
    \       if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpfgo5e6_e.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_vowel()).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmpaxeurh_t.rs:13:32\n   |\n13 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n   |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpeyqah2uf.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbtbviyti.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_vowel())\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmpz2lz0j2b.rs:14:24\n   |\n14 |         .filter(|c|\
    \ !c.is_vowel())\n   |                        ^^^^^^^^ method not found in `&char`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::from(\"\");\n    for c in text.chars() {\n     \
    \   if !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpcjgpfatb.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_vowel()).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmpaxeurh_t.rs:13:32\n   |\n13 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n   |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpkvm5_t57.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpkvm5_t57.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .map(|c| c.to_string())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpia6pvydj.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpia6pvydj.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| match c {\n        'a' .. 'z' => Some(c as\
    \ char),\n        _ => None,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n  --> /tmp/tmpydinyigd.rs:14:9\n\
    \   |\n14 |         'a' .. 'z' => Some(c as char),\n   |         ^^^^^^^^^^\n\
    \   |\n   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpoj7mywrw.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpoj7mywrw.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| match c {\n        'a' => Some('e'),\n  \
    \      'e' => Some('i'),\n        'i' => Some('o'),\n        'o' => Some('u'),\n\
    \        'u' => Some('y'),\n        'y' => Some(''),\n        _ => None,\n   \
    \ }).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: empty character literal\n  --> /tmp/tmpyrjawylt.rs:19:22\n   |\n\
    19 |         'y' => Some(''),\n   |                      ^ empty character literal\n\
    \nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| {\n        if c.is_uppercase() {\n      \
    \      Some(c.to_lowercase())\n        } else {\n            None\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `String` cannot be built from an iterator\
    \ over elements of type `ToLowercase`\n  --> /tmp/tmp6_e83n79.rs:19:8\n   |\n\
    19 |     }).collect()\n   |        ^^^^^^^ value of type `String` cannot be built\
    \ from `std::iter::Iterator<Item=ToLowercase>`\n   |\n   = help: the trait `FromIterator<ToLowercase>`\
    \ is not implemented for `String`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpkvm5_t57.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpkvm5_t57.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpdi7d080f.rs:14:1\n   |\n14 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpdi7d080f.rs:13:26\n   |\n12 | fn remove_vowels(text: String) -> String\
    \ {\n   |                                          - closing delimiter possibly\
    \ meant for this\n13 |     let mut vowels = vec!['a'..'z', 'a'..'z', 'a'..'z',\
    \ 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z', 'a'..'z',\
    \ '...\n   |                          ^ unclosed delimiter\n14 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror: aborting due to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| c.is_alphabetic())\n        .filter(|c|\
    \ !c.is_vowel())\n        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmp3koaraw8.rs:15:24\n   |\n15 |         .filter(|c|\
    \ !c.is_vowel())\n   |                        ^^^^^^^^ method not found in `&char`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpkvm5_t57.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpkvm5_t57.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_letter())\n        .filter(|c|\
    \ !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_lowercase())\n       \
    \ .filter(|c| !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_whitespace())\n\
    \        .filter(|c| !c.is_ascii_symbol())\n        .filter(|c| !c.is_ascii_control_character())\n\
    \        .filter(|c| !c.is_ascii_printable())\n        .collect::<String>()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpeqg1fw7u.rs:14:24\n   |\n14 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpeqg1fw7u.rs:19:24\n  \
    \ |\n19 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror[E0599]: no method named `is_ascii_control_character`\
    \ found for reference `&char` in the current scope\n  --> /tmp/tmpeqg1fw7u.rs:20:24\n\
    \   |\n20 |         .filter(|c| !c.is_ascii_control_character())\n   |       \
    \                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]:\
    \ no method named `is_ascii_printable` found for reference `&char` in the current\
    \ scope\n  --> /tmp/tmpeqg1fw7u.rs:21:24\n   |\n21 |         .filter(|c| !c.is_ascii_printable())\n\
    \   |                        ^^^^^^^^^^^^^^^^^^ help: there is an associated function\
    \ with a similar name: `is_ascii_control`\n\nerror: aborting due to 4 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| c.is_alphabetic())\n        .filter(|c|\
    \ !c.is_vowel())\n        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmp3koaraw8.rs:15:24\n   |\n15 |         .filter(|c|\
    \ !c.is_vowel())\n   |                        ^^^^^^^^ method not found in `&char`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = HashSet::new();\n    vowels.insert(b'a', b'e', b'i',\
    \ b'o', b'u');\n    vowels.insert(b'b', b'c', b'd', b'f');\n    vowels.insert(b'z',\
    \ b'y', b'w');\n    text.chars().filter(|c| vowels.contains(c)).collect()\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n  -->\
    \ /tmp/tmp2q9lkf13.rs:13:22\n   |\n13 |     let mut vowels = HashSet::new();\n\
    \   |                      ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashSet;\n   |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .filter(|c| !c.is_ascii_control())\n\
    \        .filter(|c| !c.is_ascii_print())\n        .filter(|c| !c.is_ascii_graph())\n\
    \        .filter(|c| !c.is_ascii_punctuation())\n        .filter(|c| !c.is_ascii_ascii_graph())\n\
    \        .filter(|c| !c.is_ascii_ascii_print())\n        .filter(|c| !c.is_ascii_ascii_control())\n\
    \        .filter(|c| !c.is_ascii_ascii_symbol())\n        .filter(|c| !c.is_ascii_ascii_digit())\n\
    \        .filter(|c| !c.is_ascii_ascii_lowercase())\n        .filter(|c| !c.is_ascii_ascii_uppercase())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmp0f93_w1_.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmp0f93_w1_.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror[E0599]: no method named `is_ascii_print` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmp0f93_w1_.rs:21:24\n  \
    \ |\n21 |         .filter(|c| !c.is_ascii_print())\n   |                     \
    \   ^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_digit`\n\nerror[E0599]: no method named `is_ascii_graph` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmp0f93_w1_.rs:22:24\n  \
    \ |\n22 |         .filter(|c| !c.is_ascii_graph())\n   |                     \
    \   ^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_graphic`\n\nerror[E0599]: no method named `is_ascii_ascii_graph` found\
    \ for reference `&char` in the current scope\n  --> /tmp/tmp0f93_w1_.rs:24:24\n\
    \   |\n24 |         .filter(|c| !c.is_ascii_ascii_graph())\n   |             \
    \           ^^^^^^^^^^^^^^^^^^^^ method not found in `&char`\n\nerror[E0599]:\
    \ no method named `is_ascii_ascii_print` found for reference `&char` in the current\
    \ scope\n  --> /tmp/tmp0f93_w1_.rs:25:24\n   |\n25 |         .filter(|c| !c.is_ascii_ascii_print())\n\
    \   |                        ^^^^^^^^^^^^^^^^^^^^ method not found in `&char`\n\
    \nerror[E0599]: no method named `is_ascii_ascii_control` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmp0f93_w1_.rs:26:24\n   |\n26 |         .filter(|c|\
    \ !c.is_ascii_ascii_control())\n   |                        ^^^^^^^^^^^^^^^^^^^^^^\
    \ help: there is an associated function with a similar name: `is_ascii_control`\n\
    \nerror[E0599]: no method nam"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !c.is_vowel()).collect()\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_vowel` found for reference `&char` in\
    \ the current scope\n  --> /tmp/tmpaxeurh_t.rs:13:32\n   |\n13 |     text.chars().filter(|c|\
    \ !c.is_vowel()).collect()\n   |                                ^^^^^^^^ method\
    \ not found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpkvm5_t57.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpkvm5_t57.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::from(\"\");\n    for c in text.chars() {\n     \
    \   if !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpcjgpfatb.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| match c {\n        'a' .. 'z' => Some(c as\
    \ char),\n        _ => None,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n  --> /tmp/tmpydinyigd.rs:14:9\n\
    \   |\n14 |         'a' .. 'z' => Some(c as char),\n   |         ^^^^^^^^^^\n\
    \   |\n   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .map(|c| c.to_ascii_lowercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpgti6uyre.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpgti6uyre.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| {\n        if c.is_uppercase() {\n      \
    \      Some(c.to_lowercase())\n        } else {\n            None\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: a value of type `String` cannot be built from an iterator\
    \ over elements of type `ToLowercase`\n  --> /tmp/tmp6_e83n79.rs:19:8\n   |\n\
    19 |     }).collect()\n   |        ^^^^^^^ value of type `String` cannot be built\
    \ from `std::iter::Iterator<Item=ToLowercase>`\n   |\n   = help: the trait `FromIterator<ToLowercase>`\
    \ is not implemented for `String`\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .map(|c| c.to_ascii_lowercase())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmp2p275lsw.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmp2p275lsw.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for ch in text.chars() {\n        if\
    \ !vowels.contains(&ch.to_ascii_lowercase()) {\n            result.push(*ch);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0614]: type `char` cannot be dereferenced\n  --> /tmp/tmphtpz0tcl.rs:18:25\n\
    \   |\n18 |             result.push(*ch);\n   |                         ^^^\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0614`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter_map(|c| {\n        if c.is_uppercase() {\n      \
    \      Some(c.to_lowercase())\n        } else {\n            None\n        }\n\
    \    })\n        .filter(|c| !c.is_uppercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_uppercase` found for reference `&ToLowercase`\
    \ in the current scope\n  --> /tmp/tmp0vehg7ao.rs:20:24\n   |\n20 |         .filter(|c|\
    \ !c.is_uppercase())\n   |                        ^^^^^^^^^^^^ method not found\
    \ in `&ToLowercase`\n\nerror[E0277]: a value of type `String` cannot be built\
    \ from an iterator over elements of type `ToLowercase`\n  --> /tmp/tmp0vehg7ao.rs:21:10\n\
    \   |\n21 |         .collect()\n   |          ^^^^^^^ value of type `String` cannot\
    \ be built from `std::iter::Iterator<Item=ToLowercase>`\n   |\n   = help: the\
    \ trait `FromIterator<ToLowercase>` is not implemented for `String`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0599.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpv24y9xcg.rs:17:29\n   |\n\
    17 |         if !vowels.contains(c) {\n   |                             ^ expected\
    \ `&&str`, found `char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpm1c6cfc1.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .map(|c| c.to_ascii_lowercase())\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmplkfdt5so.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmplkfdt5so.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_letter())\n      \
    \  .filter(|c| !c.is_ascii_digit())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .filter(|c| !c.is_ascii_whitespace())\n        .collect::<String>()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmp2acy60v5.rs:16:24\n   |\n16 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmp2acy60v5.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"];\n    vowels.sort();\n\
    \    let mut result = String::new();\n    for c in text.chars() {\n        if\
    \ !vowels.contains(&c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmptro8od2n.rs:17:29\n   |\n\
    17 |         if !vowels.contains(&c) {\n   |                             ^^ expected\
    \ `&str`, found `char`\n   |\n   = note: expected reference `&&str`\n        \
    \      found reference `&char`\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbtbviyti.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbtbviyti.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !is_vowel(c))\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp66jk15l0.rs:14:22\n\
    \   |\n14 |         .filter(|c| !is_vowel(c))\n   |                      ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars().filter(|c| !is_vowel(c)).collect()\n}\n\nfn main() {\n \
    \   let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpv2zuxjej.rs:13:30\n\
    \   |\n13 |     text.chars().filter(|c| !is_vowel(c)).collect()\n   |        \
    \                      ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .filter(|c| !c.is_ascii_symbol())\n\
    \        .collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n  \
    \  assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpn16mqm__.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror[E0599]: no method named `is_ascii_symbol` found for\
    \ reference `&char` in the current scope\n  --> /tmp/tmpn16mqm__.rs:18:24\n  \
    \ |\n18 |         .filter(|c| !c.is_ascii_symbol())\n   |                    \
    \    ^^^^^^^^^^^^^^^ help: there is an associated function with a similar name:\
    \ `is_ascii_control`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    text.chars()\n        .filter(|c| !c.is_ascii_lowercase())\n        .filter(|c|\
    \ !c.is_ascii_uppercase())\n        .filter(|c| !c.is_ascii_digit())\n       \
    \ .filter(|c| !c.is_ascii_letter())\n        .collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_ascii_letter` found for reference `&char`\
    \ in the current scope\n  --> /tmp/tmpbtbviyti.rs:17:24\n   |\n17 |         .filter(|c|\
    \ !c.is_ascii_letter())\n   |                        ^^^^^^^^^^^^^^^ method not\
    \ found in `&char`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n/// >>> remove_vowels(String::from(\"\"))\n/// String::from(\"\")\n\
    /// >>> remove_vowels(String::from(\"abcdef\"))\n/// String::from(\"bcdf\")\n\
    /// >>> remove_vowels(String::from(\"aaaaa\"))\n/// String::from(\"\")\n/// >>>\
    \ remove_vowels(String::from(\"aaBAA\"))\n/// String::from(\"B\")\n/// >>> remove_vowels(String::from(\"\
    zbcd\"))\n/// String::from(\"zbcd\")\nfn remove_vowels(text: String) -> String\
    \ {\n    let mut result = String::new();\n    for c in text.chars() {\n      \
    \  if !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpeyqah2uf.rs:15:13\n\
    \   |\n15 |         if !is_vowel(c) {\n   |             ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747188
